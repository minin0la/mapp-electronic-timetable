

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Aug 15 17:45:56 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001C36                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for version@F4451
    44  001C36  45                 	db	69
    45  001C37  54                 	db	84
    46  001C38  54                 	db	84
    47  001C39  20                 	db	32
    48  001C3A  56                 	db	86
    49  001C3B  65                 	db	101
    50  001C3C  72                 	db	114
    51  001C3D  73                 	db	115
    52  001C3E  69                 	db	105
    53  001C3F  6F                 	db	111
    54  001C40  6E                 	db	110
    55  001C41  20                 	db	32
    56  001C42  31                 	db	49
    57  001C43  2E                 	db	46
    58  001C44  33                 	db	51
    59  001C45  20                 	db	32
    60  001C46  20                 	db	32
    61  001C47  20                 	db	32
    62  001C48  20                 	db	32
    63  001C49  20                 	db	32
    64  001C4A  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001AC2                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4496
    71  001AC2  53                 	db	83
    72  001AC3  75                 	db	117
    73  001AC4  62                 	db	98
    74  001AC5  6A                 	db	106
    75  001AC6  65                 	db	101
    76  001AC7  63                 	db	99
    77  001AC8  74                 	db	116
    78  001AC9  20                 	db	32
    79  001ACA  41                 	db	65
    80  001ACB  20                 	db	32
    81  001ACC  54                 	db	84
    82  001ACD  69                 	db	105
    83  001ACE  6D                 	db	109
    84  001ACF  65                 	db	101
    85  001AD0  20                 	db	32
    86  001AD1  68                 	db	104
    87  001AD2  68                 	db	104
    88  001AD3  6D                 	db	109
    89  001AD4  6D                 	db	109
    90  001AD5  3A                 	db	58
    91  001AD6  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4506
    94  001AD7  53                 	db	83
    95  001AD8  75                 	db	117
    96  001AD9  62                 	db	98
    97  001ADA  6A                 	db	106
    98  001ADB  65                 	db	101
    99  001ADC  63                 	db	99
   100  001ADD  74                 	db	116
   101  001ADE  20                 	db	32
   102  001ADF  42                 	db	66
   103  001AE0  20                 	db	32
   104  001AE1  54                 	db	84
   105  001AE2  69                 	db	105
   106  001AE3  6D                 	db	109
   107  001AE4  65                 	db	101
   108  001AE5  20                 	db	32
   109  001AE6  68                 	db	104
   110  001AE7  68                 	db	104
   111  001AE8  6D                 	db	109
   112  001AE9  6D                 	db	109
   113  001AEA  3A                 	db	58
   114  001AEB  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4516
   117  001AEC  53                 	db	83
   118  001AED  75                 	db	117
   119  001AEE  62                 	db	98
   120  001AEF  6A                 	db	106
   121  001AF0  65                 	db	101
   122  001AF1  63                 	db	99
   123  001AF2  74                 	db	116
   124  001AF3  20                 	db	32
   125  001AF4  43                 	db	67
   126  001AF5  20                 	db	32
   127  001AF6  54                 	db	84
   128  001AF7  69                 	db	105
   129  001AF8  6D                 	db	109
   130  001AF9  65                 	db	101
   131  001AFA  20                 	db	32
   132  001AFB  68                 	db	104
   133  001AFC  68                 	db	104
   134  001AFD  6D                 	db	109
   135  001AFE  6D                 	db	109
   136  001AFF  3A                 	db	58
   137  001B00  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4486
   140  001B01  53                 	db	83
   141  001B02  65                 	db	101
   142  001B03  74                 	db	116
   143  001B04  20                 	db	32
   144  001B05  74                 	db	116
   145  001B06  69                 	db	105
   146  001B07  6D                 	db	109
   147  001B08  65                 	db	101
   148  001B09  20                 	db	32
   149  001B0A  68                 	db	104
   150  001B0B  68                 	db	104
   151  001B0C  6D                 	db	109
   152  001B0D  6D                 	db	109
   153  001B0E  73                 	db	115
   154  001B0F  73                 	db	115
   155  001B10  3A                 	db	58
   156  001B11  20                 	db	32
   157  001B12  20                 	db	32
   158  001B13  20                 	db	32
   159  001B14  20                 	db	32
   160  001B15  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4444:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4444:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTB	set	3969
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTD	set	3971
   197  0000                     _PORTDbits	set	3971
   198  0000                     _RCONbits	set	4048
   199  0000                     _T0CON	set	4053
   200  0000                     _T0CONbits	set	4053
   201  0000                     _TMR0H	set	4055
   202  0000                     _TMR0L	set	4054
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISD	set	3989
   205  00102D  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  001A68                     __pcinit:
   211                           	opt stack 0
   212  001A68                     start_initialization:
   213                           	opt stack 0
   214  001A68                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to COMRAM (9 bytes)
   218  001A68  EE00  F039         	lfsr	0,__pbssCOMRAM
   219  001A6C  0E09               	movlw	9
   220  001A6E                     clear_0:
   221  001A6E  6AEE               	clrf	postinc0,c
   222  001A70  06E8               	decf	wreg,f,c
   223  001A72  E1FD               	bnz	clear_0
   224                           
   225                           ; Initialize objects allocated to BANK0 (84 bytes)
   226                           ; load TBLPTR registers with __pidataBANK0
   227  001A74  0EC2               	movlw	low __pidataBANK0
   228  001A76  6EF6               	movwf	tblptrl,c
   229  001A78  0E1A               	movlw	high __pidataBANK0
   230  001A7A  6EF7               	movwf	tblptrh,c
   231  001A7C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   232  001A7E  6EF8               	movwf	tblptru,c
   233  001A80  EE00  F060         	lfsr	0,__pdataBANK0
   234  001A84  EE10 F054          	lfsr	1,84
   235  001A88                     copy_data0:
   236  001A88  0009               	tblrd		*+
   237  001A8A  CFF5 FFEE          	movff	tablat,postinc0
   238  001A8E  50E5               	movf	postdec1,w,c
   239  001A90  50E1               	movf	fsr1l,w,c
   240  001A92  E1FA               	bnz	copy_data0
   241                           
   242                           ; Initialize objects allocated to COMRAM (21 bytes)
   243                           ; load TBLPTR registers with __pidataCOMRAM
   244  001A94  0E36               	movlw	low __pidataCOMRAM
   245  001A96  6EF6               	movwf	tblptrl,c
   246  001A98  0E1C               	movlw	high __pidataCOMRAM
   247  001A9A  6EF7               	movwf	tblptrh,c
   248  001A9C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   249  001A9E  6EF8               	movwf	tblptru,c
   250  001AA0  EE00  F024         	lfsr	0,__pdataCOMRAM
   251  001AA4  EE10 F015          	lfsr	1,21
   252  001AA8                     copy_data1:
   253  001AA8  0009               	tblrd		*+
   254  001AAA  CFF5 FFEE          	movff	tablat,postinc0
   255  001AAE  50E5               	movf	postdec1,w,c
   256  001AB0  50E1               	movf	fsr1l,w,c
   257  001AB2  E1FA               	bnz	copy_data1
   258  001AB4                     end_of_initialization:
   259                           	opt stack 0
   260  001AB4                     __end_of__initialization:
   261                           	opt stack 0
   262  001AB4  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  001AB6  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  001AB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   265  001ABA  6EF8               	movwf	tblptru,c
   266  001ABC  0100               	movlb	0
   267  001ABE  EFE6  F00A         	goto	_main	;jump to C main() function
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssCOMRAM
   278  000039                     __pbssCOMRAM:
   279                           	opt stack 0
   280  000039                     _hour:
   281                           	opt stack 0
   282  000039                     	ds	1
   283  00003A                     _hourA:
   284                           	opt stack 0
   285  00003A                     	ds	1
   286  00003B                     _hourB:
   287                           	opt stack 0
   288  00003B                     	ds	1
   289  00003C                     _hourC:
   290                           	opt stack 0
   291  00003C                     	ds	1
   292  00003D                     _minute:
   293                           	opt stack 0
   294  00003D                     	ds	1
   295  00003E                     _minuteA:
   296                           	opt stack 0
   297  00003E                     	ds	1
   298  00003F                     _minuteB:
   299                           	opt stack 0
   300  00003F                     	ds	1
   301  000040                     _minuteC:
   302                           	opt stack 0
   303  000040                     	ds	1
   304  000041                     _second:
   305                           	opt stack 0
   306  000041                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  000024                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000024                     version@F4451:
   320                           	opt stack 0
   321  000024                     	ds	21
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	dataBANK0
   332  000060                     __pdataBANK0:
   333                           	opt stack 0
   334  000060                     SetupAlarmTimeA@F4496:
   335                           	opt stack 0
   336  000060                     	ds	21
   337  000075                     SetupAlarmTimeB@F4506:
   338                           	opt stack 0
   339  000075                     	ds	21
   340  00008A                     SetupAlarmTimeC@F4516:
   341                           	opt stack 0
   342  00008A                     	ds	21
   343  00009F                     SetupTime@F4486:
   344                           	opt stack 0
   345  00009F                     	ds	21
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackBANK0
   356  0000B4                     __pcstackBANK0:
   357                           	opt stack 0
   358  0000B4                     getkey@lookup:
   359                           	opt stack 0
   360  0000B4                     version@Version:
   361                           	opt stack 0
   362                           
   363                           ; 21 bytes @ 0x0
   364  0000B4                     	ds	18
   365  0000C6                     getkey@keycode:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x12
   369  0000C6                     	ds	1
   370  0000C7                     SetupTime@Message:
   371                           	opt stack 0
   372  0000C7                     SetupAlarmTimeA@Message:
   373                           	opt stack 0
   374  0000C7                     SetupAlarmTimeB@Message:
   375                           	opt stack 0
   376  0000C7                     SetupAlarmTimeC@Message:
   377                           	opt stack 0
   378                           
   379                           ; 21 bytes @ 0x13
   380  0000C7                     	ds	2
   381  0000C9                     version@outchar:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  0000C9                     	ds	1
   386  0000CA                     version@msgindex:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x16
   390  0000CA                     	ds	18
   391  0000DC                     SetupTime@outchar:
   392                           	opt stack 0
   393  0000DC                     SetupAlarmTimeA@outchar:
   394                           	opt stack 0
   395  0000DC                     SetupAlarmTimeB@outchar:
   396                           	opt stack 0
   397  0000DC                     SetupAlarmTimeC@outchar:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x28
   401  0000DC                     	ds	1
   402  0000DD                     SetupTime@hour10:
   403                           	opt stack 0
   404  0000DD                     SetupAlarmTimeA@hour10:
   405                           	opt stack 0
   406  0000DD                     SetupAlarmTimeB@hour10:
   407                           	opt stack 0
   408  0000DD                     SetupAlarmTimeC@hour10:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x29
   412  0000DD                     	ds	1
   413  0000DE                     SetupTime@hour1:
   414                           	opt stack 0
   415  0000DE                     SetupAlarmTimeA@hour1:
   416                           	opt stack 0
   417  0000DE                     SetupAlarmTimeB@hour1:
   418                           	opt stack 0
   419  0000DE                     SetupAlarmTimeC@hour1:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x2A
   423  0000DE                     	ds	1
   424  0000DF                     SetupTime@minute10:
   425                           	opt stack 0
   426  0000DF                     SetupAlarmTimeA@minute10:
   427                           	opt stack 0
   428  0000DF                     SetupAlarmTimeB@minute10:
   429                           	opt stack 0
   430  0000DF                     SetupAlarmTimeC@minute10:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x2B
   434  0000DF                     	ds	1
   435  0000E0                     SetupTime@minute1:
   436                           	opt stack 0
   437  0000E0                     SetupAlarmTimeA@minute1:
   438                           	opt stack 0
   439  0000E0                     SetupAlarmTimeB@minute1:
   440                           	opt stack 0
   441  0000E0                     SetupAlarmTimeC@minute1:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x2C
   445  0000E0                     	ds	1
   446  0000E1                     SetupTime@second10:
   447                           	opt stack 0
   448  0000E1                     SetupAlarmTimeA@msgindex:
   449                           	opt stack 0
   450  0000E1                     SetupAlarmTimeB@msgindex:
   451                           	opt stack 0
   452  0000E1                     SetupAlarmTimeC@msgindex:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x2D
   456  0000E1                     	ds	1
   457  0000E2                     SetupTime@second1:
   458                           	opt stack 0
   459  0000E2                     SetupAlarmTimeA@ctemp:
   460                           	opt stack 0
   461  0000E2                     SetupAlarmTimeB@ctemp:
   462                           	opt stack 0
   463  0000E2                     SetupAlarmTimeC@ctemp:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2E
   467  0000E2                     	ds	1
   468  0000E3                     SetupTime@msgindex:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x2F
   472  0000E3                     	ds	1
   473  0000E4                     SetupTime@ctemp:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x30
   477  0000E4                     	ds	1
   478  0000E5                     main@AlarmAOff:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x31
   482  0000E5                     	ds	2
   483  0000E7                     main@a:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x33
   487  0000E7                     	ds	2
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	cstackCOMRAM
   498  000001                     __pcstackCOMRAM:
   499                           	opt stack 0
   500  000001                     ??i2_lcd_strobe:
   501  000001                     ?___awdiv:
   502                           	opt stack 0
   503  000001                     int_2_char@int1:
   504                           	opt stack 0
   505  000001                     ___awdiv@dividend:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x0
   509  000001                     	ds	1
   510  000002                     ??i2_lcd_write_cmd:
   511  000002                     ??i2_lcd_write_data:
   512  000002                     int_2_char@char1:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x1
   516  000002                     	ds	1
   517  000003                     i2lcd_write_cmd@cmd:
   518                           	opt stack 0
   519  000003                     i2lcd_write_data@data:
   520                           	opt stack 0
   521  000003                     ___awdiv@divisor:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  000003                     	ds	1
   526  000004                     i2lcd_write_cmd@temp2:
   527                           	opt stack 0
   528  000004                     i2lcd_write_data@temp1:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x3
   532  000004                     	ds	1
   533  000005                     ___awdiv@counter:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x4
   537  000005                     	ds	1
   538  000006                     ___awdiv@sign:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x5
   542  000006                     	ds	1
   543  000007                     ___awdiv@quotient:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547  000007                     	ds	2
   548  000009                     ??_ISR_Timer0_Int:
   549                           
   550                           ; 0 bytes @ 0x8
   551  000009                     	ds	14
   552  000017                     ISR_Timer0_Int@hour1:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x16
   556  000017                     	ds	1
   557  000018                     ISR_Timer0_Int@minute1:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x17
   561  000018                     	ds	1
   562  000019                     ISR_Timer0_Int@second1:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x18
   566  000019                     	ds	1
   567  00001A                     ISR_Timer0_Int@hour10:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x19
   571  00001A                     	ds	1
   572  00001B                     ISR_Timer0_Int@minute10:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x1A
   576  00001B                     	ds	1
   577  00001C                     ISR_Timer0_Int@second10:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x1B
   581  00001C                     	ds	1
   582  00001D                     ??_lcd_strobe:
   583  00001D                     char_2_int@char1:
   584                           	opt stack 0
   585  00001D                     delay_ms@i:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x1C
   589  00001D                     	ds	1
   590  00001E                     ??_lcd_write_cmd:
   591  00001E                     ??_lcd_write_data:
   592  00001E                     char_2_int@int1:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x1D
   596  00001E                     	ds	1
   597  00001F                     ??_delay_ms:
   598  00001F                     lcd_write_cmd@cmd:
   599                           	opt stack 0
   600  00001F                     lcd_write_data@data:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x1E
   604  00001F                     	ds	1
   605  000020                     lcd_write_cmd@temp2:
   606                           	opt stack 0
   607  000020                     lcd_write_data@temp1:
   608                           	opt stack 0
   609  000020                     delay_ms@j:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x1F
   613  000020                     	ds	1
   614  000021                     ??_lcd_init:
   615                           
   616                           ; 0 bytes @ 0x20
   617  000021                     	ds	1
   618  000022                     lcd_init@i:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x21
   622  000022                     	ds	2
   623  000024                     tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec1	equ	0xFE5
   630                           fsr1l	equ	0xFE1
   631                           
   632                           ; 0 bytes @ 0x23
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   635 ;;
   636 ;; *************** function _main *****************
   637 ;; Defined at:
   638 ;;		line 311 in file "Main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  a               2   51[BANK0 ] unsigned int 
   643 ;;  AlarmAOff       2   49[BANK0 ] int 
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         0       4       0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0
   656 ;;      Totals:         0       4       0       0       0       0       0       0       0
   657 ;;Total ram usage:        4 bytes
   658 ;; Hardware stack levels required when called:    6
   659 ;; This function calls:
   660 ;;		_SetupAlarmTimeA
   661 ;;		_SetupAlarmTimeB
   662 ;;		_SetupAlarmTimeC
   663 ;;		_SetupTime
   664 ;;		_SetupTimerInterruptRegisters
   665 ;;		_lcd_init
   666 ;;		_version
   667 ;; This function is called by:
   668 ;;		Startup code after reset
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text0
   673  0015CC                     __ptext0:
   674                           	opt stack 0
   675  0015CC                     _main:
   676                           	opt stack 25
   677                           
   678                           ;Main.c: 313: ADCON1 = 0x0F;
   679                           
   680                           ;incstack = 0
   681  0015CC  0E0F               	movlw	15
   682  0015CE  6EC1               	movwf	4033,c	;volatile
   683                           
   684                           ;Main.c: 314: CMCON = 0x07;
   685  0015D0  0E07               	movlw	7
   686  0015D2  6EB4               	movwf	4020,c	;volatile
   687                           
   688                           ;Main.c: 316: lcd_init();
   689  0015D4  EC52  F00C         	call	_lcd_init	;wreg free
   690                           
   691                           ;Main.c: 317: TRISA = 0b00000000;
   692  0015D8  0E00               	movlw	0
   693  0015DA  6E92               	movwf	3986,c	;volatile
   694                           
   695                           ;Main.c: 318: PORTA = 0b00000000;
   696  0015DC  0E00               	movlw	0
   697  0015DE  6E80               	movwf	3968,c	;volatile
   698                           
   699                           ;Main.c: 319: int AlarmAOff = 0;
   700  0015E0  0E00               	movlw	0
   701  0015E2  0100               	movlb	0	; () banked
   702  0015E4  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   703  0015E6  0E00               	movlw	0
   704  0015E8  6FE5               	movwf	main@AlarmAOff& (0+255),b
   705                           
   706                           ; BSR set to: 0
   707                           ;Main.c: 321: version();
   708  0015EA  EC8B  F00D         	call	_version	;wreg free
   709                           
   710                           ;Main.c: 322: SetupTime();
   711  0015EE  ECD5  F008         	call	_SetupTime	;wreg free
   712                           
   713                           ;Main.c: 323: SetupAlarmTimeA();
   714  0015F2  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   715                           
   716                           ;Main.c: 324: SetupAlarmTimeB();
   717  0015F6  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   718                           
   719                           ;Main.c: 325: SetupAlarmTimeC();
   720  0015FA  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   721                           
   722                           ;Main.c: 326: SetupTimerInterruptRegisters();
   723  0015FE  EC0D  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   724  001602                     l2333:
   725                           
   726                           ;Main.c: 329: {
   727                           ;Main.c: 330: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   728  001602  503A               	movf	_hourA,w,c
   729  001604  1839               	xorwf	_hour,w,c
   730  001606  A4D8               	btfss	status,2,c
   731  001608  D00C               	goto	l167
   732  00160A  503E               	movf	_minuteA,w,c
   733  00160C  183D               	xorwf	_minute,w,c
   734  00160E  A4D8               	btfss	status,2,c
   735  001610  D008               	goto	l167
   736  001612  0100               	movlb	0	; () banked
   737  001614  51E5               	movf	main@AlarmAOff& (0+255),w,b
   738  001616  0100               	movlb	0	; () banked
   739  001618  11E6               	iorwf	(main@AlarmAOff+1)& (0+255),w,b
   740  00161A  A4D8               	btfss	status,2,c
   741  00161C  D002               	goto	l167
   742                           
   743                           ; BSR set to: 0
   744                           ;Main.c: 331: {
   745                           ;Main.c: 332: PORTA = 0b00000011;
   746  00161E  0E03               	movlw	3
   747  001620  6E80               	movwf	3968,c	;volatile
   748  001622                     l167:
   749                           
   750                           ;Main.c: 333: }
   751                           ;Main.c: 334: unsigned int a;
   752                           ;Main.c: 335: a = 0;
   753  001622  0E00               	movlw	0
   754  001624  0100               	movlb	0	; () banked
   755  001626  6FE8               	movwf	(main@a+1)& (0+255),b
   756  001628  0E00               	movlw	0
   757  00162A  6FE7               	movwf	main@a& (0+255),b
   758                           
   759                           ; BSR set to: 0
   760                           ;Main.c: 336: if (PORTAbits.RA5 == 0)
   761  00162C  BA80               	btfsc	3968,5,c	;volatile
   762  00162E  D012               	goto	l2351
   763                           
   764                           ; BSR set to: 0
   765                           ;Main.c: 337: {
   766                           ;Main.c: 338: a = 1;
   767  001630  0E00               	movlw	0
   768  001632  0100               	movlb	0	; () banked
   769  001634  6FE8               	movwf	(main@a+1)& (0+255),b
   770  001636  0E01               	movlw	1
   771  001638  6FE7               	movwf	main@a& (0+255),b
   772                           
   773                           ; BSR set to: 0
   774                           ;Main.c: 339: if (a==1 && PORTAbits.RA5 ==1){
   775  00163A  0100               	movlb	0	; () banked
   776  00163C  05E7               	decf	main@a& (0+255),w,b
   777  00163E  0100               	movlb	0	; () banked
   778  001640  11E8               	iorwf	(main@a+1)& (0+255),w,b
   779  001642  B4D8               	btfsc	status,2,c
   780                           
   781                           ; BSR set to: 0
   782  001644  AA80               	btfss	3968,5,c	;volatile
   783  001646  D7DD               	goto	l2333
   784                           
   785                           ; BSR set to: 0
   786                           ;Main.c: 340: AlarmAOff = 1;
   787  001648  0E00               	movlw	0
   788  00164A  0100               	movlb	0	; () banked
   789  00164C  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   790  00164E  0E01               	movlw	1
   791  001650  6FE5               	movwf	main@AlarmAOff& (0+255),b
   792                           
   793                           ; BSR set to: 0
   794                           ;Main.c: 341: }
   795                           ;Main.c: 342: }
   796  001652  D7D7               	goto	l2333
   797  001654                     l2351:
   798                           
   799                           ; BSR set to: 0
   800                           ;Main.c: 343: else if(hour==hourB && minute==minuteB)
   801  001654  503B               	movf	_hourB,w,c
   802  001656  1839               	xorwf	_hour,w,c
   803  001658  A4D8               	btfss	status,2,c
   804  00165A  D006               	goto	l2357
   805                           
   806                           ; BSR set to: 0
   807  00165C  503F               	movf	_minuteB,w,c
   808  00165E  183D               	xorwf	_minute,w,c
   809  001660  A4D8               	btfss	status,2,c
   810  001662  D002               	goto	l2357
   811                           
   812                           ; BSR set to: 0
   813                           ;Main.c: 344: {
   814                           ;Main.c: 345: PORTA = 0b00000101;
   815  001664  0E05               	movlw	5
   816  001666  D00B               	goto	L2
   817  001668                     l2357:
   818                           
   819                           ; BSR set to: 0
   820                           ;Main.c: 347: else if(hour==hourC && minute==minuteC)
   821  001668  503C               	movf	_hourC,w,c
   822  00166A  1839               	xorwf	_hour,w,c
   823  00166C  A4D8               	btfss	status,2,c
   824  00166E  D006               	goto	l2363
   825                           
   826                           ; BSR set to: 0
   827  001670  5040               	movf	_minuteC,w,c
   828  001672  183D               	xorwf	_minute,w,c
   829  001674  A4D8               	btfss	status,2,c
   830  001676  D002               	goto	l2363
   831                           
   832                           ; BSR set to: 0
   833                           ;Main.c: 348: {
   834                           ;Main.c: 349: PORTA = 0b00001001;
   835  001678  0E09               	movlw	9
   836  00167A  D001               	goto	L2
   837  00167C                     l2363:
   838                           
   839                           ; BSR set to: 0
   840                           ;Main.c: 351: {
   841                           ;Main.c: 352: PORTA = 0b00000000;
   842  00167C  0E00               	movlw	0
   843  00167E                     L2:
   844  00167E  6E80               	movwf	3968,c	;volatile
   845                           
   846                           ; BSR set to: 0
   847                           
   848                           ; BSR set to: 0
   849                           
   850                           ; BSR set to: 0
   851                           
   852                           ; BSR set to: 0
   853  001680  D7C0               	goto	l2333
   854  001682                     __end_of_main:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           status	equ	0xFD8
   865                           
   866 ;; *************** function _version *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "version.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  Version        21    0[BANK0 ] unsigned char [21]
   873 ;;  msgindex        1   22[BANK0 ] unsigned char 
   874 ;;  outchar         1   21[BANK0 ] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2   73[None  ] int 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         0       0       0       0       0       0       0       0       0
   885 ;;      Locals:         0      23       0       0       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0
   887 ;;      Totals:         0      23       0       0       0       0       0       0       0
   888 ;;Total ram usage:       23 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    5
   891 ;; This function calls:
   892 ;;		_lcd_write_cmd
   893 ;;		_lcd_write_data
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text1
   900  001B16                     __ptext1:
   901                           	opt stack 0
   902  001B16                     _version:
   903                           	opt stack 25
   904                           
   905                           ;version.c: 14: unsigned char msgindex, outchar;
   906                           ;version.c: 15: char Version[ ] = "ETT Version 1.3     ";
   907                           
   908                           ; BSR set to: 0
   909                           ;incstack = 0
   910  001B16  EE20  F024         	lfsr	2,version@F4451
   911  001B1A  EE10  F0B4         	lfsr	1,version@Version
   912  001B1E  0E14               	movlw	20
   913  001B20                     u1081:
   914  001B20  CFDB FFE3          	movff	plusw2,plusw1
   915  001B24  06E8               	decf	wreg,f,c
   916  001B26  E2FC               	bc	u1081
   917                           
   918                           ;version.c: 17: lcd_write_cmd(0x80);
   919  001B28  0E80               	movlw	128
   920  001B2A  ECC4  F00C         	call	_lcd_write_cmd
   921                           
   922                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   923  001B2E  0E00               	movlw	0
   924  001B30  0100               	movlb	0	; () banked
   925  001B32  6FCA               	movwf	version@msgindex& (0+255),b
   926  001B34                     l2299:
   927                           
   928                           ; BSR set to: 0
   929  001B34  0E13               	movlw	19
   930  001B36  0100               	movlb	0	; () banked
   931  001B38  65CA               	cpfsgt	version@msgindex& (0+255),b
   932  001B3A  D001               	goto	l2303
   933  001B3C  0012               	return	
   934  001B3E                     l2303:
   935                           
   936                           ; BSR set to: 0
   937                           ;version.c: 20: {
   938                           ;version.c: 21: outchar = Version[msgindex];
   939  001B3E  0100               	movlb	0	; () banked
   940  001B40  51CA               	movf	version@msgindex& (0+255),w,b
   941  001B42  0D01               	mullw	1
   942  001B44  0EB4               	movlw	low version@Version
   943  001B46  24F3               	addwf	prodl,w,c
   944  001B48  6ED9               	movwf	fsr2l,c
   945  001B4A  0E00               	movlw	high version@Version
   946  001B4C  20F4               	addwfc	prodh,w,c
   947  001B4E  6EDA               	movwf	fsr2h,c
   948  001B50  50DF               	movf	indf2,w,c
   949  001B52  0100               	movlb	0	; () banked
   950  001B54  6FC9               	movwf	version@outchar& (0+255),b
   951                           
   952                           ; BSR set to: 0
   953                           ;version.c: 22: lcd_write_data(outchar);
   954  001B56  0100               	movlb	0	; () banked
   955  001B58  51C9               	movf	version@outchar& (0+255),w,b
   956  001B5A  EC41  F00B         	call	_lcd_write_data
   957  001B5E  0100               	movlb	0	; () banked
   958  001B60  2BCA               	incf	version@msgindex& (0+255),f,b
   959  001B62  D7E8               	goto	l2299
   960  001B64                     __end_of_version:
   961                           	opt stack 0
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           prodh	equ	0xFF4
   967                           prodl	equ	0xFF3
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           postdec1	equ	0xFE5
   971                           plusw1	equ	0xFE3
   972                           fsr1l	equ	0xFE1
   973                           indf2	equ	0xFDF
   974                           plusw2	equ	0xFDB
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _lcd_init *****************
   980 ;; Defined at:
   981 ;;		line 83 in file "lcd_utilities.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  i               2   33[COMRAM] int 
   986 ;; Return value:  Size  Location     Type
   987 ;;		None               void
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       0       0       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0       0       0
   997 ;;      Temps:          1       0       0       0       0       0       0       0       0
   998 ;;      Totals:         3       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        3 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    5
  1002 ;; This function calls:
  1003 ;;		_lcd_write_cmd
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text2
  1010  0018A4                     __ptext2:
  1011                           	opt stack 0
  1012  0018A4                     _lcd_init:
  1013                           	opt stack 25
  1014                           
  1015                           ;lcd_utilities.c: 85: int i;
  1016                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;incstack = 0
  1020  0018A4  0E00               	movlw	0
  1021  0018A6  6E95               	movwf	3989,c	;volatile
  1022                           
  1023                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1024  0018A8  0E00               	movlw	0
  1025  0018AA  6E83               	movwf	3971,c	;volatile
  1026                           
  1027                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1028  0018AC  9883               	bcf	3971,4,c	;volatile
  1029                           
  1030                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1031  0018AE  9C83               	bcf	3971,6,c	;volatile
  1032                           
  1033                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1034  0018B0  9A83               	bcf	3971,5,c	;volatile
  1035                           
  1036                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1037  0018B2  0E00               	movlw	0
  1038  0018B4  6E23               	movwf	lcd_init@i+1,c
  1039  0018B6  0E00               	movlw	0
  1040  0018B8  6E22               	movwf	lcd_init@i,c
  1041  0018BA                     l2091:
  1042  0018BA  BE23               	btfsc	lcd_init@i+1,7,c
  1043  0018BC  D006               	goto	l2095
  1044  0018BE  5023               	movf	lcd_init@i+1,w,c
  1045  0018C0  E10F               	bnz	l2099
  1046  0018C2  0E64               	movlw	100
  1047  0018C4  5C22               	subwf	lcd_init@i,w,c
  1048  0018C6  B0D8               	btfsc	status,0,c
  1049  0018C8  D00B               	goto	l2099
  1050  0018CA                     l2095:
  1051                           
  1052                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1053  0018CA  0E9C               	movlw	156
  1054  0018CC  6E21               	movwf	??_lcd_init& (0+255),c
  1055  0018CE  0ED7               	movlw	215
  1056  0018D0                     u1217:
  1057  0018D0  2EE8               	decfsz	wreg,f,c
  1058  0018D2  D7FE               	goto	u1217
  1059  0018D4  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1060  0018D6  D7FC               	goto	u1217
  1061  0018D8  F000               	nop	
  1062  0018DA  4A22               	infsnz	lcd_init@i,f,c
  1063  0018DC  2A23               	incf	lcd_init@i+1,f,c
  1064  0018DE  D7ED               	goto	l2091
  1065  0018E0                     l2099:
  1066                           
  1067                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1068  0018E0  0E33               	movlw	51
  1069  0018E2  ECC4  F00C         	call	_lcd_write_cmd
  1070                           
  1071                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1072  0018E6  0E32               	movlw	50
  1073  0018E8  ECC4  F00C         	call	_lcd_write_cmd
  1074                           
  1075                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1076  0018EC  0E28               	movlw	40
  1077  0018EE  ECC4  F00C         	call	_lcd_write_cmd
  1078                           
  1079                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1080  0018F2  0E0E               	movlw	14
  1081  0018F4  ECC4  F00C         	call	_lcd_write_cmd
  1082                           
  1083                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1084  0018F8  0E06               	movlw	6
  1085  0018FA  ECC4  F00C         	call	_lcd_write_cmd
  1086                           
  1087                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1088  0018FE  0E01               	movlw	1
  1089  001900  ECC4  F00C         	call	_lcd_write_cmd
  1090                           
  1091                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1092  001904  0E9C               	movlw	156
  1093  001906  6E21               	movwf	??_lcd_init& (0+255),c
  1094  001908  0ED7               	movlw	215
  1095  00190A                     u1227:
  1096  00190A  2EE8               	decfsz	wreg,f,c
  1097  00190C  D7FE               	goto	u1227
  1098  00190E  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1099  001910  D7FC               	goto	u1227
  1100  001912  F000               	nop	
  1101  001914  0012               	return		;funcret
  1102  001916                     __end_of_lcd_init:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           plusw1	equ	0xFE3
  1114                           fsr1l	equ	0xFE1
  1115                           indf2	equ	0xFDF
  1116                           plusw2	equ	0xFDB
  1117                           fsr2h	equ	0xFDA
  1118                           fsr2l	equ	0xFD9
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function _SetupTimerInterruptRegisters *****************
  1122 ;; Defined at:
  1123 ;;		line 275 in file "Main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text3
  1152  001C1A                     __ptext3:
  1153                           	opt stack 0
  1154  001C1A                     _SetupTimerInterruptRegisters:
  1155                           	opt stack 27
  1156                           
  1157                           ;Main.c: 277: RCONbits.IPEN =1;
  1158                           
  1159                           ;incstack = 0
  1160  001C1A  8ED0               	bsf	4048,7,c	;volatile
  1161                           
  1162                           ;Main.c: 281: INTCONbits.GIEH =1;
  1163  001C1C  8EF2               	bsf	intcon,7,c	;volatile
  1164                           
  1165                           ;Main.c: 286: T0CON = 0b00000111;
  1166  001C1E  0E07               	movlw	7
  1167  001C20  6ED5               	movwf	4053,c	;volatile
  1168                           
  1169                           ;Main.c: 294: INTCON2 = 0b10000100;
  1170  001C22  0E84               	movlw	132
  1171  001C24  6EF1               	movwf	intcon2,c	;volatile
  1172                           
  1173                           ;Main.c: 299: TMR0H = 0x48;
  1174  001C26  0E48               	movlw	72
  1175  001C28  6ED7               	movwf	4055,c	;volatile
  1176                           
  1177                           ;Main.c: 300: TMR0L = 0xE5;
  1178  001C2A  0EE5               	movlw	229
  1179  001C2C  6ED6               	movwf	4054,c	;volatile
  1180                           
  1181                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1182  001C2E  8ED5               	bsf	4053,7,c	;volatile
  1183                           
  1184                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1185  001C30  8AF2               	bsf	intcon,5,c	;volatile
  1186                           
  1187                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1188  001C32  94F2               	bcf	intcon,2,c	;volatile
  1189  001C34  0012               	return		;funcret
  1190  001C36                     __end_of_SetupTimerInterruptRegisters:
  1191                           	opt stack 0
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           intcon	equ	0xFF2
  1199                           intcon2	equ	0xFF1
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           plusw1	equ	0xFE3
  1204                           fsr1l	equ	0xFE1
  1205                           indf2	equ	0xFDF
  1206                           plusw2	equ	0xFDB
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _SetupTime *****************
  1212 ;; Defined at:
  1213 ;;		line 107 in file "Main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1218 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1219 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1220 ;;  second1         1   46[BANK0 ] unsigned char 
  1221 ;;  second10        1   45[BANK0 ] unsigned char 
  1222 ;;  minute1         1   44[BANK0 ] unsigned char 
  1223 ;;  minute10        1   43[BANK0 ] unsigned char 
  1224 ;;  hour1           1   42[BANK0 ] unsigned char 
  1225 ;;  hour10          1   41[BANK0 ] unsigned char 
  1226 ;;  outchar         1   40[BANK0 ] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;		None               void
  1229 ;; Registers used:
  1230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1240 ;;Total ram usage:       30 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    5
  1243 ;; This function calls:
  1244 ;;		_char_2_int
  1245 ;;		_delay_ms
  1246 ;;		_getkey
  1247 ;;		_lcd_write_cmd
  1248 ;;		_lcd_write_data
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text4
  1255  0011AA                     __ptext4:
  1256                           	opt stack 0
  1257  0011AA                     _SetupTime:
  1258                           	opt stack 25
  1259                           
  1260                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1261                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1262                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1263                           
  1264                           ;incstack = 0
  1265  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4486
  1266  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1267  0011B2  0E14               	movlw	20
  1268  0011B4                     u961:
  1269  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1270  0011B8  06E8               	decf	wreg,f,c
  1271  0011BA  E2FC               	bc	u961
  1272                           
  1273                           ;Main.c: 113: lcd_write_cmd(0x80);
  1274  0011BC  0E80               	movlw	128
  1275  0011BE  ECC4  F00C         	call	_lcd_write_cmd
  1276                           
  1277                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1278  0011C2  0E00               	movlw	0
  1279  0011C4  0100               	movlb	0	; () banked
  1280  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1281  0011C8                     l2109:
  1282                           
  1283                           ; BSR set to: 0
  1284  0011C8  0E13               	movlw	19
  1285  0011CA  0100               	movlb	0	; () banked
  1286  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1287  0011CE  D001               	goto	l2113
  1288  0011D0  D013               	goto	l2121
  1289  0011D2                     l2113:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;Main.c: 116: {
  1293                           ;Main.c: 117: outchar = Message[msgindex];
  1294  0011D2  0100               	movlb	0	; () banked
  1295  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1296  0011D6  0D01               	mullw	1
  1297  0011D8  0EC7               	movlw	low SetupTime@Message
  1298  0011DA  24F3               	addwf	prodl,w,c
  1299  0011DC  6ED9               	movwf	fsr2l,c
  1300  0011DE  0E00               	movlw	high SetupTime@Message
  1301  0011E0  20F4               	addwfc	prodh,w,c
  1302  0011E2  6EDA               	movwf	fsr2h,c
  1303  0011E4  50DF               	movf	indf2,w,c
  1304  0011E6  0100               	movlb	0	; () banked
  1305  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;Main.c: 118: lcd_write_data(outchar);
  1309  0011EA  0100               	movlb	0	; () banked
  1310  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1311  0011EE  EC41  F00B         	call	_lcd_write_data
  1312  0011F2  0100               	movlb	0	; () banked
  1313  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1314  0011F6  D7E8               	goto	l2109
  1315  0011F8                     l2121:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;Main.c: 119: }
  1319                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1320  0011F8  0EC0               	movlw	192
  1321  0011FA  ECC4  F00C         	call	_lcd_write_cmd
  1322                           
  1323                           ;Main.c: 123: ctemp=getkey();
  1324  0011FE  ECB2  F00D         	call	_getkey	;wreg free
  1325  001202  0100               	movlb	0	; () banked
  1326  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;Main.c: 124: lcd_write_data(ctemp);
  1330  001206  0100               	movlb	0	; () banked
  1331  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1332  00120A  EC41  F00B         	call	_lcd_write_data
  1333                           
  1334                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1335  00120E  0100               	movlb	0	; () banked
  1336  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1337  001212  EC8B  F00C         	call	_char_2_int
  1338  001216  0100               	movlb	0	; () banked
  1339  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;Main.c: 127: ctemp=getkey();
  1343  00121A  ECB2  F00D         	call	_getkey	;wreg free
  1344  00121E  0100               	movlb	0	; () banked
  1345  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1346                           
  1347                           ;Main.c: 128: lcd_write_data(ctemp);
  1348  001222  0100               	movlb	0	; () banked
  1349  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1350  001226  EC41  F00B         	call	_lcd_write_data
  1351                           
  1352                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1353  00122A  0100               	movlb	0	; () banked
  1354  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1355  00122E  EC8B  F00C         	call	_char_2_int
  1356  001232  0100               	movlb	0	; () banked
  1357  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;Main.c: 131: ctemp=getkey();
  1361  001236  ECB2  F00D         	call	_getkey	;wreg free
  1362  00123A  0100               	movlb	0	; () banked
  1363  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;Main.c: 132: lcd_write_data(ctemp);
  1367  00123E  0100               	movlb	0	; () banked
  1368  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1369  001242  EC41  F00B         	call	_lcd_write_data
  1370                           
  1371                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1372  001246  0100               	movlb	0	; () banked
  1373  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1374  00124A  EC8B  F00C         	call	_char_2_int
  1375  00124E  0100               	movlb	0	; () banked
  1376  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;Main.c: 135: ctemp=getkey();
  1380  001252  ECB2  F00D         	call	_getkey	;wreg free
  1381  001256  0100               	movlb	0	; () banked
  1382  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1383                           
  1384                           ;Main.c: 136: lcd_write_data(ctemp);
  1385  00125A  0100               	movlb	0	; () banked
  1386  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1387  00125E  EC41  F00B         	call	_lcd_write_data
  1388                           
  1389                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1390  001262  0100               	movlb	0	; () banked
  1391  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1392  001266  EC8B  F00C         	call	_char_2_int
  1393  00126A  0100               	movlb	0	; () banked
  1394  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;Main.c: 139: ctemp=getkey();
  1398  00126E  ECB2  F00D         	call	_getkey	;wreg free
  1399  001272  0100               	movlb	0	; () banked
  1400  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;Main.c: 140: lcd_write_data(ctemp);
  1404  001276  0100               	movlb	0	; () banked
  1405  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1406  00127A  EC41  F00B         	call	_lcd_write_data
  1407                           
  1408                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1409  00127E  0100               	movlb	0	; () banked
  1410  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1411  001282  EC8B  F00C         	call	_char_2_int
  1412  001286  0100               	movlb	0	; () banked
  1413  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;Main.c: 143: ctemp=getkey();
  1417  00128A  ECB2  F00D         	call	_getkey	;wreg free
  1418  00128E  0100               	movlb	0	; () banked
  1419  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1420                           
  1421                           ;Main.c: 144: lcd_write_data(ctemp);
  1422  001292  0100               	movlb	0	; () banked
  1423  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1424  001296  EC41  F00B         	call	_lcd_write_data
  1425                           
  1426                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1427  00129A  0100               	movlb	0	; () banked
  1428  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1429  00129E  EC8B  F00C         	call	_char_2_int
  1430  0012A2  0100               	movlb	0	; () banked
  1431  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1435  0012A6  0100               	movlb	0	; () banked
  1436  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1437  0012AA  0D0A               	mullw	10
  1438  0012AC  50F3               	movf	prodl,w,c
  1439  0012AE  0100               	movlb	0	; () banked
  1440  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1441  0012B2  6E39               	movwf	_hour,c
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1445  0012B4  0100               	movlb	0	; () banked
  1446  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1447  0012B8  0D0A               	mullw	10
  1448  0012BA  50F3               	movf	prodl,w,c
  1449  0012BC  0100               	movlb	0	; () banked
  1450  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1451  0012C0  6E3D               	movwf	_minute,c
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;Main.c: 149: second = second10 * 10 + second1;
  1455  0012C2  0100               	movlb	0	; () banked
  1456  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1457  0012C6  0D0A               	mullw	10
  1458  0012C8  50F3               	movf	prodl,w,c
  1459  0012CA  0100               	movlb	0	; () banked
  1460  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1461  0012CE  6E41               	movwf	_second,c
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;Main.c: 151: delay_ms(500);
  1465  0012D0  0E01               	movlw	1
  1466  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1467  0012D4  0EF4               	movlw	244
  1468  0012D6  6E1D               	movwf	delay_ms@i,c
  1469  0012D8  ECD1  F00D         	call	_delay_ms	;wreg free
  1470                           
  1471                           ;Main.c: 152: lcd_write_cmd(0x01);
  1472  0012DC  0E01               	movlw	1
  1473  0012DE  ECC4  F00C         	call	_lcd_write_cmd
  1474  0012E2  0012               	return		;funcret
  1475  0012E4                     __end_of_SetupTime:
  1476                           	opt stack 0
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           prodh	equ	0xFF4
  1482                           prodl	equ	0xFF3
  1483                           intcon	equ	0xFF2
  1484                           intcon2	equ	0xFF1
  1485                           postinc0	equ	0xFEE
  1486                           wreg	equ	0xFE8
  1487                           postdec1	equ	0xFE5
  1488                           plusw1	equ	0xFE3
  1489                           fsr1l	equ	0xFE1
  1490                           indf2	equ	0xFDF
  1491                           plusw2	equ	0xFDB
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _SetupAlarmTimeC *****************
  1497 ;; Defined at:
  1498 ;;		line 235 in file "Main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1503 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1504 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1505 ;;  minute1         1   44[BANK0 ] unsigned char 
  1506 ;;  minute10        1   43[BANK0 ] unsigned char 
  1507 ;;  hour1           1   42[BANK0 ] unsigned char 
  1508 ;;  hour10          1   41[BANK0 ] unsigned char 
  1509 ;;  outchar         1   40[BANK0 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1523 ;;Total ram usage:       28 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    5
  1526 ;; This function calls:
  1527 ;;		_char_2_int
  1528 ;;		_delay_ms
  1529 ;;		_getkey
  1530 ;;		_lcd_write_cmd
  1531 ;;		_lcd_write_data
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text5
  1538  0012E4                     __ptext5:
  1539                           	opt stack 0
  1540  0012E4                     _SetupAlarmTimeC:
  1541                           	opt stack 25
  1542                           
  1543                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1544                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1545                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1546                           
  1547                           ;incstack = 0
  1548  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4516
  1549  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1550  0012EC  0E14               	movlw	20
  1551  0012EE                     u1051:
  1552  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1553  0012F2  06E8               	decf	wreg,f,c
  1554  0012F4  E2FC               	bc	u1051
  1555                           
  1556                           ;Main.c: 241: PORTA = 0b00001000;
  1557  0012F6  0E08               	movlw	8
  1558  0012F8  6E80               	movwf	3968,c	;volatile
  1559                           
  1560                           ;Main.c: 243: lcd_write_cmd(0x80);
  1561  0012FA  0E80               	movlw	128
  1562  0012FC  ECC4  F00C         	call	_lcd_write_cmd
  1563                           
  1564                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1565  001300  0E00               	movlw	0
  1566  001302  0100               	movlb	0	; () banked
  1567  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1568  001306                     l2249:
  1569                           
  1570                           ; BSR set to: 0
  1571  001306  0E13               	movlw	19
  1572  001308  0100               	movlb	0	; () banked
  1573  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1574  00130C  D001               	goto	l2253
  1575  00130E  D013               	goto	l2261
  1576  001310                     l2253:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;Main.c: 246: {
  1580                           ;Main.c: 247: outchar = Message[msgindex];
  1581  001310  0100               	movlb	0	; () banked
  1582  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1583  001314  0D01               	mullw	1
  1584  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1585  001318  24F3               	addwf	prodl,w,c
  1586  00131A  6ED9               	movwf	fsr2l,c
  1587  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1588  00131E  20F4               	addwfc	prodh,w,c
  1589  001320  6EDA               	movwf	fsr2h,c
  1590  001322  50DF               	movf	indf2,w,c
  1591  001324  0100               	movlb	0	; () banked
  1592  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;Main.c: 248: lcd_write_data(outchar);
  1596  001328  0100               	movlb	0	; () banked
  1597  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1598  00132C  EC41  F00B         	call	_lcd_write_data
  1599  001330  0100               	movlb	0	; () banked
  1600  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1601  001334  D7E8               	goto	l2249
  1602  001336                     l2261:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;Main.c: 249: }
  1606                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1607  001336  0EC0               	movlw	192
  1608  001338  ECC4  F00C         	call	_lcd_write_cmd
  1609                           
  1610                           ;Main.c: 253: ctemp=getkey();
  1611  00133C  ECB2  F00D         	call	_getkey	;wreg free
  1612  001340  0100               	movlb	0	; () banked
  1613  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;Main.c: 254: lcd_write_data(ctemp);
  1617  001344  0100               	movlb	0	; () banked
  1618  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1619  001348  EC41  F00B         	call	_lcd_write_data
  1620                           
  1621                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1622  00134C  0100               	movlb	0	; () banked
  1623  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1624  001350  EC8B  F00C         	call	_char_2_int
  1625  001354  0100               	movlb	0	; () banked
  1626  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;Main.c: 257: ctemp=getkey();
  1630  001358  ECB2  F00D         	call	_getkey	;wreg free
  1631  00135C  0100               	movlb	0	; () banked
  1632  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1633                           
  1634                           ;Main.c: 258: lcd_write_data(ctemp);
  1635  001360  0100               	movlb	0	; () banked
  1636  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1637  001364  EC41  F00B         	call	_lcd_write_data
  1638                           
  1639                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1640  001368  0100               	movlb	0	; () banked
  1641  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1642  00136C  EC8B  F00C         	call	_char_2_int
  1643  001370  0100               	movlb	0	; () banked
  1644  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;Main.c: 261: ctemp=getkey();
  1648  001374  ECB2  F00D         	call	_getkey	;wreg free
  1649  001378  0100               	movlb	0	; () banked
  1650  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;Main.c: 262: lcd_write_data(ctemp);
  1654  00137C  0100               	movlb	0	; () banked
  1655  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1656  001380  EC41  F00B         	call	_lcd_write_data
  1657                           
  1658                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1659  001384  0100               	movlb	0	; () banked
  1660  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1661  001388  EC8B  F00C         	call	_char_2_int
  1662  00138C  0100               	movlb	0	; () banked
  1663  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;Main.c: 265: ctemp=getkey();
  1667  001390  ECB2  F00D         	call	_getkey	;wreg free
  1668  001394  0100               	movlb	0	; () banked
  1669  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1670                           
  1671                           ;Main.c: 266: lcd_write_data(ctemp);
  1672  001398  0100               	movlb	0	; () banked
  1673  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1674  00139C  EC41  F00B         	call	_lcd_write_data
  1675                           
  1676                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1677  0013A0  0100               	movlb	0	; () banked
  1678  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1679  0013A4  EC8B  F00C         	call	_char_2_int
  1680  0013A8  0100               	movlb	0	; () banked
  1681  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1685  0013AC  0100               	movlb	0	; () banked
  1686  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1687  0013B0  0D0A               	mullw	10
  1688  0013B2  50F3               	movf	prodl,w,c
  1689  0013B4  0100               	movlb	0	; () banked
  1690  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1691  0013B8  6E3C               	movwf	_hourC,c
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1695  0013BA  0100               	movlb	0	; () banked
  1696  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1697  0013BE  0D0A               	mullw	10
  1698  0013C0  50F3               	movf	prodl,w,c
  1699  0013C2  0100               	movlb	0	; () banked
  1700  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1701  0013C6  6E40               	movwf	_minuteC,c
  1702                           
  1703                           ;Main.c: 272: delay_ms(500);
  1704  0013C8  0E01               	movlw	1
  1705  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1706  0013CC  0EF4               	movlw	244
  1707  0013CE  6E1D               	movwf	delay_ms@i,c
  1708  0013D0  ECD1  F00D         	call	_delay_ms	;wreg free
  1709                           
  1710                           ;Main.c: 273: lcd_write_cmd(0x01);
  1711  0013D4  0E01               	movlw	1
  1712  0013D6  ECC4  F00C         	call	_lcd_write_cmd
  1713  0013DA  0012               	return		;funcret
  1714  0013DC                     __end_of_SetupAlarmTimeC:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           prodh	equ	0xFF4
  1721                           prodl	equ	0xFF3
  1722                           intcon	equ	0xFF2
  1723                           intcon2	equ	0xFF1
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           plusw1	equ	0xFE3
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           plusw2	equ	0xFDB
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _SetupAlarmTimeB *****************
  1736 ;; Defined at:
  1737 ;;		line 195 in file "Main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1742 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1743 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1744 ;;  minute1         1   44[BANK0 ] unsigned char 
  1745 ;;  minute10        1   43[BANK0 ] unsigned char 
  1746 ;;  hour1           1   42[BANK0 ] unsigned char 
  1747 ;;  hour10          1   41[BANK0 ] unsigned char 
  1748 ;;  outchar         1   40[BANK0 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1761 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1762 ;;Total ram usage:       28 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    5
  1765 ;; This function calls:
  1766 ;;		_char_2_int
  1767 ;;		_delay_ms
  1768 ;;		_getkey
  1769 ;;		_lcd_write_cmd
  1770 ;;		_lcd_write_data
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777  0013DC                     __ptext6:
  1778                           	opt stack 0
  1779  0013DC                     _SetupAlarmTimeB:
  1780                           	opt stack 25
  1781                           
  1782                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1783                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1784                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1785                           
  1786                           ;incstack = 0
  1787  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4506
  1788  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1789  0013E4  0E14               	movlw	20
  1790  0013E6                     u1021:
  1791  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1792  0013EA  06E8               	decf	wreg,f,c
  1793  0013EC  E2FC               	bc	u1021
  1794                           
  1795                           ;Main.c: 201: PORTA = 0b00000100;
  1796  0013EE  0E04               	movlw	4
  1797  0013F0  6E80               	movwf	3968,c	;volatile
  1798                           
  1799                           ;Main.c: 203: lcd_write_cmd(0x80);
  1800  0013F2  0E80               	movlw	128
  1801  0013F4  ECC4  F00C         	call	_lcd_write_cmd
  1802                           
  1803                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1804  0013F8  0E00               	movlw	0
  1805  0013FA  0100               	movlb	0	; () banked
  1806  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1807  0013FE                     l2207:
  1808                           
  1809                           ; BSR set to: 0
  1810  0013FE  0E13               	movlw	19
  1811  001400  0100               	movlb	0	; () banked
  1812  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1813  001404  D001               	goto	l2211
  1814  001406  D013               	goto	l2219
  1815  001408                     l2211:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;Main.c: 206: {
  1819                           ;Main.c: 207: outchar = Message[msgindex];
  1820  001408  0100               	movlb	0	; () banked
  1821  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1822  00140C  0D01               	mullw	1
  1823  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1824  001410  24F3               	addwf	prodl,w,c
  1825  001412  6ED9               	movwf	fsr2l,c
  1826  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1827  001416  20F4               	addwfc	prodh,w,c
  1828  001418  6EDA               	movwf	fsr2h,c
  1829  00141A  50DF               	movf	indf2,w,c
  1830  00141C  0100               	movlb	0	; () banked
  1831  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;Main.c: 208: lcd_write_data(outchar);
  1835  001420  0100               	movlb	0	; () banked
  1836  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1837  001424  EC41  F00B         	call	_lcd_write_data
  1838  001428  0100               	movlb	0	; () banked
  1839  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1840  00142C  D7E8               	goto	l2207
  1841  00142E                     l2219:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Main.c: 209: }
  1845                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1846  00142E  0EC0               	movlw	192
  1847  001430  ECC4  F00C         	call	_lcd_write_cmd
  1848                           
  1849                           ;Main.c: 213: ctemp=getkey();
  1850  001434  ECB2  F00D         	call	_getkey	;wreg free
  1851  001438  0100               	movlb	0	; () banked
  1852  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;Main.c: 214: lcd_write_data(ctemp);
  1856  00143C  0100               	movlb	0	; () banked
  1857  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1858  001440  EC41  F00B         	call	_lcd_write_data
  1859                           
  1860                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1861  001444  0100               	movlb	0	; () banked
  1862  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1863  001448  EC8B  F00C         	call	_char_2_int
  1864  00144C  0100               	movlb	0	; () banked
  1865  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;Main.c: 217: ctemp=getkey();
  1869  001450  ECB2  F00D         	call	_getkey	;wreg free
  1870  001454  0100               	movlb	0	; () banked
  1871  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1872                           
  1873                           ;Main.c: 218: lcd_write_data(ctemp);
  1874  001458  0100               	movlb	0	; () banked
  1875  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1876  00145C  EC41  F00B         	call	_lcd_write_data
  1877                           
  1878                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1879  001460  0100               	movlb	0	; () banked
  1880  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1881  001464  EC8B  F00C         	call	_char_2_int
  1882  001468  0100               	movlb	0	; () banked
  1883  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;Main.c: 221: ctemp=getkey();
  1887  00146C  ECB2  F00D         	call	_getkey	;wreg free
  1888  001470  0100               	movlb	0	; () banked
  1889  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;Main.c: 222: lcd_write_data(ctemp);
  1893  001474  0100               	movlb	0	; () banked
  1894  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1895  001478  EC41  F00B         	call	_lcd_write_data
  1896                           
  1897                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1898  00147C  0100               	movlb	0	; () banked
  1899  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1900  001480  EC8B  F00C         	call	_char_2_int
  1901  001484  0100               	movlb	0	; () banked
  1902  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;Main.c: 225: ctemp=getkey();
  1906  001488  ECB2  F00D         	call	_getkey	;wreg free
  1907  00148C  0100               	movlb	0	; () banked
  1908  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1909                           
  1910                           ;Main.c: 226: lcd_write_data(ctemp);
  1911  001490  0100               	movlb	0	; () banked
  1912  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1913  001494  EC41  F00B         	call	_lcd_write_data
  1914                           
  1915                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1916  001498  0100               	movlb	0	; () banked
  1917  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1918  00149C  EC8B  F00C         	call	_char_2_int
  1919  0014A0  0100               	movlb	0	; () banked
  1920  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1924  0014A4  0100               	movlb	0	; () banked
  1925  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1926  0014A8  0D0A               	mullw	10
  1927  0014AA  50F3               	movf	prodl,w,c
  1928  0014AC  0100               	movlb	0	; () banked
  1929  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1930  0014B0  6E3B               	movwf	_hourB,c
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1934  0014B2  0100               	movlb	0	; () banked
  1935  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1936  0014B6  0D0A               	mullw	10
  1937  0014B8  50F3               	movf	prodl,w,c
  1938  0014BA  0100               	movlb	0	; () banked
  1939  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1940  0014BE  6E3F               	movwf	_minuteB,c
  1941                           
  1942                           ;Main.c: 232: delay_ms(500);
  1943  0014C0  0E01               	movlw	1
  1944  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1945  0014C4  0EF4               	movlw	244
  1946  0014C6  6E1D               	movwf	delay_ms@i,c
  1947  0014C8  ECD1  F00D         	call	_delay_ms	;wreg free
  1948                           
  1949                           ;Main.c: 233: lcd_write_cmd(0x01);
  1950  0014CC  0E01               	movlw	1
  1951  0014CE  ECC4  F00C         	call	_lcd_write_cmd
  1952  0014D2  0012               	return		;funcret
  1953  0014D4                     __end_of_SetupAlarmTimeB:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           intcon2	equ	0xFF1
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           plusw1	equ	0xFE3
  1967                           fsr1l	equ	0xFE1
  1968                           indf2	equ	0xFDF
  1969                           plusw2	equ	0xFDB
  1970                           fsr2h	equ	0xFDA
  1971                           fsr2l	equ	0xFD9
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function _SetupAlarmTimeA *****************
  1975 ;; Defined at:
  1976 ;;		line 155 in file "Main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1981 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1982 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1983 ;;  minute1         1   44[BANK0 ] unsigned char 
  1984 ;;  minute10        1   43[BANK0 ] unsigned char 
  1985 ;;  hour1           1   42[BANK0 ] unsigned char 
  1986 ;;  hour10          1   41[BANK0 ] unsigned char 
  1987 ;;  outchar         1   40[BANK0 ] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;		None               void
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2001 ;;Total ram usage:       28 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    5
  2004 ;; This function calls:
  2005 ;;		_char_2_int
  2006 ;;		_delay_ms
  2007 ;;		_getkey
  2008 ;;		_lcd_write_cmd
  2009 ;;		_lcd_write_data
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text7
  2016  0014D4                     __ptext7:
  2017                           	opt stack 0
  2018  0014D4                     _SetupAlarmTimeA:
  2019                           	opt stack 25
  2020                           
  2021                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  2022                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  2023                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  2024                           
  2025                           ;incstack = 0
  2026  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4496
  2027  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  2028  0014DC  0E14               	movlw	20
  2029  0014DE                     u991:
  2030  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  2031  0014E2  06E8               	decf	wreg,f,c
  2032  0014E4  E2FC               	bc	u991
  2033                           
  2034                           ;Main.c: 161: PORTA = 0b00000010;
  2035  0014E6  0E02               	movlw	2
  2036  0014E8  6E80               	movwf	3968,c	;volatile
  2037                           
  2038                           ;Main.c: 163: lcd_write_cmd(0x80);
  2039  0014EA  0E80               	movlw	128
  2040  0014EC  ECC4  F00C         	call	_lcd_write_cmd
  2041                           
  2042                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  2043  0014F0  0E00               	movlw	0
  2044  0014F2  0100               	movlb	0	; () banked
  2045  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2046  0014F6                     l2165:
  2047                           
  2048                           ; BSR set to: 0
  2049  0014F6  0E13               	movlw	19
  2050  0014F8  0100               	movlb	0	; () banked
  2051  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2052  0014FC  D001               	goto	l2169
  2053  0014FE  D013               	goto	l2177
  2054  001500                     l2169:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;Main.c: 166: {
  2058                           ;Main.c: 167: outchar = Message[msgindex];
  2059  001500  0100               	movlb	0	; () banked
  2060  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2061  001504  0D01               	mullw	1
  2062  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  2063  001508  24F3               	addwf	prodl,w,c
  2064  00150A  6ED9               	movwf	fsr2l,c
  2065  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  2066  00150E  20F4               	addwfc	prodh,w,c
  2067  001510  6EDA               	movwf	fsr2h,c
  2068  001512  50DF               	movf	indf2,w,c
  2069  001514  0100               	movlb	0	; () banked
  2070  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;Main.c: 168: lcd_write_data(outchar);
  2074  001518  0100               	movlb	0	; () banked
  2075  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2076  00151C  EC41  F00B         	call	_lcd_write_data
  2077  001520  0100               	movlb	0	; () banked
  2078  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2079  001524  D7E8               	goto	l2165
  2080  001526                     l2177:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;Main.c: 169: }
  2084                           ;Main.c: 171: lcd_write_cmd(0xC0);
  2085  001526  0EC0               	movlw	192
  2086  001528  ECC4  F00C         	call	_lcd_write_cmd
  2087                           
  2088                           ;Main.c: 173: ctemp=getkey();
  2089  00152C  ECB2  F00D         	call	_getkey	;wreg free
  2090  001530  0100               	movlb	0	; () banked
  2091  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;Main.c: 174: lcd_write_data(ctemp);
  2095  001534  0100               	movlb	0	; () banked
  2096  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2097  001538  EC41  F00B         	call	_lcd_write_data
  2098                           
  2099                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  2100  00153C  0100               	movlb	0	; () banked
  2101  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2102  001540  EC8B  F00C         	call	_char_2_int
  2103  001544  0100               	movlb	0	; () banked
  2104  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;Main.c: 177: ctemp=getkey();
  2108  001548  ECB2  F00D         	call	_getkey	;wreg free
  2109  00154C  0100               	movlb	0	; () banked
  2110  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2111                           
  2112                           ;Main.c: 178: lcd_write_data(ctemp);
  2113  001550  0100               	movlb	0	; () banked
  2114  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2115  001554  EC41  F00B         	call	_lcd_write_data
  2116                           
  2117                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2118  001558  0100               	movlb	0	; () banked
  2119  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2120  00155C  EC8B  F00C         	call	_char_2_int
  2121  001560  0100               	movlb	0	; () banked
  2122  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;Main.c: 181: ctemp=getkey();
  2126  001564  ECB2  F00D         	call	_getkey	;wreg free
  2127  001568  0100               	movlb	0	; () banked
  2128  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;Main.c: 182: lcd_write_data(ctemp);
  2132  00156C  0100               	movlb	0	; () banked
  2133  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2134  001570  EC41  F00B         	call	_lcd_write_data
  2135                           
  2136                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2137  001574  0100               	movlb	0	; () banked
  2138  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2139  001578  EC8B  F00C         	call	_char_2_int
  2140  00157C  0100               	movlb	0	; () banked
  2141  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;Main.c: 185: ctemp=getkey();
  2145  001580  ECB2  F00D         	call	_getkey	;wreg free
  2146  001584  0100               	movlb	0	; () banked
  2147  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2148                           
  2149                           ;Main.c: 186: lcd_write_data(ctemp);
  2150  001588  0100               	movlb	0	; () banked
  2151  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2152  00158C  EC41  F00B         	call	_lcd_write_data
  2153                           
  2154                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2155  001590  0100               	movlb	0	; () banked
  2156  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2157  001594  EC8B  F00C         	call	_char_2_int
  2158  001598  0100               	movlb	0	; () banked
  2159  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2163  00159C  0100               	movlb	0	; () banked
  2164  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2165  0015A0  0D0A               	mullw	10
  2166  0015A2  50F3               	movf	prodl,w,c
  2167  0015A4  0100               	movlb	0	; () banked
  2168  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2169  0015A8  6E3A               	movwf	_hourA,c
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2173  0015AA  0100               	movlb	0	; () banked
  2174  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2175  0015AE  0D0A               	mullw	10
  2176  0015B0  50F3               	movf	prodl,w,c
  2177  0015B2  0100               	movlb	0	; () banked
  2178  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2179  0015B6  6E3E               	movwf	_minuteA,c
  2180                           
  2181                           ;Main.c: 192: delay_ms(500);
  2182  0015B8  0E01               	movlw	1
  2183  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2184  0015BC  0EF4               	movlw	244
  2185  0015BE  6E1D               	movwf	delay_ms@i,c
  2186  0015C0  ECD1  F00D         	call	_delay_ms	;wreg free
  2187                           
  2188                           ;Main.c: 193: lcd_write_cmd(0x01);
  2189  0015C4  0E01               	movlw	1
  2190  0015C6  ECC4  F00C         	call	_lcd_write_cmd
  2191  0015CA  0012               	return		;funcret
  2192  0015CC                     __end_of_SetupAlarmTimeA:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           intcon2	equ	0xFF1
  2202                           postinc0	equ	0xFEE
  2203                           wreg	equ	0xFE8
  2204                           postdec1	equ	0xFE5
  2205                           plusw1	equ	0xFE3
  2206                           fsr1l	equ	0xFE1
  2207                           indf2	equ	0xFDF
  2208                           plusw2	equ	0xFDB
  2209                           fsr2h	equ	0xFDA
  2210                           fsr2l	equ	0xFD9
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function _lcd_write_data *****************
  2214 ;; Defined at:
  2215 ;;		line 43 in file "lcd_utilities.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  data            1    wreg     unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  data            1   30[COMRAM] unsigned char 
  2220 ;;  temp1           1   31[COMRAM] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0
  2231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2233 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2234 ;;Total ram usage:        3 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    4
  2237 ;; This function calls:
  2238 ;;		_lcd_strobe
  2239 ;; This function is called by:
  2240 ;;		_SetupTime
  2241 ;;		_SetupAlarmTimeA
  2242 ;;		_SetupAlarmTimeB
  2243 ;;		_SetupAlarmTimeC
  2244 ;;		_version
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text8
  2249  001682                     __ptext8:
  2250                           	opt stack 0
  2251  001682                     _lcd_write_data:
  2252                           	opt stack 25
  2253                           
  2254                           ;incstack = 0
  2255                           ;lcd_write_data@data stored from wreg
  2256  001682  6E1F               	movwf	lcd_write_data@data,c
  2257                           
  2258                           ;lcd_utilities.c: 45: char temp1;
  2259                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2260  001684  8C83               	bsf	3971,6,c	;volatile
  2261                           
  2262                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2263  001686  0E3F               	movlw	63
  2264  001688  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2265  00168A  0E55               	movlw	85
  2266  00168C                     u1237:
  2267  00168C  2EE8               	decfsz	wreg,f,c
  2268  00168E  D7FE               	goto	u1237
  2269  001690  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2270  001692  D7FC               	goto	u1237
  2271  001694  F000               	nop	
  2272                           
  2273                           ;lcd_utilities.c: 50: temp1 = data;
  2274  001696  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2275                           
  2276                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2277  00169A  3820               	swapf	lcd_write_data@temp1,w,c
  2278  00169C  0B0F               	andlw	15
  2279  00169E  6E20               	movwf	lcd_write_data@temp1,c
  2280                           
  2281                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2282  0016A0  5020               	movf	lcd_write_data@temp1,w,c
  2283  0016A2  0B0F               	andlw	15
  2284  0016A4  6E83               	movwf	3971,c	;volatile
  2285                           
  2286                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2287  0016A6  0E7D               	movlw	125
  2288  0016A8  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2289  0016AA  0EAC               	movlw	172
  2290  0016AC                     u1247:
  2291  0016AC  2EE8               	decfsz	wreg,f,c
  2292  0016AE  D7FE               	goto	u1247
  2293  0016B0  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2294  0016B2  D7FC               	goto	u1247
  2295                           
  2296                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2297  0016B4  8C83               	bsf	3971,6,c	;volatile
  2298                           
  2299                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2300  0016B6  0E7D               	movlw	125
  2301  0016B8  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2302  0016BA  0EAC               	movlw	172
  2303  0016BC                     u1257:
  2304  0016BC  2EE8               	decfsz	wreg,f,c
  2305  0016BE  D7FE               	goto	u1257
  2306  0016C0  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2307  0016C2  D7FC               	goto	u1257
  2308                           
  2309                           ;lcd_utilities.c: 57: lcd_strobe();
  2310  0016C4  ECEB  F00D         	call	_lcd_strobe	;wreg free
  2311                           
  2312                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2313  0016C8  0E7D               	movlw	125
  2314  0016CA  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2315  0016CC  0EAC               	movlw	172
  2316  0016CE                     u1267:
  2317  0016CE  2EE8               	decfsz	wreg,f,c
  2318  0016D0  D7FE               	goto	u1267
  2319  0016D2  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2320  0016D4  D7FC               	goto	u1267
  2321                           
  2322                           ;lcd_utilities.c: 60: temp1 = data;
  2323  0016D6  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2324                           
  2325                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2326  0016DA  5020               	movf	lcd_write_data@temp1,w,c
  2327  0016DC  0B0F               	andlw	15
  2328  0016DE  6E83               	movwf	3971,c	;volatile
  2329                           
  2330                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2331  0016E0  0E7D               	movlw	125
  2332  0016E2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2333  0016E4  0EAC               	movlw	172
  2334  0016E6                     u1277:
  2335  0016E6  2EE8               	decfsz	wreg,f,c
  2336  0016E8  D7FE               	goto	u1277
  2337  0016EA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2338  0016EC  D7FC               	goto	u1277
  2339                           
  2340                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2341  0016EE  8C83               	bsf	3971,6,c	;volatile
  2342                           
  2343                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2344  0016F0  0E9C               	movlw	156
  2345  0016F2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2346  0016F4  0ED7               	movlw	215
  2347  0016F6                     u1287:
  2348  0016F6  2EE8               	decfsz	wreg,f,c
  2349  0016F8  D7FE               	goto	u1287
  2350  0016FA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2351  0016FC  D7FC               	goto	u1287
  2352  0016FE  F000               	nop	
  2353                           
  2354                           ;lcd_utilities.c: 66: lcd_strobe();
  2355  001700  ECEB  F00D         	call	_lcd_strobe	;wreg free
  2356                           
  2357                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2358  001704  0E9C               	movlw	156
  2359  001706  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2360  001708  0ED7               	movlw	215
  2361  00170A                     u1297:
  2362  00170A  2EE8               	decfsz	wreg,f,c
  2363  00170C  D7FE               	goto	u1297
  2364  00170E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2365  001710  D7FC               	goto	u1297
  2366  001712  F000               	nop	
  2367  001714  0012               	return		;funcret
  2368  001716                     __end_of_lcd_write_data:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           intcon2	equ	0xFF1
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           postdec1	equ	0xFE5
  2381                           plusw1	equ	0xFE3
  2382                           fsr1l	equ	0xFE1
  2383                           indf2	equ	0xFDF
  2384                           plusw2	equ	0xFDB
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _lcd_write_cmd *****************
  2390 ;; Defined at:
  2391 ;;		line 18 in file "lcd_utilities.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  cmd             1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  cmd             1   30[COMRAM] unsigned char 
  2396 ;;  temp2           1   31[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0
  2407 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2408 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2409 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2410 ;;Total ram usage:        3 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    4
  2413 ;; This function calls:
  2414 ;;		_lcd_strobe
  2415 ;; This function is called by:
  2416 ;;		_lcd_init
  2417 ;;		_SetupTime
  2418 ;;		_SetupAlarmTimeA
  2419 ;;		_SetupAlarmTimeB
  2420 ;;		_SetupAlarmTimeC
  2421 ;;		_version
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text9
  2426  001988                     __ptext9:
  2427                           	opt stack 0
  2428  001988                     _lcd_write_cmd:
  2429                           	opt stack 25
  2430                           
  2431                           ;incstack = 0
  2432                           ;lcd_write_cmd@cmd stored from wreg
  2433  001988  6E1F               	movwf	lcd_write_cmd@cmd,c
  2434                           
  2435                           ;lcd_utilities.c: 20: unsigned char temp2;
  2436                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2437  00198A  9C83               	bcf	3971,6,c	;volatile
  2438                           
  2439                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2440  00198C  0E3F               	movlw	63
  2441  00198E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2442  001990  0E55               	movlw	85
  2443  001992                     u1307:
  2444  001992  2EE8               	decfsz	wreg,f,c
  2445  001994  D7FE               	goto	u1307
  2446  001996  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2447  001998  D7FC               	goto	u1307
  2448  00199A  F000               	nop	
  2449                           
  2450                           ;lcd_utilities.c: 23: temp2 = cmd;
  2451  00199C  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2452                           
  2453                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2454  0019A0  3820               	swapf	lcd_write_cmd@temp2,w,c
  2455  0019A2  0B0F               	andlw	15
  2456  0019A4  6E20               	movwf	lcd_write_cmd@temp2,c
  2457                           
  2458                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2459  0019A6  5020               	movf	lcd_write_cmd@temp2,w,c
  2460  0019A8  0B0F               	andlw	15
  2461  0019AA  6E83               	movwf	3971,c	;volatile
  2462                           
  2463                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2464  0019AC  0E7D               	movlw	125
  2465  0019AE  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2466  0019B0  0EAC               	movlw	172
  2467  0019B2                     u1317:
  2468  0019B2  2EE8               	decfsz	wreg,f,c
  2469  0019B4  D7FE               	goto	u1317
  2470  0019B6  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2471  0019B8  D7FC               	goto	u1317
  2472                           
  2473                           ;lcd_utilities.c: 28: lcd_strobe();
  2474  0019BA  ECEB  F00D         	call	_lcd_strobe	;wreg free
  2475                           
  2476                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2477  0019BE  0E7D               	movlw	125
  2478  0019C0  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2479  0019C2  0EAC               	movlw	172
  2480  0019C4                     u1327:
  2481  0019C4  2EE8               	decfsz	wreg,f,c
  2482  0019C6  D7FE               	goto	u1327
  2483  0019C8  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2484  0019CA  D7FC               	goto	u1327
  2485                           
  2486                           ;lcd_utilities.c: 32: temp2 = cmd;
  2487  0019CC  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2488                           
  2489                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2490  0019D0  5020               	movf	lcd_write_cmd@temp2,w,c
  2491  0019D2  0B0F               	andlw	15
  2492  0019D4  6E83               	movwf	3971,c	;volatile
  2493                           
  2494                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2495  0019D6  0E7D               	movlw	125
  2496  0019D8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2497  0019DA  0EAC               	movlw	172
  2498  0019DC                     u1337:
  2499  0019DC  2EE8               	decfsz	wreg,f,c
  2500  0019DE  D7FE               	goto	u1337
  2501  0019E0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2502  0019E2  D7FC               	goto	u1337
  2503                           
  2504                           ;lcd_utilities.c: 36: lcd_strobe();
  2505  0019E4  ECEB  F00D         	call	_lcd_strobe	;wreg free
  2506                           
  2507                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2508  0019E8  0E7D               	movlw	125
  2509  0019EA  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2510  0019EC  0EAC               	movlw	172
  2511  0019EE                     u1347:
  2512  0019EE  2EE8               	decfsz	wreg,f,c
  2513  0019F0  D7FE               	goto	u1347
  2514  0019F2  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2515  0019F4  D7FC               	goto	u1347
  2516  0019F6  0012               	return		;funcret
  2517  0019F8                     __end_of_lcd_write_cmd:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           intcon2	equ	0xFF1
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           postdec1	equ	0xFE5
  2530                           plusw1	equ	0xFE3
  2531                           fsr1l	equ	0xFE1
  2532                           indf2	equ	0xFDF
  2533                           plusw2	equ	0xFDB
  2534                           fsr2h	equ	0xFDA
  2535                           fsr2l	equ	0xFD9
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _lcd_strobe *****************
  2539 ;; Defined at:
  2540 ;;		line 73 in file "lcd_utilities.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2557 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:        1 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    3
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_lcd_write_cmd
  2565 ;;		_lcd_write_data
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text10
  2570  001BD6                     __ptext10:
  2571                           	opt stack 0
  2572  001BD6                     _lcd_strobe:
  2573                           	opt stack 25
  2574                           
  2575                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2576                           
  2577                           ;incstack = 0
  2578  001BD6  8883               	bsf	3971,4,c	;volatile
  2579                           
  2580                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2581  001BD8  0E7D               	movlw	125
  2582  001BDA  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2583  001BDC  0EAC               	movlw	172
  2584  001BDE                     u1357:
  2585  001BDE  2EE8               	decfsz	wreg,f,c
  2586  001BE0  D7FE               	goto	u1357
  2587  001BE2  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2588  001BE4  D7FC               	goto	u1357
  2589                           
  2590                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2591  001BE6  9883               	bcf	3971,4,c	;volatile
  2592                           
  2593                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2594  001BE8  0E7D               	movlw	125
  2595  001BEA  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2596  001BEC  0EAC               	movlw	172
  2597  001BEE                     u1367:
  2598  001BEE  2EE8               	decfsz	wreg,f,c
  2599  001BF0  D7FE               	goto	u1367
  2600  001BF2  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2601  001BF4  D7FC               	goto	u1367
  2602  001BF6  0012               	return		;funcret
  2603  001BF8                     __end_of_lcd_strobe:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           intcon2	equ	0xFF1
  2613                           postinc0	equ	0xFEE
  2614                           wreg	equ	0xFE8
  2615                           postdec1	equ	0xFE5
  2616                           plusw1	equ	0xFE3
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           plusw2	equ	0xFDB
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _getkey *****************
  2625 ;; Defined at:
  2626 ;;		line 17 in file "keypad_utilities.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2631 ;;  keycode         1   18[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2645 ;;Total ram usage:       19 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    3
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_SetupTime
  2652 ;;		_SetupAlarmTimeA
  2653 ;;		_SetupAlarmTimeB
  2654 ;;		_SetupAlarmTimeC
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text11
  2659  001B64                     __ptext11:
  2660                           	opt stack 0
  2661  001B64                     _getkey:
  2662                           	opt stack 26
  2663                           
  2664                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2665                           
  2666                           ;incstack = 0
  2667  001B64  0E1B               	movlw	low getkey@F4444
  2668  001B66  6EF6               	movwf	tblptrl,c
  2669  001B68                     	if	1	;There is more than 1 active tblptr byte
  2670  001B68  0E10               	movlw	high getkey@F4444
  2671  001B6A  6EF7               	movwf	tblptrh,c
  2672  001B6C                     	endif
  2673  001B6C                     	if	0	;There are less than 3 active tblptr bytes
  2674  001B6C                     	endif
  2675  001B6C  EE20  F0B4         	lfsr	2,getkey@lookup
  2676  001B70  0E11               	movlw	17
  2677  001B72                     u890:
  2678  001B72  0009               	tblrd		*+
  2679  001B74  CFF5 FFDE          	movff	tablat,postinc2
  2680  001B78  06E8               	decf	wreg,f,c
  2681  001B7A  E2FB               	bc	u890
  2682  001B7C                     l33:
  2683  001B7C  AA81               	btfss	3969,5,c	;volatile
  2684  001B7E  D7FE               	goto	l33
  2685                           
  2686                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2687  001B80  5081               	movf	3969,w,c	;volatile
  2688  001B82  0B0F               	andlw	15
  2689  001B84  0100               	movlb	0	; () banked
  2690  001B86  6FC6               	movwf	getkey@keycode& (0+255),b
  2691  001B88                     l36:
  2692  001B88  BA81               	btfsc	3969,5,c	;volatile
  2693  001B8A  D7FE               	goto	l36
  2694                           
  2695                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2696  001B8C  0100               	movlb	0	; () banked
  2697  001B8E  51C6               	movf	getkey@keycode& (0+255),w,b
  2698  001B90  0D01               	mullw	1
  2699  001B92  0EB4               	movlw	low getkey@lookup
  2700  001B94  24F3               	addwf	prodl,w,c
  2701  001B96  6ED9               	movwf	fsr2l,c
  2702  001B98  0E00               	movlw	high getkey@lookup
  2703  001B9A  20F4               	addwfc	prodh,w,c
  2704  001B9C  6EDA               	movwf	fsr2h,c
  2705  001B9E  50DF               	movf	indf2,w,c
  2706  001BA0  0012               	return	
  2707  001BA2                     __end_of_getkey:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon	equ	0xFF2
  2716                           intcon2	equ	0xFF1
  2717                           postinc0	equ	0xFEE
  2718                           wreg	equ	0xFE8
  2719                           postdec1	equ	0xFE5
  2720                           plusw1	equ	0xFE3
  2721                           fsr1l	equ	0xFE1
  2722                           indf2	equ	0xFDF
  2723                           postinc2	equ	0xFDE
  2724                           plusw2	equ	0xFDB
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8
  2728                           
  2729 ;; *************** function _delay_ms *****************
  2730 ;; Defined at:
  2731 ;;		line 10 in file "delays_utilities.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  i               2   28[COMRAM] unsigned int 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  j               2   31[COMRAM] unsigned int 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;		None               void
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2745 ;;      Params:         2       0       0       0       0       0       0       0       0
  2746 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2747 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2748 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2749 ;;Total ram usage:        5 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    3
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_SetupTime
  2756 ;;		_SetupAlarmTimeA
  2757 ;;		_SetupAlarmTimeB
  2758 ;;		_SetupAlarmTimeC
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text12
  2763  001BA2                     __ptext12:
  2764                           	opt stack 0
  2765  001BA2                     _delay_ms:
  2766                           	opt stack 26
  2767                           
  2768                           ;delays_utilities.c: 12: if(i!=0)
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;incstack = 0
  2772  001BA2  501D               	movf	delay_ms@i,w,c
  2773  001BA4  101E               	iorwf	delay_ms@i+1,w,c
  2774  001BA6  B4D8               	btfsc	status,2,c
  2775  001BA8  0012               	return	
  2776                           
  2777                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2778  001BAA  0E00               	movlw	0
  2779  001BAC  6E21               	movwf	delay_ms@j+1,c
  2780  001BAE  0E00               	movlw	0
  2781  001BB0  6E20               	movwf	delay_ms@j,c
  2782  001BB2  D00A               	goto	l183
  2783  001BB4                     l2079:
  2784  001BB4  0E10               	movlw	16
  2785  001BB6  6E1F               	movwf	??_delay_ms& (0+255),c
  2786  001BB8  0E94               	movlw	148
  2787  001BBA                     u1377:
  2788  001BBA  2EE8               	decfsz	wreg,f,c
  2789  001BBC  D7FE               	goto	u1377
  2790  001BBE  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2791  001BC0  D7FC               	goto	u1377
  2792  001BC2  D000               	nop2	
  2793  001BC4  4A20               	infsnz	delay_ms@j,f,c
  2794  001BC6  2A21               	incf	delay_ms@j+1,f,c
  2795  001BC8                     l183:
  2796  001BC8  501D               	movf	delay_ms@i,w,c
  2797  001BCA  5C20               	subwf	delay_ms@j,w,c
  2798  001BCC  501E               	movf	delay_ms@i+1,w,c
  2799  001BCE  5821               	subwfb	delay_ms@j+1,w,c
  2800  001BD0  B0D8               	btfsc	status,0,c
  2801  001BD2  0012               	return	
  2802  001BD4  D7EF               	goto	l2079
  2803  001BD6                     __end_of_delay_ms:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           intcon	equ	0xFF2
  2812                           intcon2	equ	0xFF1
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           postdec1	equ	0xFE5
  2816                           plusw1	equ	0xFE3
  2817                           fsr1l	equ	0xFE1
  2818                           indf2	equ	0xFDF
  2819                           postinc2	equ	0xFDE
  2820                           plusw2	equ	0xFDB
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function _char_2_int *****************
  2826 ;; Defined at:
  2827 ;;		line 35 in file "Main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  char1           1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  char1           1   28[COMRAM] unsigned char 
  2832 ;;  int1            1   29[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      unsigned char 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0
  2843 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2845 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2846 ;;Total ram usage:        2 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_SetupTime
  2853 ;;		_SetupAlarmTimeA
  2854 ;;		_SetupAlarmTimeB
  2855 ;;		_SetupAlarmTimeC
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text13
  2860  001916                     __ptext13:
  2861                           	opt stack 0
  2862  001916                     _char_2_int:
  2863                           	opt stack 26
  2864                           
  2865                           ;incstack = 0
  2866                           ;char_2_int@char1 stored from wreg
  2867  001916  6E1D               	movwf	char_2_int@char1,c
  2868                           
  2869                           ;Main.c: 37: unsigned char int1;
  2870                           ;Main.c: 38: switch (char1)
  2871  001918  D015               	goto	l2073
  2872  00191A                     l2053:
  2873  00191A  0E01               	movlw	1
  2874  00191C  D011               	goto	L12
  2875  00191E                     l2055:
  2876  00191E  0E02               	movlw	2
  2877  001920  D00F               	goto	L12
  2878  001922                     l2057:
  2879  001922  0E03               	movlw	3
  2880  001924  D00D               	goto	L12
  2881  001926                     l2059:
  2882  001926  0E04               	movlw	4
  2883  001928  D00B               	goto	L12
  2884  00192A                     l2061:
  2885  00192A  0E05               	movlw	5
  2886  00192C  D009               	goto	L12
  2887  00192E                     l2063:
  2888  00192E  0E06               	movlw	6
  2889  001930  D007               	goto	L12
  2890  001932                     l2065:
  2891  001932  0E07               	movlw	7
  2892  001934  D005               	goto	L12
  2893  001936                     l2067:
  2894  001936  0E08               	movlw	8
  2895  001938  D003               	goto	L12
  2896  00193A                     l2069:
  2897  00193A  0E09               	movlw	9
  2898  00193C  D001               	goto	L12
  2899  00193E                     l2071:
  2900  00193E  0E00               	movlw	0
  2901  001940                     L12:
  2902  001940  6E1E               	movwf	char_2_int@int1,c
  2903                           
  2904                           ;Main.c: 51: }
  2905  001942  D020               	goto	l114
  2906  001944                     l2073:
  2907  001944  501D               	movf	char_2_int@char1,w,c
  2908                           
  2909                           ; Switch size 1, requested type "space"
  2910                           ; Number of cases is 10, Range of values is 48 to 57
  2911                           ; switch strategies available:
  2912                           ; Name         Instructions Cycles
  2913                           ; simple_byte           31    16 (average)
  2914                           ;	Chosen strategy is simple_byte
  2915  001946  0A30               	xorlw	48	; case 48
  2916  001948  B4D8               	btfsc	status,2,c
  2917  00194A  D7F9               	goto	l2071
  2918  00194C  0A01               	xorlw	1	; case 49
  2919  00194E  B4D8               	btfsc	status,2,c
  2920  001950  D7E4               	goto	l2053
  2921  001952  0A03               	xorlw	3	; case 50
  2922  001954  B4D8               	btfsc	status,2,c
  2923  001956  D7E3               	goto	l2055
  2924  001958  0A01               	xorlw	1	; case 51
  2925  00195A  B4D8               	btfsc	status,2,c
  2926  00195C  D7E2               	goto	l2057
  2927  00195E  0A07               	xorlw	7	; case 52
  2928  001960  B4D8               	btfsc	status,2,c
  2929  001962  D7E1               	goto	l2059
  2930  001964  0A01               	xorlw	1	; case 53
  2931  001966  B4D8               	btfsc	status,2,c
  2932  001968  D7E0               	goto	l2061
  2933  00196A  0A03               	xorlw	3	; case 54
  2934  00196C  B4D8               	btfsc	status,2,c
  2935  00196E  D7DF               	goto	l2063
  2936  001970  0A01               	xorlw	1	; case 55
  2937  001972  B4D8               	btfsc	status,2,c
  2938  001974  D7DE               	goto	l2065
  2939  001976  0A0F               	xorlw	15	; case 56
  2940  001978  B4D8               	btfsc	status,2,c
  2941  00197A  D7DD               	goto	l2067
  2942  00197C  0A01               	xorlw	1	; case 57
  2943  00197E  B4D8               	btfsc	status,2,c
  2944  001980  D7DC               	goto	l2069
  2945  001982  D7DD               	goto	l2071
  2946  001984                     l114:
  2947                           
  2948                           ;Main.c: 52: return(int1);
  2949  001984  501E               	movf	char_2_int@int1,w,c
  2950  001986  0012               	return		;funcret
  2951  001988                     __end_of_char_2_int:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           intcon2	equ	0xFF1
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           plusw1	equ	0xFE3
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           postinc2	equ	0xFDE
  2968                           plusw2	equ	0xFDB
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _ISR_Timer0_Int *****************
  2974 ;; Defined at:
  2975 ;;		line 55 in file "Main.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  second10        1   27[COMRAM] unsigned char 
  2980 ;;  minute10        1   26[COMRAM] unsigned char 
  2981 ;;  hour10          1   25[COMRAM] unsigned char 
  2982 ;;  second1         1   24[COMRAM] unsigned char 
  2983 ;;  minute1         1   23[COMRAM] unsigned char 
  2984 ;;  hour1           1   22[COMRAM] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0
  2995 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2996 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2997 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:       20 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    2
  3001 ;; This function calls:
  3002 ;;		___awdiv
  3003 ;;		_int_2_char
  3004 ;;		i2_lcd_write_cmd
  3005 ;;		i2_lcd_write_data
  3006 ;; This function is called by:
  3007 ;;		Interrupt level 2
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	intcode
  3012  001008                     __pintcode:
  3013                           	opt stack 0
  3014  001008                     _ISR_Timer0_Int:
  3015                           	opt stack 25
  3016                           
  3017                           ;incstack = 0
  3018  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3019  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3020  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3021  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3022                           pclatu	equ	0xFFB
  3023                           pclath	equ	0xFFA
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           intcon	equ	0xFF2
  3031                           intcon2	equ	0xFF1
  3032                           postinc0	equ	0xFEE
  3033                           wreg	equ	0xFE8
  3034                           postdec1	equ	0xFE5
  3035                           plusw1	equ	0xFE3
  3036                           fsr1l	equ	0xFE1
  3037                           indf2	equ	0xFDF
  3038                           postinc2	equ	0xFDE
  3039                           plusw2	equ	0xFDB
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044                           	psect	intcode_body
  3045  00102E                     __pintcode_body:
  3046                           	opt stack 25
  3047  00102E                     int_func:
  3048                           	opt stack 25
  3049  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3050  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3051  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3052  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3053  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3054  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3055  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3056  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3057  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3058  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3059  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3060  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3061  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3062                           
  3063                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3064                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  3065  001060  A4F2               	btfss	intcon,2,c	;volatile
  3066  001062  D085               	goto	i2l132
  3067                           
  3068                           ;Main.c: 59: {
  3069                           ;Main.c: 63: second = second + 1;
  3070  001064  2841               	incf	_second,w,c
  3071  001066  6E41               	movwf	_second,c
  3072                           
  3073                           ;Main.c: 64: if ( second > 59 )
  3074  001068  0E3B               	movlw	59
  3075  00106A  6441               	cpfsgt	_second,c
  3076  00106C  D010               	goto	i2l1875
  3077                           
  3078                           ;Main.c: 65: {
  3079                           ;Main.c: 66: second = 0;
  3080  00106E  0E00               	movlw	0
  3081  001070  6E41               	movwf	_second,c
  3082                           
  3083                           ;Main.c: 67: minute = minute + 1;
  3084  001072  283D               	incf	_minute,w,c
  3085  001074  6E3D               	movwf	_minute,c
  3086                           
  3087                           ;Main.c: 68: if ( minute > 59 )
  3088  001076  0E3B               	movlw	59
  3089  001078  643D               	cpfsgt	_minute,c
  3090  00107A  D009               	goto	i2l1875
  3091                           
  3092                           ;Main.c: 69: {
  3093                           ;Main.c: 70: minute = 0;
  3094  00107C  0E00               	movlw	0
  3095  00107E  6E3D               	movwf	_minute,c
  3096                           
  3097                           ;Main.c: 71: hour = hour + 1;
  3098  001080  2839               	incf	_hour,w,c
  3099  001082  6E39               	movwf	_hour,c
  3100                           
  3101                           ;Main.c: 72: if ( hour > 23 )
  3102  001084  0E17               	movlw	23
  3103  001086  6439               	cpfsgt	_hour,c
  3104  001088  D002               	goto	i2l1875
  3105                           
  3106                           ;Main.c: 73: hour = 0;
  3107  00108A  0E00               	movlw	0
  3108  00108C  6E39               	movwf	_hour,c
  3109  00108E                     i2l1875:
  3110                           
  3111                           ;Main.c: 74: }
  3112                           ;Main.c: 75: }
  3113                           ;Main.c: 77: hour10 = hour / 10;
  3114  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3115  001092  6A02               	clrf	___awdiv@dividend+1,c
  3116  001094  0E00               	movlw	0
  3117  001096  6E04               	movwf	___awdiv@divisor+1,c
  3118  001098  0E0A               	movlw	10
  3119  00109A  6E03               	movwf	___awdiv@divisor,c
  3120  00109C  ECD5  F00B         	call	___awdiv	;wreg free
  3121  0010A0  5001               	movf	?___awdiv,w,c
  3122  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3123                           
  3124                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3125  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3126  0010A6  0D0A               	mullw	10
  3127  0010A8  50F3               	movf	prodl,w,c
  3128  0010AA  0800               	sublw	0
  3129  0010AC  2439               	addwf	_hour,w,c
  3130  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3131                           
  3132                           ;Main.c: 80: minute10 = minute / 10;
  3133  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3134  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3135  0010B6  0E00               	movlw	0
  3136  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3137  0010BA  0E0A               	movlw	10
  3138  0010BC  6E03               	movwf	___awdiv@divisor,c
  3139  0010BE  ECD5  F00B         	call	___awdiv	;wreg free
  3140  0010C2  5001               	movf	?___awdiv,w,c
  3141  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3142                           
  3143                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3144  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3145  0010C8  0D0A               	mullw	10
  3146  0010CA  50F3               	movf	prodl,w,c
  3147  0010CC  0800               	sublw	0
  3148  0010CE  243D               	addwf	_minute,w,c
  3149  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3150                           
  3151                           ;Main.c: 83: second10 = second / 10;
  3152  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3153  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3154  0010D8  0E00               	movlw	0
  3155  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3156  0010DC  0E0A               	movlw	10
  3157  0010DE  6E03               	movwf	___awdiv@divisor,c
  3158  0010E0  ECD5  F00B         	call	___awdiv	;wreg free
  3159  0010E4  5001               	movf	?___awdiv,w,c
  3160  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3161                           
  3162                           ;Main.c: 84: second1 = second - second10 * 10;
  3163  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3164  0010EA  0D0A               	mullw	10
  3165  0010EC  50F3               	movf	prodl,w,c
  3166  0010EE  0800               	sublw	0
  3167  0010F0  2441               	addwf	_second,w,c
  3168  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3169                           
  3170                           ;Main.c: 86: lcd_write_cmd(0x80);
  3171  0010F4  0E80               	movlw	128
  3172  0010F6  ECFC  F00C         	call	i2_lcd_write_cmd
  3173                           
  3174                           ;Main.c: 87: lcd_write_data('t');
  3175  0010FA  0E74               	movlw	116
  3176  0010FC  EC8B  F00B         	call	i2_lcd_write_data
  3177                           
  3178                           ;Main.c: 88: lcd_write_data('i');
  3179  001100  0E69               	movlw	105
  3180  001102  EC8B  F00B         	call	i2_lcd_write_data
  3181                           
  3182                           ;Main.c: 89: lcd_write_data('m');
  3183  001106  0E6D               	movlw	109
  3184  001108  EC8B  F00B         	call	i2_lcd_write_data
  3185                           
  3186                           ;Main.c: 90: lcd_write_data('e');
  3187  00110C  0E65               	movlw	101
  3188  00110E  EC8B  F00B         	call	i2_lcd_write_data
  3189                           
  3190                           ;Main.c: 91: lcd_write_data(' ');
  3191  001112  0E20               	movlw	32
  3192  001114  EC8B  F00B         	call	i2_lcd_write_data
  3193                           
  3194                           ;Main.c: 92: lcd_write_data('=');
  3195  001118  0E3D               	movlw	61
  3196  00111A  EC8B  F00B         	call	i2_lcd_write_data
  3197                           
  3198                           ;Main.c: 93: lcd_write_data(' ');
  3199  00111E  0E20               	movlw	32
  3200  001120  EC8B  F00B         	call	i2_lcd_write_data
  3201                           
  3202                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3203  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3204  001126  EC17  F00C         	call	_int_2_char
  3205  00112A  EC8B  F00B         	call	i2_lcd_write_data
  3206                           
  3207                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3208  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3209  001130  EC17  F00C         	call	_int_2_char
  3210  001134  EC8B  F00B         	call	i2_lcd_write_data
  3211                           
  3212                           ;Main.c: 96: lcd_write_data(':');
  3213  001138  0E3A               	movlw	58
  3214  00113A  EC8B  F00B         	call	i2_lcd_write_data
  3215                           
  3216                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3217  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3218  001140  EC17  F00C         	call	_int_2_char
  3219  001144  EC8B  F00B         	call	i2_lcd_write_data
  3220                           
  3221                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3222  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3223  00114A  EC17  F00C         	call	_int_2_char
  3224  00114E  EC8B  F00B         	call	i2_lcd_write_data
  3225                           
  3226                           ;Main.c: 99: lcd_write_data(':');
  3227  001152  0E3A               	movlw	58
  3228  001154  EC8B  F00B         	call	i2_lcd_write_data
  3229                           
  3230                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3231  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3232  00115A  EC17  F00C         	call	_int_2_char
  3233  00115E  EC8B  F00B         	call	i2_lcd_write_data
  3234                           
  3235                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3236  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3237  001164  EC17  F00C         	call	_int_2_char
  3238  001168  EC8B  F00B         	call	i2_lcd_write_data
  3239                           
  3240                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3241  00116C  94F2               	bcf	intcon,2,c	;volatile
  3242  00116E                     i2l132:
  3243  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3244  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3245  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3246  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3247  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3248  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3249  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3250  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3251  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3252  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3253  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3254  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3255  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3256  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3257  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3258  0011A8  0011               	retfie		f
  3259  0011AA                     __end_of_ISR_Timer0_Int:
  3260                           	opt stack 0
  3261                           pclatu	equ	0xFFB
  3262                           pclath	equ	0xFFA
  3263                           tblptru	equ	0xFF8
  3264                           tblptrh	equ	0xFF7
  3265                           tblptrl	equ	0xFF6
  3266                           tablat	equ	0xFF5
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           intcon	equ	0xFF2
  3270                           intcon2	equ	0xFF1
  3271                           postinc0	equ	0xFEE
  3272                           fsr0h	equ	0xFEA
  3273                           fsr0l	equ	0xFE9
  3274                           wreg	equ	0xFE8
  3275                           postdec1	equ	0xFE5
  3276                           plusw1	equ	0xFE3
  3277                           fsr1h	equ	0xFE2
  3278                           fsr1l	equ	0xFE1
  3279                           indf2	equ	0xFDF
  3280                           postinc2	equ	0xFDE
  3281                           plusw2	equ	0xFDB
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           status	equ	0xFD8
  3285                           
  3286 ;; *************** function i2_lcd_write_data *****************
  3287 ;; Defined at:
  3288 ;;		line 43 in file "lcd_utilities.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  data            1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  data            1    2[COMRAM] unsigned char 
  3293 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3305 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3306 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        3 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    1
  3310 ;; This function calls:
  3311 ;;		i2_lcd_strobe
  3312 ;; This function is called by:
  3313 ;;		_ISR_Timer0_Int
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text15
  3318  001716                     __ptext15:
  3319                           	opt stack 0
  3320  001716                     i2_lcd_write_data:
  3321                           	opt stack 25
  3322                           
  3323                           ;incstack = 0
  3324                           ;i2lcd_write_data@data stored from wreg
  3325  001716  6E03               	movwf	i2lcd_write_data@data,c
  3326                           
  3327                           ;lcd_utilities.c: 45: char temp1;
  3328                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3329  001718  8C83               	bsf	3971,6,c	;volatile
  3330                           
  3331                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3332  00171A  0E3F               	movlw	63
  3333  00171C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3334  00171E  0E55               	movlw	85
  3335  001720                     i2u138_47:
  3336  001720  2EE8               	decfsz	wreg,f,c
  3337  001722  D7FE               	goto	i2u138_47
  3338  001724  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3339  001726  D7FC               	goto	i2u138_47
  3340  001728  F000               	nop	
  3341                           
  3342                           ;lcd_utilities.c: 50: temp1 = data;
  3343  00172A  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3344                           
  3345                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3346  00172E  3804               	swapf	i2lcd_write_data@temp1,w,c
  3347  001730  0B0F               	andlw	15
  3348  001732  6E04               	movwf	i2lcd_write_data@temp1,c
  3349                           
  3350                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3351  001734  5004               	movf	i2lcd_write_data@temp1,w,c
  3352  001736  0B0F               	andlw	15
  3353  001738  6E83               	movwf	3971,c	;volatile
  3354                           
  3355                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3356  00173A  0E7D               	movlw	125
  3357  00173C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3358  00173E  0EAC               	movlw	172
  3359  001740                     i2u139_47:
  3360  001740  2EE8               	decfsz	wreg,f,c
  3361  001742  D7FE               	goto	i2u139_47
  3362  001744  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3363  001746  D7FC               	goto	i2u139_47
  3364                           
  3365                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3366  001748  8C83               	bsf	3971,6,c	;volatile
  3367                           
  3368                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3369  00174A  0E7D               	movlw	125
  3370  00174C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3371  00174E  0EAC               	movlw	172
  3372  001750                     i2u140_47:
  3373  001750  2EE8               	decfsz	wreg,f,c
  3374  001752  D7FE               	goto	i2u140_47
  3375  001754  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3376  001756  D7FC               	goto	i2u140_47
  3377                           
  3378                           ;lcd_utilities.c: 57: lcd_strobe();
  3379  001758  ECFC  F00D         	call	i2_lcd_strobe	;wreg free
  3380                           
  3381                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3382  00175C  0E7D               	movlw	125
  3383  00175E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3384  001760  0EAC               	movlw	172
  3385  001762                     i2u141_47:
  3386  001762  2EE8               	decfsz	wreg,f,c
  3387  001764  D7FE               	goto	i2u141_47
  3388  001766  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3389  001768  D7FC               	goto	i2u141_47
  3390                           
  3391                           ;lcd_utilities.c: 60: temp1 = data;
  3392  00176A  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3393                           
  3394                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3395  00176E  5004               	movf	i2lcd_write_data@temp1,w,c
  3396  001770  0B0F               	andlw	15
  3397  001772  6E83               	movwf	3971,c	;volatile
  3398                           
  3399                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3400  001774  0E7D               	movlw	125
  3401  001776  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3402  001778  0EAC               	movlw	172
  3403  00177A                     i2u142_47:
  3404  00177A  2EE8               	decfsz	wreg,f,c
  3405  00177C  D7FE               	goto	i2u142_47
  3406  00177E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3407  001780  D7FC               	goto	i2u142_47
  3408                           
  3409                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3410  001782  8C83               	bsf	3971,6,c	;volatile
  3411                           
  3412                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3413  001784  0E9C               	movlw	156
  3414  001786  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3415  001788  0ED7               	movlw	215
  3416  00178A                     i2u143_47:
  3417  00178A  2EE8               	decfsz	wreg,f,c
  3418  00178C  D7FE               	goto	i2u143_47
  3419  00178E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3420  001790  D7FC               	goto	i2u143_47
  3421  001792  F000               	nop	
  3422                           
  3423                           ;lcd_utilities.c: 66: lcd_strobe();
  3424  001794  ECFC  F00D         	call	i2_lcd_strobe	;wreg free
  3425                           
  3426                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3427  001798  0E9C               	movlw	156
  3428  00179A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3429  00179C  0ED7               	movlw	215
  3430  00179E                     i2u144_47:
  3431  00179E  2EE8               	decfsz	wreg,f,c
  3432  0017A0  D7FE               	goto	i2u144_47
  3433  0017A2  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3434  0017A4  D7FC               	goto	i2u144_47
  3435  0017A6  F000               	nop	
  3436  0017A8  0012               	return		;funcret
  3437  0017AA                     __end_ofi2_lcd_write_data:
  3438                           	opt stack 0
  3439                           pclatu	equ	0xFFB
  3440                           pclath	equ	0xFFA
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           intcon	equ	0xFF2
  3448                           intcon2	equ	0xFF1
  3449                           postinc0	equ	0xFEE
  3450                           fsr0h	equ	0xFEA
  3451                           fsr0l	equ	0xFE9
  3452                           wreg	equ	0xFE8
  3453                           postdec1	equ	0xFE5
  3454                           plusw1	equ	0xFE3
  3455                           fsr1h	equ	0xFE2
  3456                           fsr1l	equ	0xFE1
  3457                           indf2	equ	0xFDF
  3458                           postinc2	equ	0xFDE
  3459                           plusw2	equ	0xFDB
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function i2_lcd_write_cmd *****************
  3465 ;; Defined at:
  3466 ;;		line 18 in file "lcd_utilities.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  cmd             1    wreg     unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  cmd             1    2[COMRAM] unsigned char 
  3471 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;		None               void
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0
  3482 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3483 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3484 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        3 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    1
  3488 ;; This function calls:
  3489 ;;		i2_lcd_strobe
  3490 ;; This function is called by:
  3491 ;;		_ISR_Timer0_Int
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text16
  3496  0019F8                     __ptext16:
  3497                           	opt stack 0
  3498  0019F8                     i2_lcd_write_cmd:
  3499                           	opt stack 25
  3500                           
  3501                           ;incstack = 0
  3502                           ;i2lcd_write_cmd@cmd stored from wreg
  3503  0019F8  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3504                           
  3505                           ;lcd_utilities.c: 20: unsigned char temp2;
  3506                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3507  0019FA  9C83               	bcf	3971,6,c	;volatile
  3508                           
  3509                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3510  0019FC  0E3F               	movlw	63
  3511  0019FE  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3512  001A00  0E55               	movlw	85
  3513  001A02                     i2u145_47:
  3514  001A02  2EE8               	decfsz	wreg,f,c
  3515  001A04  D7FE               	goto	i2u145_47
  3516  001A06  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3517  001A08  D7FC               	goto	i2u145_47
  3518  001A0A  F000               	nop	
  3519                           
  3520                           ;lcd_utilities.c: 23: temp2 = cmd;
  3521  001A0C  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3522                           
  3523                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3524  001A10  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3525  001A12  0B0F               	andlw	15
  3526  001A14  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3527                           
  3528                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3529  001A16  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3530  001A18  0B0F               	andlw	15
  3531  001A1A  6E83               	movwf	3971,c	;volatile
  3532                           
  3533                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3534  001A1C  0E7D               	movlw	125
  3535  001A1E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3536  001A20  0EAC               	movlw	172
  3537  001A22                     i2u146_47:
  3538  001A22  2EE8               	decfsz	wreg,f,c
  3539  001A24  D7FE               	goto	i2u146_47
  3540  001A26  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3541  001A28  D7FC               	goto	i2u146_47
  3542                           
  3543                           ;lcd_utilities.c: 28: lcd_strobe();
  3544  001A2A  ECFC  F00D         	call	i2_lcd_strobe	;wreg free
  3545                           
  3546                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3547  001A2E  0E7D               	movlw	125
  3548  001A30  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3549  001A32  0EAC               	movlw	172
  3550  001A34                     i2u147_47:
  3551  001A34  2EE8               	decfsz	wreg,f,c
  3552  001A36  D7FE               	goto	i2u147_47
  3553  001A38  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3554  001A3A  D7FC               	goto	i2u147_47
  3555                           
  3556                           ;lcd_utilities.c: 32: temp2 = cmd;
  3557  001A3C  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3558                           
  3559                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3560  001A40  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3561  001A42  0B0F               	andlw	15
  3562  001A44  6E83               	movwf	3971,c	;volatile
  3563                           
  3564                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3565  001A46  0E7D               	movlw	125
  3566  001A48  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3567  001A4A  0EAC               	movlw	172
  3568  001A4C                     i2u148_47:
  3569  001A4C  2EE8               	decfsz	wreg,f,c
  3570  001A4E  D7FE               	goto	i2u148_47
  3571  001A50  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3572  001A52  D7FC               	goto	i2u148_47
  3573                           
  3574                           ;lcd_utilities.c: 36: lcd_strobe();
  3575  001A54  ECFC  F00D         	call	i2_lcd_strobe	;wreg free
  3576                           
  3577                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3578  001A58  0E7D               	movlw	125
  3579  001A5A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3580  001A5C  0EAC               	movlw	172
  3581  001A5E                     i2u149_47:
  3582  001A5E  2EE8               	decfsz	wreg,f,c
  3583  001A60  D7FE               	goto	i2u149_47
  3584  001A62  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3585  001A64  D7FC               	goto	i2u149_47
  3586  001A66  0012               	return		;funcret
  3587  001A68                     __end_ofi2_lcd_write_cmd:
  3588                           	opt stack 0
  3589                           pclatu	equ	0xFFB
  3590                           pclath	equ	0xFFA
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           intcon2	equ	0xFF1
  3599                           postinc0	equ	0xFEE
  3600                           fsr0h	equ	0xFEA
  3601                           fsr0l	equ	0xFE9
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           plusw1	equ	0xFE3
  3605                           fsr1h	equ	0xFE2
  3606                           fsr1l	equ	0xFE1
  3607                           indf2	equ	0xFDF
  3608                           postinc2	equ	0xFDE
  3609                           plusw2	equ	0xFDB
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           
  3614 ;; *************** function i2_lcd_strobe *****************
  3615 ;; Defined at:
  3616 ;;		line 73 in file "lcd_utilities.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		wreg
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3632 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3633 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3634 ;;Total ram usage:        1 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		i2_lcd_write_cmd
  3640 ;;		i2_lcd_write_data
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text17
  3645  001BF8                     __ptext17:
  3646                           	opt stack 0
  3647  001BF8                     i2_lcd_strobe:
  3648                           	opt stack 25
  3649                           
  3650                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3651                           
  3652                           ;incstack = 0
  3653  001BF8  8883               	bsf	3971,4,c	;volatile
  3654                           
  3655                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3656  001BFA  0E7D               	movlw	125
  3657  001BFC  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3658  001BFE  0EAC               	movlw	172
  3659  001C00                     i2u150_47:
  3660  001C00  2EE8               	decfsz	wreg,f,c
  3661  001C02  D7FE               	goto	i2u150_47
  3662  001C04  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3663  001C06  D7FC               	goto	i2u150_47
  3664                           
  3665                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3666  001C08  9883               	bcf	3971,4,c	;volatile
  3667                           
  3668                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3669  001C0A  0E7D               	movlw	125
  3670  001C0C  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3671  001C0E  0EAC               	movlw	172
  3672  001C10                     i2u151_47:
  3673  001C10  2EE8               	decfsz	wreg,f,c
  3674  001C12  D7FE               	goto	i2u151_47
  3675  001C14  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3676  001C16  D7FC               	goto	i2u151_47
  3677  001C18  0012               	return		;funcret
  3678  001C1A                     __end_ofi2_lcd_strobe:
  3679                           	opt stack 0
  3680                           pclatu	equ	0xFFB
  3681                           pclath	equ	0xFFA
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           intcon2	equ	0xFF1
  3690                           postinc0	equ	0xFEE
  3691                           fsr0h	equ	0xFEA
  3692                           fsr0l	equ	0xFE9
  3693                           wreg	equ	0xFE8
  3694                           postdec1	equ	0xFE5
  3695                           plusw1	equ	0xFE3
  3696                           fsr1h	equ	0xFE2
  3697                           fsr1l	equ	0xFE1
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           plusw2	equ	0xFDB
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _int_2_char *****************
  3706 ;; Defined at:
  3707 ;;		line 15 in file "Main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  int1            1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  int1            1    0[COMRAM] unsigned char 
  3712 ;;  char1           1    1[COMRAM] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      unsigned char 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0
  3723 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3725 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3726 ;;Total ram usage:        2 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_ISR_Timer0_Int
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text18
  3736  00182E                     __ptext18:
  3737                           	opt stack 0
  3738  00182E                     _int_2_char:
  3739                           	opt stack 26
  3740                           
  3741                           ;incstack = 0
  3742                           ;int_2_char@int1 stored from wreg
  3743  00182E  6E01               	movwf	int_2_char@int1,c
  3744                           
  3745                           ;Main.c: 17: char char1;
  3746                           ;Main.c: 18: switch (int1)
  3747  001830  D017               	goto	i2l965
  3748  001832                     i2l943:
  3749  001832  0E30               	movlw	48
  3750  001834  D013               	goto	L22
  3751  001836                     i2l945:
  3752  001836  0E31               	movlw	49
  3753  001838  D011               	goto	L22
  3754  00183A                     i2l947:
  3755  00183A  0E32               	movlw	50
  3756  00183C  D00F               	goto	L22
  3757  00183E                     i2l949:
  3758  00183E  0E33               	movlw	51
  3759  001840  D00D               	goto	L22
  3760  001842                     i2l951:
  3761  001842  0E34               	movlw	52
  3762  001844  D00B               	goto	L22
  3763  001846                     i2l953:
  3764  001846  0E35               	movlw	53
  3765  001848  D009               	goto	L22
  3766  00184A                     i2l955:
  3767  00184A  0E36               	movlw	54
  3768  00184C  D007               	goto	L22
  3769  00184E                     i2l957:
  3770  00184E  0E37               	movlw	55
  3771  001850  D005               	goto	L22
  3772  001852                     i2l959:
  3773  001852  0E38               	movlw	56
  3774  001854  D003               	goto	L22
  3775  001856                     i2l961:
  3776  001856  0E39               	movlw	57
  3777  001858  D001               	goto	L22
  3778  00185A                     i2l963:
  3779  00185A  0E3F               	movlw	63
  3780  00185C                     L22:
  3781  00185C  6E02               	movwf	int_2_char@char1,c
  3782                           
  3783                           ;Main.c: 31: }
  3784  00185E  D020               	goto	i2l98
  3785  001860                     i2l965:
  3786  001860  5001               	movf	int_2_char@int1,w,c
  3787                           
  3788                           ; Switch size 1, requested type "space"
  3789                           ; Number of cases is 10, Range of values is 0 to 9
  3790                           ; switch strategies available:
  3791                           ; Name         Instructions Cycles
  3792                           ; simple_byte           31    16 (average)
  3793                           ;	Chosen strategy is simple_byte
  3794  001862  0A00               	xorlw	0	; case 0
  3795  001864  B4D8               	btfsc	status,2,c
  3796  001866  D7E5               	goto	i2l943
  3797  001868  0A01               	xorlw	1	; case 1
  3798  00186A  B4D8               	btfsc	status,2,c
  3799  00186C  D7E4               	goto	i2l945
  3800  00186E  0A03               	xorlw	3	; case 2
  3801  001870  B4D8               	btfsc	status,2,c
  3802  001872  D7E3               	goto	i2l947
  3803  001874  0A01               	xorlw	1	; case 3
  3804  001876  B4D8               	btfsc	status,2,c
  3805  001878  D7E2               	goto	i2l949
  3806  00187A  0A07               	xorlw	7	; case 4
  3807  00187C  B4D8               	btfsc	status,2,c
  3808  00187E  D7E1               	goto	i2l951
  3809  001880  0A01               	xorlw	1	; case 5
  3810  001882  B4D8               	btfsc	status,2,c
  3811  001884  D7E0               	goto	i2l953
  3812  001886  0A03               	xorlw	3	; case 6
  3813  001888  B4D8               	btfsc	status,2,c
  3814  00188A  D7DF               	goto	i2l955
  3815  00188C  0A01               	xorlw	1	; case 7
  3816  00188E  B4D8               	btfsc	status,2,c
  3817  001890  D7DE               	goto	i2l957
  3818  001892  0A0F               	xorlw	15	; case 8
  3819  001894  B4D8               	btfsc	status,2,c
  3820  001896  D7DD               	goto	i2l959
  3821  001898  0A01               	xorlw	1	; case 9
  3822  00189A  B4D8               	btfsc	status,2,c
  3823  00189C  D7DC               	goto	i2l961
  3824  00189E  D7DD               	goto	i2l963
  3825  0018A0                     i2l98:
  3826                           
  3827                           ;Main.c: 32: return(char1);
  3828  0018A0  5002               	movf	int_2_char@char1,w,c
  3829  0018A2  0012               	return		;funcret
  3830  0018A4                     __end_of_int_2_char:
  3831                           	opt stack 0
  3832                           pclatu	equ	0xFFB
  3833                           pclath	equ	0xFFA
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           intcon	equ	0xFF2
  3841                           intcon2	equ	0xFF1
  3842                           postinc0	equ	0xFEE
  3843                           fsr0h	equ	0xFEA
  3844                           fsr0l	equ	0xFE9
  3845                           wreg	equ	0xFE8
  3846                           postdec1	equ	0xFE5
  3847                           plusw1	equ	0xFE3
  3848                           fsr1h	equ	0xFE2
  3849                           fsr1l	equ	0xFE1
  3850                           indf2	equ	0xFDF
  3851                           postinc2	equ	0xFDE
  3852                           plusw2	equ	0xFDB
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function ___awdiv *****************
  3858 ;; Defined at:
  3859 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  dividend        2    0[COMRAM] int 
  3862 ;;  divisor         2    2[COMRAM] int 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  quotient        2    6[COMRAM] int 
  3865 ;;  sign            1    5[COMRAM] unsigned char 
  3866 ;;  counter         1    4[COMRAM] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2    0[COMRAM] int 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3876 ;;      Params:         4       0       0       0       0       0       0       0       0
  3877 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3879 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3880 ;;Total ram usage:        8 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_ISR_Timer0_Int
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text19
  3890  0017AA                     __ptext19:
  3891                           	opt stack 0
  3892  0017AA                     ___awdiv:
  3893                           	opt stack 26
  3894                           
  3895                           ;incstack = 0
  3896  0017AA  0E00               	movlw	0
  3897  0017AC  6E06               	movwf	___awdiv@sign,c
  3898  0017AE  AE04               	btfss	___awdiv@divisor+1,7,c
  3899  0017B0  D006               	goto	i2l1761
  3900  0017B2  6C03               	negf	___awdiv@divisor,c
  3901  0017B4  1E04               	comf	___awdiv@divisor+1,f,c
  3902  0017B6  B0D8               	btfsc	status,0,c
  3903  0017B8  2A04               	incf	___awdiv@divisor+1,f,c
  3904  0017BA  0E01               	movlw	1
  3905  0017BC  6E06               	movwf	___awdiv@sign,c
  3906  0017BE                     i2l1761:
  3907  0017BE  AE02               	btfss	___awdiv@dividend+1,7,c
  3908  0017C0  D006               	goto	i2l1767
  3909  0017C2  6C01               	negf	___awdiv@dividend,c
  3910  0017C4  1E02               	comf	___awdiv@dividend+1,f,c
  3911  0017C6  B0D8               	btfsc	status,0,c
  3912  0017C8  2A02               	incf	___awdiv@dividend+1,f,c
  3913  0017CA  0E01               	movlw	1
  3914  0017CC  1A06               	xorwf	___awdiv@sign,f,c
  3915  0017CE                     i2l1767:
  3916  0017CE  0E00               	movlw	0
  3917  0017D0  6E08               	movwf	___awdiv@quotient+1,c
  3918  0017D2  0E00               	movlw	0
  3919  0017D4  6E07               	movwf	___awdiv@quotient,c
  3920  0017D6  5003               	movf	___awdiv@divisor,w,c
  3921  0017D8  1004               	iorwf	___awdiv@divisor+1,w,c
  3922  0017DA  B4D8               	btfsc	status,2,c
  3923  0017DC  D01C               	goto	i2l1789
  3924  0017DE  0E01               	movlw	1
  3925  0017E0  6E05               	movwf	___awdiv@counter,c
  3926  0017E2  D004               	goto	i2l1775
  3927  0017E4                     i2l1773:
  3928  0017E4  90D8               	bcf	status,0,c
  3929  0017E6  3603               	rlcf	___awdiv@divisor,f,c
  3930  0017E8  3604               	rlcf	___awdiv@divisor+1,f,c
  3931  0017EA  2A05               	incf	___awdiv@counter,f,c
  3932  0017EC                     i2l1775:
  3933  0017EC  AE04               	btfss	___awdiv@divisor+1,7,c
  3934  0017EE  D7FA               	goto	i2l1773
  3935  0017F0                     i2l1777:
  3936  0017F0  90D8               	bcf	status,0,c
  3937  0017F2  3607               	rlcf	___awdiv@quotient,f,c
  3938  0017F4  3608               	rlcf	___awdiv@quotient+1,f,c
  3939  0017F6  5003               	movf	___awdiv@divisor,w,c
  3940  0017F8  5C01               	subwf	___awdiv@dividend,w,c
  3941  0017FA  5004               	movf	___awdiv@divisor+1,w,c
  3942  0017FC  5802               	subwfb	___awdiv@dividend+1,w,c
  3943  0017FE  A0D8               	btfss	status,0,c
  3944  001800  D005               	goto	i2l1785
  3945  001802  5003               	movf	___awdiv@divisor,w,c
  3946  001804  5E01               	subwf	___awdiv@dividend,f,c
  3947  001806  5004               	movf	___awdiv@divisor+1,w,c
  3948  001808  5A02               	subwfb	___awdiv@dividend+1,f,c
  3949  00180A  8007               	bsf	___awdiv@quotient,0,c
  3950  00180C                     i2l1785:
  3951  00180C  90D8               	bcf	status,0,c
  3952  00180E  3204               	rrcf	___awdiv@divisor+1,f,c
  3953  001810  3203               	rrcf	___awdiv@divisor,f,c
  3954  001812  2E05               	decfsz	___awdiv@counter,f,c
  3955  001814  D7ED               	goto	i2l1777
  3956  001816                     i2l1789:
  3957  001816  5006               	movf	___awdiv@sign,w,c
  3958  001818  B4D8               	btfsc	status,2,c
  3959  00181A  D004               	goto	i2l1793
  3960  00181C  6C07               	negf	___awdiv@quotient,c
  3961  00181E  1E08               	comf	___awdiv@quotient+1,f,c
  3962  001820  B0D8               	btfsc	status,0,c
  3963  001822  2A08               	incf	___awdiv@quotient+1,f,c
  3964  001824                     i2l1793:
  3965  001824  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3966  001828  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3967  00182C  0012               	return	
  3968  00182E                     __end_of___awdiv:
  3969                           	opt stack 0
  3970                           pclatu	equ	0xFFB
  3971                           pclath	equ	0xFFA
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodh	equ	0xFF4
  3977                           prodl	equ	0xFF3
  3978                           intcon	equ	0xFF2
  3979                           intcon2	equ	0xFF1
  3980                           postinc0	equ	0xFEE
  3981                           fsr0h	equ	0xFEA
  3982                           fsr0l	equ	0xFE9
  3983                           wreg	equ	0xFE8
  3984                           postdec1	equ	0xFE5
  3985                           plusw1	equ	0xFE3
  3986                           fsr1h	equ	0xFE2
  3987                           fsr1l	equ	0xFE1
  3988                           indf2	equ	0xFDF
  3989                           postinc2	equ	0xFDE
  3990                           plusw2	equ	0xFDB
  3991                           fsr2h	equ	0xFDA
  3992                           fsr2l	equ	0xFD9
  3993                           status	equ	0xFD8
  3994                           pclatu	equ	0xFFB
  3995                           pclath	equ	0xFFA
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           prodh	equ	0xFF4
  4001                           prodl	equ	0xFF3
  4002                           intcon	equ	0xFF2
  4003                           intcon2	equ	0xFF1
  4004                           postinc0	equ	0xFEE
  4005                           fsr0h	equ	0xFEA
  4006                           fsr0l	equ	0xFE9
  4007                           wreg	equ	0xFE8
  4008                           postdec1	equ	0xFE5
  4009                           plusw1	equ	0xFE3
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           indf2	equ	0xFDF
  4013                           postinc2	equ	0xFDE
  4014                           plusw2	equ	0xFDB
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019                           	psect	rparam
  4020  0000                     pclatu	equ	0xFFB
  4021                           pclath	equ	0xFFA
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           postinc0	equ	0xFEE
  4031                           fsr0h	equ	0xFEA
  4032                           fsr0l	equ	0xFE9
  4033                           wreg	equ	0xFE8
  4034                           postdec1	equ	0xFE5
  4035                           plusw1	equ	0xFE3
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           indf2	equ	0xFDF
  4039                           postinc2	equ	0xFDE
  4040                           plusw2	equ	0xFDB
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8
  4044                           
  4045                           	psect	temp
  4046  000042                     btemp:
  4047                           	opt stack 0
  4048  000042                     	ds	1
  4049  0000                     int$flags	set	btemp
  4050                           pclatu	equ	0xFFB
  4051                           pclath	equ	0xFFA
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           postinc0	equ	0xFEE
  4061                           fsr0h	equ	0xFEA
  4062                           fsr0l	equ	0xFE9
  4063                           wreg	equ	0xFE8
  4064                           postdec1	equ	0xFE5
  4065                           plusw1	equ	0xFE3
  4066                           fsr1h	equ	0xFE2
  4067                           fsr1l	equ	0xFE1
  4068                           indf2	equ	0xFDF
  4069                           postinc2	equ	0xFDE
  4070                           plusw2	equ	0xFDB
  4071                           fsr2h	equ	0xFDA
  4072                           fsr2l	equ	0xFD9
  4073                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     53     137
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6514
                                             49 BANK0      4     4      0
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1576
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     315
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      95
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      89       5       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      20        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Aug 15 17:45:56 2016

                        main@AlarmAOff 00E5         ??_SetupTimerInterruptRegisters 001D  
                                   l33 1B7C                                     l36 1B88  
                         ___awdiv@sign 0006                __size_of_ISR_Timer0_Int 01A2  
             __size_ofi2_lcd_write_cmd 0070                       ?_SetupAlarmTimeA 0001  
                     ?_SetupAlarmTimeB 0001                       ?_SetupAlarmTimeC 0001  
                                  l114 1984                                    l183 1BC8  
                                  l167 1622                                    u961 11B4  
                                  u890 1B72                                    u991 14DE  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4444 101B                                   l2121 11F8  
                                 l2113 11D2                                   l2211 1408  
                                 l2061 192A                                   l2053 191A  
                                 l2109 11C8                                   l2071 193E  
                                 l2063 192E                                   l2055 191E  
                                 l2207 13FE                                   l2303 1B3E  
                                 l2065 1932                                   l2057 1922  
                                 l2073 1944                                   l2067 1936  
                                 l2059 1926                                   l2219 142E  
                                 l2091 18BA                                   l2069 193A  
                                 l2165 14F6                                   l2261 1336  
                                 l2253 1310                                   l2333 1602  
                                 l2079 1BB4                                   l2095 18CA  
                                 l2351 1654                                   l2177 1526  
                                 l2169 1500                                   l2249 1306  
                                 l2099 18E0                                   l2363 167C  
                                 l2357 1668                                   l2299 1B34  
                                 u1021 13E6                                   u1051 12EE  
                                 u1217 18D0                                   u1081 1B20  
                                 u1307 1992                                   u1227 190A  
                                 u1317 19B2                                   u1237 168C  
                                 u1327 19C4                                   u1247 16AC  
                                 u1337 19DC                                   u1257 16BC  
                                 u1347 19EE                                   u1267 16CE  
                                 u1357 1BDE                                   u1277 16E6  
                                 u1367 1BEE                                   u1287 16F6  
                                 u1377 1BBA                                   u1297 170A  
                                 i2l98 18A0                 __end_of_lcd_write_data 1716  
                                 _main 15CC                                   _hour 0039  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0042  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 17AA  
                         ___param_bank 000010                                  ?_main 0001  
                      __end_of___awdiv 182E                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l132 116E                                  i2l951 1842  
                                i2l943 1832                                  i2l961 1856  
                                i2l953 1846                                  i2l945 1836  
                                i2l963 185A                                  i2l955 184A  
                                i2l947 183A                        ___awdiv@counter 0005  
                                i2l957 184E                                  i2l949 183E  
                                i2l965 1860                                  i2l959 1852  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003A                                  _hourB 003B  
                                _hourC 003C                                  main@a 00E7  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                      __end_of_version 1B64                                  status 000FD8  
                __size_ofi2_lcd_strobe 0022                           getkey@lookup 00B4  
                      __initialization 1A68                           __end_of_main 1682  
                               ??_main 0024                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                         version@F4451 0024                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1BF8                                 i2l1761 17BE  
                               i2l1773 17E4                                 i2l1775 17EC  
                               i2l1767 17CE                                 i2l1793 1824  
                               i2l1785 180C                                 i2l1777 17F0  
                               i2l1875 108E                                 i2l1789 1816  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1BD6  
                     __end_of_lcd_init 1916                         char_2_int@int1 001E  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1B64                                 clear_0 1A6E  
                     ___awdiv@quotient 0007                                 _minute 003D  
                               _second 0041                           __pdataCOMRAM 0024  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ??_version 0021  
                           __accesstop 0060                __end_of__initialization 1AB4  
                        getkey@keycode 00C6                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1AC2                             _char_2_int 1916  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1BD6               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                             _int_2_char 182E  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 17AA  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 19F8                                __pcinit 1A68  
                              __ramtop 0800                                __ptext0 15CC  
                              __ptext1 1B16                                __ptext2 18A4  
                              __ptext3 1C1A                                __ptext4 11AA  
                              __ptext5 12E4                                __ptext6 13DC  
                              __ptext7 14D4                                __ptext8 1682  
                              __ptext9 1988                              _T0CONbits 000FD5  
                       SetupTime@F4486 009F                                _minuteA 003E  
                              _minuteB 003F                                _minuteC 0040  
                           ??_delay_ms 001F                            ?_char_2_int 0001  
                              _version 1B16                             ??_lcd_init 0021  
                       __pintcode_body 102E                   end_of_initialization 1AB4  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00E4                         SetupTime@hour1 00DE  
                        __Lmediumconst 0000                                int_func 102E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                  SetupAlarmTimeA@hour10 00DD  
                            _PORTAbits 000F80                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00DD  
                SetupAlarmTimeC@hour10 00DD                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0022  
                    ??_SetupAlarmTimeB 0022                      ??_SetupAlarmTimeC 0022  
                __end_of_lcd_write_cmd 19F8                __end_ofi2_lcd_write_cmd 1A68  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1C36  
                       __end_of_getkey 1BA2                    start_initialization 1A68  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00CA                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0039  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4496 0060                   SetupAlarmTimeB@F4506 0075  
                            delay_ms@i 001D                              delay_ms@j 0020  
                 SetupAlarmTimeC@F4516 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u140_47 1750                               i2u141_47 1762  
                             i2u150_47 1C00                               i2u142_47 177A  
                             i2u151_47 1C10                               i2u143_47 178A  
                             i2u144_47 179E                               i2u145_47 1A02  
                             i2u146_47 1A22                               i2u138_47 1720  
                             i2u147_47 1A34                               i2u139_47 1740  
                             i2u148_47 1A4C                               i2u149_47 1A5E  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 1988                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 0022                    lcd_write_data@temp1 0020  
                      _SetupAlarmTimeA 14D4                        _SetupAlarmTimeB 13DC  
                      _SetupAlarmTimeC 12E4                         ??i2_lcd_strobe 0001  
                       version@Version 00B4                           ??_lcd_strobe 001D  
                     SetupTime@Message 00C7                              copy_data0 1A88  
                            copy_data1 1AA8                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 1C36  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1C1A                __size_of_lcd_write_data 0094  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                         version@outchar 00C9  
                          ??_SetupTime 0022                       SetupTime@minute1 00E0  
                     SetupTime@second1 00E2                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1BF8                       SetupTime@outchar 00DC  
                   __end_of_int_2_char 18A4                       i2_lcd_write_data 1716  
                             _delay_ms 1BA2                               __ptext10 1BD6  
                             __ptext11 1B64                               __ptext12 1BA2  
                             __ptext13 1916                               __ptext15 1716  
                             __ptext16 19F8                               __ptext17 1BF8  
                             __ptext18 182E                               __ptext19 17AA  
                             _lcd_init 18A4                       __size_of_version 004E  
                        __size_of_main 00B6          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0042                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                 __end_ofi2_lcd_strobe 1C1A                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 1682  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 1988  
