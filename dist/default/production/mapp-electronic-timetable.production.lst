

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 16 07:33:24 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001D8A                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for Startup@F4353
    47  001D8A  44                 	db	68
    48  001D8B  6F                 	db	111
    49  001D8C  6E                 	db	110
    50  001D8D  65                 	db	101
    51  001D8E  20                 	db	32
    52  001D8F  20                 	db	32
    53  001D90  20                 	db	32
    54  001D91  20                 	db	32
    55  001D92  20                 	db	32
    56  001D93  20                 	db	32
    57  001D94  20                 	db	32
    58  001D95  20                 	db	32
    59  001D96  20                 	db	32
    60  001D97  20                 	db	32
    61  001D98  20                 	db	32
    62  001D99  20                 	db	32
    63  001D9A  20                 	db	32
    64  001D9B  20                 	db	32
    65  001D9C  20                 	db	32
    66  001D9D  20                 	db	32
    67  001D9E  00                 	db	0
    68                           
    69                           	psect	idataBANK0
    70  001BF6                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for SetupAlarmTimeA@F4325
    74  001BF6  53                 	db	83
    75  001BF7  75                 	db	117
    76  001BF8  62                 	db	98
    77  001BF9  6A                 	db	106
    78  001BFA  65                 	db	101
    79  001BFB  63                 	db	99
    80  001BFC  74                 	db	116
    81  001BFD  20                 	db	32
    82  001BFE  41                 	db	65
    83  001BFF  20                 	db	32
    84  001C00  54                 	db	84
    85  001C01  69                 	db	105
    86  001C02  6D                 	db	109
    87  001C03  65                 	db	101
    88  001C04  20                 	db	32
    89  001C05  68                 	db	104
    90  001C06  68                 	db	104
    91  001C07  6D                 	db	109
    92  001C08  6D                 	db	109
    93  001C09  3A                 	db	58
    94  001C0A  00                 	db	0
    95                           
    96                           ;initializer for SetupAlarmTimeB@F4335
    97  001C0B  53                 	db	83
    98  001C0C  75                 	db	117
    99  001C0D  62                 	db	98
   100  001C0E  6A                 	db	106
   101  001C0F  65                 	db	101
   102  001C10  63                 	db	99
   103  001C11  74                 	db	116
   104  001C12  20                 	db	32
   105  001C13  42                 	db	66
   106  001C14  20                 	db	32
   107  001C15  54                 	db	84
   108  001C16  69                 	db	105
   109  001C17  6D                 	db	109
   110  001C18  65                 	db	101
   111  001C19  20                 	db	32
   112  001C1A  68                 	db	104
   113  001C1B  68                 	db	104
   114  001C1C  6D                 	db	109
   115  001C1D  6D                 	db	109
   116  001C1E  3A                 	db	58
   117  001C1F  00                 	db	0
   118                           
   119                           ;initializer for SetupAlarmTimeC@F4345
   120  001C20  53                 	db	83
   121  001C21  75                 	db	117
   122  001C22  62                 	db	98
   123  001C23  6A                 	db	106
   124  001C24  65                 	db	101
   125  001C25  63                 	db	99
   126  001C26  74                 	db	116
   127  001C27  20                 	db	32
   128  001C28  43                 	db	67
   129  001C29  20                 	db	32
   130  001C2A  54                 	db	84
   131  001C2B  69                 	db	105
   132  001C2C  6D                 	db	109
   133  001C2D  65                 	db	101
   134  001C2E  20                 	db	32
   135  001C2F  68                 	db	104
   136  001C30  68                 	db	104
   137  001C31  6D                 	db	109
   138  001C32  6D                 	db	109
   139  001C33  3A                 	db	58
   140  001C34  00                 	db	0
   141                           
   142                           ;initializer for SetupTime@F4315
   143  001C35  53                 	db	83
   144  001C36  65                 	db	101
   145  001C37  74                 	db	116
   146  001C38  20                 	db	32
   147  001C39  74                 	db	116
   148  001C3A  69                 	db	105
   149  001C3B  6D                 	db	109
   150  001C3C  65                 	db	101
   151  001C3D  20                 	db	32
   152  001C3E  68                 	db	104
   153  001C3F  68                 	db	104
   154  001C40  6D                 	db	109
   155  001C41  6D                 	db	109
   156  001C42  73                 	db	115
   157  001C43  73                 	db	115
   158  001C44  3A                 	db	58
   159  001C45  20                 	db	32
   160  001C46  20                 	db	32
   161  001C47  20                 	db	32
   162  001C48  20                 	db	32
   163  001C49  00                 	db	0
   164                           
   165                           ;initializer for Startup@F4351
   166  001C4A  53                 	db	83
   167  001C4B  79                 	db	121
   168  001C4C  73                 	db	115
   169  001C4D  74                 	db	116
   170  001C4E  65                 	db	101
   171  001C4F  6D                 	db	109
   172  001C50  20                 	db	32
   173  001C51  43                 	db	67
   174  001C52  68                 	db	104
   175  001C53  65                 	db	101
   176  001C54  63                 	db	99
   177  001C55  6B                 	db	107
   178  001C56  20                 	db	32
   179  001C57  20                 	db	32
   180  001C58  20                 	db	32
   181  001C59  20                 	db	32
   182  001C5A  20                 	db	32
   183  001C5B  20                 	db	32
   184  001C5C  20                 	db	32
   185  001C5D  20                 	db	32
   186  001C5E  00                 	db	0
   187                           
   188                           	psect	idataBANK1
   189  001D9F                     __pidataBANK1:
   190                           	opt stack 0
   191                           
   192                           ;initializer for version@F4277
   193  001D9F  45                 	db	69
   194  001DA0  54                 	db	84
   195  001DA1  54                 	db	84
   196  001DA2  20                 	db	32
   197  001DA3  56                 	db	86
   198  001DA4  65                 	db	101
   199  001DA5  72                 	db	114
   200  001DA6  73                 	db	115
   201  001DA7  69                 	db	105
   202  001DA8  6F                 	db	111
   203  001DA9  6E                 	db	110
   204  001DAA  20                 	db	32
   205  001DAB  31                 	db	49
   206  001DAC  2E                 	db	46
   207  001DAD  34                 	db	52
   208  001DAE  20                 	db	32
   209  001DAF  20                 	db	32
   210  001DB0  20                 	db	32
   211  001DB1  20                 	db	32
   212  001DB2  20                 	db	32
   213  001DB3  00                 	db	0
   214                           
   215                           	psect	smallconst
   216  00101A                     __psmallconst:
   217                           	opt stack 0
   218  00101A  00                 	db	0
   219  00101B                     getkey@F4270:
   220                           	opt stack 0
   221  00101B  31                 	db	49
   222  00101C  32                 	db	50
   223  00101D  33                 	db	51
   224  00101E  46                 	db	70
   225  00101F  34                 	db	52
   226  001020  35                 	db	53
   227  001021  36                 	db	54
   228  001022  45                 	db	69
   229  001023  37                 	db	55
   230  001024  38                 	db	56
   231  001025  39                 	db	57
   232  001026  44                 	db	68
   233  001027  41                 	db	65
   234  001028  30                 	db	48
   235  001029  42                 	db	66
   236  00102A  43                 	db	67
   237  00102B  20                 	db	32
   238  00102C  00                 	db	0
   239  00102D                     __end_ofgetkey@F4270:
   240                           	opt stack 0
   241  0000                     _ADCON1	set	4033
   242  0000                     _CMCON	set	4020
   243  0000                     _INTCON2	set	4081
   244  0000                     _INTCONbits	set	4082
   245  0000                     _PORTA	set	3968
   246  0000                     _PORTAbits	set	3968
   247  0000                     _PORTB	set	3969
   248  0000                     _PORTBbits	set	3969
   249  0000                     _PORTD	set	3971
   250  0000                     _PORTDbits	set	3971
   251  0000                     _RCONbits	set	4048
   252  0000                     _T0CON	set	4053
   253  0000                     _T0CONbits	set	4053
   254  0000                     _TMR0H	set	4055
   255  0000                     _TMR0L	set	4054
   256  0000                     _TRISA	set	3986
   257  0000                     _TRISD	set	3989
   258  00102D  00                 	db	0	; dummy byte at the end
   259  0000                     
   260                           ; #config settings
   261                           
   262                           	psect	cinit
   263  0019AA                     __pcinit:
   264                           	opt stack 0
   265  0019AA                     start_initialization:
   266                           	opt stack 0
   267  0019AA                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Initialize objects allocated to BANK1 (21 bytes)
   271                           ; load TBLPTR registers with __pidataBANK1
   272  0019AA  0E9F               	movlw	low __pidataBANK1
   273  0019AC  6EF6               	movwf	tblptrl,c
   274  0019AE  0E1D               	movlw	high __pidataBANK1
   275  0019B0  6EF7               	movwf	tblptrh,c
   276  0019B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   277  0019B4  6EF8               	movwf	tblptru,c
   278  0019B6  EE01  F000         	lfsr	0,__pdataBANK1
   279  0019BA  EE10 F015          	lfsr	1,21
   280  0019BE                     copy_data0:
   281  0019BE  0009               	tblrd		*+
   282  0019C0  CFF5 FFEE          	movff	tablat,postinc0
   283  0019C4  50E5               	movf	postdec1,w,c
   284  0019C6  50E1               	movf	fsr1l,w,c
   285  0019C8  E1FA               	bnz	copy_data0
   286                           
   287                           ; Initialize objects allocated to BANK0 (105 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289  0019CA  0EF6               	movlw	low __pidataBANK0
   290  0019CC  6EF6               	movwf	tblptrl,c
   291  0019CE  0E1B               	movlw	high __pidataBANK0
   292  0019D0  6EF7               	movwf	tblptrh,c
   293  0019D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294  0019D4  6EF8               	movwf	tblptru,c
   295  0019D6  EE00  F060         	lfsr	0,__pdataBANK0
   296  0019DA  EE10 F069          	lfsr	1,105
   297  0019DE                     copy_data1:
   298  0019DE  0009               	tblrd		*+
   299  0019E0  CFF5 FFEE          	movff	tablat,postinc0
   300  0019E4  50E5               	movf	postdec1,w,c
   301  0019E6  50E1               	movf	fsr1l,w,c
   302  0019E8  E1FA               	bnz	copy_data1
   303                           
   304                           ; Initialize objects allocated to COMRAM (21 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306  0019EA  0E8A               	movlw	low __pidataCOMRAM
   307  0019EC  6EF6               	movwf	tblptrl,c
   308  0019EE  0E1D               	movlw	high __pidataCOMRAM
   309  0019F0  6EF7               	movwf	tblptrh,c
   310  0019F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311  0019F4  6EF8               	movwf	tblptru,c
   312  0019F6  EE00  F01F         	lfsr	0,__pdataCOMRAM
   313  0019FA  EE10 F015          	lfsr	1,21
   314  0019FE                     copy_data2:
   315  0019FE  0009               	tblrd		*+
   316  001A00  CFF5 FFEE          	movff	tablat,postinc0
   317  001A04  50E5               	movf	postdec1,w,c
   318  001A06  50E1               	movf	fsr1l,w,c
   319  001A08  E1FA               	bnz	copy_data2
   320                           
   321                           ; Clear objects allocated to COMRAM (15 bytes)
   322  001A0A  EE00  F034         	lfsr	0,__pbssCOMRAM
   323  001A0E  0E0F               	movlw	15
   324  001A10                     clear_0:
   325  001A10  6AEE               	clrf	postinc0,c
   326  001A12  06E8               	decf	wreg,f,c
   327  001A14  E1FD               	bnz	clear_0
   328  001A16                     end_of_initialization:
   329                           	opt stack 0
   330  001A16                     __end_of__initialization:
   331                           	opt stack 0
   332  001A16  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333  001A18  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334  001A1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   335  001A1C  6EF8               	movwf	tblptru,c
   336  001A1E  0100               	movlb	0
   337  001A20  EF62  F00B         	goto	_main	;jump to C main() function
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssCOMRAM
   348  000034                     __pbssCOMRAM:
   349                           	opt stack 0
   350  000034                     _AlarmAOff:
   351                           	opt stack 0
   352  000034                     	ds	2
   353  000036                     _AlarmBOff:
   354                           	opt stack 0
   355  000036                     	ds	2
   356  000038                     _AlarmCOff:
   357                           	opt stack 0
   358  000038                     	ds	2
   359  00003A                     _hour:
   360                           	opt stack 0
   361  00003A                     	ds	1
   362  00003B                     _hourA:
   363                           	opt stack 0
   364  00003B                     	ds	1
   365  00003C                     _hourB:
   366                           	opt stack 0
   367  00003C                     	ds	1
   368  00003D                     _hourC:
   369                           	opt stack 0
   370  00003D                     	ds	1
   371  00003E                     _minute:
   372                           	opt stack 0
   373  00003E                     	ds	1
   374  00003F                     _minuteA:
   375                           	opt stack 0
   376  00003F                     	ds	1
   377  000040                     _minuteB:
   378                           	opt stack 0
   379  000040                     	ds	1
   380  000041                     _minuteC:
   381                           	opt stack 0
   382  000041                     	ds	1
   383  000042                     _second:
   384                           	opt stack 0
   385  000042                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  00001F                     __pdataCOMRAM:
   397                           	opt stack 0
   398  00001F                     Startup@F4353:
   399                           	opt stack 0
   400  00001F                     	ds	21
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	dataBANK0
   411  000060                     __pdataBANK0:
   412                           	opt stack 0
   413  000060                     SetupAlarmTimeA@F4325:
   414                           	opt stack 0
   415  000060                     	ds	21
   416  000075                     SetupAlarmTimeB@F4335:
   417                           	opt stack 0
   418  000075                     	ds	21
   419  00008A                     SetupAlarmTimeC@F4345:
   420                           	opt stack 0
   421  00008A                     	ds	21
   422  00009F                     SetupTime@F4315:
   423                           	opt stack 0
   424  00009F                     	ds	21
   425  0000B4                     Startup@F4351:
   426                           	opt stack 0
   427  0000B4                     	ds	21
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	dataBANK1
   438  000100                     __pdataBANK1:
   439                           	opt stack 0
   440  000100                     version@F4277:
   441                           	opt stack 0
   442  000100                     	ds	21
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	cstackBANK0
   453  0000C9                     __pcstackBANK0:
   454                           	opt stack 0
   455  0000C9                     ??_delay_ms:
   456  0000C9                     lcd_write_cmd@cmd:
   457                           	opt stack 0
   458  0000C9                     lcd_write_data@data:
   459                           	opt stack 0
   460  0000C9                     getkey@lookup:
   461                           	opt stack 0
   462                           
   463                           ; 18 bytes @ 0x0
   464  0000C9                     	ds	1
   465  0000CA                     lcd_write_cmd@temp2:
   466                           	opt stack 0
   467  0000CA                     lcd_write_data@temp1:
   468                           	opt stack 0
   469  0000CA                     delay_ms@j:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1
   473  0000CA                     	ds	1
   474  0000CB                     ??_lcd_init:
   475  0000CB                     version@Version:
   476                           	opt stack 0
   477                           
   478                           ; 21 bytes @ 0x2
   479  0000CB                     	ds	1
   480  0000CC                     lcd_init@i:
   481                           	opt stack 0
   482  0000CC                     Startup@Startup:
   483                           	opt stack 0
   484                           
   485                           ; 21 bytes @ 0x3
   486  0000CC                     	ds	15
   487  0000DB                     getkey@keycode:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x12
   491  0000DB                     	ds	1
   492  0000DC                     SetupTime@Message:
   493                           	opt stack 0
   494  0000DC                     SetupAlarmTimeA@Message:
   495                           	opt stack 0
   496  0000DC                     SetupAlarmTimeB@Message:
   497                           	opt stack 0
   498  0000DC                     SetupAlarmTimeC@Message:
   499                           	opt stack 0
   500                           
   501                           ; 21 bytes @ 0x13
   502  0000DC                     	ds	4
   503  0000E0                     version@outchar:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x17
   507  0000E0                     	ds	1
   508  0000E1                     version@msgindex:
   509                           	opt stack 0
   510  0000E1                     Startup@StartupDone:
   511                           	opt stack 0
   512                           
   513                           ; 21 bytes @ 0x18
   514  0000E1                     	ds	16
   515  0000F1                     SetupTime@outchar:
   516                           	opt stack 0
   517  0000F1                     SetupAlarmTimeA@outchar:
   518                           	opt stack 0
   519  0000F1                     SetupAlarmTimeB@outchar:
   520                           	opt stack 0
   521  0000F1                     SetupAlarmTimeC@outchar:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x28
   525  0000F1                     	ds	1
   526  0000F2                     SetupTime@hour10:
   527                           	opt stack 0
   528  0000F2                     SetupAlarmTimeA@hour10:
   529                           	opt stack 0
   530  0000F2                     SetupAlarmTimeB@hour10:
   531                           	opt stack 0
   532  0000F2                     SetupAlarmTimeC@hour10:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x29
   536  0000F2                     	ds	1
   537  0000F3                     SetupTime@hour1:
   538                           	opt stack 0
   539  0000F3                     SetupAlarmTimeA@hour1:
   540                           	opt stack 0
   541  0000F3                     SetupAlarmTimeB@hour1:
   542                           	opt stack 0
   543  0000F3                     SetupAlarmTimeC@hour1:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x2A
   547  0000F3                     	ds	1
   548  0000F4                     SetupTime@minute10:
   549                           	opt stack 0
   550  0000F4                     SetupAlarmTimeA@minute10:
   551                           	opt stack 0
   552  0000F4                     SetupAlarmTimeB@minute10:
   553                           	opt stack 0
   554  0000F4                     SetupAlarmTimeC@minute10:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x2B
   558  0000F4                     	ds	1
   559  0000F5                     SetupTime@minute1:
   560                           	opt stack 0
   561  0000F5                     SetupAlarmTimeA@minute1:
   562                           	opt stack 0
   563  0000F5                     SetupAlarmTimeB@minute1:
   564                           	opt stack 0
   565  0000F5                     SetupAlarmTimeC@minute1:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x2C
   569  0000F5                     	ds	1
   570  0000F6                     SetupTime@second10:
   571                           	opt stack 0
   572  0000F6                     SetupAlarmTimeA@msgindex:
   573                           	opt stack 0
   574  0000F6                     SetupAlarmTimeB@msgindex:
   575                           	opt stack 0
   576  0000F6                     SetupAlarmTimeC@msgindex:
   577                           	opt stack 0
   578  0000F6                     Startup@outchar:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x2D
   582  0000F6                     	ds	1
   583  0000F7                     SetupTime@second1:
   584                           	opt stack 0
   585  0000F7                     SetupAlarmTimeA@ctemp:
   586                           	opt stack 0
   587  0000F7                     SetupAlarmTimeB@ctemp:
   588                           	opt stack 0
   589  0000F7                     SetupAlarmTimeC@ctemp:
   590                           	opt stack 0
   591  0000F7                     Startup@msgindex:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x2E
   595  0000F7                     	ds	1
   596  0000F8                     SetupTime@msgindex:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x2F
   600  0000F8                     	ds	1
   601  0000F9                     SetupTime@ctemp:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x30
   605  0000F9                     	ds	1
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	cstackCOMRAM
   616  000001                     __pcstackCOMRAM:
   617                           	opt stack 0
   618  000001                     ??i2_lcd_strobe:
   619  000001                     ?___awdiv:
   620                           	opt stack 0
   621  000001                     int_2_char@int1:
   622                           	opt stack 0
   623  000001                     ___awdiv@dividend:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x0
   627  000001                     	ds	1
   628  000002                     ??i2_lcd_write_cmd:
   629  000002                     ??i2_lcd_write_data:
   630  000002                     int_2_char@char1:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1
   634  000002                     	ds	1
   635  000003                     i2lcd_write_cmd@cmd:
   636                           	opt stack 0
   637  000003                     i2lcd_write_data@data:
   638                           	opt stack 0
   639  000003                     ___awdiv@divisor:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x2
   643  000003                     	ds	1
   644  000004                     i2lcd_write_cmd@temp2:
   645                           	opt stack 0
   646  000004                     i2lcd_write_data@temp1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x3
   650  000004                     	ds	1
   651  000005                     ___awdiv@counter:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x4
   655  000005                     	ds	1
   656  000006                     ___awdiv@sign:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x5
   660  000006                     	ds	1
   661  000007                     ___awdiv@quotient:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000007                     	ds	2
   666  000009                     ??_ISR_Timer0_Int:
   667                           
   668                           ; 1 bytes @ 0x8
   669  000009                     	ds	14
   670  000017                     ISR_Timer0_Int@hour1:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x16
   674  000017                     	ds	1
   675  000018                     ISR_Timer0_Int@minute1:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x17
   679  000018                     	ds	1
   680  000019                     ISR_Timer0_Int@second1:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x18
   684  000019                     	ds	1
   685  00001A                     ISR_Timer0_Int@hour10:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x19
   689  00001A                     	ds	1
   690  00001B                     ISR_Timer0_Int@minute10:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x1A
   694  00001B                     	ds	1
   695  00001C                     ISR_Timer0_Int@second10:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x1B
   699  00001C                     	ds	1
   700  00001D                     ??_lcd_strobe:
   701  00001D                     char_2_int@char1:
   702                           	opt stack 0
   703  00001D                     delay_ms@i:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x1C
   707  00001D                     	ds	1
   708  00001E                     ??_lcd_write_cmd:
   709  00001E                     ??_lcd_write_data:
   710  00001E                     char_2_int@int1:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x1D
   714  00001E                     	ds	1
   715  00001F                     tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           
   724                           ; 1 bytes @ 0x1E
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 347 in file "Main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         0       0       0       0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels required when called:    6
   750 ;; This function calls:
   751 ;;		_SetupAlarmTimeA
   752 ;;		_SetupAlarmTimeB
   753 ;;		_SetupAlarmTimeC
   754 ;;		_SetupTime
   755 ;;		_SetupTimerInterruptRegisters
   756 ;;		_Startup
   757 ;;		_lcd_init
   758 ;;		_version
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text0
   765  0016C4                     __ptext0:
   766                           	opt stack 0
   767  0016C4                     _main:
   768                           	opt stack 25
   769                           
   770                           ;Main.c: 349: ADCON1 = 0x0F;
   771                           
   772                           ;incstack = 0
   773  0016C4  0E0F               	movlw	15
   774  0016C6  6EC1               	movwf	4033,c	;volatile
   775                           
   776                           ;Main.c: 350: CMCON = 0x07;
   777  0016C8  0E07               	movlw	7
   778  0016CA  6EB4               	movwf	4020,c	;volatile
   779                           
   780                           ;Main.c: 352: lcd_init();
   781  0016CC  EC95  F00C         	call	_lcd_init	;wreg free
   782                           
   783                           ;Main.c: 353: TRISA = 0b00110000;
   784  0016D0  0E30               	movlw	48
   785  0016D2  6E92               	movwf	3986,c	;volatile
   786                           
   787                           ;Main.c: 355: version();
   788  0016D4  EC30  F00E         	call	_version	;wreg free
   789                           
   790                           ;Main.c: 356: Startup();
   791  0016D8  EC72  F009         	call	_Startup	;wreg free
   792                           
   793                           ;Main.c: 357: SetupTime();
   794  0016DC  ECD5  F008         	call	_SetupTime	;wreg free
   795                           
   796                           ;Main.c: 358: SetupAlarmTimeA();
   797  0016E0  ECE6  F00A         	call	_SetupAlarmTimeA	;wreg free
   798                           
   799                           ;Main.c: 359: SetupAlarmTimeB();
   800  0016E4  EC6A  F00A         	call	_SetupAlarmTimeB	;wreg free
   801                           
   802                           ;Main.c: 360: SetupAlarmTimeC();
   803  0016E8  ECEE  F009         	call	_SetupAlarmTimeC	;wreg free
   804                           
   805                           ;Main.c: 361: SetupTimerInterruptRegisters();
   806  0016EC  ECB7  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   807  0016F0                     l2489:
   808                           
   809                           ;Main.c: 364: {
   810                           ;Main.c: 365: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   811  0016F0  503B               	movf	_hourA,w,c
   812  0016F2  183A               	xorwf	_hour,w,c
   813  0016F4  A4D8               	btfss	status,2,c
   814  0016F6  D011               	goto	l2501
   815  0016F8  503F               	movf	_minuteA,w,c
   816  0016FA  183E               	xorwf	_minute,w,c
   817  0016FC  A4D8               	btfss	status,2,c
   818  0016FE  D00D               	goto	l2501
   819  001700  5034               	movf	_AlarmAOff,w,c
   820  001702  1035               	iorwf	_AlarmAOff+1,w,c
   821  001704  A4D8               	btfss	status,2,c
   822  001706  D009               	goto	l2501
   823                           
   824                           ;Main.c: 366: {
   825                           ;Main.c: 367: PORTA = 0b00000011;
   826  001708  0E03               	movlw	3
   827  00170A  6E80               	movwf	3968,c	;volatile
   828                           
   829                           ;Main.c: 368: if (PORTAbits.RA5 == 0)
   830  00170C  BA80               	btfsc	3968,5,c	;volatile
   831  00170E  D7F0               	goto	l2489
   832                           
   833                           ;Main.c: 369: {
   834                           ;Main.c: 370: AlarmAOff = 1;
   835  001710  0E00               	movlw	0
   836  001712  6E35               	movwf	_AlarmAOff+1,c
   837  001714  0E01               	movlw	1
   838  001716  6E34               	movwf	_AlarmAOff,c
   839                           
   840                           ;Main.c: 371: }
   841                           ;Main.c: 372: }
   842  001718  D7EB               	goto	l2489
   843  00171A                     l2501:
   844                           
   845                           ;Main.c: 373: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   846  00171A  503C               	movf	_hourB,w,c
   847  00171C  183A               	xorwf	_hour,w,c
   848  00171E  A4D8               	btfss	status,2,c
   849  001720  D011               	goto	l2513
   850  001722  5040               	movf	_minuteB,w,c
   851  001724  183E               	xorwf	_minute,w,c
   852  001726  A4D8               	btfss	status,2,c
   853  001728  D00D               	goto	l2513
   854  00172A  5036               	movf	_AlarmBOff,w,c
   855  00172C  1037               	iorwf	_AlarmBOff+1,w,c
   856  00172E  A4D8               	btfss	status,2,c
   857  001730  D009               	goto	l2513
   858                           
   859                           ;Main.c: 374: {
   860                           ;Main.c: 375: PORTA = 0b00000101;
   861  001732  0E05               	movlw	5
   862  001734  6E80               	movwf	3968,c	;volatile
   863                           
   864                           ;Main.c: 376: if (PORTAbits.RA5 == 0)
   865  001736  BA80               	btfsc	3968,5,c	;volatile
   866  001738  D7DB               	goto	l2489
   867                           
   868                           ;Main.c: 377: {
   869                           ;Main.c: 378: AlarmBOff = 1;
   870  00173A  0E00               	movlw	0
   871  00173C  6E37               	movwf	_AlarmBOff+1,c
   872  00173E  0E01               	movlw	1
   873  001740  6E36               	movwf	_AlarmBOff,c
   874                           
   875                           ;Main.c: 379: }
   876                           ;Main.c: 380: }
   877  001742  D7D6               	goto	l2489
   878  001744                     l2513:
   879                           
   880                           ;Main.c: 381: else if(hour==hourC && minute==minuteC && AlarmCOff== 0)
   881  001744  503D               	movf	_hourC,w,c
   882  001746  183A               	xorwf	_hour,w,c
   883  001748  A4D8               	btfss	status,2,c
   884  00174A  D011               	goto	l2525
   885  00174C  5041               	movf	_minuteC,w,c
   886  00174E  183E               	xorwf	_minute,w,c
   887  001750  A4D8               	btfss	status,2,c
   888  001752  D00D               	goto	l2525
   889  001754  5038               	movf	_AlarmCOff,w,c
   890  001756  1039               	iorwf	_AlarmCOff+1,w,c
   891  001758  A4D8               	btfss	status,2,c
   892  00175A  D009               	goto	l2525
   893                           
   894                           ;Main.c: 382: {
   895                           ;Main.c: 383: PORTA = 0b00001001;
   896  00175C  0E09               	movlw	9
   897  00175E  6E80               	movwf	3968,c	;volatile
   898                           
   899                           ;Main.c: 384: if (PORTAbits.RA5 == 0)
   900  001760  BA80               	btfsc	3968,5,c	;volatile
   901  001762  D7C6               	goto	l2489
   902                           
   903                           ;Main.c: 385: {
   904                           ;Main.c: 386: AlarmCOff = 1;
   905  001764  0E00               	movlw	0
   906  001766  6E39               	movwf	_AlarmCOff+1,c
   907  001768  0E01               	movlw	1
   908  00176A  6E38               	movwf	_AlarmCOff,c
   909                           
   910                           ;Main.c: 387: }
   911                           ;Main.c: 388: }
   912  00176C  D7C1               	goto	l2489
   913  00176E                     l2525:
   914                           
   915                           ;Main.c: 389: else
   916                           ;Main.c: 390: {
   917                           ;Main.c: 391: PORTA = 0b00000000;
   918  00176E  0E00               	movlw	0
   919  001770  6E80               	movwf	3968,c	;volatile
   920  001772  D7BE               	goto	l2489
   921  001774                     __end_of_main:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _version *****************
   934 ;; Defined at:
   935 ;;		line 12 in file "version.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  Version        21    2[BANK0 ] unsigned char [21]
   940 ;;  msgindex        1   24[BANK0 ] unsigned char 
   941 ;;  outchar         1   23[BANK0 ] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2   73[None  ] int 
   944 ;; Registers used:
   945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         0       0       0       0       0       0       0       0       0
   952 ;;      Locals:         0      23       0       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0
   954 ;;      Totals:         0      23       0       0       0       0       0       0       0
   955 ;;Total ram usage:       23 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    5
   958 ;; This function calls:
   959 ;;		_lcd_write_cmd
   960 ;;		_lcd_write_data
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text1
   967  001C60                     __ptext1:
   968                           	opt stack 0
   969  001C60                     _version:
   970                           	opt stack 25
   971                           
   972                           ;version.c: 14: unsigned char msgindex, outchar;
   973                           ;version.c: 15: char Version[ ] = "ETT Version 1.4     ";
   974                           
   975                           ;incstack = 0
   976  001C60  EE21  F000         	lfsr	2,version@F4277
   977  001C64  EE10  F0CB         	lfsr	1,version@Version
   978  001C68  0E14               	movlw	20
   979  001C6A                     u1301:
   980  001C6A  CFDB FFE3          	movff	plusw2,plusw1
   981  001C6E  06E8               	decf	wreg,f,c
   982  001C70  E2FC               	bc	u1301
   983                           
   984                           ;version.c: 17: lcd_write_cmd(0x80);
   985  001C72  0E80               	movlw	128
   986  001C74  EC12  F00D         	call	_lcd_write_cmd
   987                           
   988                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   989  001C78  0E00               	movlw	0
   990  001C7A  0100               	movlb	0	; () banked
   991  001C7C  6FE1               	movwf	version@msgindex& (0+255),b
   992  001C7E                     l2457:
   993                           
   994                           ; BSR set to: 0
   995  001C7E  0E13               	movlw	19
   996  001C80  0100               	movlb	0	; () banked
   997  001C82  65E1               	cpfsgt	version@msgindex& (0+255),b
   998  001C84  D001               	goto	l2461
   999  001C86  0012               	return	
  1000  001C88                     l2461:
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;version.c: 20: {
  1004                           ;version.c: 21: outchar = Version[msgindex];
  1005  001C88  0100               	movlb	0	; () banked
  1006  001C8A  51E1               	movf	version@msgindex& (0+255),w,b
  1007  001C8C  0D01               	mullw	1
  1008  001C8E  0ECB               	movlw	low version@Version
  1009  001C90  24F3               	addwf	prodl,w,c
  1010  001C92  6ED9               	movwf	fsr2l,c
  1011  001C94  0E00               	movlw	high version@Version
  1012  001C96  20F4               	addwfc	prodh,w,c
  1013  001C98  6EDA               	movwf	fsr2h,c
  1014  001C9A  50DF               	movf	indf2,w,c
  1015  001C9C  0100               	movlb	0	; () banked
  1016  001C9E  6FE0               	movwf	version@outchar& (0+255),b
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;version.c: 22: lcd_write_data(outchar);
  1020  001CA0  0100               	movlb	0	; () banked
  1021  001CA2  51E0               	movf	version@outchar& (0+255),w,b
  1022  001CA4  ECBA  F00B         	call	_lcd_write_data
  1023  001CA8  0100               	movlb	0	; () banked
  1024  001CAA  2BE1               	incf	version@msgindex& (0+255),f,b
  1025  001CAC  D7E8               	goto	l2457
  1026  001CAE                     __end_of_version:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           plusw1	equ	0xFE3
  1038                           fsr1l	equ	0xFE1
  1039                           indf2	equ	0xFDF
  1040                           plusw2	equ	0xFDB
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _lcd_init *****************
  1046 ;; Defined at:
  1047 ;;		line 83 in file "lcd_utilities.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  i               2    3[BANK0 ] int 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0
  1062 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1063 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1064 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1065 ;;Total ram usage:        3 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    5
  1068 ;; This function calls:
  1069 ;;		_lcd_write_cmd
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text2
  1076  00192A                     __ptext2:
  1077                           	opt stack 0
  1078  00192A                     _lcd_init:
  1079                           	opt stack 25
  1080                           
  1081                           ;lcd_utilities.c: 85: int i;
  1082                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;incstack = 0
  1086  00192A  0E00               	movlw	0
  1087  00192C  6E95               	movwf	3989,c	;volatile
  1088                           
  1089                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1090  00192E  0E00               	movlw	0
  1091  001930  6E83               	movwf	3971,c	;volatile
  1092                           
  1093                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1094  001932  9883               	bcf	3971,4,c	;volatile
  1095                           
  1096                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1097  001934  9C83               	bcf	3971,6,c	;volatile
  1098                           
  1099                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1100  001936  9A83               	bcf	3971,5,c	;volatile
  1101                           
  1102                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1103  001938  0E00               	movlw	0
  1104  00193A  0100               	movlb	0	; () banked
  1105  00193C  6FCD               	movwf	(lcd_init@i+1)& (0+255),b
  1106  00193E  0E00               	movlw	0
  1107  001940  6FCC               	movwf	lcd_init@i& (0+255),b
  1108  001942                     l2203:
  1109                           
  1110                           ; BSR set to: 0
  1111  001942  0100               	movlb	0	; () banked
  1112  001944  BFCD               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1113  001946  D008               	goto	l2207
  1114  001948  0100               	movlb	0	; () banked
  1115  00194A  51CD               	movf	(lcd_init@i+1)& (0+255),w,b
  1116  00194C  E112               	bnz	l2211
  1117  00194E  0E64               	movlw	100
  1118  001950  0100               	movlb	0	; () banked
  1119  001952  5DCC               	subwf	lcd_init@i& (0+255),w,b
  1120  001954  B0D8               	btfsc	status,0,c
  1121  001956  D00D               	goto	l2211
  1122  001958                     l2207:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1126  001958  0E9C               	movlw	156
  1127  00195A  0100               	movlb	0	; () banked
  1128  00195C  6FCB               	movwf	??_lcd_init& (0+255),b
  1129  00195E  0ED7               	movlw	215
  1130  001960                     u1457:
  1131  001960  2EE8               	decfsz	wreg,f,c
  1132  001962  D7FE               	goto	u1457
  1133  001964  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1134  001966  D7FC               	goto	u1457
  1135  001968  F000               	nop	
  1136  00196A  0100               	movlb	0	; () banked
  1137  00196C  4BCC               	infsnz	lcd_init@i& (0+255),f,b
  1138  00196E  2BCD               	incf	(lcd_init@i+1)& (0+255),f,b
  1139  001970  D7E8               	goto	l2203
  1140  001972                     l2211:
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1144  001972  0E33               	movlw	51
  1145  001974  EC12  F00D         	call	_lcd_write_cmd
  1146                           
  1147                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1148  001978  0E32               	movlw	50
  1149  00197A  EC12  F00D         	call	_lcd_write_cmd
  1150                           
  1151                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1152  00197E  0E28               	movlw	40
  1153  001980  EC12  F00D         	call	_lcd_write_cmd
  1154                           
  1155                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1156  001984  0E0E               	movlw	14
  1157  001986  EC12  F00D         	call	_lcd_write_cmd
  1158                           
  1159                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1160  00198A  0E06               	movlw	6
  1161  00198C  EC12  F00D         	call	_lcd_write_cmd
  1162                           
  1163                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1164  001990  0E01               	movlw	1
  1165  001992  EC12  F00D         	call	_lcd_write_cmd
  1166                           
  1167                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1168  001996  0E9C               	movlw	156
  1169  001998  0100               	movlb	0	; () banked
  1170  00199A  6FCB               	movwf	??_lcd_init& (0+255),b
  1171  00199C  0ED7               	movlw	215
  1172  00199E                     u1467:
  1173  00199E  2EE8               	decfsz	wreg,f,c
  1174  0019A0  D7FE               	goto	u1467
  1175  0019A2  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1176  0019A4  D7FC               	goto	u1467
  1177  0019A6  F000               	nop	
  1178  0019A8  0012               	return		;funcret
  1179  0019AA                     __end_of_lcd_init:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec1	equ	0xFE5
  1190                           plusw1	equ	0xFE3
  1191                           fsr1l	equ	0xFE1
  1192                           indf2	equ	0xFDF
  1193                           plusw2	equ	0xFDB
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           status	equ	0xFD8
  1197                           
  1198 ;; *************** function _Startup *****************
  1199 ;; Defined at:
  1200 ;;		line 312 in file "Main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  StartupDone    21   24[BANK0 ] unsigned char [21]
  1205 ;;  Startup        21    3[BANK0 ] unsigned char [21]
  1206 ;;  msgindex        1   46[BANK0 ] unsigned char 
  1207 ;;  outchar         1   45[BANK0 ] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1220 ;;      Totals:         0      44       0       0       0       0       0       0       0
  1221 ;;Total ram usage:       44 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    5
  1224 ;; This function calls:
  1225 ;;		_delay_ms
  1226 ;;		_lcd_write_cmd
  1227 ;;		_lcd_write_data
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text3
  1234  0012E4                     __ptext3:
  1235                           	opt stack 0
  1236  0012E4                     _Startup:
  1237                           	opt stack 25
  1238                           
  1239                           ;Main.c: 314: unsigned char msgindex, outchar;
  1240                           ;Main.c: 315: char Startup[ ] = "System Check        ";
  1241                           
  1242                           ;incstack = 0
  1243  0012E4  EE20  F0B4         	lfsr	2,Startup@F4351
  1244  0012E8  EE10  F0CC         	lfsr	1,Startup@Startup
  1245  0012EC  0E14               	movlw	20
  1246  0012EE                     u1241:
  1247  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1248  0012F2  06E8               	decf	wreg,f,c
  1249  0012F4  E2FC               	bc	u1241
  1250                           
  1251                           ;Main.c: 317: lcd_write_cmd(0x80);
  1252  0012F6  0E80               	movlw	128
  1253  0012F8  EC12  F00D         	call	_lcd_write_cmd
  1254                           
  1255                           ;Main.c: 319: for (msgindex = 0; msgindex < 20; msgindex++)
  1256  0012FC  0E00               	movlw	0
  1257  0012FE  0100               	movlb	0	; () banked
  1258  001300  6FF7               	movwf	Startup@msgindex& (0+255),b
  1259  001302                     l2401:
  1260                           
  1261                           ; BSR set to: 0
  1262  001302  0E13               	movlw	19
  1263  001304  0100               	movlb	0	; () banked
  1264  001306  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1265  001308  D001               	goto	l2405
  1266  00130A  D013               	goto	l2413
  1267  00130C                     l2405:
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;Main.c: 320: {
  1271                           ;Main.c: 321: outchar = Startup[msgindex];
  1272  00130C  0100               	movlb	0	; () banked
  1273  00130E  51F7               	movf	Startup@msgindex& (0+255),w,b
  1274  001310  0D01               	mullw	1
  1275  001312  0ECC               	movlw	low Startup@Startup
  1276  001314  24F3               	addwf	prodl,w,c
  1277  001316  6ED9               	movwf	fsr2l,c
  1278  001318  0E00               	movlw	high Startup@Startup
  1279  00131A  20F4               	addwfc	prodh,w,c
  1280  00131C  6EDA               	movwf	fsr2h,c
  1281  00131E  50DF               	movf	indf2,w,c
  1282  001320  0100               	movlb	0	; () banked
  1283  001322  6FF6               	movwf	Startup@outchar& (0+255),b
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;Main.c: 322: lcd_write_data(outchar);
  1287  001324  0100               	movlb	0	; () banked
  1288  001326  51F6               	movf	Startup@outchar& (0+255),w,b
  1289  001328  ECBA  F00B         	call	_lcd_write_data
  1290  00132C  0100               	movlb	0	; () banked
  1291  00132E  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1292  001330  D7E8               	goto	l2401
  1293  001332                     l2413:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;Main.c: 323: }
  1297                           ;Main.c: 325: PORTA = 0b00000010;
  1298  001332  0E02               	movlw	2
  1299  001334  6E80               	movwf	3968,c	;volatile
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;Main.c: 326: delay_ms(1000);
  1303  001336  0E03               	movlw	3
  1304  001338  6E1E               	movwf	delay_ms@i+1,c
  1305  00133A  0EE8               	movlw	232
  1306  00133C  6E1D               	movwf	delay_ms@i,c
  1307  00133E  EC76  F00E         	call	_delay_ms	;wreg free
  1308                           
  1309                           ;Main.c: 327: PORTA = 0b00000100;
  1310  001342  0E04               	movlw	4
  1311  001344  6E80               	movwf	3968,c	;volatile
  1312                           
  1313                           ;Main.c: 328: delay_ms(1000);
  1314  001346  0E03               	movlw	3
  1315  001348  6E1E               	movwf	delay_ms@i+1,c
  1316  00134A  0EE8               	movlw	232
  1317  00134C  6E1D               	movwf	delay_ms@i,c
  1318  00134E  EC76  F00E         	call	_delay_ms	;wreg free
  1319                           
  1320                           ;Main.c: 329: PORTA = 0b00001000;
  1321  001352  0E08               	movlw	8
  1322  001354  6E80               	movwf	3968,c	;volatile
  1323                           
  1324                           ;Main.c: 330: delay_ms(1000);
  1325  001356  0E03               	movlw	3
  1326  001358  6E1E               	movwf	delay_ms@i+1,c
  1327  00135A  0EE8               	movlw	232
  1328  00135C  6E1D               	movwf	delay_ms@i,c
  1329  00135E  EC76  F00E         	call	_delay_ms	;wreg free
  1330                           
  1331                           ;Main.c: 331: PORTA = 0b00001111;
  1332  001362  0E0F               	movlw	15
  1333  001364  6E80               	movwf	3968,c	;volatile
  1334                           
  1335                           ;Main.c: 332: delay_ms(1000);
  1336  001366  0E03               	movlw	3
  1337  001368  6E1E               	movwf	delay_ms@i+1,c
  1338  00136A  0EE8               	movlw	232
  1339  00136C  6E1D               	movwf	delay_ms@i,c
  1340  00136E  EC76  F00E         	call	_delay_ms	;wreg free
  1341                           
  1342                           ;Main.c: 333: PORTA = 0b00000000;
  1343  001372  0E00               	movlw	0
  1344  001374  6E80               	movwf	3968,c	;volatile
  1345                           
  1346                           ;Main.c: 334: AlarmAOff = 0;
  1347  001376  0E00               	movlw	0
  1348  001378  6E35               	movwf	_AlarmAOff+1,c
  1349  00137A  0E00               	movlw	0
  1350  00137C  6E34               	movwf	_AlarmAOff,c
  1351                           
  1352                           ;Main.c: 335: AlarmBOff = 0;
  1353  00137E  0E00               	movlw	0
  1354  001380  6E37               	movwf	_AlarmBOff+1,c
  1355  001382  0E00               	movlw	0
  1356  001384  6E36               	movwf	_AlarmBOff,c
  1357                           
  1358                           ;Main.c: 336: AlarmCOff = 0;
  1359  001386  0E00               	movlw	0
  1360  001388  6E39               	movwf	_AlarmCOff+1,c
  1361  00138A  0E00               	movlw	0
  1362  00138C  6E38               	movwf	_AlarmCOff,c
  1363                           
  1364                           ;Main.c: 337: char StartupDone[ ] = "Done                ";
  1365  00138E  EE20  F01F         	lfsr	2,Startup@F4353
  1366  001392  EE10  F0E1         	lfsr	1,Startup@StartupDone
  1367  001396  0E14               	movlw	20
  1368  001398                     u1271:
  1369  001398  CFDB FFE3          	movff	plusw2,plusw1
  1370  00139C  06E8               	decf	wreg,f,c
  1371  00139E  E2FC               	bc	u1271
  1372                           
  1373                           ;Main.c: 339: lcd_write_cmd(0x80);
  1374  0013A0  0E80               	movlw	128
  1375  0013A2  EC12  F00D         	call	_lcd_write_cmd
  1376                           
  1377                           ;Main.c: 341: for (msgindex = 0; msgindex < 20; msgindex++)
  1378  0013A6  0E00               	movlw	0
  1379  0013A8  0100               	movlb	0	; () banked
  1380  0013AA  6FF7               	movwf	Startup@msgindex& (0+255),b
  1381  0013AC                     l2439:
  1382                           
  1383                           ; BSR set to: 0
  1384  0013AC  0E13               	movlw	19
  1385  0013AE  0100               	movlb	0	; () banked
  1386  0013B0  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1387  0013B2  D001               	goto	l2443
  1388  0013B4  0012               	return	
  1389  0013B6                     l2443:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;Main.c: 342: {
  1393                           ;Main.c: 343: outchar = StartupDone[msgindex];
  1394  0013B6  0100               	movlb	0	; () banked
  1395  0013B8  51F7               	movf	Startup@msgindex& (0+255),w,b
  1396  0013BA  0D01               	mullw	1
  1397  0013BC  0EE1               	movlw	low Startup@StartupDone
  1398  0013BE  24F3               	addwf	prodl,w,c
  1399  0013C0  6ED9               	movwf	fsr2l,c
  1400  0013C2  0E00               	movlw	high Startup@StartupDone
  1401  0013C4  20F4               	addwfc	prodh,w,c
  1402  0013C6  6EDA               	movwf	fsr2h,c
  1403  0013C8  50DF               	movf	indf2,w,c
  1404  0013CA  0100               	movlb	0	; () banked
  1405  0013CC  6FF6               	movwf	Startup@outchar& (0+255),b
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;Main.c: 344: lcd_write_data(outchar);
  1409  0013CE  0100               	movlb	0	; () banked
  1410  0013D0  51F6               	movf	Startup@outchar& (0+255),w,b
  1411  0013D2  ECBA  F00B         	call	_lcd_write_data
  1412  0013D6  0100               	movlb	0	; () banked
  1413  0013D8  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1414  0013DA  D7E8               	goto	l2439
  1415  0013DC                     __end_of_Startup:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           prodh	equ	0xFF4
  1422                           prodl	equ	0xFF3
  1423                           postinc0	equ	0xFEE
  1424                           wreg	equ	0xFE8
  1425                           postdec1	equ	0xFE5
  1426                           plusw1	equ	0xFE3
  1427                           fsr1l	equ	0xFE1
  1428                           indf2	equ	0xFDF
  1429                           plusw2	equ	0xFDB
  1430                           fsr2h	equ	0xFDA
  1431                           fsr2l	equ	0xFD9
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _SetupTimerInterruptRegisters *****************
  1435 ;; Defined at:
  1436 ;;		line 276 in file "Main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    3
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text4
  1465  001D6E                     __ptext4:
  1466                           	opt stack 0
  1467  001D6E                     _SetupTimerInterruptRegisters:
  1468                           	opt stack 27
  1469                           
  1470                           ;Main.c: 278: RCONbits.IPEN =1;
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;incstack = 0
  1474  001D6E  8ED0               	bsf	4048,7,c	;volatile
  1475                           
  1476                           ;Main.c: 282: INTCONbits.GIEH =1;
  1477  001D70  8EF2               	bsf	intcon,7,c	;volatile
  1478                           
  1479                           ;Main.c: 287: T0CON = 0b00000111;
  1480  001D72  0E07               	movlw	7
  1481  001D74  6ED5               	movwf	4053,c	;volatile
  1482                           
  1483                           ;Main.c: 295: INTCON2 = 0b10000100;
  1484  001D76  0E84               	movlw	132
  1485  001D78  6EF1               	movwf	intcon2,c	;volatile
  1486                           
  1487                           ;Main.c: 300: TMR0H = 0x48;
  1488  001D7A  0E48               	movlw	72
  1489  001D7C  6ED7               	movwf	4055,c	;volatile
  1490                           
  1491                           ;Main.c: 301: TMR0L = 0xE5;
  1492  001D7E  0EE5               	movlw	229
  1493  001D80  6ED6               	movwf	4054,c	;volatile
  1494                           
  1495                           ;Main.c: 303: T0CONbits.TMR0ON = 1;
  1496  001D82  8ED5               	bsf	4053,7,c	;volatile
  1497                           
  1498                           ;Main.c: 304: INTCONbits.TMR0IE = 1;
  1499  001D84  8AF2               	bsf	intcon,5,c	;volatile
  1500                           
  1501                           ;Main.c: 307: INTCONbits.TMR0IF = 0;
  1502  001D86  94F2               	bcf	intcon,2,c	;volatile
  1503  001D88  0012               	return		;funcret
  1504  001D8A                     __end_of_SetupTimerInterruptRegisters:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodh	equ	0xFF4
  1511                           prodl	equ	0xFF3
  1512                           intcon	equ	0xFF2
  1513                           intcon2	equ	0xFF1
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           postdec1	equ	0xFE5
  1517                           plusw1	equ	0xFE3
  1518                           fsr1l	equ	0xFE1
  1519                           indf2	equ	0xFDF
  1520                           plusw2	equ	0xFDB
  1521                           fsr2h	equ	0xFDA
  1522                           fsr2l	equ	0xFD9
  1523                           status	equ	0xFD8
  1524                           
  1525 ;; *************** function _SetupTime *****************
  1526 ;; Defined at:
  1527 ;;		line 108 in file "Main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1532 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1533 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1534 ;;  second1         1   46[BANK0 ] unsigned char 
  1535 ;;  second10        1   45[BANK0 ] unsigned char 
  1536 ;;  minute1         1   44[BANK0 ] unsigned char 
  1537 ;;  minute10        1   43[BANK0 ] unsigned char 
  1538 ;;  hour1           1   42[BANK0 ] unsigned char 
  1539 ;;  hour10          1   41[BANK0 ] unsigned char 
  1540 ;;  outchar         1   40[BANK0 ] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1554 ;;Total ram usage:       30 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    5
  1557 ;; This function calls:
  1558 ;;		_char_2_int
  1559 ;;		_delay_ms
  1560 ;;		_getkey
  1561 ;;		_lcd_write_cmd
  1562 ;;		_lcd_write_data
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text5
  1569  0011AA                     __ptext5:
  1570                           	opt stack 0
  1571  0011AA                     _SetupTime:
  1572                           	opt stack 25
  1573                           
  1574                           ;Main.c: 110: unsigned char msgindex, outchar, ctemp;
  1575                           ;Main.c: 111: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1576                           ;Main.c: 112: char Message[ ] = "Set time hhmmss:    ";
  1577                           
  1578                           ;incstack = 0
  1579  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4315
  1580  0011AE  EE10  F0DC         	lfsr	1,SetupTime@Message
  1581  0011B2  0E14               	movlw	20
  1582  0011B4                     u1121:
  1583  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1584  0011B8  06E8               	decf	wreg,f,c
  1585  0011BA  E2FC               	bc	u1121
  1586                           
  1587                           ;Main.c: 114: lcd_write_cmd(0x80);
  1588  0011BC  0E80               	movlw	128
  1589  0011BE  EC12  F00D         	call	_lcd_write_cmd
  1590                           
  1591                           ;Main.c: 116: for (msgindex = 0; msgindex < 20; msgindex++)
  1592  0011C2  0E00               	movlw	0
  1593  0011C4  0100               	movlb	0	; () banked
  1594  0011C6  6FF8               	movwf	SetupTime@msgindex& (0+255),b
  1595  0011C8                     l2221:
  1596                           
  1597                           ; BSR set to: 0
  1598  0011C8  0E13               	movlw	19
  1599  0011CA  0100               	movlb	0	; () banked
  1600  0011CC  65F8               	cpfsgt	SetupTime@msgindex& (0+255),b
  1601  0011CE  D001               	goto	l2225
  1602  0011D0  D013               	goto	l2233
  1603  0011D2                     l2225:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;Main.c: 117: {
  1607                           ;Main.c: 118: outchar = Message[msgindex];
  1608  0011D2  0100               	movlb	0	; () banked
  1609  0011D4  51F8               	movf	SetupTime@msgindex& (0+255),w,b
  1610  0011D6  0D01               	mullw	1
  1611  0011D8  0EDC               	movlw	low SetupTime@Message
  1612  0011DA  24F3               	addwf	prodl,w,c
  1613  0011DC  6ED9               	movwf	fsr2l,c
  1614  0011DE  0E00               	movlw	high SetupTime@Message
  1615  0011E0  20F4               	addwfc	prodh,w,c
  1616  0011E2  6EDA               	movwf	fsr2h,c
  1617  0011E4  50DF               	movf	indf2,w,c
  1618  0011E6  0100               	movlb	0	; () banked
  1619  0011E8  6FF1               	movwf	SetupTime@outchar& (0+255),b
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;Main.c: 119: lcd_write_data(outchar);
  1623  0011EA  0100               	movlb	0	; () banked
  1624  0011EC  51F1               	movf	SetupTime@outchar& (0+255),w,b
  1625  0011EE  ECBA  F00B         	call	_lcd_write_data
  1626  0011F2  0100               	movlb	0	; () banked
  1627  0011F4  2BF8               	incf	SetupTime@msgindex& (0+255),f,b
  1628  0011F6  D7E8               	goto	l2221
  1629  0011F8                     l2233:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;Main.c: 120: }
  1633                           ;Main.c: 122: lcd_write_cmd(0xC0);
  1634  0011F8  0EC0               	movlw	192
  1635  0011FA  EC12  F00D         	call	_lcd_write_cmd
  1636                           
  1637                           ;Main.c: 124: ctemp=getkey();
  1638  0011FE  EC57  F00E         	call	_getkey	;wreg free
  1639  001202  0100               	movlb	0	; () banked
  1640  001204  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;Main.c: 125: lcd_write_data(ctemp);
  1644  001206  0100               	movlb	0	; () banked
  1645  001208  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1646  00120A  ECBA  F00B         	call	_lcd_write_data
  1647                           
  1648                           ;Main.c: 126: hour10 = char_2_int (ctemp);
  1649  00120E  0100               	movlb	0	; () banked
  1650  001210  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1651  001212  EC8A  F00D         	call	_char_2_int
  1652  001216  0100               	movlb	0	; () banked
  1653  001218  6FF2               	movwf	SetupTime@hour10& (0+255),b
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;Main.c: 128: ctemp=getkey();
  1657  00121A  EC57  F00E         	call	_getkey	;wreg free
  1658  00121E  0100               	movlb	0	; () banked
  1659  001220  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1660                           
  1661                           ;Main.c: 129: lcd_write_data(ctemp);
  1662  001222  0100               	movlb	0	; () banked
  1663  001224  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1664  001226  ECBA  F00B         	call	_lcd_write_data
  1665                           
  1666                           ;Main.c: 130: hour1 = char_2_int (ctemp);
  1667  00122A  0100               	movlb	0	; () banked
  1668  00122C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1669  00122E  EC8A  F00D         	call	_char_2_int
  1670  001232  0100               	movlb	0	; () banked
  1671  001234  6FF3               	movwf	SetupTime@hour1& (0+255),b
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;Main.c: 132: ctemp=getkey();
  1675  001236  EC57  F00E         	call	_getkey	;wreg free
  1676  00123A  0100               	movlb	0	; () banked
  1677  00123C  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;Main.c: 133: lcd_write_data(ctemp);
  1681  00123E  0100               	movlb	0	; () banked
  1682  001240  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1683  001242  ECBA  F00B         	call	_lcd_write_data
  1684                           
  1685                           ;Main.c: 134: minute10 = char_2_int (ctemp);
  1686  001246  0100               	movlb	0	; () banked
  1687  001248  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1688  00124A  EC8A  F00D         	call	_char_2_int
  1689  00124E  0100               	movlb	0	; () banked
  1690  001250  6FF4               	movwf	SetupTime@minute10& (0+255),b
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;Main.c: 136: ctemp=getkey();
  1694  001252  EC57  F00E         	call	_getkey	;wreg free
  1695  001256  0100               	movlb	0	; () banked
  1696  001258  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1697                           
  1698                           ;Main.c: 137: lcd_write_data(ctemp);
  1699  00125A  0100               	movlb	0	; () banked
  1700  00125C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1701  00125E  ECBA  F00B         	call	_lcd_write_data
  1702                           
  1703                           ;Main.c: 138: minute1 = char_2_int (ctemp);
  1704  001262  0100               	movlb	0	; () banked
  1705  001264  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1706  001266  EC8A  F00D         	call	_char_2_int
  1707  00126A  0100               	movlb	0	; () banked
  1708  00126C  6FF5               	movwf	SetupTime@minute1& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;Main.c: 140: ctemp=getkey();
  1712  00126E  EC57  F00E         	call	_getkey	;wreg free
  1713  001272  0100               	movlb	0	; () banked
  1714  001274  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;Main.c: 141: lcd_write_data(ctemp);
  1718  001276  0100               	movlb	0	; () banked
  1719  001278  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1720  00127A  ECBA  F00B         	call	_lcd_write_data
  1721                           
  1722                           ;Main.c: 142: second10 = char_2_int (ctemp);
  1723  00127E  0100               	movlb	0	; () banked
  1724  001280  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1725  001282  EC8A  F00D         	call	_char_2_int
  1726  001286  0100               	movlb	0	; () banked
  1727  001288  6FF6               	movwf	SetupTime@second10& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;Main.c: 144: ctemp=getkey();
  1731  00128A  EC57  F00E         	call	_getkey	;wreg free
  1732  00128E  0100               	movlb	0	; () banked
  1733  001290  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1734                           
  1735                           ;Main.c: 145: lcd_write_data(ctemp);
  1736  001292  0100               	movlb	0	; () banked
  1737  001294  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1738  001296  ECBA  F00B         	call	_lcd_write_data
  1739                           
  1740                           ;Main.c: 146: second1 = char_2_int (ctemp);
  1741  00129A  0100               	movlb	0	; () banked
  1742  00129C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1743  00129E  EC8A  F00D         	call	_char_2_int
  1744  0012A2  0100               	movlb	0	; () banked
  1745  0012A4  6FF7               	movwf	SetupTime@second1& (0+255),b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Main.c: 148: hour = hour10 * 10 + hour1;
  1749  0012A6  0100               	movlb	0	; () banked
  1750  0012A8  51F2               	movf	SetupTime@hour10& (0+255),w,b
  1751  0012AA  0D0A               	mullw	10
  1752  0012AC  50F3               	movf	prodl,w,c
  1753  0012AE  0100               	movlb	0	; () banked
  1754  0012B0  25F3               	addwf	SetupTime@hour1& (0+255),w,b
  1755  0012B2  6E3A               	movwf	_hour,c
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Main.c: 149: minute = minute10 * 10 + minute1;
  1759  0012B4  0100               	movlb	0	; () banked
  1760  0012B6  51F4               	movf	SetupTime@minute10& (0+255),w,b
  1761  0012B8  0D0A               	mullw	10
  1762  0012BA  50F3               	movf	prodl,w,c
  1763  0012BC  0100               	movlb	0	; () banked
  1764  0012BE  25F5               	addwf	SetupTime@minute1& (0+255),w,b
  1765  0012C0  6E3E               	movwf	_minute,c
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;Main.c: 150: second = second10 * 10 + second1;
  1769  0012C2  0100               	movlb	0	; () banked
  1770  0012C4  51F6               	movf	SetupTime@second10& (0+255),w,b
  1771  0012C6  0D0A               	mullw	10
  1772  0012C8  50F3               	movf	prodl,w,c
  1773  0012CA  0100               	movlb	0	; () banked
  1774  0012CC  25F7               	addwf	SetupTime@second1& (0+255),w,b
  1775  0012CE  6E42               	movwf	_second,c
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;Main.c: 152: delay_ms(500);
  1779  0012D0  0E01               	movlw	1
  1780  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1781  0012D4  0EF4               	movlw	244
  1782  0012D6  6E1D               	movwf	delay_ms@i,c
  1783  0012D8  EC76  F00E         	call	_delay_ms	;wreg free
  1784                           
  1785                           ;Main.c: 153: lcd_write_cmd(0x01);
  1786  0012DC  0E01               	movlw	1
  1787  0012DE  EC12  F00D         	call	_lcd_write_cmd
  1788  0012E2  0012               	return		;funcret
  1789  0012E4                     __end_of_SetupTime:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           tblptrh	equ	0xFF7
  1793                           tblptrl	equ	0xFF6
  1794                           tablat	equ	0xFF5
  1795                           prodh	equ	0xFF4
  1796                           prodl	equ	0xFF3
  1797                           intcon	equ	0xFF2
  1798                           intcon2	equ	0xFF1
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           postdec1	equ	0xFE5
  1802                           plusw1	equ	0xFE3
  1803                           fsr1l	equ	0xFE1
  1804                           indf2	equ	0xFDF
  1805                           plusw2	equ	0xFDB
  1806                           fsr2h	equ	0xFDA
  1807                           fsr2l	equ	0xFD9
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _SetupAlarmTimeC *****************
  1811 ;; Defined at:
  1812 ;;		line 236 in file "Main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1817 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1818 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1819 ;;  minute1         1   44[BANK0 ] unsigned char 
  1820 ;;  minute10        1   43[BANK0 ] unsigned char 
  1821 ;;  hour1           1   42[BANK0 ] unsigned char 
  1822 ;;  hour10          1   41[BANK0 ] unsigned char 
  1823 ;;  outchar         1   40[BANK0 ] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1836 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1837 ;;Total ram usage:       28 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    5
  1840 ;; This function calls:
  1841 ;;		_char_2_int
  1842 ;;		_delay_ms
  1843 ;;		_getkey
  1844 ;;		_lcd_write_cmd
  1845 ;;		_lcd_write_data
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text6
  1852  0013DC                     __ptext6:
  1853                           	opt stack 0
  1854  0013DC                     _SetupAlarmTimeC:
  1855                           	opt stack 25
  1856                           
  1857                           ;Main.c: 238: unsigned char msgindex, outchar, ctemp;
  1858                           ;Main.c: 239: unsigned char hour10, hour1, minute10, minute1;
  1859                           ;Main.c: 240: char Message[ ] = "Subject C Time hhmm:";
  1860                           
  1861                           ;incstack = 0
  1862  0013DC  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4345
  1863  0013E0  EE10  F0DC         	lfsr	1,SetupAlarmTimeC@Message
  1864  0013E4  0E14               	movlw	20
  1865  0013E6                     u1211:
  1866  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1867  0013EA  06E8               	decf	wreg,f,c
  1868  0013EC  E2FC               	bc	u1211
  1869                           
  1870                           ;Main.c: 242: PORTA = 0b00001000;
  1871  0013EE  0E08               	movlw	8
  1872  0013F0  6E80               	movwf	3968,c	;volatile
  1873                           
  1874                           ;Main.c: 244: lcd_write_cmd(0x80);
  1875  0013F2  0E80               	movlw	128
  1876  0013F4  EC12  F00D         	call	_lcd_write_cmd
  1877                           
  1878                           ;Main.c: 246: for (msgindex = 0; msgindex < 20; msgindex++)
  1879  0013F8  0E00               	movlw	0
  1880  0013FA  0100               	movlb	0	; () banked
  1881  0013FC  6FF6               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1882  0013FE                     l2361:
  1883                           
  1884                           ; BSR set to: 0
  1885  0013FE  0E13               	movlw	19
  1886  001400  0100               	movlb	0	; () banked
  1887  001402  65F6               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1888  001404  D001               	goto	l2365
  1889  001406  D013               	goto	l2373
  1890  001408                     l2365:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;Main.c: 247: {
  1894                           ;Main.c: 248: outchar = Message[msgindex];
  1895  001408  0100               	movlb	0	; () banked
  1896  00140A  51F6               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1897  00140C  0D01               	mullw	1
  1898  00140E  0EDC               	movlw	low SetupAlarmTimeC@Message
  1899  001410  24F3               	addwf	prodl,w,c
  1900  001412  6ED9               	movwf	fsr2l,c
  1901  001414  0E00               	movlw	high SetupAlarmTimeC@Message
  1902  001416  20F4               	addwfc	prodh,w,c
  1903  001418  6EDA               	movwf	fsr2h,c
  1904  00141A  50DF               	movf	indf2,w,c
  1905  00141C  0100               	movlb	0	; () banked
  1906  00141E  6FF1               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;Main.c: 249: lcd_write_data(outchar);
  1910  001420  0100               	movlb	0	; () banked
  1911  001422  51F1               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1912  001424  ECBA  F00B         	call	_lcd_write_data
  1913  001428  0100               	movlb	0	; () banked
  1914  00142A  2BF6               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1915  00142C  D7E8               	goto	l2361
  1916  00142E                     l2373:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;Main.c: 250: }
  1920                           ;Main.c: 252: lcd_write_cmd(0xC0);
  1921  00142E  0EC0               	movlw	192
  1922  001430  EC12  F00D         	call	_lcd_write_cmd
  1923                           
  1924                           ;Main.c: 254: ctemp=getkey();
  1925  001434  EC57  F00E         	call	_getkey	;wreg free
  1926  001438  0100               	movlb	0	; () banked
  1927  00143A  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Main.c: 255: lcd_write_data(ctemp);
  1931  00143C  0100               	movlb	0	; () banked
  1932  00143E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1933  001440  ECBA  F00B         	call	_lcd_write_data
  1934                           
  1935                           ;Main.c: 256: hour10 = char_2_int (ctemp);
  1936  001444  0100               	movlb	0	; () banked
  1937  001446  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1938  001448  EC8A  F00D         	call	_char_2_int
  1939  00144C  0100               	movlb	0	; () banked
  1940  00144E  6FF2               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;Main.c: 258: ctemp=getkey();
  1944  001450  EC57  F00E         	call	_getkey	;wreg free
  1945  001454  0100               	movlb	0	; () banked
  1946  001456  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1947                           
  1948                           ;Main.c: 259: lcd_write_data(ctemp);
  1949  001458  0100               	movlb	0	; () banked
  1950  00145A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1951  00145C  ECBA  F00B         	call	_lcd_write_data
  1952                           
  1953                           ;Main.c: 260: hour1 = char_2_int (ctemp);
  1954  001460  0100               	movlb	0	; () banked
  1955  001462  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1956  001464  EC8A  F00D         	call	_char_2_int
  1957  001468  0100               	movlb	0	; () banked
  1958  00146A  6FF3               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;Main.c: 262: ctemp=getkey();
  1962  00146C  EC57  F00E         	call	_getkey	;wreg free
  1963  001470  0100               	movlb	0	; () banked
  1964  001472  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;Main.c: 263: lcd_write_data(ctemp);
  1968  001474  0100               	movlb	0	; () banked
  1969  001476  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1970  001478  ECBA  F00B         	call	_lcd_write_data
  1971                           
  1972                           ;Main.c: 264: minute10 = char_2_int (ctemp);
  1973  00147C  0100               	movlb	0	; () banked
  1974  00147E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1975  001480  EC8A  F00D         	call	_char_2_int
  1976  001484  0100               	movlb	0	; () banked
  1977  001486  6FF4               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;Main.c: 266: ctemp=getkey();
  1981  001488  EC57  F00E         	call	_getkey	;wreg free
  1982  00148C  0100               	movlb	0	; () banked
  1983  00148E  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1984                           
  1985                           ;Main.c: 267: lcd_write_data(ctemp);
  1986  001490  0100               	movlb	0	; () banked
  1987  001492  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1988  001494  ECBA  F00B         	call	_lcd_write_data
  1989                           
  1990                           ;Main.c: 268: minute1 = char_2_int (ctemp);
  1991  001498  0100               	movlb	0	; () banked
  1992  00149A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1993  00149C  EC8A  F00D         	call	_char_2_int
  1994  0014A0  0100               	movlb	0	; () banked
  1995  0014A2  6FF5               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;Main.c: 270: hourC = hour10 * 10 + hour1;
  1999  0014A4  0100               	movlb	0	; () banked
  2000  0014A6  51F2               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  2001  0014A8  0D0A               	mullw	10
  2002  0014AA  50F3               	movf	prodl,w,c
  2003  0014AC  0100               	movlb	0	; () banked
  2004  0014AE  25F3               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  2005  0014B0  6E3D               	movwf	_hourC,c
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;Main.c: 271: minuteC = minute10 * 10 + minute1;
  2009  0014B2  0100               	movlb	0	; () banked
  2010  0014B4  51F4               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  2011  0014B6  0D0A               	mullw	10
  2012  0014B8  50F3               	movf	prodl,w,c
  2013  0014BA  0100               	movlb	0	; () banked
  2014  0014BC  25F5               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  2015  0014BE  6E41               	movwf	_minuteC,c
  2016                           
  2017                           ;Main.c: 273: delay_ms(500);
  2018  0014C0  0E01               	movlw	1
  2019  0014C2  6E1E               	movwf	delay_ms@i+1,c
  2020  0014C4  0EF4               	movlw	244
  2021  0014C6  6E1D               	movwf	delay_ms@i,c
  2022  0014C8  EC76  F00E         	call	_delay_ms	;wreg free
  2023                           
  2024                           ;Main.c: 274: lcd_write_cmd(0x01);
  2025  0014CC  0E01               	movlw	1
  2026  0014CE  EC12  F00D         	call	_lcd_write_cmd
  2027  0014D2  0012               	return		;funcret
  2028  0014D4                     __end_of_SetupAlarmTimeC:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           intcon	equ	0xFF2
  2037                           intcon2	equ	0xFF1
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           postdec1	equ	0xFE5
  2041                           plusw1	equ	0xFE3
  2042                           fsr1l	equ	0xFE1
  2043                           indf2	equ	0xFDF
  2044                           plusw2	equ	0xFDB
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function _SetupAlarmTimeB *****************
  2050 ;; Defined at:
  2051 ;;		line 196 in file "Main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2056 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2057 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2058 ;;  minute1         1   44[BANK0 ] unsigned char 
  2059 ;;  minute10        1   43[BANK0 ] unsigned char 
  2060 ;;  hour1           1   42[BANK0 ] unsigned char 
  2061 ;;  hour10          1   41[BANK0 ] unsigned char 
  2062 ;;  outchar         1   40[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2076 ;;Total ram usage:       28 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    5
  2079 ;; This function calls:
  2080 ;;		_char_2_int
  2081 ;;		_delay_ms
  2082 ;;		_getkey
  2083 ;;		_lcd_write_cmd
  2084 ;;		_lcd_write_data
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text7
  2091  0014D4                     __ptext7:
  2092                           	opt stack 0
  2093  0014D4                     _SetupAlarmTimeB:
  2094                           	opt stack 25
  2095                           
  2096                           ;Main.c: 198: unsigned char msgindex, outchar, ctemp;
  2097                           ;Main.c: 199: unsigned char hour10, hour1, minute10, minute1;
  2098                           ;Main.c: 200: char Message[ ] = "Subject B Time hhmm:";
  2099                           
  2100                           ;incstack = 0
  2101  0014D4  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4335
  2102  0014D8  EE10  F0DC         	lfsr	1,SetupAlarmTimeB@Message
  2103  0014DC  0E14               	movlw	20
  2104  0014DE                     u1181:
  2105  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  2106  0014E2  06E8               	decf	wreg,f,c
  2107  0014E4  E2FC               	bc	u1181
  2108                           
  2109                           ;Main.c: 202: PORTA = 0b00000100;
  2110  0014E6  0E04               	movlw	4
  2111  0014E8  6E80               	movwf	3968,c	;volatile
  2112                           
  2113                           ;Main.c: 204: lcd_write_cmd(0x80);
  2114  0014EA  0E80               	movlw	128
  2115  0014EC  EC12  F00D         	call	_lcd_write_cmd
  2116                           
  2117                           ;Main.c: 206: for (msgindex = 0; msgindex < 20; msgindex++)
  2118  0014F0  0E00               	movlw	0
  2119  0014F2  0100               	movlb	0	; () banked
  2120  0014F4  6FF6               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  2121  0014F6                     l2319:
  2122                           
  2123                           ; BSR set to: 0
  2124  0014F6  0E13               	movlw	19
  2125  0014F8  0100               	movlb	0	; () banked
  2126  0014FA  65F6               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  2127  0014FC  D001               	goto	l2323
  2128  0014FE  D013               	goto	l2331
  2129  001500                     l2323:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;Main.c: 207: {
  2133                           ;Main.c: 208: outchar = Message[msgindex];
  2134  001500  0100               	movlb	0	; () banked
  2135  001502  51F6               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  2136  001504  0D01               	mullw	1
  2137  001506  0EDC               	movlw	low SetupAlarmTimeB@Message
  2138  001508  24F3               	addwf	prodl,w,c
  2139  00150A  6ED9               	movwf	fsr2l,c
  2140  00150C  0E00               	movlw	high SetupAlarmTimeB@Message
  2141  00150E  20F4               	addwfc	prodh,w,c
  2142  001510  6EDA               	movwf	fsr2h,c
  2143  001512  50DF               	movf	indf2,w,c
  2144  001514  0100               	movlb	0	; () banked
  2145  001516  6FF1               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;Main.c: 209: lcd_write_data(outchar);
  2149  001518  0100               	movlb	0	; () banked
  2150  00151A  51F1               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  2151  00151C  ECBA  F00B         	call	_lcd_write_data
  2152  001520  0100               	movlb	0	; () banked
  2153  001522  2BF6               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  2154  001524  D7E8               	goto	l2319
  2155  001526                     l2331:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;Main.c: 210: }
  2159                           ;Main.c: 212: lcd_write_cmd(0xC0);
  2160  001526  0EC0               	movlw	192
  2161  001528  EC12  F00D         	call	_lcd_write_cmd
  2162                           
  2163                           ;Main.c: 214: ctemp=getkey();
  2164  00152C  EC57  F00E         	call	_getkey	;wreg free
  2165  001530  0100               	movlb	0	; () banked
  2166  001532  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;Main.c: 215: lcd_write_data(ctemp);
  2170  001534  0100               	movlb	0	; () banked
  2171  001536  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2172  001538  ECBA  F00B         	call	_lcd_write_data
  2173                           
  2174                           ;Main.c: 216: hour10 = char_2_int (ctemp);
  2175  00153C  0100               	movlb	0	; () banked
  2176  00153E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2177  001540  EC8A  F00D         	call	_char_2_int
  2178  001544  0100               	movlb	0	; () banked
  2179  001546  6FF2               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;Main.c: 218: ctemp=getkey();
  2183  001548  EC57  F00E         	call	_getkey	;wreg free
  2184  00154C  0100               	movlb	0	; () banked
  2185  00154E  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2186                           
  2187                           ;Main.c: 219: lcd_write_data(ctemp);
  2188  001550  0100               	movlb	0	; () banked
  2189  001552  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2190  001554  ECBA  F00B         	call	_lcd_write_data
  2191                           
  2192                           ;Main.c: 220: hour1 = char_2_int (ctemp);
  2193  001558  0100               	movlb	0	; () banked
  2194  00155A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2195  00155C  EC8A  F00D         	call	_char_2_int
  2196  001560  0100               	movlb	0	; () banked
  2197  001562  6FF3               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;Main.c: 222: ctemp=getkey();
  2201  001564  EC57  F00E         	call	_getkey	;wreg free
  2202  001568  0100               	movlb	0	; () banked
  2203  00156A  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;Main.c: 223: lcd_write_data(ctemp);
  2207  00156C  0100               	movlb	0	; () banked
  2208  00156E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2209  001570  ECBA  F00B         	call	_lcd_write_data
  2210                           
  2211                           ;Main.c: 224: minute10 = char_2_int (ctemp);
  2212  001574  0100               	movlb	0	; () banked
  2213  001576  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2214  001578  EC8A  F00D         	call	_char_2_int
  2215  00157C  0100               	movlb	0	; () banked
  2216  00157E  6FF4               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;Main.c: 226: ctemp=getkey();
  2220  001580  EC57  F00E         	call	_getkey	;wreg free
  2221  001584  0100               	movlb	0	; () banked
  2222  001586  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2223                           
  2224                           ;Main.c: 227: lcd_write_data(ctemp);
  2225  001588  0100               	movlb	0	; () banked
  2226  00158A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2227  00158C  ECBA  F00B         	call	_lcd_write_data
  2228                           
  2229                           ;Main.c: 228: minute1 = char_2_int (ctemp);
  2230  001590  0100               	movlb	0	; () banked
  2231  001592  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2232  001594  EC8A  F00D         	call	_char_2_int
  2233  001598  0100               	movlb	0	; () banked
  2234  00159A  6FF5               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;Main.c: 230: hourB = hour10 * 10 + hour1;
  2238  00159C  0100               	movlb	0	; () banked
  2239  00159E  51F2               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  2240  0015A0  0D0A               	mullw	10
  2241  0015A2  50F3               	movf	prodl,w,c
  2242  0015A4  0100               	movlb	0	; () banked
  2243  0015A6  25F3               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  2244  0015A8  6E3C               	movwf	_hourB,c
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;Main.c: 231: minuteB = minute10 * 10 + minute1;
  2248  0015AA  0100               	movlb	0	; () banked
  2249  0015AC  51F4               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  2250  0015AE  0D0A               	mullw	10
  2251  0015B0  50F3               	movf	prodl,w,c
  2252  0015B2  0100               	movlb	0	; () banked
  2253  0015B4  25F5               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  2254  0015B6  6E40               	movwf	_minuteB,c
  2255                           
  2256                           ;Main.c: 233: delay_ms(500);
  2257  0015B8  0E01               	movlw	1
  2258  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2259  0015BC  0EF4               	movlw	244
  2260  0015BE  6E1D               	movwf	delay_ms@i,c
  2261  0015C0  EC76  F00E         	call	_delay_ms	;wreg free
  2262                           
  2263                           ;Main.c: 234: lcd_write_cmd(0x01);
  2264  0015C4  0E01               	movlw	1
  2265  0015C6  EC12  F00D         	call	_lcd_write_cmd
  2266  0015CA  0012               	return		;funcret
  2267  0015CC                     __end_of_SetupAlarmTimeB:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           prodh	equ	0xFF4
  2274                           prodl	equ	0xFF3
  2275                           intcon	equ	0xFF2
  2276                           intcon2	equ	0xFF1
  2277                           postinc0	equ	0xFEE
  2278                           wreg	equ	0xFE8
  2279                           postdec1	equ	0xFE5
  2280                           plusw1	equ	0xFE3
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           plusw2	equ	0xFDB
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _SetupAlarmTimeA *****************
  2289 ;; Defined at:
  2290 ;;		line 156 in file "Main.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2295 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2296 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2297 ;;  minute1         1   44[BANK0 ] unsigned char 
  2298 ;;  minute10        1   43[BANK0 ] unsigned char 
  2299 ;;  hour1           1   42[BANK0 ] unsigned char 
  2300 ;;  hour10          1   41[BANK0 ] unsigned char 
  2301 ;;  outchar         1   40[BANK0 ] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0
  2312 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2314 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2315 ;;Total ram usage:       28 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    5
  2318 ;; This function calls:
  2319 ;;		_char_2_int
  2320 ;;		_delay_ms
  2321 ;;		_getkey
  2322 ;;		_lcd_write_cmd
  2323 ;;		_lcd_write_data
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text8
  2330  0015CC                     __ptext8:
  2331                           	opt stack 0
  2332  0015CC                     _SetupAlarmTimeA:
  2333                           	opt stack 25
  2334                           
  2335                           ;Main.c: 158: unsigned char msgindex, outchar, ctemp;
  2336                           ;Main.c: 159: unsigned char hour10, hour1, minute10, minute1;
  2337                           ;Main.c: 160: char Message[ ] = "Subject A Time hhmm:";
  2338                           
  2339                           ;incstack = 0
  2340  0015CC  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4325
  2341  0015D0  EE10  F0DC         	lfsr	1,SetupAlarmTimeA@Message
  2342  0015D4  0E14               	movlw	20
  2343  0015D6                     u1151:
  2344  0015D6  CFDB FFE3          	movff	plusw2,plusw1
  2345  0015DA  06E8               	decf	wreg,f,c
  2346  0015DC  E2FC               	bc	u1151
  2347                           
  2348                           ;Main.c: 162: PORTA = 0b00000010;
  2349  0015DE  0E02               	movlw	2
  2350  0015E0  6E80               	movwf	3968,c	;volatile
  2351                           
  2352                           ;Main.c: 164: lcd_write_cmd(0x80);
  2353  0015E2  0E80               	movlw	128
  2354  0015E4  EC12  F00D         	call	_lcd_write_cmd
  2355                           
  2356                           ;Main.c: 166: for (msgindex = 0; msgindex < 20; msgindex++)
  2357  0015E8  0E00               	movlw	0
  2358  0015EA  0100               	movlb	0	; () banked
  2359  0015EC  6FF6               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2360  0015EE                     l2277:
  2361                           
  2362                           ; BSR set to: 0
  2363  0015EE  0E13               	movlw	19
  2364  0015F0  0100               	movlb	0	; () banked
  2365  0015F2  65F6               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2366  0015F4  D001               	goto	l2281
  2367  0015F6  D013               	goto	l2289
  2368  0015F8                     l2281:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;Main.c: 167: {
  2372                           ;Main.c: 168: outchar = Message[msgindex];
  2373  0015F8  0100               	movlb	0	; () banked
  2374  0015FA  51F6               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2375  0015FC  0D01               	mullw	1
  2376  0015FE  0EDC               	movlw	low SetupAlarmTimeA@Message
  2377  001600  24F3               	addwf	prodl,w,c
  2378  001602  6ED9               	movwf	fsr2l,c
  2379  001604  0E00               	movlw	high SetupAlarmTimeA@Message
  2380  001606  20F4               	addwfc	prodh,w,c
  2381  001608  6EDA               	movwf	fsr2h,c
  2382  00160A  50DF               	movf	indf2,w,c
  2383  00160C  0100               	movlb	0	; () banked
  2384  00160E  6FF1               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;Main.c: 169: lcd_write_data(outchar);
  2388  001610  0100               	movlb	0	; () banked
  2389  001612  51F1               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2390  001614  ECBA  F00B         	call	_lcd_write_data
  2391  001618  0100               	movlb	0	; () banked
  2392  00161A  2BF6               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2393  00161C  D7E8               	goto	l2277
  2394  00161E                     l2289:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;Main.c: 170: }
  2398                           ;Main.c: 172: lcd_write_cmd(0xC0);
  2399  00161E  0EC0               	movlw	192
  2400  001620  EC12  F00D         	call	_lcd_write_cmd
  2401                           
  2402                           ;Main.c: 174: ctemp=getkey();
  2403  001624  EC57  F00E         	call	_getkey	;wreg free
  2404  001628  0100               	movlb	0	; () banked
  2405  00162A  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;Main.c: 175: lcd_write_data(ctemp);
  2409  00162C  0100               	movlb	0	; () banked
  2410  00162E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2411  001630  ECBA  F00B         	call	_lcd_write_data
  2412                           
  2413                           ;Main.c: 176: hour10 = char_2_int (ctemp);
  2414  001634  0100               	movlb	0	; () banked
  2415  001636  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2416  001638  EC8A  F00D         	call	_char_2_int
  2417  00163C  0100               	movlb	0	; () banked
  2418  00163E  6FF2               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;Main.c: 178: ctemp=getkey();
  2422  001640  EC57  F00E         	call	_getkey	;wreg free
  2423  001644  0100               	movlb	0	; () banked
  2424  001646  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2425                           
  2426                           ;Main.c: 179: lcd_write_data(ctemp);
  2427  001648  0100               	movlb	0	; () banked
  2428  00164A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2429  00164C  ECBA  F00B         	call	_lcd_write_data
  2430                           
  2431                           ;Main.c: 180: hour1 = char_2_int (ctemp);
  2432  001650  0100               	movlb	0	; () banked
  2433  001652  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2434  001654  EC8A  F00D         	call	_char_2_int
  2435  001658  0100               	movlb	0	; () banked
  2436  00165A  6FF3               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;Main.c: 182: ctemp=getkey();
  2440  00165C  EC57  F00E         	call	_getkey	;wreg free
  2441  001660  0100               	movlb	0	; () banked
  2442  001662  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;Main.c: 183: lcd_write_data(ctemp);
  2446  001664  0100               	movlb	0	; () banked
  2447  001666  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2448  001668  ECBA  F00B         	call	_lcd_write_data
  2449                           
  2450                           ;Main.c: 184: minute10 = char_2_int (ctemp);
  2451  00166C  0100               	movlb	0	; () banked
  2452  00166E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2453  001670  EC8A  F00D         	call	_char_2_int
  2454  001674  0100               	movlb	0	; () banked
  2455  001676  6FF4               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;Main.c: 186: ctemp=getkey();
  2459  001678  EC57  F00E         	call	_getkey	;wreg free
  2460  00167C  0100               	movlb	0	; () banked
  2461  00167E  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2462                           
  2463                           ;Main.c: 187: lcd_write_data(ctemp);
  2464  001680  0100               	movlb	0	; () banked
  2465  001682  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2466  001684  ECBA  F00B         	call	_lcd_write_data
  2467                           
  2468                           ;Main.c: 188: minute1 = char_2_int (ctemp);
  2469  001688  0100               	movlb	0	; () banked
  2470  00168A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2471  00168C  EC8A  F00D         	call	_char_2_int
  2472  001690  0100               	movlb	0	; () banked
  2473  001692  6FF5               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;Main.c: 190: hourA = hour10 * 10 + hour1;
  2477  001694  0100               	movlb	0	; () banked
  2478  001696  51F2               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2479  001698  0D0A               	mullw	10
  2480  00169A  50F3               	movf	prodl,w,c
  2481  00169C  0100               	movlb	0	; () banked
  2482  00169E  25F3               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2483  0016A0  6E3B               	movwf	_hourA,c
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;Main.c: 191: minuteA = minute10 * 10 + minute1;
  2487  0016A2  0100               	movlb	0	; () banked
  2488  0016A4  51F4               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2489  0016A6  0D0A               	mullw	10
  2490  0016A8  50F3               	movf	prodl,w,c
  2491  0016AA  0100               	movlb	0	; () banked
  2492  0016AC  25F5               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2493  0016AE  6E3F               	movwf	_minuteA,c
  2494                           
  2495                           ;Main.c: 193: delay_ms(500);
  2496  0016B0  0E01               	movlw	1
  2497  0016B2  6E1E               	movwf	delay_ms@i+1,c
  2498  0016B4  0EF4               	movlw	244
  2499  0016B6  6E1D               	movwf	delay_ms@i,c
  2500  0016B8  EC76  F00E         	call	_delay_ms	;wreg free
  2501                           
  2502                           ;Main.c: 194: lcd_write_cmd(0x01);
  2503  0016BC  0E01               	movlw	1
  2504  0016BE  EC12  F00D         	call	_lcd_write_cmd
  2505  0016C2  0012               	return		;funcret
  2506  0016C4                     __end_of_SetupAlarmTimeA:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           intcon	equ	0xFF2
  2515                           intcon2	equ	0xFF1
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           plusw1	equ	0xFE3
  2520                           fsr1l	equ	0xFE1
  2521                           indf2	equ	0xFDF
  2522                           plusw2	equ	0xFDB
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _lcd_write_data *****************
  2528 ;; Defined at:
  2529 ;;		line 43 in file "lcd_utilities.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  data            1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  data            1    0[BANK0 ] unsigned char 
  2534 ;;  temp1           1    1[BANK0 ] unsigned char 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2546 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2547 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        3 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    4
  2551 ;; This function calls:
  2552 ;;		_lcd_strobe
  2553 ;; This function is called by:
  2554 ;;		_SetupTime
  2555 ;;		_SetupAlarmTimeA
  2556 ;;		_SetupAlarmTimeB
  2557 ;;		_SetupAlarmTimeC
  2558 ;;		_Startup
  2559 ;;		_version
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text9
  2564  001774                     __ptext9:
  2565                           	opt stack 0
  2566  001774                     _lcd_write_data:
  2567                           	opt stack 25
  2568                           
  2569                           ;incstack = 0
  2570                           ;lcd_write_data@data stored from wreg
  2571  001774  0100               	movlb	0	; () banked
  2572  001776  6FC9               	movwf	lcd_write_data@data& (0+255),b
  2573                           
  2574                           ;lcd_utilities.c: 45: char temp1;
  2575                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2576  001778  8C83               	bsf	3971,6,c	;volatile
  2577                           
  2578                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2579  00177A  0E3F               	movlw	63
  2580  00177C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2581  00177E  0E55               	movlw	85
  2582  001780                     u1477:
  2583  001780  2EE8               	decfsz	wreg,f,c
  2584  001782  D7FE               	goto	u1477
  2585  001784  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2586  001786  D7FC               	goto	u1477
  2587  001788  F000               	nop	
  2588                           
  2589                           ;lcd_utilities.c: 50: temp1 = data;
  2590  00178A  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2591                           
  2592                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2593  00178E  0100               	movlb	0	; () banked
  2594  001790  39CA               	swapf	lcd_write_data@temp1& (0+255),w,b
  2595  001792  0B0F               	andlw	15
  2596  001794  0100               	movlb	0	; () banked
  2597  001796  6FCA               	movwf	lcd_write_data@temp1& (0+255),b
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2601  001798  0100               	movlb	0	; () banked
  2602  00179A  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2603  00179C  0B0F               	andlw	15
  2604  00179E  6E83               	movwf	3971,c	;volatile
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2608  0017A0  0E7D               	movlw	125
  2609  0017A2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2610  0017A4  0EAC               	movlw	172
  2611  0017A6                     u1487:
  2612  0017A6  2EE8               	decfsz	wreg,f,c
  2613  0017A8  D7FE               	goto	u1487
  2614  0017AA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2615  0017AC  D7FC               	goto	u1487
  2616                           
  2617                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2618  0017AE  8C83               	bsf	3971,6,c	;volatile
  2619                           
  2620                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2621  0017B0  0E7D               	movlw	125
  2622  0017B2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2623  0017B4  0EAC               	movlw	172
  2624  0017B6                     u1497:
  2625  0017B6  2EE8               	decfsz	wreg,f,c
  2626  0017B8  D7FE               	goto	u1497
  2627  0017BA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2628  0017BC  D7FC               	goto	u1497
  2629                           
  2630                           ;lcd_utilities.c: 57: lcd_strobe();
  2631  0017BE  EC95  F00E         	call	_lcd_strobe	;wreg free
  2632                           
  2633                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2634  0017C2  0E7D               	movlw	125
  2635  0017C4  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2636  0017C6  0EAC               	movlw	172
  2637  0017C8                     u1507:
  2638  0017C8  2EE8               	decfsz	wreg,f,c
  2639  0017CA  D7FE               	goto	u1507
  2640  0017CC  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2641  0017CE  D7FC               	goto	u1507
  2642                           
  2643                           ;lcd_utilities.c: 60: temp1 = data;
  2644  0017D0  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2645                           
  2646                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2647  0017D4  0100               	movlb	0	; () banked
  2648  0017D6  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2649  0017D8  0B0F               	andlw	15
  2650  0017DA  6E83               	movwf	3971,c	;volatile
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2654  0017DC  0E7D               	movlw	125
  2655  0017DE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2656  0017E0  0EAC               	movlw	172
  2657  0017E2                     u1517:
  2658  0017E2  2EE8               	decfsz	wreg,f,c
  2659  0017E4  D7FE               	goto	u1517
  2660  0017E6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2661  0017E8  D7FC               	goto	u1517
  2662                           
  2663                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2664  0017EA  8C83               	bsf	3971,6,c	;volatile
  2665                           
  2666                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2667  0017EC  0E9C               	movlw	156
  2668  0017EE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2669  0017F0  0ED7               	movlw	215
  2670  0017F2                     u1527:
  2671  0017F2  2EE8               	decfsz	wreg,f,c
  2672  0017F4  D7FE               	goto	u1527
  2673  0017F6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2674  0017F8  D7FC               	goto	u1527
  2675  0017FA  F000               	nop	
  2676                           
  2677                           ;lcd_utilities.c: 66: lcd_strobe();
  2678  0017FC  EC95  F00E         	call	_lcd_strobe	;wreg free
  2679                           
  2680                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2681  001800  0E9C               	movlw	156
  2682  001802  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2683  001804  0ED7               	movlw	215
  2684  001806                     u1537:
  2685  001806  2EE8               	decfsz	wreg,f,c
  2686  001808  D7FE               	goto	u1537
  2687  00180A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2688  00180C  D7FC               	goto	u1537
  2689  00180E  F000               	nop	
  2690  001810  0012               	return		;funcret
  2691  001812                     __end_of_lcd_write_data:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           intcon2	equ	0xFF1
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           plusw1	equ	0xFE3
  2705                           fsr1l	equ	0xFE1
  2706                           indf2	equ	0xFDF
  2707                           plusw2	equ	0xFDB
  2708                           fsr2h	equ	0xFDA
  2709                           fsr2l	equ	0xFD9
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _lcd_write_cmd *****************
  2713 ;; Defined at:
  2714 ;;		line 18 in file "lcd_utilities.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  cmd             1    wreg     unsigned char 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  cmd             1    0[BANK0 ] unsigned char 
  2719 ;;  temp2           1    1[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        3 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    4
  2736 ;; This function calls:
  2737 ;;		_lcd_strobe
  2738 ;; This function is called by:
  2739 ;;		_lcd_init
  2740 ;;		_SetupTime
  2741 ;;		_SetupAlarmTimeA
  2742 ;;		_SetupAlarmTimeB
  2743 ;;		_SetupAlarmTimeC
  2744 ;;		_Startup
  2745 ;;		_version
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text10
  2750  001A24                     __ptext10:
  2751                           	opt stack 0
  2752  001A24                     _lcd_write_cmd:
  2753                           	opt stack 25
  2754                           
  2755                           ;incstack = 0
  2756                           ;lcd_write_cmd@cmd stored from wreg
  2757  001A24  0100               	movlb	0	; () banked
  2758  001A26  6FC9               	movwf	lcd_write_cmd@cmd& (0+255),b
  2759                           
  2760                           ;lcd_utilities.c: 20: unsigned char temp2;
  2761                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2762  001A28  9C83               	bcf	3971,6,c	;volatile
  2763                           
  2764                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2765  001A2A  0E3F               	movlw	63
  2766  001A2C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2767  001A2E  0E55               	movlw	85
  2768  001A30                     u1547:
  2769  001A30  2EE8               	decfsz	wreg,f,c
  2770  001A32  D7FE               	goto	u1547
  2771  001A34  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2772  001A36  D7FC               	goto	u1547
  2773  001A38  F000               	nop	
  2774                           
  2775                           ;lcd_utilities.c: 23: temp2 = cmd;
  2776  001A3A  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2777                           
  2778                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2779  001A3E  0100               	movlb	0	; () banked
  2780  001A40  39CA               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  2781  001A42  0B0F               	andlw	15
  2782  001A44  0100               	movlb	0	; () banked
  2783  001A46  6FCA               	movwf	lcd_write_cmd@temp2& (0+255),b
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2787  001A48  0100               	movlb	0	; () banked
  2788  001A4A  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2789  001A4C  0B0F               	andlw	15
  2790  001A4E  6E83               	movwf	3971,c	;volatile
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2794  001A50  0E7D               	movlw	125
  2795  001A52  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2796  001A54  0EAC               	movlw	172
  2797  001A56                     u1557:
  2798  001A56  2EE8               	decfsz	wreg,f,c
  2799  001A58  D7FE               	goto	u1557
  2800  001A5A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2801  001A5C  D7FC               	goto	u1557
  2802                           
  2803                           ;lcd_utilities.c: 28: lcd_strobe();
  2804  001A5E  EC95  F00E         	call	_lcd_strobe	;wreg free
  2805                           
  2806                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2807  001A62  0E7D               	movlw	125
  2808  001A64  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2809  001A66  0EAC               	movlw	172
  2810  001A68                     u1567:
  2811  001A68  2EE8               	decfsz	wreg,f,c
  2812  001A6A  D7FE               	goto	u1567
  2813  001A6C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2814  001A6E  D7FC               	goto	u1567
  2815                           
  2816                           ;lcd_utilities.c: 32: temp2 = cmd;
  2817  001A70  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2818                           
  2819                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2820  001A74  0100               	movlb	0	; () banked
  2821  001A76  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2822  001A78  0B0F               	andlw	15
  2823  001A7A  6E83               	movwf	3971,c	;volatile
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2827  001A7C  0E7D               	movlw	125
  2828  001A7E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2829  001A80  0EAC               	movlw	172
  2830  001A82                     u1577:
  2831  001A82  2EE8               	decfsz	wreg,f,c
  2832  001A84  D7FE               	goto	u1577
  2833  001A86  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2834  001A88  D7FC               	goto	u1577
  2835                           
  2836                           ;lcd_utilities.c: 36: lcd_strobe();
  2837  001A8A  EC95  F00E         	call	_lcd_strobe	;wreg free
  2838                           
  2839                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2840  001A8E  0E7D               	movlw	125
  2841  001A90  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2842  001A92  0EAC               	movlw	172
  2843  001A94                     u1587:
  2844  001A94  2EE8               	decfsz	wreg,f,c
  2845  001A96  D7FE               	goto	u1587
  2846  001A98  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2847  001A9A  D7FC               	goto	u1587
  2848  001A9C  0012               	return		;funcret
  2849  001A9E                     __end_of_lcd_write_cmd:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           intcon	equ	0xFF2
  2858                           intcon2	equ	0xFF1
  2859                           postinc0	equ	0xFEE
  2860                           wreg	equ	0xFE8
  2861                           postdec1	equ	0xFE5
  2862                           plusw1	equ	0xFE3
  2863                           fsr1l	equ	0xFE1
  2864                           indf2	equ	0xFDF
  2865                           plusw2	equ	0xFDB
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _lcd_strobe *****************
  2871 ;; Defined at:
  2872 ;;		line 73 in file "lcd_utilities.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2889 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:        1 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    3
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_lcd_write_cmd
  2897 ;;		_lcd_write_data
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text11
  2902  001D2A                     __ptext11:
  2903                           	opt stack 0
  2904  001D2A                     _lcd_strobe:
  2905                           	opt stack 25
  2906                           
  2907                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2908                           
  2909                           ;incstack = 0
  2910  001D2A  8883               	bsf	3971,4,c	;volatile
  2911                           
  2912                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2913  001D2C  0E7D               	movlw	125
  2914  001D2E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2915  001D30  0EAC               	movlw	172
  2916  001D32                     u1597:
  2917  001D32  2EE8               	decfsz	wreg,f,c
  2918  001D34  D7FE               	goto	u1597
  2919  001D36  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2920  001D38  D7FC               	goto	u1597
  2921                           
  2922                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2923  001D3A  9883               	bcf	3971,4,c	;volatile
  2924                           
  2925                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2926  001D3C  0E7D               	movlw	125
  2927  001D3E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2928  001D40  0EAC               	movlw	172
  2929  001D42                     u1607:
  2930  001D42  2EE8               	decfsz	wreg,f,c
  2931  001D44  D7FE               	goto	u1607
  2932  001D46  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2933  001D48  D7FC               	goto	u1607
  2934  001D4A  0012               	return		;funcret
  2935  001D4C                     __end_of_lcd_strobe:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           prodh	equ	0xFF4
  2942                           prodl	equ	0xFF3
  2943                           intcon	equ	0xFF2
  2944                           intcon2	equ	0xFF1
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           postdec1	equ	0xFE5
  2948                           plusw1	equ	0xFE3
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           plusw2	equ	0xFDB
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _getkey *****************
  2957 ;; Defined at:
  2958 ;;		line 17 in file "keypad_utilities.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2963 ;;  keycode         1   18[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      unsigned char 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0
  2974 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2976 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2977 ;;Total ram usage:       19 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    3
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_SetupTime
  2984 ;;		_SetupAlarmTimeA
  2985 ;;		_SetupAlarmTimeB
  2986 ;;		_SetupAlarmTimeC
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text12
  2991  001CAE                     __ptext12:
  2992                           	opt stack 0
  2993  001CAE                     _getkey:
  2994                           	opt stack 26
  2995                           
  2996                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2997                           
  2998                           ;incstack = 0
  2999  001CAE  0E1B               	movlw	low getkey@F4270
  3000  001CB0  6EF6               	movwf	tblptrl,c
  3001  001CB2                     	if	1	;There is more than 1 active tblptr byte
  3002  001CB2  0E10               	movlw	high getkey@F4270
  3003  001CB4  6EF7               	movwf	tblptrh,c
  3004  001CB6                     	endif
  3005  001CB6                     	if	0	;There are less than 3 active tblptr bytes
  3006  001CB6                     	endif
  3007  001CB6  EE20  F0C9         	lfsr	2,getkey@lookup
  3008  001CBA  0E11               	movlw	17
  3009  001CBC                     u1050:
  3010  001CBC  0009               	tblrd		*+
  3011  001CBE  CFF5 FFDE          	movff	tablat,postinc2
  3012  001CC2  06E8               	decf	wreg,f,c
  3013  001CC4  E2FB               	bc	u1050
  3014  001CC6                     l33:
  3015  001CC6  AA81               	btfss	3969,5,c	;volatile
  3016  001CC8  D7FE               	goto	l33
  3017                           
  3018                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  3019  001CCA  5081               	movf	3969,w,c	;volatile
  3020  001CCC  0B0F               	andlw	15
  3021  001CCE  0100               	movlb	0	; () banked
  3022  001CD0  6FDB               	movwf	getkey@keycode& (0+255),b
  3023  001CD2                     l36:
  3024  001CD2  BA81               	btfsc	3969,5,c	;volatile
  3025  001CD4  D7FE               	goto	l36
  3026                           
  3027                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  3028  001CD6  0100               	movlb	0	; () banked
  3029  001CD8  51DB               	movf	getkey@keycode& (0+255),w,b
  3030  001CDA  0D01               	mullw	1
  3031  001CDC  0EC9               	movlw	low getkey@lookup
  3032  001CDE  24F3               	addwf	prodl,w,c
  3033  001CE0  6ED9               	movwf	fsr2l,c
  3034  001CE2  0E00               	movlw	high getkey@lookup
  3035  001CE4  20F4               	addwfc	prodh,w,c
  3036  001CE6  6EDA               	movwf	fsr2h,c
  3037  001CE8  50DF               	movf	indf2,w,c
  3038  001CEA  0012               	return	
  3039  001CEC                     __end_of_getkey:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           prodh	equ	0xFF4
  3046                           prodl	equ	0xFF3
  3047                           intcon	equ	0xFF2
  3048                           intcon2	equ	0xFF1
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postdec1	equ	0xFE5
  3052                           plusw1	equ	0xFE3
  3053                           fsr1l	equ	0xFE1
  3054                           indf2	equ	0xFDF
  3055                           postinc2	equ	0xFDE
  3056                           plusw2	equ	0xFDB
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8
  3060                           
  3061 ;; *************** function _delay_ms *****************
  3062 ;; Defined at:
  3063 ;;		line 10 in file "delays_utilities.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  i               2   28[COMRAM] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  j               2    1[BANK0 ] unsigned int 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         2       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3080 ;;      Totals:         2       3       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        5 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    3
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_SetupTime
  3088 ;;		_SetupAlarmTimeA
  3089 ;;		_SetupAlarmTimeB
  3090 ;;		_SetupAlarmTimeC
  3091 ;;		_Startup
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text13
  3096  001CEC                     __ptext13:
  3097                           	opt stack 0
  3098  001CEC                     _delay_ms:
  3099                           	opt stack 26
  3100                           
  3101                           ;delays_utilities.c: 12: if(i!=0)
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;incstack = 0
  3105  001CEC  501D               	movf	delay_ms@i,w,c
  3106  001CEE  101E               	iorwf	delay_ms@i+1,w,c
  3107  001CF0  B4D8               	btfsc	status,2,c
  3108  001CF2  0012               	return	
  3109                           
  3110                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  3111  001CF4  0E00               	movlw	0
  3112  001CF6  0100               	movlb	0	; () banked
  3113  001CF8  6FCB               	movwf	(delay_ms@j+1)& (0+255),b
  3114  001CFA  0E00               	movlw	0
  3115  001CFC  6FCA               	movwf	delay_ms@j& (0+255),b
  3116  001CFE  D00C               	goto	l201
  3117  001D00                     l2191:
  3118                           
  3119                           ; BSR set to: 0
  3120  001D00  0E10               	movlw	16
  3121  001D02  0100               	movlb	0	; () banked
  3122  001D04  6FC9               	movwf	??_delay_ms& (0+255),b
  3123  001D06  0E94               	movlw	148
  3124  001D08                     u1617:
  3125  001D08  2EE8               	decfsz	wreg,f,c
  3126  001D0A  D7FE               	goto	u1617
  3127  001D0C  2FC9               	decfsz	??_delay_ms& (0+255),f,b
  3128  001D0E  D7FC               	goto	u1617
  3129  001D10  D000               	nop2	
  3130  001D12  0100               	movlb	0	; () banked
  3131  001D14  4BCA               	infsnz	delay_ms@j& (0+255),f,b
  3132  001D16  2BCB               	incf	(delay_ms@j+1)& (0+255),f,b
  3133  001D18                     l201:
  3134                           
  3135                           ; BSR set to: 0
  3136  001D18  501D               	movf	delay_ms@i,w,c
  3137  001D1A  0100               	movlb	0	; () banked
  3138  001D1C  5DCA               	subwf	delay_ms@j& (0+255),w,b
  3139  001D1E  501E               	movf	delay_ms@i+1,w,c
  3140  001D20  0100               	movlb	0	; () banked
  3141  001D22  59CB               	subwfb	(delay_ms@j+1)& (0+255),w,b
  3142  001D24  B0D8               	btfsc	status,0,c
  3143  001D26  0012               	return	
  3144  001D28  D7EB               	goto	l2191
  3145  001D2A                     __end_of_delay_ms:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           intcon2	equ	0xFF1
  3155                           postinc0	equ	0xFEE
  3156                           wreg	equ	0xFE8
  3157                           postdec1	equ	0xFE5
  3158                           plusw1	equ	0xFE3
  3159                           fsr1l	equ	0xFE1
  3160                           indf2	equ	0xFDF
  3161                           postinc2	equ	0xFDE
  3162                           plusw2	equ	0xFDB
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _char_2_int *****************
  3168 ;; Defined at:
  3169 ;;		line 36 in file "Main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  char1           1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  char1           1   28[COMRAM] unsigned char 
  3174 ;;  int1            1   29[COMRAM] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      unsigned char 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0
  3185 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3187 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    3
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_SetupTime
  3195 ;;		_SetupAlarmTimeA
  3196 ;;		_SetupAlarmTimeB
  3197 ;;		_SetupAlarmTimeC
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text14
  3202  001B14                     __ptext14:
  3203                           	opt stack 0
  3204  001B14                     _char_2_int:
  3205                           	opt stack 26
  3206                           
  3207                           ;incstack = 0
  3208                           ;char_2_int@char1 stored from wreg
  3209  001B14  6E1D               	movwf	char_2_int@char1,c
  3210                           
  3211                           ;Main.c: 38: unsigned char int1;
  3212                           ;Main.c: 39: switch (char1)
  3213  001B16  D015               	goto	l1597
  3214  001B18                     l1577:
  3215  001B18  0E01               	movlw	1
  3216  001B1A  D011               	goto	L10
  3217  001B1C                     l1579:
  3218  001B1C  0E02               	movlw	2
  3219  001B1E  D00F               	goto	L10
  3220  001B20                     l1581:
  3221  001B20  0E03               	movlw	3
  3222  001B22  D00D               	goto	L10
  3223  001B24                     l1583:
  3224  001B24  0E04               	movlw	4
  3225  001B26  D00B               	goto	L10
  3226  001B28                     l1585:
  3227  001B28  0E05               	movlw	5
  3228  001B2A  D009               	goto	L10
  3229  001B2C                     l1587:
  3230  001B2C  0E06               	movlw	6
  3231  001B2E  D007               	goto	L10
  3232  001B30                     l1589:
  3233  001B30  0E07               	movlw	7
  3234  001B32  D005               	goto	L10
  3235  001B34                     l1591:
  3236  001B34  0E08               	movlw	8
  3237  001B36  D003               	goto	L10
  3238  001B38                     l1593:
  3239  001B38  0E09               	movlw	9
  3240  001B3A  D001               	goto	L10
  3241  001B3C                     l1595:
  3242  001B3C  0E00               	movlw	0
  3243  001B3E                     L10:
  3244  001B3E  6E1E               	movwf	char_2_int@int1,c
  3245                           
  3246                           ;Main.c: 52: }
  3247  001B40  D020               	goto	l120
  3248  001B42                     l1597:
  3249  001B42  501D               	movf	char_2_int@char1,w,c
  3250                           
  3251                           ; Switch size 1, requested type "space"
  3252                           ; Number of cases is 10, Range of values is 48 to 57
  3253                           ; switch strategies available:
  3254                           ; Name         Instructions Cycles
  3255                           ; simple_byte           31    16 (average)
  3256                           ;	Chosen strategy is simple_byte
  3257  001B44  0A30               	xorlw	48	; case 48
  3258  001B46  B4D8               	btfsc	status,2,c
  3259  001B48  D7F9               	goto	l1595
  3260  001B4A  0A01               	xorlw	1	; case 49
  3261  001B4C  B4D8               	btfsc	status,2,c
  3262  001B4E  D7E4               	goto	l1577
  3263  001B50  0A03               	xorlw	3	; case 50
  3264  001B52  B4D8               	btfsc	status,2,c
  3265  001B54  D7E3               	goto	l1579
  3266  001B56  0A01               	xorlw	1	; case 51
  3267  001B58  B4D8               	btfsc	status,2,c
  3268  001B5A  D7E2               	goto	l1581
  3269  001B5C  0A07               	xorlw	7	; case 52
  3270  001B5E  B4D8               	btfsc	status,2,c
  3271  001B60  D7E1               	goto	l1583
  3272  001B62  0A01               	xorlw	1	; case 53
  3273  001B64  B4D8               	btfsc	status,2,c
  3274  001B66  D7E0               	goto	l1585
  3275  001B68  0A03               	xorlw	3	; case 54
  3276  001B6A  B4D8               	btfsc	status,2,c
  3277  001B6C  D7DF               	goto	l1587
  3278  001B6E  0A01               	xorlw	1	; case 55
  3279  001B70  B4D8               	btfsc	status,2,c
  3280  001B72  D7DE               	goto	l1589
  3281  001B74  0A0F               	xorlw	15	; case 56
  3282  001B76  B4D8               	btfsc	status,2,c
  3283  001B78  D7DD               	goto	l1591
  3284  001B7A  0A01               	xorlw	1	; case 57
  3285  001B7C  B4D8               	btfsc	status,2,c
  3286  001B7E  D7DC               	goto	l1593
  3287  001B80  D7DD               	goto	l1595
  3288  001B82                     l120:
  3289                           
  3290                           ;Main.c: 53: return(int1);
  3291  001B82  501E               	movf	char_2_int@int1,w,c
  3292  001B84  0012               	return		;funcret
  3293  001B86                     __end_of_char_2_int:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           intcon2	equ	0xFF1
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           postdec1	equ	0xFE5
  3306                           plusw1	equ	0xFE3
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           plusw2	equ	0xFDB
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function _ISR_Timer0_Int *****************
  3316 ;; Defined at:
  3317 ;;		line 56 in file "Main.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  second10        1   27[COMRAM] unsigned char 
  3322 ;;  minute10        1   26[COMRAM] unsigned char 
  3323 ;;  hour10          1   25[COMRAM] unsigned char 
  3324 ;;  second1         1   24[COMRAM] unsigned char 
  3325 ;;  minute1         1   23[COMRAM] unsigned char 
  3326 ;;  hour1           1   22[COMRAM] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3338 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3339 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:       20 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    2
  3343 ;; This function calls:
  3344 ;;		___awdiv
  3345 ;;		_int_2_char
  3346 ;;		i2_lcd_write_cmd
  3347 ;;		i2_lcd_write_data
  3348 ;; This function is called by:
  3349 ;;		Interrupt level 2
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	intcode
  3354  001008                     __pintcode:
  3355                           	opt stack 0
  3356  001008                     _ISR_Timer0_Int:
  3357                           	opt stack 25
  3358                           
  3359                           ;incstack = 0
  3360  001008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3361  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3362  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3363  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3364                           pclatu	equ	0xFFB
  3365                           pclath	equ	0xFFA
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           prodh	equ	0xFF4
  3371                           prodl	equ	0xFF3
  3372                           intcon	equ	0xFF2
  3373                           intcon2	equ	0xFF1
  3374                           postinc0	equ	0xFEE
  3375                           wreg	equ	0xFE8
  3376                           postdec1	equ	0xFE5
  3377                           plusw1	equ	0xFE3
  3378                           fsr1l	equ	0xFE1
  3379                           indf2	equ	0xFDF
  3380                           postinc2	equ	0xFDE
  3381                           plusw2	equ	0xFDB
  3382                           fsr2h	equ	0xFDA
  3383                           fsr2l	equ	0xFD9
  3384                           status	equ	0xFD8
  3385                           
  3386                           	psect	intcode_body
  3387  00102E                     __pintcode_body:
  3388                           	opt stack 25
  3389  00102E                     int_func:
  3390                           	opt stack 25
  3391  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3392  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3393  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3394  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3395  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3396  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3397  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3398  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3399  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3400  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3401  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3402  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3403  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3404                           
  3405                           ;Main.c: 58: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3406                           ;Main.c: 59: if (INTCONbits.TMR0IF == 1)
  3407  001060  A4F2               	btfss	intcon,2,c	;volatile
  3408  001062  D085               	goto	i2l138
  3409                           
  3410                           ;Main.c: 60: {
  3411                           ;Main.c: 64: second = second + 1;
  3412  001064  2842               	incf	_second,w,c
  3413  001066  6E42               	movwf	_second,c
  3414                           
  3415                           ;Main.c: 65: if ( second > 59 )
  3416  001068  0E3B               	movlw	59
  3417  00106A  6442               	cpfsgt	_second,c
  3418  00106C  D010               	goto	i2l2009
  3419                           
  3420                           ;Main.c: 66: {
  3421                           ;Main.c: 67: second = 0;
  3422  00106E  0E00               	movlw	0
  3423  001070  6E42               	movwf	_second,c
  3424                           
  3425                           ;Main.c: 68: minute = minute + 1;
  3426  001072  283E               	incf	_minute,w,c
  3427  001074  6E3E               	movwf	_minute,c
  3428                           
  3429                           ;Main.c: 69: if ( minute > 59 )
  3430  001076  0E3B               	movlw	59
  3431  001078  643E               	cpfsgt	_minute,c
  3432  00107A  D009               	goto	i2l2009
  3433                           
  3434                           ;Main.c: 70: {
  3435                           ;Main.c: 71: minute = 0;
  3436  00107C  0E00               	movlw	0
  3437  00107E  6E3E               	movwf	_minute,c
  3438                           
  3439                           ;Main.c: 72: hour = hour + 1;
  3440  001080  283A               	incf	_hour,w,c
  3441  001082  6E3A               	movwf	_hour,c
  3442                           
  3443                           ;Main.c: 73: if ( hour > 23 )
  3444  001084  0E17               	movlw	23
  3445  001086  643A               	cpfsgt	_hour,c
  3446  001088  D002               	goto	i2l2009
  3447                           
  3448                           ;Main.c: 74: hour = 0;
  3449  00108A  0E00               	movlw	0
  3450  00108C  6E3A               	movwf	_hour,c
  3451  00108E                     i2l2009:
  3452                           
  3453                           ;Main.c: 75: }
  3454                           ;Main.c: 76: }
  3455                           ;Main.c: 78: hour10 = hour / 10;
  3456  00108E  C03A  F001         	movff	_hour,___awdiv@dividend
  3457  001092  6A02               	clrf	___awdiv@dividend+1,c
  3458  001094  0E00               	movlw	0
  3459  001096  6E04               	movwf	___awdiv@divisor+1,c
  3460  001098  0E0A               	movlw	10
  3461  00109A  6E03               	movwf	___awdiv@divisor,c
  3462  00109C  EC53  F00C         	call	___awdiv	;wreg free
  3463  0010A0  5001               	movf	?___awdiv,w,c
  3464  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3465                           
  3466                           ;Main.c: 79: hour1 = hour - hour10 * 10;
  3467  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3468  0010A6  0D0A               	mullw	10
  3469  0010A8  50F3               	movf	prodl,w,c
  3470  0010AA  0800               	sublw	0
  3471  0010AC  243A               	addwf	_hour,w,c
  3472  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3473                           
  3474                           ;Main.c: 81: minute10 = minute / 10;
  3475  0010B0  C03E  F001         	movff	_minute,___awdiv@dividend
  3476  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3477  0010B6  0E00               	movlw	0
  3478  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3479  0010BA  0E0A               	movlw	10
  3480  0010BC  6E03               	movwf	___awdiv@divisor,c
  3481  0010BE  EC53  F00C         	call	___awdiv	;wreg free
  3482  0010C2  5001               	movf	?___awdiv,w,c
  3483  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3484                           
  3485                           ;Main.c: 82: minute1 = minute - minute10 * 10;
  3486  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3487  0010C8  0D0A               	mullw	10
  3488  0010CA  50F3               	movf	prodl,w,c
  3489  0010CC  0800               	sublw	0
  3490  0010CE  243E               	addwf	_minute,w,c
  3491  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3492                           
  3493                           ;Main.c: 84: second10 = second / 10;
  3494  0010D2  C042  F001         	movff	_second,___awdiv@dividend
  3495  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3496  0010D8  0E00               	movlw	0
  3497  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3498  0010DC  0E0A               	movlw	10
  3499  0010DE  6E03               	movwf	___awdiv@divisor,c
  3500  0010E0  EC53  F00C         	call	___awdiv	;wreg free
  3501  0010E4  5001               	movf	?___awdiv,w,c
  3502  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3503                           
  3504                           ;Main.c: 85: second1 = second - second10 * 10;
  3505  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3506  0010EA  0D0A               	mullw	10
  3507  0010EC  50F3               	movf	prodl,w,c
  3508  0010EE  0800               	sublw	0
  3509  0010F0  2442               	addwf	_second,w,c
  3510  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3511                           
  3512                           ;Main.c: 87: lcd_write_cmd(0x80);
  3513  0010F4  0E80               	movlw	128
  3514  0010F6  ECC3  F00D         	call	i2_lcd_write_cmd
  3515                           
  3516                           ;Main.c: 88: lcd_write_data('T');
  3517  0010FA  0E54               	movlw	84
  3518  0010FC  EC09  F00C         	call	i2_lcd_write_data
  3519                           
  3520                           ;Main.c: 89: lcd_write_data('i');
  3521  001100  0E69               	movlw	105
  3522  001102  EC09  F00C         	call	i2_lcd_write_data
  3523                           
  3524                           ;Main.c: 90: lcd_write_data('m');
  3525  001106  0E6D               	movlw	109
  3526  001108  EC09  F00C         	call	i2_lcd_write_data
  3527                           
  3528                           ;Main.c: 91: lcd_write_data('e');
  3529  00110C  0E65               	movlw	101
  3530  00110E  EC09  F00C         	call	i2_lcd_write_data
  3531                           
  3532                           ;Main.c: 92: lcd_write_data(' ');
  3533  001112  0E20               	movlw	32
  3534  001114  EC09  F00C         	call	i2_lcd_write_data
  3535                           
  3536                           ;Main.c: 93: lcd_write_data('=');
  3537  001118  0E3D               	movlw	61
  3538  00111A  EC09  F00C         	call	i2_lcd_write_data
  3539                           
  3540                           ;Main.c: 94: lcd_write_data(' ');
  3541  00111E  0E20               	movlw	32
  3542  001120  EC09  F00C         	call	i2_lcd_write_data
  3543                           
  3544                           ;Main.c: 95: lcd_write_data(int_2_char (hour10));
  3545  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3546  001126  EC4F  F00D         	call	_int_2_char
  3547  00112A  EC09  F00C         	call	i2_lcd_write_data
  3548                           
  3549                           ;Main.c: 96: lcd_write_data(int_2_char (hour1));
  3550  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3551  001130  EC4F  F00D         	call	_int_2_char
  3552  001134  EC09  F00C         	call	i2_lcd_write_data
  3553                           
  3554                           ;Main.c: 97: lcd_write_data(':');
  3555  001138  0E3A               	movlw	58
  3556  00113A  EC09  F00C         	call	i2_lcd_write_data
  3557                           
  3558                           ;Main.c: 98: lcd_write_data(int_2_char (minute10));
  3559  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3560  001140  EC4F  F00D         	call	_int_2_char
  3561  001144  EC09  F00C         	call	i2_lcd_write_data
  3562                           
  3563                           ;Main.c: 99: lcd_write_data(int_2_char (minute1));
  3564  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3565  00114A  EC4F  F00D         	call	_int_2_char
  3566  00114E  EC09  F00C         	call	i2_lcd_write_data
  3567                           
  3568                           ;Main.c: 100: lcd_write_data(':');
  3569  001152  0E3A               	movlw	58
  3570  001154  EC09  F00C         	call	i2_lcd_write_data
  3571                           
  3572                           ;Main.c: 101: lcd_write_data(int_2_char (second10));
  3573  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3574  00115A  EC4F  F00D         	call	_int_2_char
  3575  00115E  EC09  F00C         	call	i2_lcd_write_data
  3576                           
  3577                           ;Main.c: 102: lcd_write_data(int_2_char (second1));
  3578  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3579  001164  EC4F  F00D         	call	_int_2_char
  3580  001168  EC09  F00C         	call	i2_lcd_write_data
  3581                           
  3582                           ;Main.c: 104: INTCONbits.TMR0IF = 0;
  3583  00116C  94F2               	bcf	intcon,2,c	;volatile
  3584  00116E                     i2l138:
  3585  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3586  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3587  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3588  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3589  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3590  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3591  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3592  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3593  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3594  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3595  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3596  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3597  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3598  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3599  0011A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3600  0011A8  0011               	retfie		f
  3601  0011AA                     __end_of_ISR_Timer0_Int:
  3602                           	opt stack 0
  3603                           pclatu	equ	0xFFB
  3604                           pclath	equ	0xFFA
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           intcon2	equ	0xFF1
  3613                           postinc0	equ	0xFEE
  3614                           fsr0h	equ	0xFEA
  3615                           fsr0l	equ	0xFE9
  3616                           wreg	equ	0xFE8
  3617                           postdec1	equ	0xFE5
  3618                           plusw1	equ	0xFE3
  3619                           fsr1h	equ	0xFE2
  3620                           fsr1l	equ	0xFE1
  3621                           indf2	equ	0xFDF
  3622                           postinc2	equ	0xFDE
  3623                           plusw2	equ	0xFDB
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function i2_lcd_write_data *****************
  3629 ;; Defined at:
  3630 ;;		line 43 in file "lcd_utilities.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  data            1    wreg     unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  data            1    2[COMRAM] unsigned char 
  3635 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        3 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		i2_lcd_strobe
  3654 ;; This function is called by:
  3655 ;;		_ISR_Timer0_Int
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text16
  3660  001812                     __ptext16:
  3661                           	opt stack 0
  3662  001812                     i2_lcd_write_data:
  3663                           	opt stack 25
  3664                           
  3665                           ;incstack = 0
  3666                           ;i2lcd_write_data@data stored from wreg
  3667  001812  6E03               	movwf	i2lcd_write_data@data,c
  3668                           
  3669                           ;lcd_utilities.c: 45: char temp1;
  3670                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3671  001814  8C83               	bsf	3971,6,c	;volatile
  3672                           
  3673                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3674  001816  0E3F               	movlw	63
  3675  001818  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3676  00181A  0E55               	movlw	85
  3677  00181C                     i2u162_47:
  3678  00181C  2EE8               	decfsz	wreg,f,c
  3679  00181E  D7FE               	goto	i2u162_47
  3680  001820  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3681  001822  D7FC               	goto	i2u162_47
  3682  001824  F000               	nop	
  3683                           
  3684                           ;lcd_utilities.c: 50: temp1 = data;
  3685  001826  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3686                           
  3687                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3688  00182A  3804               	swapf	i2lcd_write_data@temp1,w,c
  3689  00182C  0B0F               	andlw	15
  3690  00182E  6E04               	movwf	i2lcd_write_data@temp1,c
  3691                           
  3692                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3693  001830  5004               	movf	i2lcd_write_data@temp1,w,c
  3694  001832  0B0F               	andlw	15
  3695  001834  6E83               	movwf	3971,c	;volatile
  3696                           
  3697                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3698  001836  0E7D               	movlw	125
  3699  001838  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3700  00183A  0EAC               	movlw	172
  3701  00183C                     i2u163_47:
  3702  00183C  2EE8               	decfsz	wreg,f,c
  3703  00183E  D7FE               	goto	i2u163_47
  3704  001840  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3705  001842  D7FC               	goto	i2u163_47
  3706                           
  3707                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3708  001844  8C83               	bsf	3971,6,c	;volatile
  3709                           
  3710                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3711  001846  0E7D               	movlw	125
  3712  001848  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3713  00184A  0EAC               	movlw	172
  3714  00184C                     i2u164_47:
  3715  00184C  2EE8               	decfsz	wreg,f,c
  3716  00184E  D7FE               	goto	i2u164_47
  3717  001850  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3718  001852  D7FC               	goto	i2u164_47
  3719                           
  3720                           ;lcd_utilities.c: 57: lcd_strobe();
  3721  001854  ECA6  F00E         	call	i2_lcd_strobe	;wreg free
  3722                           
  3723                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3724  001858  0E7D               	movlw	125
  3725  00185A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3726  00185C  0EAC               	movlw	172
  3727  00185E                     i2u165_47:
  3728  00185E  2EE8               	decfsz	wreg,f,c
  3729  001860  D7FE               	goto	i2u165_47
  3730  001862  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3731  001864  D7FC               	goto	i2u165_47
  3732                           
  3733                           ;lcd_utilities.c: 60: temp1 = data;
  3734  001866  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3735                           
  3736                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3737  00186A  5004               	movf	i2lcd_write_data@temp1,w,c
  3738  00186C  0B0F               	andlw	15
  3739  00186E  6E83               	movwf	3971,c	;volatile
  3740                           
  3741                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3742  001870  0E7D               	movlw	125
  3743  001872  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3744  001874  0EAC               	movlw	172
  3745  001876                     i2u166_47:
  3746  001876  2EE8               	decfsz	wreg,f,c
  3747  001878  D7FE               	goto	i2u166_47
  3748  00187A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3749  00187C  D7FC               	goto	i2u166_47
  3750                           
  3751                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3752  00187E  8C83               	bsf	3971,6,c	;volatile
  3753                           
  3754                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3755  001880  0E9C               	movlw	156
  3756  001882  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3757  001884  0ED7               	movlw	215
  3758  001886                     i2u167_47:
  3759  001886  2EE8               	decfsz	wreg,f,c
  3760  001888  D7FE               	goto	i2u167_47
  3761  00188A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3762  00188C  D7FC               	goto	i2u167_47
  3763  00188E  F000               	nop	
  3764                           
  3765                           ;lcd_utilities.c: 66: lcd_strobe();
  3766  001890  ECA6  F00E         	call	i2_lcd_strobe	;wreg free
  3767                           
  3768                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3769  001894  0E9C               	movlw	156
  3770  001896  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3771  001898  0ED7               	movlw	215
  3772  00189A                     i2u168_47:
  3773  00189A  2EE8               	decfsz	wreg,f,c
  3774  00189C  D7FE               	goto	i2u168_47
  3775  00189E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3776  0018A0  D7FC               	goto	i2u168_47
  3777  0018A2  F000               	nop	
  3778  0018A4  0012               	return		;funcret
  3779  0018A6                     __end_ofi2_lcd_write_data:
  3780                           	opt stack 0
  3781                           pclatu	equ	0xFFB
  3782                           pclath	equ	0xFFA
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           postdec1	equ	0xFE5
  3796                           plusw1	equ	0xFE3
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           plusw2	equ	0xFDB
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function i2_lcd_write_cmd *****************
  3807 ;; Defined at:
  3808 ;;		line 18 in file "lcd_utilities.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  cmd             1    wreg     unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  cmd             1    2[COMRAM] unsigned char 
  3813 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0
  3824 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3825 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3826 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    1
  3830 ;; This function calls:
  3831 ;;		i2_lcd_strobe
  3832 ;; This function is called by:
  3833 ;;		_ISR_Timer0_Int
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text17
  3838  001B86                     __ptext17:
  3839                           	opt stack 0
  3840  001B86                     i2_lcd_write_cmd:
  3841                           	opt stack 25
  3842                           
  3843                           ;incstack = 0
  3844                           ;i2lcd_write_cmd@cmd stored from wreg
  3845  001B86  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3846                           
  3847                           ;lcd_utilities.c: 20: unsigned char temp2;
  3848                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3849  001B88  9C83               	bcf	3971,6,c	;volatile
  3850                           
  3851                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3852  001B8A  0E3F               	movlw	63
  3853  001B8C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3854  001B8E  0E55               	movlw	85
  3855  001B90                     i2u169_47:
  3856  001B90  2EE8               	decfsz	wreg,f,c
  3857  001B92  D7FE               	goto	i2u169_47
  3858  001B94  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3859  001B96  D7FC               	goto	i2u169_47
  3860  001B98  F000               	nop	
  3861                           
  3862                           ;lcd_utilities.c: 23: temp2 = cmd;
  3863  001B9A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3864                           
  3865                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3866  001B9E  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3867  001BA0  0B0F               	andlw	15
  3868  001BA2  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3869                           
  3870                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3871  001BA4  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3872  001BA6  0B0F               	andlw	15
  3873  001BA8  6E83               	movwf	3971,c	;volatile
  3874                           
  3875                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3876  001BAA  0E7D               	movlw	125
  3877  001BAC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3878  001BAE  0EAC               	movlw	172
  3879  001BB0                     i2u170_47:
  3880  001BB0  2EE8               	decfsz	wreg,f,c
  3881  001BB2  D7FE               	goto	i2u170_47
  3882  001BB4  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3883  001BB6  D7FC               	goto	i2u170_47
  3884                           
  3885                           ;lcd_utilities.c: 28: lcd_strobe();
  3886  001BB8  ECA6  F00E         	call	i2_lcd_strobe	;wreg free
  3887                           
  3888                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3889  001BBC  0E7D               	movlw	125
  3890  001BBE  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3891  001BC0  0EAC               	movlw	172
  3892  001BC2                     i2u171_47:
  3893  001BC2  2EE8               	decfsz	wreg,f,c
  3894  001BC4  D7FE               	goto	i2u171_47
  3895  001BC6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3896  001BC8  D7FC               	goto	i2u171_47
  3897                           
  3898                           ;lcd_utilities.c: 32: temp2 = cmd;
  3899  001BCA  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3900                           
  3901                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3902  001BCE  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3903  001BD0  0B0F               	andlw	15
  3904  001BD2  6E83               	movwf	3971,c	;volatile
  3905                           
  3906                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3907  001BD4  0E7D               	movlw	125
  3908  001BD6  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3909  001BD8  0EAC               	movlw	172
  3910  001BDA                     i2u172_47:
  3911  001BDA  2EE8               	decfsz	wreg,f,c
  3912  001BDC  D7FE               	goto	i2u172_47
  3913  001BDE  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3914  001BE0  D7FC               	goto	i2u172_47
  3915                           
  3916                           ;lcd_utilities.c: 36: lcd_strobe();
  3917  001BE2  ECA6  F00E         	call	i2_lcd_strobe	;wreg free
  3918                           
  3919                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3920  001BE6  0E7D               	movlw	125
  3921  001BE8  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3922  001BEA  0EAC               	movlw	172
  3923  001BEC                     i2u173_47:
  3924  001BEC  2EE8               	decfsz	wreg,f,c
  3925  001BEE  D7FE               	goto	i2u173_47
  3926  001BF0  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3927  001BF2  D7FC               	goto	i2u173_47
  3928  001BF4  0012               	return		;funcret
  3929  001BF6                     __end_ofi2_lcd_write_cmd:
  3930                           	opt stack 0
  3931                           pclatu	equ	0xFFB
  3932                           pclath	equ	0xFFA
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           intcon2	equ	0xFF1
  3941                           postinc0	equ	0xFEE
  3942                           fsr0h	equ	0xFEA
  3943                           fsr0l	equ	0xFE9
  3944                           wreg	equ	0xFE8
  3945                           postdec1	equ	0xFE5
  3946                           plusw1	equ	0xFE3
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           indf2	equ	0xFDF
  3950                           postinc2	equ	0xFDE
  3951                           plusw2	equ	0xFDB
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function i2_lcd_strobe *****************
  3957 ;; Defined at:
  3958 ;;		line 73 in file "lcd_utilities.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3974 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3975 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		i2_lcd_write_cmd
  3982 ;;		i2_lcd_write_data
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text18
  3987  001D4C                     __ptext18:
  3988                           	opt stack 0
  3989  001D4C                     i2_lcd_strobe:
  3990                           	opt stack 25
  3991                           
  3992                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3993                           
  3994                           ;incstack = 0
  3995  001D4C  8883               	bsf	3971,4,c	;volatile
  3996                           
  3997                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3998  001D4E  0E7D               	movlw	125
  3999  001D50  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4000  001D52  0EAC               	movlw	172
  4001  001D54                     i2u174_47:
  4002  001D54  2EE8               	decfsz	wreg,f,c
  4003  001D56  D7FE               	goto	i2u174_47
  4004  001D58  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4005  001D5A  D7FC               	goto	i2u174_47
  4006                           
  4007                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  4008  001D5C  9883               	bcf	3971,4,c	;volatile
  4009                           
  4010                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  4011  001D5E  0E7D               	movlw	125
  4012  001D60  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4013  001D62  0EAC               	movlw	172
  4014  001D64                     i2u175_47:
  4015  001D64  2EE8               	decfsz	wreg,f,c
  4016  001D66  D7FE               	goto	i2u175_47
  4017  001D68  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4018  001D6A  D7FC               	goto	i2u175_47
  4019  001D6C  0012               	return		;funcret
  4020  001D6E                     __end_ofi2_lcd_strobe:
  4021                           	opt stack 0
  4022                           pclatu	equ	0xFFB
  4023                           pclath	equ	0xFFA
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           intcon	equ	0xFF2
  4031                           intcon2	equ	0xFF1
  4032                           postinc0	equ	0xFEE
  4033                           fsr0h	equ	0xFEA
  4034                           fsr0l	equ	0xFE9
  4035                           wreg	equ	0xFE8
  4036                           postdec1	equ	0xFE5
  4037                           plusw1	equ	0xFE3
  4038                           fsr1h	equ	0xFE2
  4039                           fsr1l	equ	0xFE1
  4040                           indf2	equ	0xFDF
  4041                           postinc2	equ	0xFDE
  4042                           plusw2	equ	0xFDB
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _int_2_char *****************
  4048 ;; Defined at:
  4049 ;;		line 16 in file "Main.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  int1            1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  int1            1    0[COMRAM] unsigned char 
  4054 ;;  char1           1    1[COMRAM] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      unsigned char 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0
  4065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_ISR_Timer0_Int
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text19
  4078  001A9E                     __ptext19:
  4079                           	opt stack 0
  4080  001A9E                     _int_2_char:
  4081                           	opt stack 26
  4082                           
  4083                           ;incstack = 0
  4084                           ;int_2_char@int1 stored from wreg
  4085  001A9E  6E01               	movwf	int_2_char@int1,c
  4086                           
  4087                           ;Main.c: 18: char char1;
  4088                           ;Main.c: 19: switch (int1)
  4089  001AA0  D017               	goto	i2l983
  4090  001AA2                     i2l961:
  4091  001AA2  0E30               	movlw	48
  4092  001AA4  D013               	goto	L20
  4093  001AA6                     i2l963:
  4094  001AA6  0E31               	movlw	49
  4095  001AA8  D011               	goto	L20
  4096  001AAA                     i2l965:
  4097  001AAA  0E32               	movlw	50
  4098  001AAC  D00F               	goto	L20
  4099  001AAE                     i2l967:
  4100  001AAE  0E33               	movlw	51
  4101  001AB0  D00D               	goto	L20
  4102  001AB2                     i2l969:
  4103  001AB2  0E34               	movlw	52
  4104  001AB4  D00B               	goto	L20
  4105  001AB6                     i2l971:
  4106  001AB6  0E35               	movlw	53
  4107  001AB8  D009               	goto	L20
  4108  001ABA                     i2l973:
  4109  001ABA  0E36               	movlw	54
  4110  001ABC  D007               	goto	L20
  4111  001ABE                     i2l975:
  4112  001ABE  0E37               	movlw	55
  4113  001AC0  D005               	goto	L20
  4114  001AC2                     i2l977:
  4115  001AC2  0E38               	movlw	56
  4116  001AC4  D003               	goto	L20
  4117  001AC6                     i2l979:
  4118  001AC6  0E39               	movlw	57
  4119  001AC8  D001               	goto	L20
  4120  001ACA                     i2l981:
  4121  001ACA  0E3F               	movlw	63
  4122  001ACC                     L20:
  4123  001ACC  6E02               	movwf	int_2_char@char1,c
  4124                           
  4125                           ;Main.c: 32: }
  4126  001ACE  D020               	goto	i2l104
  4127  001AD0                     i2l983:
  4128  001AD0  5001               	movf	int_2_char@int1,w,c
  4129                           
  4130                           ; Switch size 1, requested type "space"
  4131                           ; Number of cases is 10, Range of values is 0 to 9
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte           31    16 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  001AD2  0A00               	xorlw	0	; case 0
  4137  001AD4  B4D8               	btfsc	status,2,c
  4138  001AD6  D7E5               	goto	i2l961
  4139  001AD8  0A01               	xorlw	1	; case 1
  4140  001ADA  B4D8               	btfsc	status,2,c
  4141  001ADC  D7E4               	goto	i2l963
  4142  001ADE  0A03               	xorlw	3	; case 2
  4143  001AE0  B4D8               	btfsc	status,2,c
  4144  001AE2  D7E3               	goto	i2l965
  4145  001AE4  0A01               	xorlw	1	; case 3
  4146  001AE6  B4D8               	btfsc	status,2,c
  4147  001AE8  D7E2               	goto	i2l967
  4148  001AEA  0A07               	xorlw	7	; case 4
  4149  001AEC  B4D8               	btfsc	status,2,c
  4150  001AEE  D7E1               	goto	i2l969
  4151  001AF0  0A01               	xorlw	1	; case 5
  4152  001AF2  B4D8               	btfsc	status,2,c
  4153  001AF4  D7E0               	goto	i2l971
  4154  001AF6  0A03               	xorlw	3	; case 6
  4155  001AF8  B4D8               	btfsc	status,2,c
  4156  001AFA  D7DF               	goto	i2l973
  4157  001AFC  0A01               	xorlw	1	; case 7
  4158  001AFE  B4D8               	btfsc	status,2,c
  4159  001B00  D7DE               	goto	i2l975
  4160  001B02  0A0F               	xorlw	15	; case 8
  4161  001B04  B4D8               	btfsc	status,2,c
  4162  001B06  D7DD               	goto	i2l977
  4163  001B08  0A01               	xorlw	1	; case 9
  4164  001B0A  B4D8               	btfsc	status,2,c
  4165  001B0C  D7DC               	goto	i2l979
  4166  001B0E  D7DD               	goto	i2l981
  4167  001B10                     i2l104:
  4168                           
  4169                           ;Main.c: 33: return(char1);
  4170  001B10  5002               	movf	int_2_char@char1,w,c
  4171  001B12  0012               	return		;funcret
  4172  001B14                     __end_of_int_2_char:
  4173                           	opt stack 0
  4174                           pclatu	equ	0xFFB
  4175                           pclath	equ	0xFFA
  4176                           tblptru	equ	0xFF8
  4177                           tblptrh	equ	0xFF7
  4178                           tblptrl	equ	0xFF6
  4179                           tablat	equ	0xFF5
  4180                           prodh	equ	0xFF4
  4181                           prodl	equ	0xFF3
  4182                           intcon	equ	0xFF2
  4183                           intcon2	equ	0xFF1
  4184                           postinc0	equ	0xFEE
  4185                           fsr0h	equ	0xFEA
  4186                           fsr0l	equ	0xFE9
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           plusw1	equ	0xFE3
  4190                           fsr1h	equ	0xFE2
  4191                           fsr1l	equ	0xFE1
  4192                           indf2	equ	0xFDF
  4193                           postinc2	equ	0xFDE
  4194                           plusw2	equ	0xFDB
  4195                           fsr2h	equ	0xFDA
  4196                           fsr2l	equ	0xFD9
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function ___awdiv *****************
  4200 ;; Defined at:
  4201 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  dividend        2    0[COMRAM] int 
  4204 ;;  divisor         2    2[COMRAM] int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  quotient        2    6[COMRAM] int 
  4207 ;;  sign            1    5[COMRAM] unsigned char 
  4208 ;;  counter         1    4[COMRAM] unsigned char 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2    0[COMRAM] int 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4218 ;;      Params:         4       0       0       0       0       0       0       0       0
  4219 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4221 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4222 ;;Total ram usage:        8 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_ISR_Timer0_Int
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text20
  4232  0018A6                     __ptext20:
  4233                           	opt stack 0
  4234  0018A6                     ___awdiv:
  4235                           	opt stack 26
  4236                           
  4237                           ;incstack = 0
  4238  0018A6  0E00               	movlw	0
  4239  0018A8  6E06               	movwf	___awdiv@sign,c
  4240  0018AA  AE04               	btfss	___awdiv@divisor+1,7,c
  4241  0018AC  D006               	goto	i2l1895
  4242  0018AE  6C03               	negf	___awdiv@divisor,c
  4243  0018B0  1E04               	comf	___awdiv@divisor+1,f,c
  4244  0018B2  B0D8               	btfsc	status,0,c
  4245  0018B4  2A04               	incf	___awdiv@divisor+1,f,c
  4246  0018B6  0E01               	movlw	1
  4247  0018B8  6E06               	movwf	___awdiv@sign,c
  4248  0018BA                     i2l1895:
  4249  0018BA  AE02               	btfss	___awdiv@dividend+1,7,c
  4250  0018BC  D006               	goto	i2l1901
  4251  0018BE  6C01               	negf	___awdiv@dividend,c
  4252  0018C0  1E02               	comf	___awdiv@dividend+1,f,c
  4253  0018C2  B0D8               	btfsc	status,0,c
  4254  0018C4  2A02               	incf	___awdiv@dividend+1,f,c
  4255  0018C6  0E01               	movlw	1
  4256  0018C8  1A06               	xorwf	___awdiv@sign,f,c
  4257  0018CA                     i2l1901:
  4258  0018CA  0E00               	movlw	0
  4259  0018CC  6E08               	movwf	___awdiv@quotient+1,c
  4260  0018CE  0E00               	movlw	0
  4261  0018D0  6E07               	movwf	___awdiv@quotient,c
  4262  0018D2  5003               	movf	___awdiv@divisor,w,c
  4263  0018D4  1004               	iorwf	___awdiv@divisor+1,w,c
  4264  0018D6  B4D8               	btfsc	status,2,c
  4265  0018D8  D01C               	goto	i2l1923
  4266  0018DA  0E01               	movlw	1
  4267  0018DC  6E05               	movwf	___awdiv@counter,c
  4268  0018DE  D004               	goto	i2l1909
  4269  0018E0                     i2l1907:
  4270  0018E0  90D8               	bcf	status,0,c
  4271  0018E2  3603               	rlcf	___awdiv@divisor,f,c
  4272  0018E4  3604               	rlcf	___awdiv@divisor+1,f,c
  4273  0018E6  2A05               	incf	___awdiv@counter,f,c
  4274  0018E8                     i2l1909:
  4275  0018E8  AE04               	btfss	___awdiv@divisor+1,7,c
  4276  0018EA  D7FA               	goto	i2l1907
  4277  0018EC                     i2l1911:
  4278  0018EC  90D8               	bcf	status,0,c
  4279  0018EE  3607               	rlcf	___awdiv@quotient,f,c
  4280  0018F0  3608               	rlcf	___awdiv@quotient+1,f,c
  4281  0018F2  5003               	movf	___awdiv@divisor,w,c
  4282  0018F4  5C01               	subwf	___awdiv@dividend,w,c
  4283  0018F6  5004               	movf	___awdiv@divisor+1,w,c
  4284  0018F8  5802               	subwfb	___awdiv@dividend+1,w,c
  4285  0018FA  A0D8               	btfss	status,0,c
  4286  0018FC  D005               	goto	i2l1919
  4287  0018FE  5003               	movf	___awdiv@divisor,w,c
  4288  001900  5E01               	subwf	___awdiv@dividend,f,c
  4289  001902  5004               	movf	___awdiv@divisor+1,w,c
  4290  001904  5A02               	subwfb	___awdiv@dividend+1,f,c
  4291  001906  8007               	bsf	___awdiv@quotient,0,c
  4292  001908                     i2l1919:
  4293  001908  90D8               	bcf	status,0,c
  4294  00190A  3204               	rrcf	___awdiv@divisor+1,f,c
  4295  00190C  3203               	rrcf	___awdiv@divisor,f,c
  4296  00190E  2E05               	decfsz	___awdiv@counter,f,c
  4297  001910  D7ED               	goto	i2l1911
  4298  001912                     i2l1923:
  4299  001912  5006               	movf	___awdiv@sign,w,c
  4300  001914  B4D8               	btfsc	status,2,c
  4301  001916  D004               	goto	i2l1927
  4302  001918  6C07               	negf	___awdiv@quotient,c
  4303  00191A  1E08               	comf	___awdiv@quotient+1,f,c
  4304  00191C  B0D8               	btfsc	status,0,c
  4305  00191E  2A08               	incf	___awdiv@quotient+1,f,c
  4306  001920                     i2l1927:
  4307  001920  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4308  001924  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4309  001928  0012               	return	
  4310  00192A                     __end_of___awdiv:
  4311                           	opt stack 0
  4312                           pclatu	equ	0xFFB
  4313                           pclath	equ	0xFFA
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           intcon2	equ	0xFF1
  4322                           postinc0	equ	0xFEE
  4323                           fsr0h	equ	0xFEA
  4324                           fsr0l	equ	0xFE9
  4325                           wreg	equ	0xFE8
  4326                           postdec1	equ	0xFE5
  4327                           plusw1	equ	0xFE3
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           plusw2	equ	0xFDB
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           pclatu	equ	0xFFB
  4337                           pclath	equ	0xFFA
  4338                           tblptru	equ	0xFF8
  4339                           tblptrh	equ	0xFF7
  4340                           tblptrl	equ	0xFF6
  4341                           tablat	equ	0xFF5
  4342                           prodh	equ	0xFF4
  4343                           prodl	equ	0xFF3
  4344                           intcon	equ	0xFF2
  4345                           intcon2	equ	0xFF1
  4346                           postinc0	equ	0xFEE
  4347                           fsr0h	equ	0xFEA
  4348                           fsr0l	equ	0xFE9
  4349                           wreg	equ	0xFE8
  4350                           postdec1	equ	0xFE5
  4351                           plusw1	equ	0xFE3
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           plusw2	equ	0xFDB
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361                           	psect	rparam
  4362  0000                     pclatu	equ	0xFFB
  4363                           pclath	equ	0xFFA
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           intcon2	equ	0xFF1
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           plusw1	equ	0xFE3
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           plusw2	equ	0xFDB
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8
  4386                           
  4387                           	psect	temp
  4388  000043                     btemp:
  4389                           	opt stack 0
  4390  000043                     	ds	1
  4391  0000                     int$flags	set	btemp
  4392                           pclatu	equ	0xFFB
  4393                           pclath	equ	0xFFA
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           intcon2	equ	0xFF1
  4402                           postinc0	equ	0xFEE
  4403                           fsr0h	equ	0xFEA
  4404                           fsr0l	equ	0xFE9
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           plusw1	equ	0xFE3
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           postinc2	equ	0xFDE
  4412                           plusw2	equ	0xFDB
  4413                           fsr2h	equ	0xFDA
  4414                           fsr2l	equ	0xFD9
  4415                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        147
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      66
    BANK0           160     49     154
    BANK1           256      0      21
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _Startup->_lcd_write_cmd
    _Startup->_lcd_write_data
    _SetupTime->_char_2_int
    _SetupTime->_delay_ms
    _SetupTime->_lcd_write_cmd
    _SetupTime->_lcd_write_data
    _SetupAlarmTimeC->_char_2_int
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeC->_lcd_write_cmd
    _SetupAlarmTimeC->_lcd_write_data
    _SetupAlarmTimeB->_char_2_int
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeB->_lcd_write_cmd
    _SetupAlarmTimeB->_lcd_write_data
    _SetupAlarmTimeA->_char_2_int
    _SetupAlarmTimeA->_delay_ms
    _SetupAlarmTimeA->_lcd_write_cmd
    _SetupAlarmTimeA->_lcd_write_data
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8343
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                            _Startup
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              2 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              2 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _Startup                                             44    44      0    1199
                                              3 BANK0     44    44      0
                           _delay_ms
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1752
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     531
                                             28 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _Startup
     _delay_ms
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      15       7        8.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 16 07:33:24 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1CC6  
                                   l36 1CD2                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l120 1B82  
                                  l201 1D18                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4270 101B  
                                 l2211 1972                                   l2203 1942  
                                 l2221 11C8                                   l2207 1958  
                                 l2233 11F8                                   l2225 11D2  
                                 l2401 1302                                   l2331 1526  
                                 l2323 1500                                   l2413 1332  
                                 l2405 130C                                   l2501 171A  
                                 l2191 1D00                                   l2319 14F6  
                                 l2281 15F8                                   l2361 13FE  
                                 l2513 1744                                   l2443 13B6  
                                 l1581 1B20                                   l2277 15EE  
                                 l2373 142E                                   l2365 1408  
                                 l2461 1C88                                   l2525 176E  
                                 l1591 1B34                                   l1583 1B24  
                                 l2439 13AC                                   l1593 1B38  
                                 l1585 1B28                                   l1577 1B18  
                                 l2289 161E                                   l2457 1C7E  
                                 l1595 1B3C                                   l1587 1B2C  
                                 l1579 1B1C                                   l1589 1B30  
                                 l1597 1B42                                   l2489 16F0  
                                 u1121 11B4                                   u1050 1CBC  
                                 u1211 13E6                                   u1301 1C6A  
                                 u1151 15D6                                   u1241 12EE  
                                 u1181 14DE                                   u1271 1398  
                                 u1507 17C8                                   u1517 17E2  
                                 u1607 1D42                                   u1527 17F2  
                                 u1617 1D08                                   u1537 1806  
                                 u1457 1960                                   u1547 1A30  
                                 u1467 199E                                   u1557 1A56  
                                 u1477 1780                                   u1567 1A68  
                                 u1487 17A6                                   u1577 1A82  
                                 u1497 17B6                                   u1587 1A94  
                                 u1597 1D32                 __end_of_lcd_write_data 1812  
                                 _main 16C4                                   _hour 003A  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0043  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 18A6  
                         ___param_bank 000010                           Startup@F4351 00B4  
                         Startup@F4353 001F                        __end_of_Startup 13DC  
                                ?_main 0001                        __end_of___awdiv 192A  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l104 1B10  
                                i2l138 116E                                  i2l961 1AA2  
                                i2l971 1AB6                                  i2l963 1AA6  
                      ___awdiv@counter 0005                                  i2l981 1ACA  
                                i2l973 1ABA                                  i2l965 1AAA  
                                i2l975 1ABE                                  i2l967 1AAE  
                                i2l983 1AD0                                  i2l977 1AC2  
                                i2l969 1AB2                                  i2l979 1AC6  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 00C9  
                                _hourA 003B                                  _hourB 003C  
                                _hourC 003D                                  tablat 000FF5  
                                plusw1 000FE3                                  plusw2 000FDB  
                      ?_lcd_write_data 0001                        __end_of_version 1CAE  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00C9                        __initialization 19AA  
                         __end_of_main 1774                     Startup@StartupDone 00E1  
                               ??_main 001F                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                         version@F4277 0100                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1D4C                                 i2l2009 108E  
                               i2l1901 18CA                                 i2l1911 18EC  
                               i2l1907 18E0                                 i2l1923 1912  
                               i2l1909 18E8                                 i2l1927 1920  
                               i2l1919 1908                                 i2l1895 18BA  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1D2A  
                     __end_of_lcd_init 19AA                         char_2_int@int1 001E  
                            ??_Startup 001F                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1CAE  
                               clear_0 1A10                       ___awdiv@quotient 0007  
                               _minute 003E                                 _second 0042  
                         __pdataCOMRAM 001F                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 001F                             __accesstop 0060  
              __end_of__initialization 1A16                          getkey@keycode 00DB  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1BF6  
                         __pidataBANK1 1D9F                             _char_2_int 1B14  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1D2A               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 00C9  
                   lcd_write_cmd@temp2 00CA                         Startup@Startup 00CC  
                           _int_2_char 1A9E                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              _Startup 12E4                                ___awdiv 18A6  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1B86                                __pcinit 19AA  
                       Startup@outchar 00F6                                __ramtop 0800  
                              __ptext0 16C4                                __ptext1 1C60  
                              __ptext2 192A                                __ptext3 12E4  
                              __ptext4 1D6E                                __ptext5 11AA  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 15CC                                __ptext9 1774  
                            _T0CONbits 000FD5                         SetupTime@F4315 009F  
                              _minuteA 003F                                _minuteB 0040  
                              _minuteC 0041                             ??_delay_ms 00C9  
                          ?_char_2_int 0001                                _version 1C60  
                           ??_lcd_init 00CB                         __pintcode_body 102E  
                 end_of_initialization 1A16                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00F9  
                       SetupTime@hour1 00F3                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00F2                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00F2                  SetupAlarmTimeC@hour10 00F2  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                            _AlarmAOff 0034                              _AlarmBOff 0036  
                            _AlarmCOff 0038                      ??_SetupAlarmTimeA 001F  
                    ??_SetupAlarmTimeB 001F                      ??_SetupAlarmTimeC 001F  
                __end_of_lcd_write_cmd 1A9E                __end_ofi2_lcd_write_cmd 1BF6  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1D8A  
                       __end_of_getkey 1CEC                    start_initialization 19AA  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00E1                              _SetupTime 11AA  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    SetupTime@minute10 00F4                      SetupTime@second10 00F6  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00F8  
                          __pbssCOMRAM 0034              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00C9                      __size_of_delay_ms 003E  
                    __size_of_lcd_init 0080                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?_Startup 0001  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4325 0060                   SetupAlarmTimeB@F4335 0075  
                            delay_ms@i 001D                              delay_ms@j 00CA  
                 SetupAlarmTimeC@F4345 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u170_47 1BB0                               i2u162_47 181C  
                             i2u171_47 1BC2                               i2u163_47 183C  
                             i2u172_47 1BDA                               i2u164_47 184C  
                             i2u173_47 1BEC                               i2u165_47 185E  
                             i2u174_47 1D54                               i2u166_47 1876  
                             i2u175_47 1D64                               i2u167_47 1886  
                             i2u168_47 189A                               i2u169_47 1B90  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00F7  
                 SetupAlarmTimeA@hour1 00F3                   SetupAlarmTimeB@ctemp 00F7  
                   __end_of_char_2_int 1B86                   SetupAlarmTimeB@hour1 00F3  
                 SetupAlarmTimeC@ctemp 00F7                   SetupAlarmTimeC@hour1 00F3  
                            lcd_init@i 00CC                    lcd_write_data@temp1 00CA  
                      _SetupAlarmTimeA 15CC                        _SetupAlarmTimeB 14D4  
                      _SetupAlarmTimeC 13DC                         ??i2_lcd_strobe 0001  
                       version@Version 00CB                           ??_lcd_strobe 001D  
                     SetupTime@Message 00DC                              copy_data0 19BE  
                            copy_data1 19DE                              copy_data2 19FE  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1D8A  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1D6E  
              __size_of_lcd_write_data 009E                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                       version@outchar 00E0                            ??_SetupTime 001F  
                     SetupTime@minute1 00F5                       SetupTime@second1 00F7  
                     __size_of_Startup 00F8                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1D4C                       SetupTime@outchar 00F1  
                      Startup@msgindex 00F7                     __end_of_int_2_char 1B14  
                     i2_lcd_write_data 1812                               _delay_ms 1CEC  
                             __ptext10 1A24                               __ptext11 1D2A  
                             __ptext20 18A6                               __ptext12 1CAE  
                             __ptext13 1CEC                               __ptext14 1B14  
                             __ptext16 1812                               __ptext17 1B86  
                             __ptext18 1D4C                               __ptext19 1A9E  
                             _lcd_init 192A                       __size_of_version 004E  
                        __size_of_main 00B0          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0043                __end_of_SetupAlarmTimeA 16C4  
              __end_of_SetupAlarmTimeB 15CC                __end_of_SetupAlarmTimeC 14D4  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 007A  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00F2  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1D6E                 SetupAlarmTimeA@Message 00DC  
               SetupAlarmTimeB@Message 00DC                 SetupAlarmTimeC@Message 00DC  
              SetupAlarmTimeA@minute10 00F4                SetupAlarmTimeA@msgindex 00F6  
              SetupAlarmTimeB@minute10 00F4                SetupAlarmTimeB@msgindex 00F6  
              SetupAlarmTimeC@minute10 00F4                SetupAlarmTimeC@msgindex 00F6  
               SetupAlarmTimeA@minute1 00F5                 SetupAlarmTimeB@minute1 00F5  
               SetupAlarmTimeA@outchar 00F1                 SetupAlarmTimeC@minute1 00F5  
               SetupAlarmTimeB@outchar 00F1                         _lcd_write_data 1774  
               SetupAlarmTimeC@outchar 00F1                          _lcd_write_cmd 1A24  
