

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Aug 15 17:22:07 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001C14                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for version@F4451
    44  001C14  45                 	db	69
    45  001C15  54                 	db	84
    46  001C16  54                 	db	84
    47  001C17  20                 	db	32
    48  001C18  56                 	db	86
    49  001C19  65                 	db	101
    50  001C1A  72                 	db	114
    51  001C1B  73                 	db	115
    52  001C1C  69                 	db	105
    53  001C1D  6F                 	db	111
    54  001C1E  6E                 	db	110
    55  001C1F  20                 	db	32
    56  001C20  31                 	db	49
    57  001C21  2E                 	db	46
    58  001C22  33                 	db	51
    59  001C23  20                 	db	32
    60  001C24  20                 	db	32
    61  001C25  20                 	db	32
    62  001C26  20                 	db	32
    63  001C27  20                 	db	32
    64  001C28  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001AA0                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4496
    71  001AA0  53                 	db	83
    72  001AA1  75                 	db	117
    73  001AA2  62                 	db	98
    74  001AA3  6A                 	db	106
    75  001AA4  65                 	db	101
    76  001AA5  63                 	db	99
    77  001AA6  74                 	db	116
    78  001AA7  20                 	db	32
    79  001AA8  41                 	db	65
    80  001AA9  20                 	db	32
    81  001AAA  54                 	db	84
    82  001AAB  69                 	db	105
    83  001AAC  6D                 	db	109
    84  001AAD  65                 	db	101
    85  001AAE  20                 	db	32
    86  001AAF  68                 	db	104
    87  001AB0  68                 	db	104
    88  001AB1  6D                 	db	109
    89  001AB2  6D                 	db	109
    90  001AB3  3A                 	db	58
    91  001AB4  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4506
    94  001AB5  53                 	db	83
    95  001AB6  75                 	db	117
    96  001AB7  62                 	db	98
    97  001AB8  6A                 	db	106
    98  001AB9  65                 	db	101
    99  001ABA  63                 	db	99
   100  001ABB  74                 	db	116
   101  001ABC  20                 	db	32
   102  001ABD  42                 	db	66
   103  001ABE  20                 	db	32
   104  001ABF  54                 	db	84
   105  001AC0  69                 	db	105
   106  001AC1  6D                 	db	109
   107  001AC2  65                 	db	101
   108  001AC3  20                 	db	32
   109  001AC4  68                 	db	104
   110  001AC5  68                 	db	104
   111  001AC6  6D                 	db	109
   112  001AC7  6D                 	db	109
   113  001AC8  3A                 	db	58
   114  001AC9  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4516
   117  001ACA  53                 	db	83
   118  001ACB  75                 	db	117
   119  001ACC  62                 	db	98
   120  001ACD  6A                 	db	106
   121  001ACE  65                 	db	101
   122  001ACF  63                 	db	99
   123  001AD0  74                 	db	116
   124  001AD1  20                 	db	32
   125  001AD2  43                 	db	67
   126  001AD3  20                 	db	32
   127  001AD4  54                 	db	84
   128  001AD5  69                 	db	105
   129  001AD6  6D                 	db	109
   130  001AD7  65                 	db	101
   131  001AD8  20                 	db	32
   132  001AD9  68                 	db	104
   133  001ADA  68                 	db	104
   134  001ADB  6D                 	db	109
   135  001ADC  6D                 	db	109
   136  001ADD  3A                 	db	58
   137  001ADE  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4486
   140  001ADF  53                 	db	83
   141  001AE0  65                 	db	101
   142  001AE1  74                 	db	116
   143  001AE2  20                 	db	32
   144  001AE3  74                 	db	116
   145  001AE4  69                 	db	105
   146  001AE5  6D                 	db	109
   147  001AE6  65                 	db	101
   148  001AE7  20                 	db	32
   149  001AE8  68                 	db	104
   150  001AE9  68                 	db	104
   151  001AEA  6D                 	db	109
   152  001AEB  6D                 	db	109
   153  001AEC  73                 	db	115
   154  001AED  73                 	db	115
   155  001AEE  3A                 	db	58
   156  001AEF  20                 	db	32
   157  001AF0  20                 	db	32
   158  001AF1  20                 	db	32
   159  001AF2  20                 	db	32
   160  001AF3  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4444:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4444:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTB	set	3969
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTD	set	3971
   197  0000                     _PORTDbits	set	3971
   198  0000                     _RCONbits	set	4048
   199  0000                     _T0CON	set	4053
   200  0000                     _T0CONbits	set	4053
   201  0000                     _TMR0H	set	4055
   202  0000                     _TMR0L	set	4054
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISD	set	3989
   205  00102D  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  001A46                     __pcinit:
   211                           	opt stack 0
   212  001A46                     start_initialization:
   213                           	opt stack 0
   214  001A46                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Clear objects allocated to COMRAM (9 bytes)
   218  001A46  EE00  F039         	lfsr	0,__pbssCOMRAM
   219  001A4A  0E09               	movlw	9
   220  001A4C                     clear_0:
   221  001A4C  6AEE               	clrf	postinc0,c
   222  001A4E  06E8               	decf	wreg,f,c
   223  001A50  E1FD               	bnz	clear_0
   224                           
   225                           ; Initialize objects allocated to BANK0 (84 bytes)
   226                           ; load TBLPTR registers with __pidataBANK0
   227  001A52  0EA0               	movlw	low __pidataBANK0
   228  001A54  6EF6               	movwf	tblptrl,c
   229  001A56  0E1A               	movlw	high __pidataBANK0
   230  001A58  6EF7               	movwf	tblptrh,c
   231  001A5A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   232  001A5C  6EF8               	movwf	tblptru,c
   233  001A5E  EE00  F060         	lfsr	0,__pdataBANK0
   234  001A62  EE10 F054          	lfsr	1,84
   235  001A66                     copy_data0:
   236  001A66  0009               	tblrd		*+
   237  001A68  CFF5 FFEE          	movff	tablat,postinc0
   238  001A6C  50E5               	movf	postdec1,w,c
   239  001A6E  50E1               	movf	fsr1l,w,c
   240  001A70  E1FA               	bnz	copy_data0
   241                           
   242                           ; Initialize objects allocated to COMRAM (21 bytes)
   243                           ; load TBLPTR registers with __pidataCOMRAM
   244  001A72  0E14               	movlw	low __pidataCOMRAM
   245  001A74  6EF6               	movwf	tblptrl,c
   246  001A76  0E1C               	movlw	high __pidataCOMRAM
   247  001A78  6EF7               	movwf	tblptrh,c
   248  001A7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   249  001A7C  6EF8               	movwf	tblptru,c
   250  001A7E  EE00  F024         	lfsr	0,__pdataCOMRAM
   251  001A82  EE10 F015          	lfsr	1,21
   252  001A86                     copy_data1:
   253  001A86  0009               	tblrd		*+
   254  001A88  CFF5 FFEE          	movff	tablat,postinc0
   255  001A8C  50E5               	movf	postdec1,w,c
   256  001A8E  50E1               	movf	fsr1l,w,c
   257  001A90  E1FA               	bnz	copy_data1
   258  001A92                     end_of_initialization:
   259                           	opt stack 0
   260  001A92                     __end_of__initialization:
   261                           	opt stack 0
   262  001A92  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  001A94  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  001A96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   265  001A98  6EF8               	movwf	tblptru,c
   266  001A9A  0100               	movlb	0
   267  001A9C  EFE6  F00A         	goto	_main	;jump to C main() function
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssCOMRAM
   278  000039                     __pbssCOMRAM:
   279                           	opt stack 0
   280  000039                     _hour:
   281                           	opt stack 0
   282  000039                     	ds	1
   283  00003A                     _hourA:
   284                           	opt stack 0
   285  00003A                     	ds	1
   286  00003B                     _hourB:
   287                           	opt stack 0
   288  00003B                     	ds	1
   289  00003C                     _hourC:
   290                           	opt stack 0
   291  00003C                     	ds	1
   292  00003D                     _minute:
   293                           	opt stack 0
   294  00003D                     	ds	1
   295  00003E                     _minuteA:
   296                           	opt stack 0
   297  00003E                     	ds	1
   298  00003F                     _minuteB:
   299                           	opt stack 0
   300  00003F                     	ds	1
   301  000040                     _minuteC:
   302                           	opt stack 0
   303  000040                     	ds	1
   304  000041                     _second:
   305                           	opt stack 0
   306  000041                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  000024                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000024                     version@F4451:
   320                           	opt stack 0
   321  000024                     	ds	21
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	dataBANK0
   332  000060                     __pdataBANK0:
   333                           	opt stack 0
   334  000060                     SetupAlarmTimeA@F4496:
   335                           	opt stack 0
   336  000060                     	ds	21
   337  000075                     SetupAlarmTimeB@F4506:
   338                           	opt stack 0
   339  000075                     	ds	21
   340  00008A                     SetupAlarmTimeC@F4516:
   341                           	opt stack 0
   342  00008A                     	ds	21
   343  00009F                     SetupTime@F4486:
   344                           	opt stack 0
   345  00009F                     	ds	21
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackBANK0
   356  0000B4                     __pcstackBANK0:
   357                           	opt stack 0
   358  0000B4                     getkey@lookup:
   359                           	opt stack 0
   360  0000B4                     version@Version:
   361                           	opt stack 0
   362                           
   363                           ; 21 bytes @ 0x0
   364  0000B4                     	ds	18
   365  0000C6                     getkey@keycode:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x12
   369  0000C6                     	ds	1
   370  0000C7                     SetupTime@Message:
   371                           	opt stack 0
   372  0000C7                     SetupAlarmTimeA@Message:
   373                           	opt stack 0
   374  0000C7                     SetupAlarmTimeB@Message:
   375                           	opt stack 0
   376  0000C7                     SetupAlarmTimeC@Message:
   377                           	opt stack 0
   378                           
   379                           ; 21 bytes @ 0x13
   380  0000C7                     	ds	2
   381  0000C9                     version@outchar:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  0000C9                     	ds	1
   386  0000CA                     version@msgindex:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x16
   390  0000CA                     	ds	18
   391  0000DC                     SetupTime@outchar:
   392                           	opt stack 0
   393  0000DC                     SetupAlarmTimeA@outchar:
   394                           	opt stack 0
   395  0000DC                     SetupAlarmTimeB@outchar:
   396                           	opt stack 0
   397  0000DC                     SetupAlarmTimeC@outchar:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x28
   401  0000DC                     	ds	1
   402  0000DD                     SetupTime@hour10:
   403                           	opt stack 0
   404  0000DD                     SetupAlarmTimeA@hour10:
   405                           	opt stack 0
   406  0000DD                     SetupAlarmTimeB@hour10:
   407                           	opt stack 0
   408  0000DD                     SetupAlarmTimeC@hour10:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x29
   412  0000DD                     	ds	1
   413  0000DE                     SetupTime@hour1:
   414                           	opt stack 0
   415  0000DE                     SetupAlarmTimeA@hour1:
   416                           	opt stack 0
   417  0000DE                     SetupAlarmTimeB@hour1:
   418                           	opt stack 0
   419  0000DE                     SetupAlarmTimeC@hour1:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x2A
   423  0000DE                     	ds	1
   424  0000DF                     SetupTime@minute10:
   425                           	opt stack 0
   426  0000DF                     SetupAlarmTimeA@minute10:
   427                           	opt stack 0
   428  0000DF                     SetupAlarmTimeB@minute10:
   429                           	opt stack 0
   430  0000DF                     SetupAlarmTimeC@minute10:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x2B
   434  0000DF                     	ds	1
   435  0000E0                     SetupTime@minute1:
   436                           	opt stack 0
   437  0000E0                     SetupAlarmTimeA@minute1:
   438                           	opt stack 0
   439  0000E0                     SetupAlarmTimeB@minute1:
   440                           	opt stack 0
   441  0000E0                     SetupAlarmTimeC@minute1:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x2C
   445  0000E0                     	ds	1
   446  0000E1                     SetupTime@second10:
   447                           	opt stack 0
   448  0000E1                     SetupAlarmTimeA@msgindex:
   449                           	opt stack 0
   450  0000E1                     SetupAlarmTimeB@msgindex:
   451                           	opt stack 0
   452  0000E1                     SetupAlarmTimeC@msgindex:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x2D
   456  0000E1                     	ds	1
   457  0000E2                     SetupTime@second1:
   458                           	opt stack 0
   459  0000E2                     SetupAlarmTimeA@ctemp:
   460                           	opt stack 0
   461  0000E2                     SetupAlarmTimeB@ctemp:
   462                           	opt stack 0
   463  0000E2                     SetupAlarmTimeC@ctemp:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2E
   467  0000E2                     	ds	1
   468  0000E3                     SetupTime@msgindex:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x2F
   472  0000E3                     	ds	1
   473  0000E4                     SetupTime@ctemp:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x30
   477  0000E4                     	ds	1
   478  0000E5                     main@AlarmAOff:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x31
   482  0000E5                     	ds	2
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	cstackCOMRAM
   493  000001                     __pcstackCOMRAM:
   494                           	opt stack 0
   495  000001                     ??i2_lcd_strobe:
   496  000001                     ?___awdiv:
   497                           	opt stack 0
   498  000001                     int_2_char@int1:
   499                           	opt stack 0
   500  000001                     ___awdiv@dividend:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x0
   504  000001                     	ds	1
   505  000002                     ??i2_lcd_write_cmd:
   506  000002                     ??i2_lcd_write_data:
   507  000002                     int_2_char@char1:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1
   511  000002                     	ds	1
   512  000003                     i2lcd_write_cmd@cmd:
   513                           	opt stack 0
   514  000003                     i2lcd_write_data@data:
   515                           	opt stack 0
   516  000003                     ___awdiv@divisor:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x2
   520  000003                     	ds	1
   521  000004                     i2lcd_write_cmd@temp2:
   522                           	opt stack 0
   523  000004                     i2lcd_write_data@temp1:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x3
   527  000004                     	ds	1
   528  000005                     ___awdiv@counter:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x4
   532  000005                     	ds	1
   533  000006                     ___awdiv@sign:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x5
   537  000006                     	ds	1
   538  000007                     ___awdiv@quotient:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x6
   542  000007                     	ds	2
   543  000009                     ??_ISR_Timer0_Int:
   544                           
   545                           ; 0 bytes @ 0x8
   546  000009                     	ds	14
   547  000017                     ISR_Timer0_Int@hour1:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x16
   551  000017                     	ds	1
   552  000018                     ISR_Timer0_Int@minute1:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x17
   556  000018                     	ds	1
   557  000019                     ISR_Timer0_Int@second1:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x18
   561  000019                     	ds	1
   562  00001A                     ISR_Timer0_Int@hour10:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566  00001A                     	ds	1
   567  00001B                     ISR_Timer0_Int@minute10:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x1A
   571  00001B                     	ds	1
   572  00001C                     ISR_Timer0_Int@second10:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x1B
   576  00001C                     	ds	1
   577  00001D                     ??_lcd_strobe:
   578  00001D                     char_2_int@char1:
   579                           	opt stack 0
   580  00001D                     delay_ms@i:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1C
   584  00001D                     	ds	1
   585  00001E                     ??_lcd_write_cmd:
   586  00001E                     ??_lcd_write_data:
   587  00001E                     char_2_int@int1:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x1D
   591  00001E                     	ds	1
   592  00001F                     ??_delay_ms:
   593  00001F                     lcd_write_cmd@cmd:
   594                           	opt stack 0
   595  00001F                     lcd_write_data@data:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1E
   599  00001F                     	ds	1
   600  000020                     lcd_write_cmd@temp2:
   601                           	opt stack 0
   602  000020                     lcd_write_data@temp1:
   603                           	opt stack 0
   604  000020                     delay_ms@j:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x1F
   608  000020                     	ds	1
   609  000021                     ??_lcd_init:
   610                           
   611                           ; 0 bytes @ 0x20
   612  000021                     	ds	1
   613  000022                     lcd_init@i:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x21
   617  000022                     	ds	2
   618  000024                     tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postdec1	equ	0xFE5
   625                           fsr1l	equ	0xFE1
   626                           
   627                           ; 0 bytes @ 0x23
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 311 in file "Main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  AlarmAOff       2   49[BANK0 ] int 
   638 ;; Return value:  Size  Location     Type
   639 ;;		None               void
   640 ;; Registers used:
   641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   647 ;;      Params:         0       0       0       0       0       0       0       0       0
   648 ;;      Locals:         0       2       0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0
   650 ;;      Totals:         0       2       0       0       0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels required when called:    6
   653 ;; This function calls:
   654 ;;		_SetupAlarmTimeA
   655 ;;		_SetupAlarmTimeB
   656 ;;		_SetupAlarmTimeC
   657 ;;		_SetupTime
   658 ;;		_SetupTimerInterruptRegisters
   659 ;;		_lcd_init
   660 ;;		_version
   661 ;; This function is called by:
   662 ;;		Startup code after reset
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text0
   667  0015CC                     __ptext0:
   668                           	opt stack 0
   669  0015CC                     _main:
   670                           	opt stack 25
   671                           
   672                           ;Main.c: 313: ADCON1 = 0x0F;
   673                           
   674                           ;incstack = 0
   675  0015CC  0E0F               	movlw	15
   676  0015CE  6EC1               	movwf	4033,c	;volatile
   677                           
   678                           ;Main.c: 314: CMCON = 0x07;
   679  0015D0  0E07               	movlw	7
   680  0015D2  6EB4               	movwf	4020,c	;volatile
   681                           
   682                           ;Main.c: 316: lcd_init();
   683  0015D4  EC41  F00C         	call	_lcd_init	;wreg free
   684                           
   685                           ;Main.c: 317: TRISA = 0b00000000;
   686  0015D8  0E00               	movlw	0
   687  0015DA  6E92               	movwf	3986,c	;volatile
   688                           
   689                           ;Main.c: 318: PORTA = 0b00000000;
   690  0015DC  0E00               	movlw	0
   691  0015DE  6E80               	movwf	3968,c	;volatile
   692                           
   693                           ;Main.c: 319: int AlarmAOff = 0;
   694  0015E0  0E00               	movlw	0
   695  0015E2  0100               	movlb	0	; () banked
   696  0015E4  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   697  0015E6  0E00               	movlw	0
   698  0015E8  6FE5               	movwf	main@AlarmAOff& (0+255),b
   699                           
   700                           ; BSR set to: 0
   701                           ;Main.c: 321: version();
   702  0015EA  EC7A  F00D         	call	_version	;wreg free
   703                           
   704                           ;Main.c: 322: SetupTime();
   705  0015EE  ECD5  F008         	call	_SetupTime	;wreg free
   706                           
   707                           ;Main.c: 323: SetupAlarmTimeA();
   708  0015F2  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   709                           
   710                           ;Main.c: 324: SetupAlarmTimeB();
   711  0015F6  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   712                           
   713                           ;Main.c: 325: SetupAlarmTimeC();
   714  0015FA  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   715                           
   716                           ;Main.c: 326: SetupTimerInterruptRegisters();
   717  0015FE  ECFC  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   718  001602                     l2320:
   719                           
   720                           ;Main.c: 329: {
   721                           ;Main.c: 330: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   722  001602  503A               	movf	_hourA,w,c
   723  001604  1839               	xorwf	_hour,w,c
   724  001606  A4D8               	btfss	status,2,c
   725  001608  D00C               	goto	l2328
   726  00160A  503E               	movf	_minuteA,w,c
   727  00160C  183D               	xorwf	_minute,w,c
   728  00160E  A4D8               	btfss	status,2,c
   729  001610  D008               	goto	l2328
   730  001612  0100               	movlb	0	; () banked
   731  001614  51E5               	movf	main@AlarmAOff& (0+255),w,b
   732  001616  0100               	movlb	0	; () banked
   733  001618  11E6               	iorwf	(main@AlarmAOff+1)& (0+255),w,b
   734  00161A  A4D8               	btfss	status,2,c
   735  00161C  D002               	goto	l2328
   736                           
   737                           ; BSR set to: 0
   738                           ;Main.c: 331: {
   739                           ;Main.c: 332: PORTA = 0b00000011;
   740  00161E  0E03               	movlw	3
   741  001620  6E80               	movwf	3968,c	;volatile
   742  001622                     l2328:
   743                           
   744                           ;Main.c: 333: }
   745                           ;Main.c: 334: if (PORTAbits.RA5 == 0)
   746  001622  BA80               	btfsc	3968,5,c	;volatile
   747  001624  D006               	goto	l2332
   748                           
   749                           ;Main.c: 335: {
   750                           ;Main.c: 336: AlarmAOff = 1;
   751  001626  0E00               	movlw	0
   752  001628  0100               	movlb	0	; () banked
   753  00162A  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   754  00162C  0E01               	movlw	1
   755  00162E  6FE5               	movwf	main@AlarmAOff& (0+255),b
   756                           
   757                           ;Main.c: 337: }
   758  001630  D7E8               	goto	l2320
   759  001632                     l2332:
   760                           
   761                           ;Main.c: 338: else if(hour==hourB && minute==minuteB)
   762  001632  503B               	movf	_hourB,w,c
   763  001634  1839               	xorwf	_hour,w,c
   764  001636  A4D8               	btfss	status,2,c
   765  001638  D006               	goto	l2338
   766  00163A  503F               	movf	_minuteB,w,c
   767  00163C  183D               	xorwf	_minute,w,c
   768  00163E  A4D8               	btfss	status,2,c
   769  001640  D002               	goto	l2338
   770                           
   771                           ;Main.c: 339: {
   772                           ;Main.c: 340: PORTA = 0b00000101;
   773  001642  0E05               	movlw	5
   774  001644  D00B               	goto	L2
   775  001646                     l2338:
   776                           
   777                           ;Main.c: 342: else if(hour==hourC && minute==minuteC)
   778  001646  503C               	movf	_hourC,w,c
   779  001648  1839               	xorwf	_hour,w,c
   780  00164A  A4D8               	btfss	status,2,c
   781  00164C  D006               	goto	l2344
   782  00164E  5040               	movf	_minuteC,w,c
   783  001650  183D               	xorwf	_minute,w,c
   784  001652  A4D8               	btfss	status,2,c
   785  001654  D002               	goto	l2344
   786                           
   787                           ;Main.c: 343: {
   788                           ;Main.c: 344: PORTA = 0b00001001;
   789  001656  0E09               	movlw	9
   790  001658  D001               	goto	L2
   791  00165A                     l2344:
   792                           
   793                           ;Main.c: 346: {
   794                           ;Main.c: 347: PORTA = 0b00000000;
   795  00165A  0E00               	movlw	0
   796  00165C                     L2:
   797  00165C  6E80               	movwf	3968,c	;volatile
   798  00165E  D7D1               	goto	l2320
   799  001660                     __end_of_main:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1l	equ	0xFE1
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function _version *****************
   812 ;; Defined at:
   813 ;;		line 12 in file "version.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  Version        21    0[BANK0 ] unsigned char [21]
   818 ;;  msgindex        1   22[BANK0 ] unsigned char 
   819 ;;  outchar         1   21[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  2   73[None  ] int 
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         0       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0      23       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         0      23       0       0       0       0       0       0       0
   833 ;;Total ram usage:       23 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_lcd_write_cmd
   838 ;;		_lcd_write_data
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text1
   845  001AF4                     __ptext1:
   846                           	opt stack 0
   847  001AF4                     _version:
   848                           	opt stack 25
   849                           
   850                           ;version.c: 14: unsigned char msgindex, outchar;
   851                           ;version.c: 15: char Version[ ] = "ETT Version 1.3     ";
   852                           
   853                           ;incstack = 0
   854  001AF4  EE20  F024         	lfsr	2,version@F4451
   855  001AF8  EE10  F0B4         	lfsr	1,version@Version
   856  001AFC  0E14               	movlw	20
   857  001AFE                     u1041:
   858  001AFE  CFDB FFE3          	movff	plusw2,plusw1
   859  001B02  06E8               	decf	wreg,f,c
   860  001B04  E2FC               	bc	u1041
   861                           
   862                           ;version.c: 17: lcd_write_cmd(0x80);
   863  001B06  0E80               	movlw	128
   864  001B08  ECB3  F00C         	call	_lcd_write_cmd
   865                           
   866                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   867  001B0C  0E00               	movlw	0
   868  001B0E  0100               	movlb	0	; () banked
   869  001B10  6FCA               	movwf	version@msgindex& (0+255),b
   870  001B12                     l2286:
   871                           
   872                           ; BSR set to: 0
   873  001B12  0E13               	movlw	19
   874  001B14  0100               	movlb	0	; () banked
   875  001B16  65CA               	cpfsgt	version@msgindex& (0+255),b
   876  001B18  D001               	goto	l2290
   877  001B1A  0012               	return	
   878  001B1C                     l2290:
   879                           
   880                           ; BSR set to: 0
   881                           ;version.c: 20: {
   882                           ;version.c: 21: outchar = Version[msgindex];
   883  001B1C  0100               	movlb	0	; () banked
   884  001B1E  51CA               	movf	version@msgindex& (0+255),w,b
   885  001B20  0D01               	mullw	1
   886  001B22  0EB4               	movlw	low version@Version
   887  001B24  24F3               	addwf	prodl,w,c
   888  001B26  6ED9               	movwf	fsr2l,c
   889  001B28  0E00               	movlw	high version@Version
   890  001B2A  20F4               	addwfc	prodh,w,c
   891  001B2C  6EDA               	movwf	fsr2h,c
   892  001B2E  50DF               	movf	indf2,w,c
   893  001B30  0100               	movlb	0	; () banked
   894  001B32  6FC9               	movwf	version@outchar& (0+255),b
   895                           
   896                           ; BSR set to: 0
   897                           ;version.c: 22: lcd_write_data(outchar);
   898  001B34  0100               	movlb	0	; () banked
   899  001B36  51C9               	movf	version@outchar& (0+255),w,b
   900  001B38  EC30  F00B         	call	_lcd_write_data
   901  001B3C  0100               	movlb	0	; () banked
   902  001B3E  2BCA               	incf	version@msgindex& (0+255),f,b
   903  001B40  D7E8               	goto	l2286
   904  001B42                     __end_of_version:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           plusw1	equ	0xFE3
   916                           fsr1l	equ	0xFE1
   917                           indf2	equ	0xFDF
   918                           plusw2	equ	0xFDB
   919                           fsr2h	equ	0xFDA
   920                           fsr2l	equ	0xFD9
   921                           status	equ	0xFD8
   922                           
   923 ;; *************** function _lcd_init *****************
   924 ;; Defined at:
   925 ;;		line 83 in file "lcd_utilities.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  i               2   33[COMRAM] int 
   930 ;; Return value:  Size  Location     Type
   931 ;;		None               void
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         2       0       0       0       0       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0       0       0       0       0
   942 ;;      Totals:         3       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        3 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    5
   946 ;; This function calls:
   947 ;;		_lcd_write_cmd
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text2
   954  001882                     __ptext2:
   955                           	opt stack 0
   956  001882                     _lcd_init:
   957                           	opt stack 25
   958                           
   959                           ;lcd_utilities.c: 85: int i;
   960                           ;lcd_utilities.c: 86: TRISD = 0x00;
   961                           
   962                           ; BSR set to: 0
   963                           ;incstack = 0
   964  001882  0E00               	movlw	0
   965  001884  6E95               	movwf	3989,c	;volatile
   966                           
   967                           ;lcd_utilities.c: 87: PORTD = 0x00;
   968  001886  0E00               	movlw	0
   969  001888  6E83               	movwf	3971,c	;volatile
   970                           
   971                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   972  00188A  9883               	bcf	3971,4,c	;volatile
   973                           
   974                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   975  00188C  9C83               	bcf	3971,6,c	;volatile
   976                           
   977                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   978  00188E  9A83               	bcf	3971,5,c	;volatile
   979                           
   980                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   981  001890  0E00               	movlw	0
   982  001892  6E23               	movwf	lcd_init@i+1,c
   983  001894  0E00               	movlw	0
   984  001896  6E22               	movwf	lcd_init@i,c
   985  001898                     l2078:
   986  001898  BE23               	btfsc	lcd_init@i+1,7,c
   987  00189A  D006               	goto	l2082
   988  00189C  5023               	movf	lcd_init@i+1,w,c
   989  00189E  E10F               	bnz	l2086
   990  0018A0  0E64               	movlw	100
   991  0018A2  5C22               	subwf	lcd_init@i,w,c
   992  0018A4  B0D8               	btfsc	status,0,c
   993  0018A6  D00B               	goto	l2086
   994  0018A8                     l2082:
   995                           
   996                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   997  0018A8  0E9C               	movlw	156
   998  0018AA  6E21               	movwf	??_lcd_init& (0+255),c
   999  0018AC  0ED7               	movlw	215
  1000  0018AE                     u1157:
  1001  0018AE  2EE8               	decfsz	wreg,f,c
  1002  0018B0  D7FE               	goto	u1157
  1003  0018B2  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1004  0018B4  D7FC               	goto	u1157
  1005  0018B6  F000               	nop	
  1006  0018B8  4A22               	infsnz	lcd_init@i,f,c
  1007  0018BA  2A23               	incf	lcd_init@i+1,f,c
  1008  0018BC  D7ED               	goto	l2078
  1009  0018BE                     l2086:
  1010                           
  1011                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1012  0018BE  0E33               	movlw	51
  1013  0018C0  ECB3  F00C         	call	_lcd_write_cmd
  1014                           
  1015                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1016  0018C4  0E32               	movlw	50
  1017  0018C6  ECB3  F00C         	call	_lcd_write_cmd
  1018                           
  1019                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1020  0018CA  0E28               	movlw	40
  1021  0018CC  ECB3  F00C         	call	_lcd_write_cmd
  1022                           
  1023                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1024  0018D0  0E0E               	movlw	14
  1025  0018D2  ECB3  F00C         	call	_lcd_write_cmd
  1026                           
  1027                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1028  0018D6  0E06               	movlw	6
  1029  0018D8  ECB3  F00C         	call	_lcd_write_cmd
  1030                           
  1031                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1032  0018DC  0E01               	movlw	1
  1033  0018DE  ECB3  F00C         	call	_lcd_write_cmd
  1034                           
  1035                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1036  0018E2  0E9C               	movlw	156
  1037  0018E4  6E21               	movwf	??_lcd_init& (0+255),c
  1038  0018E6  0ED7               	movlw	215
  1039  0018E8                     u1167:
  1040  0018E8  2EE8               	decfsz	wreg,f,c
  1041  0018EA  D7FE               	goto	u1167
  1042  0018EC  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1043  0018EE  D7FC               	goto	u1167
  1044  0018F0  F000               	nop	
  1045  0018F2  0012               	return		;funcret
  1046  0018F4                     __end_of_lcd_init:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           prodh	equ	0xFF4
  1053                           prodl	equ	0xFF3
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec1	equ	0xFE5
  1057                           plusw1	equ	0xFE3
  1058                           fsr1l	equ	0xFE1
  1059                           indf2	equ	0xFDF
  1060                           plusw2	equ	0xFDB
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _SetupTimerInterruptRegisters *****************
  1066 ;; Defined at:
  1067 ;;		line 275 in file "Main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;		None               void
  1074 ;; Registers used:
  1075 ;;		wreg, status,2
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    3
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  001BF8                     __ptext3:
  1097                           	opt stack 0
  1098  001BF8                     _SetupTimerInterruptRegisters:
  1099                           	opt stack 27
  1100                           
  1101                           ;Main.c: 277: RCONbits.IPEN =1;
  1102                           
  1103                           ;incstack = 0
  1104  001BF8  8ED0               	bsf	4048,7,c	;volatile
  1105                           
  1106                           ;Main.c: 281: INTCONbits.GIEH =1;
  1107  001BFA  8EF2               	bsf	intcon,7,c	;volatile
  1108                           
  1109                           ;Main.c: 286: T0CON = 0b00000111;
  1110  001BFC  0E07               	movlw	7
  1111  001BFE  6ED5               	movwf	4053,c	;volatile
  1112                           
  1113                           ;Main.c: 294: INTCON2 = 0b10000100;
  1114  001C00  0E84               	movlw	132
  1115  001C02  6EF1               	movwf	intcon2,c	;volatile
  1116                           
  1117                           ;Main.c: 299: TMR0H = 0x48;
  1118  001C04  0E48               	movlw	72
  1119  001C06  6ED7               	movwf	4055,c	;volatile
  1120                           
  1121                           ;Main.c: 300: TMR0L = 0xE5;
  1122  001C08  0EE5               	movlw	229
  1123  001C0A  6ED6               	movwf	4054,c	;volatile
  1124                           
  1125                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1126  001C0C  8ED5               	bsf	4053,7,c	;volatile
  1127                           
  1128                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1129  001C0E  8AF2               	bsf	intcon,5,c	;volatile
  1130                           
  1131                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1132  001C10  94F2               	bcf	intcon,2,c	;volatile
  1133  001C12  0012               	return		;funcret
  1134  001C14                     __end_of_SetupTimerInterruptRegisters:
  1135                           	opt stack 0
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           prodh	equ	0xFF4
  1141                           prodl	equ	0xFF3
  1142                           intcon	equ	0xFF2
  1143                           intcon2	equ	0xFF1
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postdec1	equ	0xFE5
  1147                           plusw1	equ	0xFE3
  1148                           fsr1l	equ	0xFE1
  1149                           indf2	equ	0xFDF
  1150                           plusw2	equ	0xFDB
  1151                           fsr2h	equ	0xFDA
  1152                           fsr2l	equ	0xFD9
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _SetupTime *****************
  1156 ;; Defined at:
  1157 ;;		line 107 in file "Main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1162 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1163 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1164 ;;  second1         1   46[BANK0 ] unsigned char 
  1165 ;;  second10        1   45[BANK0 ] unsigned char 
  1166 ;;  minute1         1   44[BANK0 ] unsigned char 
  1167 ;;  minute10        1   43[BANK0 ] unsigned char 
  1168 ;;  hour1           1   42[BANK0 ] unsigned char 
  1169 ;;  hour10          1   41[BANK0 ] unsigned char 
  1170 ;;  outchar         1   40[BANK0 ] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0
  1181 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1183 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1184 ;;Total ram usage:       30 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    5
  1187 ;; This function calls:
  1188 ;;		_char_2_int
  1189 ;;		_delay_ms
  1190 ;;		_getkey
  1191 ;;		_lcd_write_cmd
  1192 ;;		_lcd_write_data
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text4
  1199  0011AA                     __ptext4:
  1200                           	opt stack 0
  1201  0011AA                     _SetupTime:
  1202                           	opt stack 25
  1203                           
  1204                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1205                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1206                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1207                           
  1208                           ;incstack = 0
  1209  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4486
  1210  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1211  0011B2  0E14               	movlw	20
  1212  0011B4                     u921:
  1213  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1214  0011B8  06E8               	decf	wreg,f,c
  1215  0011BA  E2FC               	bc	u921
  1216                           
  1217                           ;Main.c: 113: lcd_write_cmd(0x80);
  1218  0011BC  0E80               	movlw	128
  1219  0011BE  ECB3  F00C         	call	_lcd_write_cmd
  1220                           
  1221                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1222  0011C2  0E00               	movlw	0
  1223  0011C4  0100               	movlb	0	; () banked
  1224  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1225  0011C8                     l2096:
  1226                           
  1227                           ; BSR set to: 0
  1228  0011C8  0E13               	movlw	19
  1229  0011CA  0100               	movlb	0	; () banked
  1230  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1231  0011CE  D001               	goto	l2100
  1232  0011D0  D013               	goto	l2108
  1233  0011D2                     l2100:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;Main.c: 116: {
  1237                           ;Main.c: 117: outchar = Message[msgindex];
  1238  0011D2  0100               	movlb	0	; () banked
  1239  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1240  0011D6  0D01               	mullw	1
  1241  0011D8  0EC7               	movlw	low SetupTime@Message
  1242  0011DA  24F3               	addwf	prodl,w,c
  1243  0011DC  6ED9               	movwf	fsr2l,c
  1244  0011DE  0E00               	movlw	high SetupTime@Message
  1245  0011E0  20F4               	addwfc	prodh,w,c
  1246  0011E2  6EDA               	movwf	fsr2h,c
  1247  0011E4  50DF               	movf	indf2,w,c
  1248  0011E6  0100               	movlb	0	; () banked
  1249  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;Main.c: 118: lcd_write_data(outchar);
  1253  0011EA  0100               	movlb	0	; () banked
  1254  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1255  0011EE  EC30  F00B         	call	_lcd_write_data
  1256  0011F2  0100               	movlb	0	; () banked
  1257  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1258  0011F6  D7E8               	goto	l2096
  1259  0011F8                     l2108:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;Main.c: 119: }
  1263                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1264  0011F8  0EC0               	movlw	192
  1265  0011FA  ECB3  F00C         	call	_lcd_write_cmd
  1266                           
  1267                           ;Main.c: 123: ctemp=getkey();
  1268  0011FE  ECA1  F00D         	call	_getkey	;wreg free
  1269  001202  0100               	movlb	0	; () banked
  1270  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;Main.c: 124: lcd_write_data(ctemp);
  1274  001206  0100               	movlb	0	; () banked
  1275  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1276  00120A  EC30  F00B         	call	_lcd_write_data
  1277                           
  1278                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1279  00120E  0100               	movlb	0	; () banked
  1280  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1281  001212  EC7A  F00C         	call	_char_2_int
  1282  001216  0100               	movlb	0	; () banked
  1283  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;Main.c: 127: ctemp=getkey();
  1287  00121A  ECA1  F00D         	call	_getkey	;wreg free
  1288  00121E  0100               	movlb	0	; () banked
  1289  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1290                           
  1291                           ;Main.c: 128: lcd_write_data(ctemp);
  1292  001222  0100               	movlb	0	; () banked
  1293  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1294  001226  EC30  F00B         	call	_lcd_write_data
  1295                           
  1296                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1297  00122A  0100               	movlb	0	; () banked
  1298  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1299  00122E  EC7A  F00C         	call	_char_2_int
  1300  001232  0100               	movlb	0	; () banked
  1301  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;Main.c: 131: ctemp=getkey();
  1305  001236  ECA1  F00D         	call	_getkey	;wreg free
  1306  00123A  0100               	movlb	0	; () banked
  1307  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;Main.c: 132: lcd_write_data(ctemp);
  1311  00123E  0100               	movlb	0	; () banked
  1312  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1313  001242  EC30  F00B         	call	_lcd_write_data
  1314                           
  1315                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1316  001246  0100               	movlb	0	; () banked
  1317  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1318  00124A  EC7A  F00C         	call	_char_2_int
  1319  00124E  0100               	movlb	0	; () banked
  1320  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;Main.c: 135: ctemp=getkey();
  1324  001252  ECA1  F00D         	call	_getkey	;wreg free
  1325  001256  0100               	movlb	0	; () banked
  1326  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1327                           
  1328                           ;Main.c: 136: lcd_write_data(ctemp);
  1329  00125A  0100               	movlb	0	; () banked
  1330  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1331  00125E  EC30  F00B         	call	_lcd_write_data
  1332                           
  1333                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1334  001262  0100               	movlb	0	; () banked
  1335  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1336  001266  EC7A  F00C         	call	_char_2_int
  1337  00126A  0100               	movlb	0	; () banked
  1338  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;Main.c: 139: ctemp=getkey();
  1342  00126E  ECA1  F00D         	call	_getkey	;wreg free
  1343  001272  0100               	movlb	0	; () banked
  1344  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;Main.c: 140: lcd_write_data(ctemp);
  1348  001276  0100               	movlb	0	; () banked
  1349  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1350  00127A  EC30  F00B         	call	_lcd_write_data
  1351                           
  1352                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1353  00127E  0100               	movlb	0	; () banked
  1354  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1355  001282  EC7A  F00C         	call	_char_2_int
  1356  001286  0100               	movlb	0	; () banked
  1357  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;Main.c: 143: ctemp=getkey();
  1361  00128A  ECA1  F00D         	call	_getkey	;wreg free
  1362  00128E  0100               	movlb	0	; () banked
  1363  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1364                           
  1365                           ;Main.c: 144: lcd_write_data(ctemp);
  1366  001292  0100               	movlb	0	; () banked
  1367  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1368  001296  EC30  F00B         	call	_lcd_write_data
  1369                           
  1370                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1371  00129A  0100               	movlb	0	; () banked
  1372  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1373  00129E  EC7A  F00C         	call	_char_2_int
  1374  0012A2  0100               	movlb	0	; () banked
  1375  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1379  0012A6  0100               	movlb	0	; () banked
  1380  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1381  0012AA  0D0A               	mullw	10
  1382  0012AC  50F3               	movf	prodl,w,c
  1383  0012AE  0100               	movlb	0	; () banked
  1384  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1385  0012B2  6E39               	movwf	_hour,c
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1389  0012B4  0100               	movlb	0	; () banked
  1390  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1391  0012B8  0D0A               	mullw	10
  1392  0012BA  50F3               	movf	prodl,w,c
  1393  0012BC  0100               	movlb	0	; () banked
  1394  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1395  0012C0  6E3D               	movwf	_minute,c
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;Main.c: 149: second = second10 * 10 + second1;
  1399  0012C2  0100               	movlb	0	; () banked
  1400  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1401  0012C6  0D0A               	mullw	10
  1402  0012C8  50F3               	movf	prodl,w,c
  1403  0012CA  0100               	movlb	0	; () banked
  1404  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1405  0012CE  6E41               	movwf	_second,c
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;Main.c: 151: delay_ms(500);
  1409  0012D0  0E01               	movlw	1
  1410  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1411  0012D4  0EF4               	movlw	244
  1412  0012D6  6E1D               	movwf	delay_ms@i,c
  1413  0012D8  ECC0  F00D         	call	_delay_ms	;wreg free
  1414                           
  1415                           ;Main.c: 152: lcd_write_cmd(0x01);
  1416  0012DC  0E01               	movlw	1
  1417  0012DE  ECB3  F00C         	call	_lcd_write_cmd
  1418  0012E2  0012               	return		;funcret
  1419  0012E4                     __end_of_SetupTime:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           intcon	equ	0xFF2
  1428                           intcon2	equ	0xFF1
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           plusw1	equ	0xFE3
  1433                           fsr1l	equ	0xFE1
  1434                           indf2	equ	0xFDF
  1435                           plusw2	equ	0xFDB
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _SetupAlarmTimeC *****************
  1441 ;; Defined at:
  1442 ;;		line 235 in file "Main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1447 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1448 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1449 ;;  minute1         1   44[BANK0 ] unsigned char 
  1450 ;;  minute10        1   43[BANK0 ] unsigned char 
  1451 ;;  hour1           1   42[BANK0 ] unsigned char 
  1452 ;;  hour10          1   41[BANK0 ] unsigned char 
  1453 ;;  outchar         1   40[BANK0 ] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0
  1464 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1466 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1467 ;;Total ram usage:       28 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    5
  1470 ;; This function calls:
  1471 ;;		_char_2_int
  1472 ;;		_delay_ms
  1473 ;;		_getkey
  1474 ;;		_lcd_write_cmd
  1475 ;;		_lcd_write_data
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text5
  1482  0012E4                     __ptext5:
  1483                           	opt stack 0
  1484  0012E4                     _SetupAlarmTimeC:
  1485                           	opt stack 25
  1486                           
  1487                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1488                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1489                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1490                           
  1491                           ;incstack = 0
  1492  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4516
  1493  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1494  0012EC  0E14               	movlw	20
  1495  0012EE                     u1011:
  1496  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1497  0012F2  06E8               	decf	wreg,f,c
  1498  0012F4  E2FC               	bc	u1011
  1499                           
  1500                           ;Main.c: 241: PORTA = 0b00001000;
  1501  0012F6  0E08               	movlw	8
  1502  0012F8  6E80               	movwf	3968,c	;volatile
  1503                           
  1504                           ;Main.c: 243: lcd_write_cmd(0x80);
  1505  0012FA  0E80               	movlw	128
  1506  0012FC  ECB3  F00C         	call	_lcd_write_cmd
  1507                           
  1508                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1509  001300  0E00               	movlw	0
  1510  001302  0100               	movlb	0	; () banked
  1511  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1512  001306                     l2236:
  1513                           
  1514                           ; BSR set to: 0
  1515  001306  0E13               	movlw	19
  1516  001308  0100               	movlb	0	; () banked
  1517  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1518  00130C  D001               	goto	l2240
  1519  00130E  D013               	goto	l2248
  1520  001310                     l2240:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;Main.c: 246: {
  1524                           ;Main.c: 247: outchar = Message[msgindex];
  1525  001310  0100               	movlb	0	; () banked
  1526  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1527  001314  0D01               	mullw	1
  1528  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1529  001318  24F3               	addwf	prodl,w,c
  1530  00131A  6ED9               	movwf	fsr2l,c
  1531  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1532  00131E  20F4               	addwfc	prodh,w,c
  1533  001320  6EDA               	movwf	fsr2h,c
  1534  001322  50DF               	movf	indf2,w,c
  1535  001324  0100               	movlb	0	; () banked
  1536  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;Main.c: 248: lcd_write_data(outchar);
  1540  001328  0100               	movlb	0	; () banked
  1541  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1542  00132C  EC30  F00B         	call	_lcd_write_data
  1543  001330  0100               	movlb	0	; () banked
  1544  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1545  001334  D7E8               	goto	l2236
  1546  001336                     l2248:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;Main.c: 249: }
  1550                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1551  001336  0EC0               	movlw	192
  1552  001338  ECB3  F00C         	call	_lcd_write_cmd
  1553                           
  1554                           ;Main.c: 253: ctemp=getkey();
  1555  00133C  ECA1  F00D         	call	_getkey	;wreg free
  1556  001340  0100               	movlb	0	; () banked
  1557  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;Main.c: 254: lcd_write_data(ctemp);
  1561  001344  0100               	movlb	0	; () banked
  1562  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1563  001348  EC30  F00B         	call	_lcd_write_data
  1564                           
  1565                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1566  00134C  0100               	movlb	0	; () banked
  1567  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1568  001350  EC7A  F00C         	call	_char_2_int
  1569  001354  0100               	movlb	0	; () banked
  1570  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;Main.c: 257: ctemp=getkey();
  1574  001358  ECA1  F00D         	call	_getkey	;wreg free
  1575  00135C  0100               	movlb	0	; () banked
  1576  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1577                           
  1578                           ;Main.c: 258: lcd_write_data(ctemp);
  1579  001360  0100               	movlb	0	; () banked
  1580  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1581  001364  EC30  F00B         	call	_lcd_write_data
  1582                           
  1583                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1584  001368  0100               	movlb	0	; () banked
  1585  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1586  00136C  EC7A  F00C         	call	_char_2_int
  1587  001370  0100               	movlb	0	; () banked
  1588  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;Main.c: 261: ctemp=getkey();
  1592  001374  ECA1  F00D         	call	_getkey	;wreg free
  1593  001378  0100               	movlb	0	; () banked
  1594  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;Main.c: 262: lcd_write_data(ctemp);
  1598  00137C  0100               	movlb	0	; () banked
  1599  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1600  001380  EC30  F00B         	call	_lcd_write_data
  1601                           
  1602                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1603  001384  0100               	movlb	0	; () banked
  1604  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1605  001388  EC7A  F00C         	call	_char_2_int
  1606  00138C  0100               	movlb	0	; () banked
  1607  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;Main.c: 265: ctemp=getkey();
  1611  001390  ECA1  F00D         	call	_getkey	;wreg free
  1612  001394  0100               	movlb	0	; () banked
  1613  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1614                           
  1615                           ;Main.c: 266: lcd_write_data(ctemp);
  1616  001398  0100               	movlb	0	; () banked
  1617  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1618  00139C  EC30  F00B         	call	_lcd_write_data
  1619                           
  1620                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1621  0013A0  0100               	movlb	0	; () banked
  1622  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1623  0013A4  EC7A  F00C         	call	_char_2_int
  1624  0013A8  0100               	movlb	0	; () banked
  1625  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1629  0013AC  0100               	movlb	0	; () banked
  1630  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1631  0013B0  0D0A               	mullw	10
  1632  0013B2  50F3               	movf	prodl,w,c
  1633  0013B4  0100               	movlb	0	; () banked
  1634  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1635  0013B8  6E3C               	movwf	_hourC,c
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1639  0013BA  0100               	movlb	0	; () banked
  1640  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1641  0013BE  0D0A               	mullw	10
  1642  0013C0  50F3               	movf	prodl,w,c
  1643  0013C2  0100               	movlb	0	; () banked
  1644  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1645  0013C6  6E40               	movwf	_minuteC,c
  1646                           
  1647                           ;Main.c: 272: delay_ms(500);
  1648  0013C8  0E01               	movlw	1
  1649  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1650  0013CC  0EF4               	movlw	244
  1651  0013CE  6E1D               	movwf	delay_ms@i,c
  1652  0013D0  ECC0  F00D         	call	_delay_ms	;wreg free
  1653                           
  1654                           ;Main.c: 273: lcd_write_cmd(0x01);
  1655  0013D4  0E01               	movlw	1
  1656  0013D6  ECB3  F00C         	call	_lcd_write_cmd
  1657  0013DA  0012               	return		;funcret
  1658  0013DC                     __end_of_SetupAlarmTimeC:
  1659                           	opt stack 0
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           prodh	equ	0xFF4
  1665                           prodl	equ	0xFF3
  1666                           intcon	equ	0xFF2
  1667                           intcon2	equ	0xFF1
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           plusw1	equ	0xFE3
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           plusw2	equ	0xFDB
  1675                           fsr2h	equ	0xFDA
  1676                           fsr2l	equ	0xFD9
  1677                           status	equ	0xFD8
  1678                           
  1679 ;; *************** function _SetupAlarmTimeB *****************
  1680 ;; Defined at:
  1681 ;;		line 195 in file "Main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1686 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1687 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1688 ;;  minute1         1   44[BANK0 ] unsigned char 
  1689 ;;  minute10        1   43[BANK0 ] unsigned char 
  1690 ;;  hour1           1   42[BANK0 ] unsigned char 
  1691 ;;  hour10          1   41[BANK0 ] unsigned char 
  1692 ;;  outchar         1   40[BANK0 ] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;		None               void
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1702 ;;      Params:         0       0       0       0       0       0       0       0       0
  1703 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1705 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1706 ;;Total ram usage:       28 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    5
  1709 ;; This function calls:
  1710 ;;		_char_2_int
  1711 ;;		_delay_ms
  1712 ;;		_getkey
  1713 ;;		_lcd_write_cmd
  1714 ;;		_lcd_write_data
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text6
  1721  0013DC                     __ptext6:
  1722                           	opt stack 0
  1723  0013DC                     _SetupAlarmTimeB:
  1724                           	opt stack 25
  1725                           
  1726                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1727                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1728                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1729                           
  1730                           ;incstack = 0
  1731  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4506
  1732  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1733  0013E4  0E14               	movlw	20
  1734  0013E6                     u981:
  1735  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1736  0013EA  06E8               	decf	wreg,f,c
  1737  0013EC  E2FC               	bc	u981
  1738                           
  1739                           ;Main.c: 201: PORTA = 0b00000100;
  1740  0013EE  0E04               	movlw	4
  1741  0013F0  6E80               	movwf	3968,c	;volatile
  1742                           
  1743                           ;Main.c: 203: lcd_write_cmd(0x80);
  1744  0013F2  0E80               	movlw	128
  1745  0013F4  ECB3  F00C         	call	_lcd_write_cmd
  1746                           
  1747                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1748  0013F8  0E00               	movlw	0
  1749  0013FA  0100               	movlb	0	; () banked
  1750  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1751  0013FE                     l2194:
  1752                           
  1753                           ; BSR set to: 0
  1754  0013FE  0E13               	movlw	19
  1755  001400  0100               	movlb	0	; () banked
  1756  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1757  001404  D001               	goto	l2198
  1758  001406  D013               	goto	l2206
  1759  001408                     l2198:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;Main.c: 206: {
  1763                           ;Main.c: 207: outchar = Message[msgindex];
  1764  001408  0100               	movlb	0	; () banked
  1765  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1766  00140C  0D01               	mullw	1
  1767  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1768  001410  24F3               	addwf	prodl,w,c
  1769  001412  6ED9               	movwf	fsr2l,c
  1770  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1771  001416  20F4               	addwfc	prodh,w,c
  1772  001418  6EDA               	movwf	fsr2h,c
  1773  00141A  50DF               	movf	indf2,w,c
  1774  00141C  0100               	movlb	0	; () banked
  1775  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;Main.c: 208: lcd_write_data(outchar);
  1779  001420  0100               	movlb	0	; () banked
  1780  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1781  001424  EC30  F00B         	call	_lcd_write_data
  1782  001428  0100               	movlb	0	; () banked
  1783  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1784  00142C  D7E8               	goto	l2194
  1785  00142E                     l2206:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;Main.c: 209: }
  1789                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1790  00142E  0EC0               	movlw	192
  1791  001430  ECB3  F00C         	call	_lcd_write_cmd
  1792                           
  1793                           ;Main.c: 213: ctemp=getkey();
  1794  001434  ECA1  F00D         	call	_getkey	;wreg free
  1795  001438  0100               	movlb	0	; () banked
  1796  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;Main.c: 214: lcd_write_data(ctemp);
  1800  00143C  0100               	movlb	0	; () banked
  1801  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1802  001440  EC30  F00B         	call	_lcd_write_data
  1803                           
  1804                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1805  001444  0100               	movlb	0	; () banked
  1806  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1807  001448  EC7A  F00C         	call	_char_2_int
  1808  00144C  0100               	movlb	0	; () banked
  1809  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;Main.c: 217: ctemp=getkey();
  1813  001450  ECA1  F00D         	call	_getkey	;wreg free
  1814  001454  0100               	movlb	0	; () banked
  1815  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1816                           
  1817                           ;Main.c: 218: lcd_write_data(ctemp);
  1818  001458  0100               	movlb	0	; () banked
  1819  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1820  00145C  EC30  F00B         	call	_lcd_write_data
  1821                           
  1822                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1823  001460  0100               	movlb	0	; () banked
  1824  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1825  001464  EC7A  F00C         	call	_char_2_int
  1826  001468  0100               	movlb	0	; () banked
  1827  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;Main.c: 221: ctemp=getkey();
  1831  00146C  ECA1  F00D         	call	_getkey	;wreg free
  1832  001470  0100               	movlb	0	; () banked
  1833  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;Main.c: 222: lcd_write_data(ctemp);
  1837  001474  0100               	movlb	0	; () banked
  1838  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1839  001478  EC30  F00B         	call	_lcd_write_data
  1840                           
  1841                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1842  00147C  0100               	movlb	0	; () banked
  1843  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1844  001480  EC7A  F00C         	call	_char_2_int
  1845  001484  0100               	movlb	0	; () banked
  1846  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;Main.c: 225: ctemp=getkey();
  1850  001488  ECA1  F00D         	call	_getkey	;wreg free
  1851  00148C  0100               	movlb	0	; () banked
  1852  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1853                           
  1854                           ;Main.c: 226: lcd_write_data(ctemp);
  1855  001490  0100               	movlb	0	; () banked
  1856  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1857  001494  EC30  F00B         	call	_lcd_write_data
  1858                           
  1859                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1860  001498  0100               	movlb	0	; () banked
  1861  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1862  00149C  EC7A  F00C         	call	_char_2_int
  1863  0014A0  0100               	movlb	0	; () banked
  1864  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1868  0014A4  0100               	movlb	0	; () banked
  1869  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1870  0014A8  0D0A               	mullw	10
  1871  0014AA  50F3               	movf	prodl,w,c
  1872  0014AC  0100               	movlb	0	; () banked
  1873  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1874  0014B0  6E3B               	movwf	_hourB,c
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1878  0014B2  0100               	movlb	0	; () banked
  1879  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1880  0014B6  0D0A               	mullw	10
  1881  0014B8  50F3               	movf	prodl,w,c
  1882  0014BA  0100               	movlb	0	; () banked
  1883  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1884  0014BE  6E3F               	movwf	_minuteB,c
  1885                           
  1886                           ;Main.c: 232: delay_ms(500);
  1887  0014C0  0E01               	movlw	1
  1888  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1889  0014C4  0EF4               	movlw	244
  1890  0014C6  6E1D               	movwf	delay_ms@i,c
  1891  0014C8  ECC0  F00D         	call	_delay_ms	;wreg free
  1892                           
  1893                           ;Main.c: 233: lcd_write_cmd(0x01);
  1894  0014CC  0E01               	movlw	1
  1895  0014CE  ECB3  F00C         	call	_lcd_write_cmd
  1896  0014D2  0012               	return		;funcret
  1897  0014D4                     __end_of_SetupAlarmTimeB:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodh	equ	0xFF4
  1904                           prodl	equ	0xFF3
  1905                           intcon	equ	0xFF2
  1906                           intcon2	equ	0xFF1
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           plusw1	equ	0xFE3
  1911                           fsr1l	equ	0xFE1
  1912                           indf2	equ	0xFDF
  1913                           plusw2	equ	0xFDB
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _SetupAlarmTimeA *****************
  1919 ;; Defined at:
  1920 ;;		line 155 in file "Main.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1925 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1926 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1927 ;;  minute1         1   44[BANK0 ] unsigned char 
  1928 ;;  minute10        1   43[BANK0 ] unsigned char 
  1929 ;;  hour1           1   42[BANK0 ] unsigned char 
  1930 ;;  hour10          1   41[BANK0 ] unsigned char 
  1931 ;;  outchar         1   40[BANK0 ] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;		None               void
  1934 ;; Registers used:
  1935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0
  1942 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1944 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1945 ;;Total ram usage:       28 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    5
  1948 ;; This function calls:
  1949 ;;		_char_2_int
  1950 ;;		_delay_ms
  1951 ;;		_getkey
  1952 ;;		_lcd_write_cmd
  1953 ;;		_lcd_write_data
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text7
  1960  0014D4                     __ptext7:
  1961                           	opt stack 0
  1962  0014D4                     _SetupAlarmTimeA:
  1963                           	opt stack 25
  1964                           
  1965                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  1966                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  1967                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  1968                           
  1969                           ;incstack = 0
  1970  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4496
  1971  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  1972  0014DC  0E14               	movlw	20
  1973  0014DE                     u951:
  1974  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  1975  0014E2  06E8               	decf	wreg,f,c
  1976  0014E4  E2FC               	bc	u951
  1977                           
  1978                           ;Main.c: 161: PORTA = 0b00000010;
  1979  0014E6  0E02               	movlw	2
  1980  0014E8  6E80               	movwf	3968,c	;volatile
  1981                           
  1982                           ;Main.c: 163: lcd_write_cmd(0x80);
  1983  0014EA  0E80               	movlw	128
  1984  0014EC  ECB3  F00C         	call	_lcd_write_cmd
  1985                           
  1986                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1987  0014F0  0E00               	movlw	0
  1988  0014F2  0100               	movlb	0	; () banked
  1989  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1990  0014F6                     l2152:
  1991                           
  1992                           ; BSR set to: 0
  1993  0014F6  0E13               	movlw	19
  1994  0014F8  0100               	movlb	0	; () banked
  1995  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1996  0014FC  D001               	goto	l2156
  1997  0014FE  D013               	goto	l2164
  1998  001500                     l2156:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;Main.c: 166: {
  2002                           ;Main.c: 167: outchar = Message[msgindex];
  2003  001500  0100               	movlb	0	; () banked
  2004  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2005  001504  0D01               	mullw	1
  2006  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  2007  001508  24F3               	addwf	prodl,w,c
  2008  00150A  6ED9               	movwf	fsr2l,c
  2009  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  2010  00150E  20F4               	addwfc	prodh,w,c
  2011  001510  6EDA               	movwf	fsr2h,c
  2012  001512  50DF               	movf	indf2,w,c
  2013  001514  0100               	movlb	0	; () banked
  2014  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;Main.c: 168: lcd_write_data(outchar);
  2018  001518  0100               	movlb	0	; () banked
  2019  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2020  00151C  EC30  F00B         	call	_lcd_write_data
  2021  001520  0100               	movlb	0	; () banked
  2022  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2023  001524  D7E8               	goto	l2152
  2024  001526                     l2164:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;Main.c: 169: }
  2028                           ;Main.c: 171: lcd_write_cmd(0xC0);
  2029  001526  0EC0               	movlw	192
  2030  001528  ECB3  F00C         	call	_lcd_write_cmd
  2031                           
  2032                           ;Main.c: 173: ctemp=getkey();
  2033  00152C  ECA1  F00D         	call	_getkey	;wreg free
  2034  001530  0100               	movlb	0	; () banked
  2035  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;Main.c: 174: lcd_write_data(ctemp);
  2039  001534  0100               	movlb	0	; () banked
  2040  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2041  001538  EC30  F00B         	call	_lcd_write_data
  2042                           
  2043                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  2044  00153C  0100               	movlb	0	; () banked
  2045  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2046  001540  EC7A  F00C         	call	_char_2_int
  2047  001544  0100               	movlb	0	; () banked
  2048  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Main.c: 177: ctemp=getkey();
  2052  001548  ECA1  F00D         	call	_getkey	;wreg free
  2053  00154C  0100               	movlb	0	; () banked
  2054  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2055                           
  2056                           ;Main.c: 178: lcd_write_data(ctemp);
  2057  001550  0100               	movlb	0	; () banked
  2058  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2059  001554  EC30  F00B         	call	_lcd_write_data
  2060                           
  2061                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2062  001558  0100               	movlb	0	; () banked
  2063  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2064  00155C  EC7A  F00C         	call	_char_2_int
  2065  001560  0100               	movlb	0	; () banked
  2066  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;Main.c: 181: ctemp=getkey();
  2070  001564  ECA1  F00D         	call	_getkey	;wreg free
  2071  001568  0100               	movlb	0	; () banked
  2072  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;Main.c: 182: lcd_write_data(ctemp);
  2076  00156C  0100               	movlb	0	; () banked
  2077  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2078  001570  EC30  F00B         	call	_lcd_write_data
  2079                           
  2080                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2081  001574  0100               	movlb	0	; () banked
  2082  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2083  001578  EC7A  F00C         	call	_char_2_int
  2084  00157C  0100               	movlb	0	; () banked
  2085  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;Main.c: 185: ctemp=getkey();
  2089  001580  ECA1  F00D         	call	_getkey	;wreg free
  2090  001584  0100               	movlb	0	; () banked
  2091  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2092                           
  2093                           ;Main.c: 186: lcd_write_data(ctemp);
  2094  001588  0100               	movlb	0	; () banked
  2095  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2096  00158C  EC30  F00B         	call	_lcd_write_data
  2097                           
  2098                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2099  001590  0100               	movlb	0	; () banked
  2100  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2101  001594  EC7A  F00C         	call	_char_2_int
  2102  001598  0100               	movlb	0	; () banked
  2103  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2107  00159C  0100               	movlb	0	; () banked
  2108  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2109  0015A0  0D0A               	mullw	10
  2110  0015A2  50F3               	movf	prodl,w,c
  2111  0015A4  0100               	movlb	0	; () banked
  2112  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2113  0015A8  6E3A               	movwf	_hourA,c
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2117  0015AA  0100               	movlb	0	; () banked
  2118  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2119  0015AE  0D0A               	mullw	10
  2120  0015B0  50F3               	movf	prodl,w,c
  2121  0015B2  0100               	movlb	0	; () banked
  2122  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2123  0015B6  6E3E               	movwf	_minuteA,c
  2124                           
  2125                           ;Main.c: 192: delay_ms(500);
  2126  0015B8  0E01               	movlw	1
  2127  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2128  0015BC  0EF4               	movlw	244
  2129  0015BE  6E1D               	movwf	delay_ms@i,c
  2130  0015C0  ECC0  F00D         	call	_delay_ms	;wreg free
  2131                           
  2132                           ;Main.c: 193: lcd_write_cmd(0x01);
  2133  0015C4  0E01               	movlw	1
  2134  0015C6  ECB3  F00C         	call	_lcd_write_cmd
  2135  0015CA  0012               	return		;funcret
  2136  0015CC                     __end_of_SetupAlarmTimeA:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           prodh	equ	0xFF4
  2143                           prodl	equ	0xFF3
  2144                           intcon	equ	0xFF2
  2145                           intcon2	equ	0xFF1
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           postdec1	equ	0xFE5
  2149                           plusw1	equ	0xFE3
  2150                           fsr1l	equ	0xFE1
  2151                           indf2	equ	0xFDF
  2152                           plusw2	equ	0xFDB
  2153                           fsr2h	equ	0xFDA
  2154                           fsr2l	equ	0xFD9
  2155                           status	equ	0xFD8
  2156                           
  2157 ;; *************** function _lcd_write_data *****************
  2158 ;; Defined at:
  2159 ;;		line 43 in file "lcd_utilities.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  data            1    wreg     unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  data            1   30[COMRAM] unsigned char 
  2164 ;;  temp1           1   31[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    4
  2181 ;; This function calls:
  2182 ;;		_lcd_strobe
  2183 ;; This function is called by:
  2184 ;;		_SetupTime
  2185 ;;		_SetupAlarmTimeA
  2186 ;;		_SetupAlarmTimeB
  2187 ;;		_SetupAlarmTimeC
  2188 ;;		_version
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text8
  2193  001660                     __ptext8:
  2194                           	opt stack 0
  2195  001660                     _lcd_write_data:
  2196                           	opt stack 25
  2197                           
  2198                           ;incstack = 0
  2199                           ;lcd_write_data@data stored from wreg
  2200  001660  6E1F               	movwf	lcd_write_data@data,c
  2201                           
  2202                           ;lcd_utilities.c: 45: char temp1;
  2203                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2204  001662  8C83               	bsf	3971,6,c	;volatile
  2205                           
  2206                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2207  001664  0E3F               	movlw	63
  2208  001666  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2209  001668  0E55               	movlw	85
  2210  00166A                     u1177:
  2211  00166A  2EE8               	decfsz	wreg,f,c
  2212  00166C  D7FE               	goto	u1177
  2213  00166E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2214  001670  D7FC               	goto	u1177
  2215  001672  F000               	nop	
  2216                           
  2217                           ;lcd_utilities.c: 50: temp1 = data;
  2218  001674  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2219                           
  2220                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2221  001678  3820               	swapf	lcd_write_data@temp1,w,c
  2222  00167A  0B0F               	andlw	15
  2223  00167C  6E20               	movwf	lcd_write_data@temp1,c
  2224                           
  2225                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2226  00167E  5020               	movf	lcd_write_data@temp1,w,c
  2227  001680  0B0F               	andlw	15
  2228  001682  6E83               	movwf	3971,c	;volatile
  2229                           
  2230                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2231  001684  0E7D               	movlw	125
  2232  001686  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2233  001688  0EAC               	movlw	172
  2234  00168A                     u1187:
  2235  00168A  2EE8               	decfsz	wreg,f,c
  2236  00168C  D7FE               	goto	u1187
  2237  00168E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2238  001690  D7FC               	goto	u1187
  2239                           
  2240                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2241  001692  8C83               	bsf	3971,6,c	;volatile
  2242                           
  2243                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2244  001694  0E7D               	movlw	125
  2245  001696  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2246  001698  0EAC               	movlw	172
  2247  00169A                     u1197:
  2248  00169A  2EE8               	decfsz	wreg,f,c
  2249  00169C  D7FE               	goto	u1197
  2250  00169E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2251  0016A0  D7FC               	goto	u1197
  2252                           
  2253                           ;lcd_utilities.c: 57: lcd_strobe();
  2254  0016A2  ECDA  F00D         	call	_lcd_strobe	;wreg free
  2255                           
  2256                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2257  0016A6  0E7D               	movlw	125
  2258  0016A8  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2259  0016AA  0EAC               	movlw	172
  2260  0016AC                     u1207:
  2261  0016AC  2EE8               	decfsz	wreg,f,c
  2262  0016AE  D7FE               	goto	u1207
  2263  0016B0  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2264  0016B2  D7FC               	goto	u1207
  2265                           
  2266                           ;lcd_utilities.c: 60: temp1 = data;
  2267  0016B4  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2268                           
  2269                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2270  0016B8  5020               	movf	lcd_write_data@temp1,w,c
  2271  0016BA  0B0F               	andlw	15
  2272  0016BC  6E83               	movwf	3971,c	;volatile
  2273                           
  2274                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2275  0016BE  0E7D               	movlw	125
  2276  0016C0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2277  0016C2  0EAC               	movlw	172
  2278  0016C4                     u1217:
  2279  0016C4  2EE8               	decfsz	wreg,f,c
  2280  0016C6  D7FE               	goto	u1217
  2281  0016C8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2282  0016CA  D7FC               	goto	u1217
  2283                           
  2284                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2285  0016CC  8C83               	bsf	3971,6,c	;volatile
  2286                           
  2287                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2288  0016CE  0E9C               	movlw	156
  2289  0016D0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2290  0016D2  0ED7               	movlw	215
  2291  0016D4                     u1227:
  2292  0016D4  2EE8               	decfsz	wreg,f,c
  2293  0016D6  D7FE               	goto	u1227
  2294  0016D8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2295  0016DA  D7FC               	goto	u1227
  2296  0016DC  F000               	nop	
  2297                           
  2298                           ;lcd_utilities.c: 66: lcd_strobe();
  2299  0016DE  ECDA  F00D         	call	_lcd_strobe	;wreg free
  2300                           
  2301                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2302  0016E2  0E9C               	movlw	156
  2303  0016E4  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2304  0016E6  0ED7               	movlw	215
  2305  0016E8                     u1237:
  2306  0016E8  2EE8               	decfsz	wreg,f,c
  2307  0016EA  D7FE               	goto	u1237
  2308  0016EC  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2309  0016EE  D7FC               	goto	u1237
  2310  0016F0  F000               	nop	
  2311  0016F2  0012               	return		;funcret
  2312  0016F4                     __end_of_lcd_write_data:
  2313                           	opt stack 0
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           prodh	equ	0xFF4
  2319                           prodl	equ	0xFF3
  2320                           intcon	equ	0xFF2
  2321                           intcon2	equ	0xFF1
  2322                           postinc0	equ	0xFEE
  2323                           wreg	equ	0xFE8
  2324                           postdec1	equ	0xFE5
  2325                           plusw1	equ	0xFE3
  2326                           fsr1l	equ	0xFE1
  2327                           indf2	equ	0xFDF
  2328                           plusw2	equ	0xFDB
  2329                           fsr2h	equ	0xFDA
  2330                           fsr2l	equ	0xFD9
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _lcd_write_cmd *****************
  2334 ;; Defined at:
  2335 ;;		line 18 in file "lcd_utilities.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  cmd             1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  cmd             1   30[COMRAM] unsigned char 
  2340 ;;  temp2           1   31[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2353 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:        3 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		_lcd_strobe
  2359 ;; This function is called by:
  2360 ;;		_lcd_init
  2361 ;;		_SetupTime
  2362 ;;		_SetupAlarmTimeA
  2363 ;;		_SetupAlarmTimeB
  2364 ;;		_SetupAlarmTimeC
  2365 ;;		_version
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text9
  2370  001966                     __ptext9:
  2371                           	opt stack 0
  2372  001966                     _lcd_write_cmd:
  2373                           	opt stack 25
  2374                           
  2375                           ;incstack = 0
  2376                           ;lcd_write_cmd@cmd stored from wreg
  2377  001966  6E1F               	movwf	lcd_write_cmd@cmd,c
  2378                           
  2379                           ;lcd_utilities.c: 20: unsigned char temp2;
  2380                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2381  001968  9C83               	bcf	3971,6,c	;volatile
  2382                           
  2383                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2384  00196A  0E3F               	movlw	63
  2385  00196C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2386  00196E  0E55               	movlw	85
  2387  001970                     u1247:
  2388  001970  2EE8               	decfsz	wreg,f,c
  2389  001972  D7FE               	goto	u1247
  2390  001974  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2391  001976  D7FC               	goto	u1247
  2392  001978  F000               	nop	
  2393                           
  2394                           ;lcd_utilities.c: 23: temp2 = cmd;
  2395  00197A  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2396                           
  2397                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2398  00197E  3820               	swapf	lcd_write_cmd@temp2,w,c
  2399  001980  0B0F               	andlw	15
  2400  001982  6E20               	movwf	lcd_write_cmd@temp2,c
  2401                           
  2402                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2403  001984  5020               	movf	lcd_write_cmd@temp2,w,c
  2404  001986  0B0F               	andlw	15
  2405  001988  6E83               	movwf	3971,c	;volatile
  2406                           
  2407                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2408  00198A  0E7D               	movlw	125
  2409  00198C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2410  00198E  0EAC               	movlw	172
  2411  001990                     u1257:
  2412  001990  2EE8               	decfsz	wreg,f,c
  2413  001992  D7FE               	goto	u1257
  2414  001994  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2415  001996  D7FC               	goto	u1257
  2416                           
  2417                           ;lcd_utilities.c: 28: lcd_strobe();
  2418  001998  ECDA  F00D         	call	_lcd_strobe	;wreg free
  2419                           
  2420                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2421  00199C  0E7D               	movlw	125
  2422  00199E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2423  0019A0  0EAC               	movlw	172
  2424  0019A2                     u1267:
  2425  0019A2  2EE8               	decfsz	wreg,f,c
  2426  0019A4  D7FE               	goto	u1267
  2427  0019A6  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2428  0019A8  D7FC               	goto	u1267
  2429                           
  2430                           ;lcd_utilities.c: 32: temp2 = cmd;
  2431  0019AA  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2432                           
  2433                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2434  0019AE  5020               	movf	lcd_write_cmd@temp2,w,c
  2435  0019B0  0B0F               	andlw	15
  2436  0019B2  6E83               	movwf	3971,c	;volatile
  2437                           
  2438                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2439  0019B4  0E7D               	movlw	125
  2440  0019B6  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2441  0019B8  0EAC               	movlw	172
  2442  0019BA                     u1277:
  2443  0019BA  2EE8               	decfsz	wreg,f,c
  2444  0019BC  D7FE               	goto	u1277
  2445  0019BE  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2446  0019C0  D7FC               	goto	u1277
  2447                           
  2448                           ;lcd_utilities.c: 36: lcd_strobe();
  2449  0019C2  ECDA  F00D         	call	_lcd_strobe	;wreg free
  2450                           
  2451                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2452  0019C6  0E7D               	movlw	125
  2453  0019C8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2454  0019CA  0EAC               	movlw	172
  2455  0019CC                     u1287:
  2456  0019CC  2EE8               	decfsz	wreg,f,c
  2457  0019CE  D7FE               	goto	u1287
  2458  0019D0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2459  0019D2  D7FC               	goto	u1287
  2460  0019D4  0012               	return		;funcret
  2461  0019D6                     __end_of_lcd_write_cmd:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           prodh	equ	0xFF4
  2468                           prodl	equ	0xFF3
  2469                           intcon	equ	0xFF2
  2470                           intcon2	equ	0xFF1
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           plusw1	equ	0xFE3
  2475                           fsr1l	equ	0xFE1
  2476                           indf2	equ	0xFDF
  2477                           plusw2	equ	0xFDB
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _lcd_strobe *****************
  2483 ;; Defined at:
  2484 ;;		line 73 in file "lcd_utilities.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;		None               void
  2491 ;; Registers used:
  2492 ;;		wreg
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2500 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    3
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_lcd_write_cmd
  2509 ;;		_lcd_write_data
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text10
  2514  001BB4                     __ptext10:
  2515                           	opt stack 0
  2516  001BB4                     _lcd_strobe:
  2517                           	opt stack 25
  2518                           
  2519                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2520                           
  2521                           ;incstack = 0
  2522  001BB4  8883               	bsf	3971,4,c	;volatile
  2523                           
  2524                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2525  001BB6  0E7D               	movlw	125
  2526  001BB8  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2527  001BBA  0EAC               	movlw	172
  2528  001BBC                     u1297:
  2529  001BBC  2EE8               	decfsz	wreg,f,c
  2530  001BBE  D7FE               	goto	u1297
  2531  001BC0  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2532  001BC2  D7FC               	goto	u1297
  2533                           
  2534                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2535  001BC4  9883               	bcf	3971,4,c	;volatile
  2536                           
  2537                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2538  001BC6  0E7D               	movlw	125
  2539  001BC8  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2540  001BCA  0EAC               	movlw	172
  2541  001BCC                     u1307:
  2542  001BCC  2EE8               	decfsz	wreg,f,c
  2543  001BCE  D7FE               	goto	u1307
  2544  001BD0  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2545  001BD2  D7FC               	goto	u1307
  2546  001BD4  0012               	return		;funcret
  2547  001BD6                     __end_of_lcd_strobe:
  2548                           	opt stack 0
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           prodh	equ	0xFF4
  2554                           prodl	equ	0xFF3
  2555                           intcon	equ	0xFF2
  2556                           intcon2	equ	0xFF1
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           postdec1	equ	0xFE5
  2560                           plusw1	equ	0xFE3
  2561                           fsr1l	equ	0xFE1
  2562                           indf2	equ	0xFDF
  2563                           plusw2	equ	0xFDB
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _getkey *****************
  2569 ;; Defined at:
  2570 ;;		line 17 in file "keypad_utilities.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2575 ;;  keycode         1   18[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      unsigned char 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2589 ;;Total ram usage:       19 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    3
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_SetupTime
  2596 ;;		_SetupAlarmTimeA
  2597 ;;		_SetupAlarmTimeB
  2598 ;;		_SetupAlarmTimeC
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text11
  2603  001B42                     __ptext11:
  2604                           	opt stack 0
  2605  001B42                     _getkey:
  2606                           	opt stack 26
  2607                           
  2608                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2609                           
  2610                           ;incstack = 0
  2611  001B42  0E1B               	movlw	low getkey@F4444
  2612  001B44  6EF6               	movwf	tblptrl,c
  2613  001B46                     	if	1	;There is more than 1 active tblptr byte
  2614  001B46  0E10               	movlw	high getkey@F4444
  2615  001B48  6EF7               	movwf	tblptrh,c
  2616  001B4A                     	endif
  2617  001B4A                     	if	0	;There are less than 3 active tblptr bytes
  2618  001B4A                     	endif
  2619  001B4A  EE20  F0B4         	lfsr	2,getkey@lookup
  2620  001B4E  0E11               	movlw	17
  2621  001B50                     u850:
  2622  001B50  0009               	tblrd		*+
  2623  001B52  CFF5 FFDE          	movff	tablat,postinc2
  2624  001B56  06E8               	decf	wreg,f,c
  2625  001B58  E2FB               	bc	u850
  2626  001B5A                     l33:
  2627  001B5A  AA81               	btfss	3969,5,c	;volatile
  2628  001B5C  D7FE               	goto	l33
  2629                           
  2630                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2631  001B5E  5081               	movf	3969,w,c	;volatile
  2632  001B60  0B0F               	andlw	15
  2633  001B62  0100               	movlb	0	; () banked
  2634  001B64  6FC6               	movwf	getkey@keycode& (0+255),b
  2635  001B66                     l36:
  2636  001B66  BA81               	btfsc	3969,5,c	;volatile
  2637  001B68  D7FE               	goto	l36
  2638                           
  2639                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2640  001B6A  0100               	movlb	0	; () banked
  2641  001B6C  51C6               	movf	getkey@keycode& (0+255),w,b
  2642  001B6E  0D01               	mullw	1
  2643  001B70  0EB4               	movlw	low getkey@lookup
  2644  001B72  24F3               	addwf	prodl,w,c
  2645  001B74  6ED9               	movwf	fsr2l,c
  2646  001B76  0E00               	movlw	high getkey@lookup
  2647  001B78  20F4               	addwfc	prodh,w,c
  2648  001B7A  6EDA               	movwf	fsr2h,c
  2649  001B7C  50DF               	movf	indf2,w,c
  2650  001B7E  0012               	return	
  2651  001B80                     __end_of_getkey:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           prodh	equ	0xFF4
  2658                           prodl	equ	0xFF3
  2659                           intcon	equ	0xFF2
  2660                           intcon2	equ	0xFF1
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           postdec1	equ	0xFE5
  2664                           plusw1	equ	0xFE3
  2665                           fsr1l	equ	0xFE1
  2666                           indf2	equ	0xFDF
  2667                           postinc2	equ	0xFDE
  2668                           plusw2	equ	0xFDB
  2669                           fsr2h	equ	0xFDA
  2670                           fsr2l	equ	0xFD9
  2671                           status	equ	0xFD8
  2672                           
  2673 ;; *************** function _delay_ms *****************
  2674 ;; Defined at:
  2675 ;;		line 10 in file "delays_utilities.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  i               2   28[COMRAM] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  j               2   31[COMRAM] unsigned int 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2689 ;;      Params:         2       0       0       0       0       0       0       0       0
  2690 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2691 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2692 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2693 ;;Total ram usage:        5 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    3
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_SetupTime
  2700 ;;		_SetupAlarmTimeA
  2701 ;;		_SetupAlarmTimeB
  2702 ;;		_SetupAlarmTimeC
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text12
  2707  001B80                     __ptext12:
  2708                           	opt stack 0
  2709  001B80                     _delay_ms:
  2710                           	opt stack 26
  2711                           
  2712                           ;delays_utilities.c: 12: if(i!=0)
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;incstack = 0
  2716  001B80  501D               	movf	delay_ms@i,w,c
  2717  001B82  101E               	iorwf	delay_ms@i+1,w,c
  2718  001B84  B4D8               	btfsc	status,2,c
  2719  001B86  0012               	return	
  2720                           
  2721                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2722  001B88  0E00               	movlw	0
  2723  001B8A  6E21               	movwf	delay_ms@j+1,c
  2724  001B8C  0E00               	movlw	0
  2725  001B8E  6E20               	movwf	delay_ms@j,c
  2726  001B90  D00A               	goto	l182
  2727  001B92                     l2066:
  2728  001B92  0E10               	movlw	16
  2729  001B94  6E1F               	movwf	??_delay_ms& (0+255),c
  2730  001B96  0E94               	movlw	148
  2731  001B98                     u1317:
  2732  001B98  2EE8               	decfsz	wreg,f,c
  2733  001B9A  D7FE               	goto	u1317
  2734  001B9C  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2735  001B9E  D7FC               	goto	u1317
  2736  001BA0  D000               	nop2	
  2737  001BA2  4A20               	infsnz	delay_ms@j,f,c
  2738  001BA4  2A21               	incf	delay_ms@j+1,f,c
  2739  001BA6                     l182:
  2740  001BA6  501D               	movf	delay_ms@i,w,c
  2741  001BA8  5C20               	subwf	delay_ms@j,w,c
  2742  001BAA  501E               	movf	delay_ms@i+1,w,c
  2743  001BAC  5821               	subwfb	delay_ms@j+1,w,c
  2744  001BAE  B0D8               	btfsc	status,0,c
  2745  001BB0  0012               	return	
  2746  001BB2  D7EF               	goto	l2066
  2747  001BB4                     __end_of_delay_ms:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           intcon2	equ	0xFF1
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           postdec1	equ	0xFE5
  2760                           plusw1	equ	0xFE3
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           plusw2	equ	0xFDB
  2765                           fsr2h	equ	0xFDA
  2766                           fsr2l	equ	0xFD9
  2767                           status	equ	0xFD8
  2768                           
  2769 ;; *************** function _char_2_int *****************
  2770 ;; Defined at:
  2771 ;;		line 35 in file "Main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  char1           1    wreg     unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  char1           1   28[COMRAM] unsigned char 
  2776 ;;  int1            1   29[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      unsigned char 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2789 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2790 ;;Total ram usage:        2 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    3
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_SetupTime
  2797 ;;		_SetupAlarmTimeA
  2798 ;;		_SetupAlarmTimeB
  2799 ;;		_SetupAlarmTimeC
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text13
  2804  0018F4                     __ptext13:
  2805                           	opt stack 0
  2806  0018F4                     _char_2_int:
  2807                           	opt stack 26
  2808                           
  2809                           ;incstack = 0
  2810                           ;char_2_int@char1 stored from wreg
  2811  0018F4  6E1D               	movwf	char_2_int@char1,c
  2812                           
  2813                           ;Main.c: 37: unsigned char int1;
  2814                           ;Main.c: 38: switch (char1)
  2815  0018F6  D015               	goto	l2060
  2816  0018F8                     l2040:
  2817  0018F8  0E01               	movlw	1
  2818  0018FA  D011               	goto	L12
  2819  0018FC                     l2042:
  2820  0018FC  0E02               	movlw	2
  2821  0018FE  D00F               	goto	L12
  2822  001900                     l2044:
  2823  001900  0E03               	movlw	3
  2824  001902  D00D               	goto	L12
  2825  001904                     l2046:
  2826  001904  0E04               	movlw	4
  2827  001906  D00B               	goto	L12
  2828  001908                     l2048:
  2829  001908  0E05               	movlw	5
  2830  00190A  D009               	goto	L12
  2831  00190C                     l2050:
  2832  00190C  0E06               	movlw	6
  2833  00190E  D007               	goto	L12
  2834  001910                     l2052:
  2835  001910  0E07               	movlw	7
  2836  001912  D005               	goto	L12
  2837  001914                     l2054:
  2838  001914  0E08               	movlw	8
  2839  001916  D003               	goto	L12
  2840  001918                     l2056:
  2841  001918  0E09               	movlw	9
  2842  00191A  D001               	goto	L12
  2843  00191C                     l2058:
  2844  00191C  0E00               	movlw	0
  2845  00191E                     L12:
  2846  00191E  6E1E               	movwf	char_2_int@int1,c
  2847                           
  2848                           ;Main.c: 51: }
  2849  001920  D020               	goto	l114
  2850  001922                     l2060:
  2851  001922  501D               	movf	char_2_int@char1,w,c
  2852                           
  2853                           ; Switch size 1, requested type "space"
  2854                           ; Number of cases is 10, Range of values is 48 to 57
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte           31    16 (average)
  2858                           ;	Chosen strategy is simple_byte
  2859  001924  0A30               	xorlw	48	; case 48
  2860  001926  B4D8               	btfsc	status,2,c
  2861  001928  D7F9               	goto	l2058
  2862  00192A  0A01               	xorlw	1	; case 49
  2863  00192C  B4D8               	btfsc	status,2,c
  2864  00192E  D7E4               	goto	l2040
  2865  001930  0A03               	xorlw	3	; case 50
  2866  001932  B4D8               	btfsc	status,2,c
  2867  001934  D7E3               	goto	l2042
  2868  001936  0A01               	xorlw	1	; case 51
  2869  001938  B4D8               	btfsc	status,2,c
  2870  00193A  D7E2               	goto	l2044
  2871  00193C  0A07               	xorlw	7	; case 52
  2872  00193E  B4D8               	btfsc	status,2,c
  2873  001940  D7E1               	goto	l2046
  2874  001942  0A01               	xorlw	1	; case 53
  2875  001944  B4D8               	btfsc	status,2,c
  2876  001946  D7E0               	goto	l2048
  2877  001948  0A03               	xorlw	3	; case 54
  2878  00194A  B4D8               	btfsc	status,2,c
  2879  00194C  D7DF               	goto	l2050
  2880  00194E  0A01               	xorlw	1	; case 55
  2881  001950  B4D8               	btfsc	status,2,c
  2882  001952  D7DE               	goto	l2052
  2883  001954  0A0F               	xorlw	15	; case 56
  2884  001956  B4D8               	btfsc	status,2,c
  2885  001958  D7DD               	goto	l2054
  2886  00195A  0A01               	xorlw	1	; case 57
  2887  00195C  B4D8               	btfsc	status,2,c
  2888  00195E  D7DC               	goto	l2056
  2889  001960  D7DD               	goto	l2058
  2890  001962                     l114:
  2891                           
  2892                           ;Main.c: 52: return(int1);
  2893  001962  501E               	movf	char_2_int@int1,w,c
  2894  001964  0012               	return		;funcret
  2895  001966                     __end_of_char_2_int:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postdec1	equ	0xFE5
  2908                           plusw1	equ	0xFE3
  2909                           fsr1l	equ	0xFE1
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           plusw2	equ	0xFDB
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _ISR_Timer0_Int *****************
  2918 ;; Defined at:
  2919 ;;		line 55 in file "Main.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  second10        1   27[COMRAM] unsigned char 
  2924 ;;  minute10        1   26[COMRAM] unsigned char 
  2925 ;;  hour10          1   25[COMRAM] unsigned char 
  2926 ;;  second1         1   24[COMRAM] unsigned char 
  2927 ;;  minute1         1   23[COMRAM] unsigned char 
  2928 ;;  hour1           1   22[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2940 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2941 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:       20 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    2
  2945 ;; This function calls:
  2946 ;;		___awdiv
  2947 ;;		_int_2_char
  2948 ;;		i2_lcd_write_cmd
  2949 ;;		i2_lcd_write_data
  2950 ;; This function is called by:
  2951 ;;		Interrupt level 2
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	intcode
  2956  001008                     __pintcode:
  2957                           	opt stack 0
  2958  001008                     _ISR_Timer0_Int:
  2959                           	opt stack 25
  2960                           
  2961                           ;incstack = 0
  2962  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2963  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2964  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2965  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2966                           pclatu	equ	0xFFB
  2967                           pclath	equ	0xFFA
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           intcon2	equ	0xFF1
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           postdec1	equ	0xFE5
  2979                           plusw1	equ	0xFE3
  2980                           fsr1l	equ	0xFE1
  2981                           indf2	equ	0xFDF
  2982                           postinc2	equ	0xFDE
  2983                           plusw2	equ	0xFDB
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8
  2987                           
  2988                           	psect	intcode_body
  2989  00102E                     __pintcode_body:
  2990                           	opt stack 25
  2991  00102E                     int_func:
  2992                           	opt stack 25
  2993  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2994  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2995  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2996  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2997  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2998  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2999  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3000  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3001  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3002  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3003  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3004  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3005  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3006                           
  3007                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3008                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  3009  001060  A4F2               	btfss	intcon,2,c	;volatile
  3010  001062  D085               	goto	i2l132
  3011                           
  3012                           ;Main.c: 59: {
  3013                           ;Main.c: 63: second = second + 1;
  3014  001064  2841               	incf	_second,w,c
  3015  001066  6E41               	movwf	_second,c
  3016                           
  3017                           ;Main.c: 64: if ( second > 59 )
  3018  001068  0E3B               	movlw	59
  3019  00106A  6441               	cpfsgt	_second,c
  3020  00106C  D010               	goto	i2l1868
  3021                           
  3022                           ;Main.c: 65: {
  3023                           ;Main.c: 66: second = 0;
  3024  00106E  0E00               	movlw	0
  3025  001070  6E41               	movwf	_second,c
  3026                           
  3027                           ;Main.c: 67: minute = minute + 1;
  3028  001072  283D               	incf	_minute,w,c
  3029  001074  6E3D               	movwf	_minute,c
  3030                           
  3031                           ;Main.c: 68: if ( minute > 59 )
  3032  001076  0E3B               	movlw	59
  3033  001078  643D               	cpfsgt	_minute,c
  3034  00107A  D009               	goto	i2l1868
  3035                           
  3036                           ;Main.c: 69: {
  3037                           ;Main.c: 70: minute = 0;
  3038  00107C  0E00               	movlw	0
  3039  00107E  6E3D               	movwf	_minute,c
  3040                           
  3041                           ;Main.c: 71: hour = hour + 1;
  3042  001080  2839               	incf	_hour,w,c
  3043  001082  6E39               	movwf	_hour,c
  3044                           
  3045                           ;Main.c: 72: if ( hour > 23 )
  3046  001084  0E17               	movlw	23
  3047  001086  6439               	cpfsgt	_hour,c
  3048  001088  D002               	goto	i2l1868
  3049                           
  3050                           ;Main.c: 73: hour = 0;
  3051  00108A  0E00               	movlw	0
  3052  00108C  6E39               	movwf	_hour,c
  3053  00108E                     i2l1868:
  3054                           
  3055                           ;Main.c: 74: }
  3056                           ;Main.c: 75: }
  3057                           ;Main.c: 77: hour10 = hour / 10;
  3058  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3059  001092  6A02               	clrf	___awdiv@dividend+1,c
  3060  001094  0E00               	movlw	0
  3061  001096  6E04               	movwf	___awdiv@divisor+1,c
  3062  001098  0E0A               	movlw	10
  3063  00109A  6E03               	movwf	___awdiv@divisor,c
  3064  00109C  ECC4  F00B         	call	___awdiv	;wreg free
  3065  0010A0  5001               	movf	?___awdiv,w,c
  3066  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3067                           
  3068                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3069  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3070  0010A6  0D0A               	mullw	10
  3071  0010A8  50F3               	movf	prodl,w,c
  3072  0010AA  0800               	sublw	0
  3073  0010AC  2439               	addwf	_hour,w,c
  3074  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3075                           
  3076                           ;Main.c: 80: minute10 = minute / 10;
  3077  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3078  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3079  0010B6  0E00               	movlw	0
  3080  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3081  0010BA  0E0A               	movlw	10
  3082  0010BC  6E03               	movwf	___awdiv@divisor,c
  3083  0010BE  ECC4  F00B         	call	___awdiv	;wreg free
  3084  0010C2  5001               	movf	?___awdiv,w,c
  3085  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3086                           
  3087                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3088  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3089  0010C8  0D0A               	mullw	10
  3090  0010CA  50F3               	movf	prodl,w,c
  3091  0010CC  0800               	sublw	0
  3092  0010CE  243D               	addwf	_minute,w,c
  3093  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3094                           
  3095                           ;Main.c: 83: second10 = second / 10;
  3096  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3097  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3098  0010D8  0E00               	movlw	0
  3099  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3100  0010DC  0E0A               	movlw	10
  3101  0010DE  6E03               	movwf	___awdiv@divisor,c
  3102  0010E0  ECC4  F00B         	call	___awdiv	;wreg free
  3103  0010E4  5001               	movf	?___awdiv,w,c
  3104  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3105                           
  3106                           ;Main.c: 84: second1 = second - second10 * 10;
  3107  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3108  0010EA  0D0A               	mullw	10
  3109  0010EC  50F3               	movf	prodl,w,c
  3110  0010EE  0800               	sublw	0
  3111  0010F0  2441               	addwf	_second,w,c
  3112  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3113                           
  3114                           ;Main.c: 86: lcd_write_cmd(0x80);
  3115  0010F4  0E80               	movlw	128
  3116  0010F6  ECEB  F00C         	call	i2_lcd_write_cmd
  3117                           
  3118                           ;Main.c: 87: lcd_write_data('t');
  3119  0010FA  0E74               	movlw	116
  3120  0010FC  EC7A  F00B         	call	i2_lcd_write_data
  3121                           
  3122                           ;Main.c: 88: lcd_write_data('i');
  3123  001100  0E69               	movlw	105
  3124  001102  EC7A  F00B         	call	i2_lcd_write_data
  3125                           
  3126                           ;Main.c: 89: lcd_write_data('m');
  3127  001106  0E6D               	movlw	109
  3128  001108  EC7A  F00B         	call	i2_lcd_write_data
  3129                           
  3130                           ;Main.c: 90: lcd_write_data('e');
  3131  00110C  0E65               	movlw	101
  3132  00110E  EC7A  F00B         	call	i2_lcd_write_data
  3133                           
  3134                           ;Main.c: 91: lcd_write_data(' ');
  3135  001112  0E20               	movlw	32
  3136  001114  EC7A  F00B         	call	i2_lcd_write_data
  3137                           
  3138                           ;Main.c: 92: lcd_write_data('=');
  3139  001118  0E3D               	movlw	61
  3140  00111A  EC7A  F00B         	call	i2_lcd_write_data
  3141                           
  3142                           ;Main.c: 93: lcd_write_data(' ');
  3143  00111E  0E20               	movlw	32
  3144  001120  EC7A  F00B         	call	i2_lcd_write_data
  3145                           
  3146                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3147  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3148  001126  EC06  F00C         	call	_int_2_char
  3149  00112A  EC7A  F00B         	call	i2_lcd_write_data
  3150                           
  3151                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3152  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3153  001130  EC06  F00C         	call	_int_2_char
  3154  001134  EC7A  F00B         	call	i2_lcd_write_data
  3155                           
  3156                           ;Main.c: 96: lcd_write_data(':');
  3157  001138  0E3A               	movlw	58
  3158  00113A  EC7A  F00B         	call	i2_lcd_write_data
  3159                           
  3160                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3161  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3162  001140  EC06  F00C         	call	_int_2_char
  3163  001144  EC7A  F00B         	call	i2_lcd_write_data
  3164                           
  3165                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3166  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3167  00114A  EC06  F00C         	call	_int_2_char
  3168  00114E  EC7A  F00B         	call	i2_lcd_write_data
  3169                           
  3170                           ;Main.c: 99: lcd_write_data(':');
  3171  001152  0E3A               	movlw	58
  3172  001154  EC7A  F00B         	call	i2_lcd_write_data
  3173                           
  3174                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3175  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3176  00115A  EC06  F00C         	call	_int_2_char
  3177  00115E  EC7A  F00B         	call	i2_lcd_write_data
  3178                           
  3179                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3180  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3181  001164  EC06  F00C         	call	_int_2_char
  3182  001168  EC7A  F00B         	call	i2_lcd_write_data
  3183                           
  3184                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3185  00116C  94F2               	bcf	intcon,2,c	;volatile
  3186  00116E                     i2l132:
  3187  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3188  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3189  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3190  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3191  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3192  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3193  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3194  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3195  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3196  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3197  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3198  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3199  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3200  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3201  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3202  0011A8  0011               	retfie		f
  3203  0011AA                     __end_of_ISR_Timer0_Int:
  3204                           	opt stack 0
  3205                           pclatu	equ	0xFFB
  3206                           pclath	equ	0xFFA
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           intcon2	equ	0xFF1
  3215                           postinc0	equ	0xFEE
  3216                           fsr0h	equ	0xFEA
  3217                           fsr0l	equ	0xFE9
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           plusw1	equ	0xFE3
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           postinc2	equ	0xFDE
  3225                           plusw2	equ	0xFDB
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230 ;; *************** function i2_lcd_write_data *****************
  3231 ;; Defined at:
  3232 ;;		line 43 in file "lcd_utilities.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  data            1    wreg     unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  data            1    2[COMRAM] unsigned char 
  3237 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;		None               void
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0
  3248 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3249 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3250 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3251 ;;Total ram usage:        3 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    1
  3254 ;; This function calls:
  3255 ;;		i2_lcd_strobe
  3256 ;; This function is called by:
  3257 ;;		_ISR_Timer0_Int
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text15
  3262  0016F4                     __ptext15:
  3263                           	opt stack 0
  3264  0016F4                     i2_lcd_write_data:
  3265                           	opt stack 25
  3266                           
  3267                           ;incstack = 0
  3268                           ;i2lcd_write_data@data stored from wreg
  3269  0016F4  6E03               	movwf	i2lcd_write_data@data,c
  3270                           
  3271                           ;lcd_utilities.c: 45: char temp1;
  3272                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3273  0016F6  8C83               	bsf	3971,6,c	;volatile
  3274                           
  3275                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3276  0016F8  0E3F               	movlw	63
  3277  0016FA  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3278  0016FC  0E55               	movlw	85
  3279  0016FE                     i2u132_47:
  3280  0016FE  2EE8               	decfsz	wreg,f,c
  3281  001700  D7FE               	goto	i2u132_47
  3282  001702  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3283  001704  D7FC               	goto	i2u132_47
  3284  001706  F000               	nop	
  3285                           
  3286                           ;lcd_utilities.c: 50: temp1 = data;
  3287  001708  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3288                           
  3289                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3290  00170C  3804               	swapf	i2lcd_write_data@temp1,w,c
  3291  00170E  0B0F               	andlw	15
  3292  001710  6E04               	movwf	i2lcd_write_data@temp1,c
  3293                           
  3294                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3295  001712  5004               	movf	i2lcd_write_data@temp1,w,c
  3296  001714  0B0F               	andlw	15
  3297  001716  6E83               	movwf	3971,c	;volatile
  3298                           
  3299                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3300  001718  0E7D               	movlw	125
  3301  00171A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3302  00171C  0EAC               	movlw	172
  3303  00171E                     i2u133_47:
  3304  00171E  2EE8               	decfsz	wreg,f,c
  3305  001720  D7FE               	goto	i2u133_47
  3306  001722  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3307  001724  D7FC               	goto	i2u133_47
  3308                           
  3309                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3310  001726  8C83               	bsf	3971,6,c	;volatile
  3311                           
  3312                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3313  001728  0E7D               	movlw	125
  3314  00172A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3315  00172C  0EAC               	movlw	172
  3316  00172E                     i2u134_47:
  3317  00172E  2EE8               	decfsz	wreg,f,c
  3318  001730  D7FE               	goto	i2u134_47
  3319  001732  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3320  001734  D7FC               	goto	i2u134_47
  3321                           
  3322                           ;lcd_utilities.c: 57: lcd_strobe();
  3323  001736  ECEB  F00D         	call	i2_lcd_strobe	;wreg free
  3324                           
  3325                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3326  00173A  0E7D               	movlw	125
  3327  00173C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3328  00173E  0EAC               	movlw	172
  3329  001740                     i2u135_47:
  3330  001740  2EE8               	decfsz	wreg,f,c
  3331  001742  D7FE               	goto	i2u135_47
  3332  001744  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3333  001746  D7FC               	goto	i2u135_47
  3334                           
  3335                           ;lcd_utilities.c: 60: temp1 = data;
  3336  001748  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3337                           
  3338                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3339  00174C  5004               	movf	i2lcd_write_data@temp1,w,c
  3340  00174E  0B0F               	andlw	15
  3341  001750  6E83               	movwf	3971,c	;volatile
  3342                           
  3343                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3344  001752  0E7D               	movlw	125
  3345  001754  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3346  001756  0EAC               	movlw	172
  3347  001758                     i2u136_47:
  3348  001758  2EE8               	decfsz	wreg,f,c
  3349  00175A  D7FE               	goto	i2u136_47
  3350  00175C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3351  00175E  D7FC               	goto	i2u136_47
  3352                           
  3353                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3354  001760  8C83               	bsf	3971,6,c	;volatile
  3355                           
  3356                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3357  001762  0E9C               	movlw	156
  3358  001764  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3359  001766  0ED7               	movlw	215
  3360  001768                     i2u137_47:
  3361  001768  2EE8               	decfsz	wreg,f,c
  3362  00176A  D7FE               	goto	i2u137_47
  3363  00176C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3364  00176E  D7FC               	goto	i2u137_47
  3365  001770  F000               	nop	
  3366                           
  3367                           ;lcd_utilities.c: 66: lcd_strobe();
  3368  001772  ECEB  F00D         	call	i2_lcd_strobe	;wreg free
  3369                           
  3370                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3371  001776  0E9C               	movlw	156
  3372  001778  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3373  00177A  0ED7               	movlw	215
  3374  00177C                     i2u138_47:
  3375  00177C  2EE8               	decfsz	wreg,f,c
  3376  00177E  D7FE               	goto	i2u138_47
  3377  001780  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3378  001782  D7FC               	goto	i2u138_47
  3379  001784  F000               	nop	
  3380  001786  0012               	return		;funcret
  3381  001788                     __end_ofi2_lcd_write_data:
  3382                           	opt stack 0
  3383                           pclatu	equ	0xFFB
  3384                           pclath	equ	0xFFA
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           intcon2	equ	0xFF1
  3393                           postinc0	equ	0xFEE
  3394                           fsr0h	equ	0xFEA
  3395                           fsr0l	equ	0xFE9
  3396                           wreg	equ	0xFE8
  3397                           postdec1	equ	0xFE5
  3398                           plusw1	equ	0xFE3
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           plusw2	equ	0xFDB
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function i2_lcd_write_cmd *****************
  3409 ;; Defined at:
  3410 ;;		line 18 in file "lcd_utilities.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  cmd             1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  cmd             1    2[COMRAM] unsigned char 
  3415 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;		None               void
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0
  3426 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3427 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3428 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:        3 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    1
  3432 ;; This function calls:
  3433 ;;		i2_lcd_strobe
  3434 ;; This function is called by:
  3435 ;;		_ISR_Timer0_Int
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text16
  3440  0019D6                     __ptext16:
  3441                           	opt stack 0
  3442  0019D6                     i2_lcd_write_cmd:
  3443                           	opt stack 25
  3444                           
  3445                           ;incstack = 0
  3446                           ;i2lcd_write_cmd@cmd stored from wreg
  3447  0019D6  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3448                           
  3449                           ;lcd_utilities.c: 20: unsigned char temp2;
  3450                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3451  0019D8  9C83               	bcf	3971,6,c	;volatile
  3452                           
  3453                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3454  0019DA  0E3F               	movlw	63
  3455  0019DC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3456  0019DE  0E55               	movlw	85
  3457  0019E0                     i2u139_47:
  3458  0019E0  2EE8               	decfsz	wreg,f,c
  3459  0019E2  D7FE               	goto	i2u139_47
  3460  0019E4  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3461  0019E6  D7FC               	goto	i2u139_47
  3462  0019E8  F000               	nop	
  3463                           
  3464                           ;lcd_utilities.c: 23: temp2 = cmd;
  3465  0019EA  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3466                           
  3467                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3468  0019EE  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3469  0019F0  0B0F               	andlw	15
  3470  0019F2  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3471                           
  3472                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3473  0019F4  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3474  0019F6  0B0F               	andlw	15
  3475  0019F8  6E83               	movwf	3971,c	;volatile
  3476                           
  3477                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3478  0019FA  0E7D               	movlw	125
  3479  0019FC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3480  0019FE  0EAC               	movlw	172
  3481  001A00                     i2u140_47:
  3482  001A00  2EE8               	decfsz	wreg,f,c
  3483  001A02  D7FE               	goto	i2u140_47
  3484  001A04  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3485  001A06  D7FC               	goto	i2u140_47
  3486                           
  3487                           ;lcd_utilities.c: 28: lcd_strobe();
  3488  001A08  ECEB  F00D         	call	i2_lcd_strobe	;wreg free
  3489                           
  3490                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3491  001A0C  0E7D               	movlw	125
  3492  001A0E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3493  001A10  0EAC               	movlw	172
  3494  001A12                     i2u141_47:
  3495  001A12  2EE8               	decfsz	wreg,f,c
  3496  001A14  D7FE               	goto	i2u141_47
  3497  001A16  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3498  001A18  D7FC               	goto	i2u141_47
  3499                           
  3500                           ;lcd_utilities.c: 32: temp2 = cmd;
  3501  001A1A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3502                           
  3503                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3504  001A1E  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3505  001A20  0B0F               	andlw	15
  3506  001A22  6E83               	movwf	3971,c	;volatile
  3507                           
  3508                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3509  001A24  0E7D               	movlw	125
  3510  001A26  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3511  001A28  0EAC               	movlw	172
  3512  001A2A                     i2u142_47:
  3513  001A2A  2EE8               	decfsz	wreg,f,c
  3514  001A2C  D7FE               	goto	i2u142_47
  3515  001A2E  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3516  001A30  D7FC               	goto	i2u142_47
  3517                           
  3518                           ;lcd_utilities.c: 36: lcd_strobe();
  3519  001A32  ECEB  F00D         	call	i2_lcd_strobe	;wreg free
  3520                           
  3521                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3522  001A36  0E7D               	movlw	125
  3523  001A38  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3524  001A3A  0EAC               	movlw	172
  3525  001A3C                     i2u143_47:
  3526  001A3C  2EE8               	decfsz	wreg,f,c
  3527  001A3E  D7FE               	goto	i2u143_47
  3528  001A40  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3529  001A42  D7FC               	goto	i2u143_47
  3530  001A44  0012               	return		;funcret
  3531  001A46                     __end_ofi2_lcd_write_cmd:
  3532                           	opt stack 0
  3533                           pclatu	equ	0xFFB
  3534                           pclath	equ	0xFFA
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           intcon2	equ	0xFF1
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           postdec1	equ	0xFE5
  3548                           plusw1	equ	0xFE3
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           indf2	equ	0xFDF
  3552                           postinc2	equ	0xFDE
  3553                           plusw2	equ	0xFDB
  3554                           fsr2h	equ	0xFDA
  3555                           fsr2l	equ	0xFD9
  3556                           status	equ	0xFD8
  3557                           
  3558 ;; *************** function i2_lcd_strobe *****************
  3559 ;; Defined at:
  3560 ;;		line 73 in file "lcd_utilities.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;		None               void
  3567 ;; Registers used:
  3568 ;;		wreg
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3576 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3577 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3578 ;;Total ram usage:        1 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		i2_lcd_write_cmd
  3584 ;;		i2_lcd_write_data
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text17
  3589  001BD6                     __ptext17:
  3590                           	opt stack 0
  3591  001BD6                     i2_lcd_strobe:
  3592                           	opt stack 25
  3593                           
  3594                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3595                           
  3596                           ;incstack = 0
  3597  001BD6  8883               	bsf	3971,4,c	;volatile
  3598                           
  3599                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3600  001BD8  0E7D               	movlw	125
  3601  001BDA  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3602  001BDC  0EAC               	movlw	172
  3603  001BDE                     i2u144_47:
  3604  001BDE  2EE8               	decfsz	wreg,f,c
  3605  001BE0  D7FE               	goto	i2u144_47
  3606  001BE2  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3607  001BE4  D7FC               	goto	i2u144_47
  3608                           
  3609                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3610  001BE6  9883               	bcf	3971,4,c	;volatile
  3611                           
  3612                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3613  001BE8  0E7D               	movlw	125
  3614  001BEA  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3615  001BEC  0EAC               	movlw	172
  3616  001BEE                     i2u145_47:
  3617  001BEE  2EE8               	decfsz	wreg,f,c
  3618  001BF0  D7FE               	goto	i2u145_47
  3619  001BF2  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3620  001BF4  D7FC               	goto	i2u145_47
  3621  001BF6  0012               	return		;funcret
  3622  001BF8                     __end_ofi2_lcd_strobe:
  3623                           	opt stack 0
  3624                           pclatu	equ	0xFFB
  3625                           pclath	equ	0xFFA
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           intcon2	equ	0xFF1
  3634                           postinc0	equ	0xFEE
  3635                           fsr0h	equ	0xFEA
  3636                           fsr0l	equ	0xFE9
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           plusw1	equ	0xFE3
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           plusw2	equ	0xFDB
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function _int_2_char *****************
  3650 ;; Defined at:
  3651 ;;		line 15 in file "Main.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  int1            1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  int1            1    0[COMRAM] unsigned char 
  3656 ;;  char1           1    1[COMRAM] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      unsigned char 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0
  3667 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3669 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_ISR_Timer0_Int
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text18
  3680  00180C                     __ptext18:
  3681                           	opt stack 0
  3682  00180C                     _int_2_char:
  3683                           	opt stack 26
  3684                           
  3685                           ;incstack = 0
  3686                           ;int_2_char@int1 stored from wreg
  3687  00180C  6E01               	movwf	int_2_char@int1,c
  3688                           
  3689                           ;Main.c: 17: char char1;
  3690                           ;Main.c: 18: switch (int1)
  3691  00180E  D017               	goto	i2l964
  3692  001810                     i2l942:
  3693  001810  0E30               	movlw	48
  3694  001812  D013               	goto	L22
  3695  001814                     i2l944:
  3696  001814  0E31               	movlw	49
  3697  001816  D011               	goto	L22
  3698  001818                     i2l946:
  3699  001818  0E32               	movlw	50
  3700  00181A  D00F               	goto	L22
  3701  00181C                     i2l948:
  3702  00181C  0E33               	movlw	51
  3703  00181E  D00D               	goto	L22
  3704  001820                     i2l950:
  3705  001820  0E34               	movlw	52
  3706  001822  D00B               	goto	L22
  3707  001824                     i2l952:
  3708  001824  0E35               	movlw	53
  3709  001826  D009               	goto	L22
  3710  001828                     i2l954:
  3711  001828  0E36               	movlw	54
  3712  00182A  D007               	goto	L22
  3713  00182C                     i2l956:
  3714  00182C  0E37               	movlw	55
  3715  00182E  D005               	goto	L22
  3716  001830                     i2l958:
  3717  001830  0E38               	movlw	56
  3718  001832  D003               	goto	L22
  3719  001834                     i2l960:
  3720  001834  0E39               	movlw	57
  3721  001836  D001               	goto	L22
  3722  001838                     i2l962:
  3723  001838  0E3F               	movlw	63
  3724  00183A                     L22:
  3725  00183A  6E02               	movwf	int_2_char@char1,c
  3726                           
  3727                           ;Main.c: 31: }
  3728  00183C  D020               	goto	i2l98
  3729  00183E                     i2l964:
  3730  00183E  5001               	movf	int_2_char@int1,w,c
  3731                           
  3732                           ; Switch size 1, requested type "space"
  3733                           ; Number of cases is 10, Range of values is 0 to 9
  3734                           ; switch strategies available:
  3735                           ; Name         Instructions Cycles
  3736                           ; simple_byte           31    16 (average)
  3737                           ;	Chosen strategy is simple_byte
  3738  001840  0A00               	xorlw	0	; case 0
  3739  001842  B4D8               	btfsc	status,2,c
  3740  001844  D7E5               	goto	i2l942
  3741  001846  0A01               	xorlw	1	; case 1
  3742  001848  B4D8               	btfsc	status,2,c
  3743  00184A  D7E4               	goto	i2l944
  3744  00184C  0A03               	xorlw	3	; case 2
  3745  00184E  B4D8               	btfsc	status,2,c
  3746  001850  D7E3               	goto	i2l946
  3747  001852  0A01               	xorlw	1	; case 3
  3748  001854  B4D8               	btfsc	status,2,c
  3749  001856  D7E2               	goto	i2l948
  3750  001858  0A07               	xorlw	7	; case 4
  3751  00185A  B4D8               	btfsc	status,2,c
  3752  00185C  D7E1               	goto	i2l950
  3753  00185E  0A01               	xorlw	1	; case 5
  3754  001860  B4D8               	btfsc	status,2,c
  3755  001862  D7E0               	goto	i2l952
  3756  001864  0A03               	xorlw	3	; case 6
  3757  001866  B4D8               	btfsc	status,2,c
  3758  001868  D7DF               	goto	i2l954
  3759  00186A  0A01               	xorlw	1	; case 7
  3760  00186C  B4D8               	btfsc	status,2,c
  3761  00186E  D7DE               	goto	i2l956
  3762  001870  0A0F               	xorlw	15	; case 8
  3763  001872  B4D8               	btfsc	status,2,c
  3764  001874  D7DD               	goto	i2l958
  3765  001876  0A01               	xorlw	1	; case 9
  3766  001878  B4D8               	btfsc	status,2,c
  3767  00187A  D7DC               	goto	i2l960
  3768  00187C  D7DD               	goto	i2l962
  3769  00187E                     i2l98:
  3770                           
  3771                           ;Main.c: 32: return(char1);
  3772  00187E  5002               	movf	int_2_char@char1,w,c
  3773  001880  0012               	return		;funcret
  3774  001882                     __end_of_int_2_char:
  3775                           	opt stack 0
  3776                           pclatu	equ	0xFFB
  3777                           pclath	equ	0xFFA
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           intcon2	equ	0xFF1
  3786                           postinc0	equ	0xFEE
  3787                           fsr0h	equ	0xFEA
  3788                           fsr0l	equ	0xFE9
  3789                           wreg	equ	0xFE8
  3790                           postdec1	equ	0xFE5
  3791                           plusw1	equ	0xFE3
  3792                           fsr1h	equ	0xFE2
  3793                           fsr1l	equ	0xFE1
  3794                           indf2	equ	0xFDF
  3795                           postinc2	equ	0xFDE
  3796                           plusw2	equ	0xFDB
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function ___awdiv *****************
  3802 ;; Defined at:
  3803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  dividend        2    0[COMRAM] int 
  3806 ;;  divisor         2    2[COMRAM] int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  quotient        2    6[COMRAM] int 
  3809 ;;  sign            1    5[COMRAM] unsigned char 
  3810 ;;  counter         1    4[COMRAM] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2    0[COMRAM] int 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3820 ;;      Params:         4       0       0       0       0       0       0       0       0
  3821 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3823 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3824 ;;Total ram usage:        8 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_ISR_Timer0_Int
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text19
  3834  001788                     __ptext19:
  3835                           	opt stack 0
  3836  001788                     ___awdiv:
  3837                           	opt stack 26
  3838                           
  3839                           ;incstack = 0
  3840  001788  0E00               	movlw	0
  3841  00178A  6E06               	movwf	___awdiv@sign,c
  3842  00178C  AE04               	btfss	___awdiv@divisor+1,7,c
  3843  00178E  D006               	goto	i2l1754
  3844  001790  6C03               	negf	___awdiv@divisor,c
  3845  001792  1E04               	comf	___awdiv@divisor+1,f,c
  3846  001794  B0D8               	btfsc	status,0,c
  3847  001796  2A04               	incf	___awdiv@divisor+1,f,c
  3848  001798  0E01               	movlw	1
  3849  00179A  6E06               	movwf	___awdiv@sign,c
  3850  00179C                     i2l1754:
  3851  00179C  AE02               	btfss	___awdiv@dividend+1,7,c
  3852  00179E  D006               	goto	i2l1760
  3853  0017A0  6C01               	negf	___awdiv@dividend,c
  3854  0017A2  1E02               	comf	___awdiv@dividend+1,f,c
  3855  0017A4  B0D8               	btfsc	status,0,c
  3856  0017A6  2A02               	incf	___awdiv@dividend+1,f,c
  3857  0017A8  0E01               	movlw	1
  3858  0017AA  1A06               	xorwf	___awdiv@sign,f,c
  3859  0017AC                     i2l1760:
  3860  0017AC  0E00               	movlw	0
  3861  0017AE  6E08               	movwf	___awdiv@quotient+1,c
  3862  0017B0  0E00               	movlw	0
  3863  0017B2  6E07               	movwf	___awdiv@quotient,c
  3864  0017B4  5003               	movf	___awdiv@divisor,w,c
  3865  0017B6  1004               	iorwf	___awdiv@divisor+1,w,c
  3866  0017B8  B4D8               	btfsc	status,2,c
  3867  0017BA  D01C               	goto	i2l1782
  3868  0017BC  0E01               	movlw	1
  3869  0017BE  6E05               	movwf	___awdiv@counter,c
  3870  0017C0  D004               	goto	i2l1768
  3871  0017C2                     i2l1766:
  3872  0017C2  90D8               	bcf	status,0,c
  3873  0017C4  3603               	rlcf	___awdiv@divisor,f,c
  3874  0017C6  3604               	rlcf	___awdiv@divisor+1,f,c
  3875  0017C8  2A05               	incf	___awdiv@counter,f,c
  3876  0017CA                     i2l1768:
  3877  0017CA  AE04               	btfss	___awdiv@divisor+1,7,c
  3878  0017CC  D7FA               	goto	i2l1766
  3879  0017CE                     i2l1770:
  3880  0017CE  90D8               	bcf	status,0,c
  3881  0017D0  3607               	rlcf	___awdiv@quotient,f,c
  3882  0017D2  3608               	rlcf	___awdiv@quotient+1,f,c
  3883  0017D4  5003               	movf	___awdiv@divisor,w,c
  3884  0017D6  5C01               	subwf	___awdiv@dividend,w,c
  3885  0017D8  5004               	movf	___awdiv@divisor+1,w,c
  3886  0017DA  5802               	subwfb	___awdiv@dividend+1,w,c
  3887  0017DC  A0D8               	btfss	status,0,c
  3888  0017DE  D005               	goto	i2l1778
  3889  0017E0  5003               	movf	___awdiv@divisor,w,c
  3890  0017E2  5E01               	subwf	___awdiv@dividend,f,c
  3891  0017E4  5004               	movf	___awdiv@divisor+1,w,c
  3892  0017E6  5A02               	subwfb	___awdiv@dividend+1,f,c
  3893  0017E8  8007               	bsf	___awdiv@quotient,0,c
  3894  0017EA                     i2l1778:
  3895  0017EA  90D8               	bcf	status,0,c
  3896  0017EC  3204               	rrcf	___awdiv@divisor+1,f,c
  3897  0017EE  3203               	rrcf	___awdiv@divisor,f,c
  3898  0017F0  2E05               	decfsz	___awdiv@counter,f,c
  3899  0017F2  D7ED               	goto	i2l1770
  3900  0017F4                     i2l1782:
  3901  0017F4  5006               	movf	___awdiv@sign,w,c
  3902  0017F6  B4D8               	btfsc	status,2,c
  3903  0017F8  D004               	goto	i2l1786
  3904  0017FA  6C07               	negf	___awdiv@quotient,c
  3905  0017FC  1E08               	comf	___awdiv@quotient+1,f,c
  3906  0017FE  B0D8               	btfsc	status,0,c
  3907  001800  2A08               	incf	___awdiv@quotient+1,f,c
  3908  001802                     i2l1786:
  3909  001802  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3910  001806  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3911  00180A  0012               	return	
  3912  00180C                     __end_of___awdiv:
  3913                           	opt stack 0
  3914                           pclatu	equ	0xFFB
  3915                           pclath	equ	0xFFA
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodh	equ	0xFF4
  3921                           prodl	equ	0xFF3
  3922                           intcon	equ	0xFF2
  3923                           intcon2	equ	0xFF1
  3924                           postinc0	equ	0xFEE
  3925                           fsr0h	equ	0xFEA
  3926                           fsr0l	equ	0xFE9
  3927                           wreg	equ	0xFE8
  3928                           postdec1	equ	0xFE5
  3929                           plusw1	equ	0xFE3
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           postinc2	equ	0xFDE
  3934                           plusw2	equ	0xFDB
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8
  3938                           pclatu	equ	0xFFB
  3939                           pclath	equ	0xFFA
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon	equ	0xFF2
  3947                           intcon2	equ	0xFF1
  3948                           postinc0	equ	0xFEE
  3949                           fsr0h	equ	0xFEA
  3950                           fsr0l	equ	0xFE9
  3951                           wreg	equ	0xFE8
  3952                           postdec1	equ	0xFE5
  3953                           plusw1	equ	0xFE3
  3954                           fsr1h	equ	0xFE2
  3955                           fsr1l	equ	0xFE1
  3956                           indf2	equ	0xFDF
  3957                           postinc2	equ	0xFDE
  3958                           plusw2	equ	0xFDB
  3959                           fsr2h	equ	0xFDA
  3960                           fsr2l	equ	0xFD9
  3961                           status	equ	0xFD8
  3962                           
  3963                           	psect	rparam
  3964  0000                     pclatu	equ	0xFFB
  3965                           pclath	equ	0xFFA
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           prodh	equ	0xFF4
  3971                           prodl	equ	0xFF3
  3972                           intcon	equ	0xFF2
  3973                           intcon2	equ	0xFF1
  3974                           postinc0	equ	0xFEE
  3975                           fsr0h	equ	0xFEA
  3976                           fsr0l	equ	0xFE9
  3977                           wreg	equ	0xFE8
  3978                           postdec1	equ	0xFE5
  3979                           plusw1	equ	0xFE3
  3980                           fsr1h	equ	0xFE2
  3981                           fsr1l	equ	0xFE1
  3982                           indf2	equ	0xFDF
  3983                           postinc2	equ	0xFDE
  3984                           plusw2	equ	0xFDB
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989                           	psect	temp
  3990  000042                     btemp:
  3991                           	opt stack 0
  3992  000042                     	ds	1
  3993  0000                     int$flags	set	btemp
  3994                           pclatu	equ	0xFFB
  3995                           pclath	equ	0xFFA
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           prodh	equ	0xFF4
  4001                           prodl	equ	0xFF3
  4002                           intcon	equ	0xFF2
  4003                           intcon2	equ	0xFF1
  4004                           postinc0	equ	0xFEE
  4005                           fsr0h	equ	0xFEA
  4006                           fsr0l	equ	0xFE9
  4007                           wreg	equ	0xFE8
  4008                           postdec1	equ	0xFE5
  4009                           plusw1	equ	0xFE3
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           indf2	equ	0xFDF
  4013                           postinc2	equ	0xFDE
  4014                           plusw2	equ	0xFDB
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     51     135
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6477
                                             49 BANK0      2     2      0
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1576
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     315
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      95
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      87       5       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C8      20        0.0%
DATA                 0      0      C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Aug 15 17:22:07 2016

                        main@AlarmAOff 00E5         ??_SetupTimerInterruptRegisters 001D  
                                   l33 1B5A                                     l36 1B66  
                         ___awdiv@sign 0006                __size_of_ISR_Timer0_Int 01A2  
             __size_ofi2_lcd_write_cmd 0070                       ?_SetupAlarmTimeA 0001  
                     ?_SetupAlarmTimeB 0001                       ?_SetupAlarmTimeC 0001  
                                  l114 1962                                    l182 1BA6  
                                  u921 11B4                                    u850 1B50  
                                  u951 14DE                                    u981 13E6  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4444 101B                                   l2100 11D2  
                                 l2040 18F8                                   l2050 190C  
                                 l2042 18FC                                   l2052 1910  
                                 l2044 1900                                   l2060 1922  
                                 l2108 11F8                                   l2054 1914  
                                 l2046 1904                                   l2206 142E  
                                 l2056 1918                                   l2048 1908  
                                 l2152 14F6                                   l2240 1310  
                                 l2320 1602                                   l2058 191C  
                                 l2066 1B92                                   l2082 18A8  
                                 l2164 1526                                   l2156 1500  
                                 l2236 1306                                   l2332 1632  
                                 l2086 18BE                                   l2078 1898  
                                 l2248 1336                                   l2096 11C8  
                                 l2344 165A                                   l2328 1622  
                                 l2194 13FE                                   l2290 1B1C  
                                 l2338 1646                                   l2198 1408  
                                 l2286 1B12                                   u1011 12EE  
                                 u1041 1AFE                                   u1207 16AC  
                                 u1217 16C4                                   u1307 1BCC  
                                 u1227 16D4                                   u1317 1B98  
                                 u1237 16E8                                   u1157 18AE  
                                 u1247 1970                                   u1167 18E8  
                                 u1257 1990                                   u1177 166A  
                                 u1267 19A2                                   u1187 168A  
                                 u1277 19BA                                   u1197 169A  
                                 u1287 19CC                                   u1297 1BBC  
                                 i2l98 187E                 __end_of_lcd_write_data 16F4  
                                 _main 15CC                                   _hour 0039  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0042  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 1788  
                         ___param_bank 000010                                  ?_main 0001  
                      __end_of___awdiv 180C                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l132 116E                                  i2l950 1820  
                                i2l942 1810                                  i2l960 1834  
                                i2l952 1824                                  i2l944 1814  
                                i2l962 1838                                  i2l954 1828  
                                i2l946 1818                                  i2l956 182C  
                                i2l948 181C                                  i2l964 183E  
                      ___awdiv@counter 0005                                  i2l958 1830  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003A                                  _hourB 003B  
                                _hourC 003C                                  tablat 000FF5  
                                plusw1 000FE3                                  plusw2 000FDB  
                      ?_lcd_write_data 0001                        __end_of_version 1B42  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00B4                        __initialization 1A46  
                         __end_of_main 1660                                 ??_main 0024  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                           version@F4451 0024  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1BD6  
                               i2l1760 17AC                                 i2l1770 17CE  
                               i2l1754 179C                                 i2l1766 17C2  
                               i2l1782 17F4                                 i2l1768 17CA  
                               i2l1786 1802                                 i2l1778 17EA  
                               i2l1868 108E                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1BB4                       __end_of_lcd_init 18F4  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1B42  
                               clear_0 1A4C                       ___awdiv@quotient 0007  
                               _minute 003D                                 _second 0041  
                         __pdataCOMRAM 0024                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 0021                             __accesstop 0060  
              __end_of__initialization 1A92                          getkey@keycode 00C6  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1AA0  
                           _char_2_int 18F4                      __end_of_SetupTime 12E4  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 001D  
                     ??_lcd_write_data 001E                             _lcd_strobe 1BB4  
             __size_of_SetupAlarmTimeA 00F8               __size_of_SetupAlarmTimeB 00F8  
             __size_of_SetupAlarmTimeC 00F8                              ?_lcd_init 0001  
                   lcd_write_data@data 001F                     lcd_write_cmd@temp2 0020  
                           _int_2_char 180C                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              ___awdiv 1788                           __psmallconst 101A  
                      __size_of_getkey 003E                        i2_lcd_write_cmd 19D6  
                              __pcinit 1A46                                __ramtop 0800  
                              __ptext0 15CC                                __ptext1 1AF4  
                              __ptext2 1882                                __ptext3 1BF8  
                              __ptext4 11AA                                __ptext5 12E4  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 1660                                __ptext9 1966  
                            _T0CONbits 000FD5                         SetupTime@F4486 009F  
                              _minuteA 003E                                _minuteB 003F  
                              _minuteC 0040                             ??_delay_ms 001F  
                          ?_char_2_int 0001                                _version 1AF4  
                           ??_lcd_init 0021                         __pintcode_body 102E  
                 end_of_initialization 1A92                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00E4  
                       SetupTime@hour1 00DE                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00DD                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00DD                  SetupAlarmTimeC@hour10 00DD  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                    ??_SetupAlarmTimeA 0022                      ??_SetupAlarmTimeB 0022  
                    ??_SetupAlarmTimeC 0022                  __end_of_lcd_write_cmd 19D6  
              __end_ofi2_lcd_write_cmd 1A46                    __size_of_char_2_int 0072  
                        __pidataCOMRAM 1C14                         __end_of_getkey 1B80  
                  start_initialization 1A46                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                        version@msgindex 00CA  
                            _SetupTime 11AA                            __pdataBANK0 0060  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    SetupTime@minute10 00DF                      SetupTime@second10 00E1  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00E3  
                          __pbssCOMRAM 0039              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00B4                      __size_of_delay_ms 0034  
                    __size_of_lcd_init 0072                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?___awdiv 0001  
                           ?_SetupTime 0001                            __smallconst 101A  
                         ??_char_2_int 001D                               ?_version 0001  
                        ?i2_lcd_strobe 0001                   SetupAlarmTimeA@F4496 0060  
                 SetupAlarmTimeB@F4506 0075                              delay_ms@i 001D  
                            delay_ms@j 0020                   SetupAlarmTimeC@F4516 008A  
                  ISR_Timer0_Int@hour1 0017                               i2u140_47 1A00  
                             i2u132_47 16FE                               i2u141_47 1A12  
                             i2u133_47 171E                               i2u142_47 1A2A  
                             i2u134_47 172E                               i2u143_47 1A3C  
                             i2u135_47 1740                               i2u144_47 1BDE  
                             i2u136_47 1758                               i2u145_47 1BEE  
                             i2u137_47 1768                               i2u138_47 177C  
                             i2u139_47 19E0                               _RCONbits 000FD0  
                 SetupAlarmTimeA@ctemp 00E2                   SetupAlarmTimeA@hour1 00DE  
                 SetupAlarmTimeB@ctemp 00E2                     __end_of_char_2_int 1966  
                 SetupAlarmTimeB@hour1 00DE                   SetupAlarmTimeC@ctemp 00E2  
                 SetupAlarmTimeC@hour1 00DE                              lcd_init@i 0022  
                  lcd_write_data@temp1 0020                        _SetupAlarmTimeA 14D4  
                      _SetupAlarmTimeB 13DC                        _SetupAlarmTimeC 12E4  
                       ??i2_lcd_strobe 0001                         version@Version 00B4  
                         ??_lcd_strobe 001D                       SetupTime@Message 00C7  
                            copy_data0 1A66                              copy_data1 1A86  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1C14  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1BF8  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                       version@outchar 00C9                            ??_SetupTime 0022  
                     SetupTime@minute1 00E0                       SetupTime@second1 00E2  
                     __size_of___awdiv 0084                     __end_of_lcd_strobe 1BD6  
                     SetupTime@outchar 00DC                     __end_of_int_2_char 1882  
                     i2_lcd_write_data 16F4                               _delay_ms 1B80  
                             __ptext10 1BB4                               __ptext11 1B42  
                             __ptext12 1B80                               __ptext13 18F4  
                             __ptext15 16F4                               __ptext16 19D6  
                             __ptext17 1BD6                               __ptext18 180C  
                             __ptext19 1788                               _lcd_init 1882  
                     __size_of_version 004E                          __size_of_main 0094  
        ?_SetupTimerInterruptRegisters 0001                               int$flags 0042  
              __end_of_SetupAlarmTimeA 15CC                __end_of_SetupAlarmTimeB 14D4  
              __end_of_SetupAlarmTimeC 13DC                             _INTCONbits 000FF2  
               __size_of_lcd_write_cmd 0070                  ISR_Timer0_Int@minute1 0018  
                ISR_Timer0_Int@second1 0019                         int_2_char@int1 0001  
                      SetupTime@hour10 00DD                               intlevel2 0000  
                  __end_ofgetkey@F4444 102D                   __end_ofi2_lcd_strobe 1BF8  
               SetupAlarmTimeA@Message 00C7                 SetupAlarmTimeB@Message 00C7  
               SetupAlarmTimeC@Message 00C7                SetupAlarmTimeA@minute10 00DF  
              SetupAlarmTimeA@msgindex 00E1                SetupAlarmTimeB@minute10 00DF  
              SetupAlarmTimeB@msgindex 00E1                SetupAlarmTimeC@minute10 00DF  
              SetupAlarmTimeC@msgindex 00E1                 SetupAlarmTimeA@minute1 00E0  
               SetupAlarmTimeB@minute1 00E0                 SetupAlarmTimeA@outchar 00DC  
               SetupAlarmTimeC@minute1 00E0                 SetupAlarmTimeB@outchar 00DC  
                       _lcd_write_data 1660                 SetupAlarmTimeC@outchar 00DC  
                        _lcd_write_cmd 1966  
