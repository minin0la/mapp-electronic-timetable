

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 03 11:43:52 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataBANK0
    37  001A0C                     __pidataBANK0:
    38                           	opt stack 0
    39                           
    40                           ;initializer for SetupAlarmTimeA@F4496
    41  001A0C  53                 	db	83
    42  001A0D  75                 	db	117
    43  001A0E  62                 	db	98
    44  001A0F  6A                 	db	106
    45  001A10  65                 	db	101
    46  001A11  63                 	db	99
    47  001A12  74                 	db	116
    48  001A13  20                 	db	32
    49  001A14  41                 	db	65
    50  001A15  20                 	db	32
    51  001A16  54                 	db	84
    52  001A17  69                 	db	105
    53  001A18  6D                 	db	109
    54  001A19  65                 	db	101
    55  001A1A  20                 	db	32
    56  001A1B  68                 	db	104
    57  001A1C  68                 	db	104
    58  001A1D  6D                 	db	109
    59  001A1E  6D                 	db	109
    60  001A1F  3A                 	db	58
    61  001A20  00                 	db	0
    62                           
    63                           ;initializer for SetupAlarmTimeB@F4506
    64  001A21  53                 	db	83
    65  001A22  75                 	db	117
    66  001A23  62                 	db	98
    67  001A24  6A                 	db	106
    68  001A25  65                 	db	101
    69  001A26  63                 	db	99
    70  001A27  74                 	db	116
    71  001A28  20                 	db	32
    72  001A29  42                 	db	66
    73  001A2A  20                 	db	32
    74  001A2B  54                 	db	84
    75  001A2C  69                 	db	105
    76  001A2D  6D                 	db	109
    77  001A2E  65                 	db	101
    78  001A2F  20                 	db	32
    79  001A30  68                 	db	104
    80  001A31  68                 	db	104
    81  001A32  6D                 	db	109
    82  001A33  6D                 	db	109
    83  001A34  3A                 	db	58
    84  001A35  00                 	db	0
    85                           
    86                           ;initializer for SetupAlarmTimeC@F4516
    87  001A36  53                 	db	83
    88  001A37  75                 	db	117
    89  001A38  62                 	db	98
    90  001A39  6A                 	db	106
    91  001A3A  65                 	db	101
    92  001A3B  63                 	db	99
    93  001A3C  74                 	db	116
    94  001A3D  20                 	db	32
    95  001A3E  43                 	db	67
    96  001A3F  20                 	db	32
    97  001A40  54                 	db	84
    98  001A41  69                 	db	105
    99  001A42  6D                 	db	109
   100  001A43  65                 	db	101
   101  001A44  20                 	db	32
   102  001A45  68                 	db	104
   103  001A46  68                 	db	104
   104  001A47  6D                 	db	109
   105  001A48  6D                 	db	109
   106  001A49  3A                 	db	58
   107  001A4A  00                 	db	0
   108                           
   109                           ;initializer for SetupTime@F4486
   110  001A4B  53                 	db	83
   111  001A4C  65                 	db	101
   112  001A4D  74                 	db	116
   113  001A4E  20                 	db	32
   114  001A4F  74                 	db	116
   115  001A50  69                 	db	105
   116  001A51  6D                 	db	109
   117  001A52  65                 	db	101
   118  001A53  20                 	db	32
   119  001A54  68                 	db	104
   120  001A55  68                 	db	104
   121  001A56  6D                 	db	109
   122  001A57  6D                 	db	109
   123  001A58  73                 	db	115
   124  001A59  73                 	db	115
   125  001A5A  3A                 	db	58
   126  001A5B  20                 	db	32
   127  001A5C  20                 	db	32
   128  001A5D  20                 	db	32
   129  001A5E  20                 	db	32
   130  001A5F  00                 	db	0
   131                           
   132                           	psect	smallconst
   133  00101A                     __psmallconst:
   134                           	opt stack 0
   135  00101A  00                 	db	0
   136  00101B                     getkey@F4444:
   137                           	opt stack 0
   138  00101B  31                 	db	49
   139  00101C  32                 	db	50
   140  00101D  33                 	db	51
   141  00101E  46                 	db	70
   142  00101F  34                 	db	52
   143  001020  35                 	db	53
   144  001021  36                 	db	54
   145  001022  45                 	db	69
   146  001023  37                 	db	55
   147  001024  38                 	db	56
   148  001025  39                 	db	57
   149  001026  44                 	db	68
   150  001027  41                 	db	65
   151  001028  30                 	db	48
   152  001029  42                 	db	66
   153  00102A  43                 	db	67
   154  00102B  20                 	db	32
   155  00102C  00                 	db	0
   156  00102D                     __end_ofgetkey@F4444:
   157                           	opt stack 0
   158  0000                     _ADCON1	set	4033
   159  0000                     _CMCON	set	4020
   160  0000                     _INTCON2	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _PORTA	set	3968
   163  0000                     _PORTB	set	3969
   164  0000                     _PORTBbits	set	3969
   165  0000                     _PORTD	set	3971
   166  0000                     _PORTDbits	set	3971
   167  0000                     _RCONbits	set	4048
   168  0000                     _T0CON	set	4053
   169  0000                     _T0CONbits	set	4053
   170  0000                     _TMR0H	set	4055
   171  0000                     _TMR0L	set	4054
   172  0000                     _TRISA	set	3986
   173  0000                     _TRISD	set	3989
   174  00102D  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179  001A60                     __pcinit:
   180                           	opt stack 0
   181  001A60                     start_initialization:
   182                           	opt stack 0
   183  001A60                     __initialization:
   184                           	opt stack 0
   185                           
   186                           ; Clear objects allocated to COMRAM (9 bytes)
   187  001A60  EE00  F030         	lfsr	0,__pbssCOMRAM
   188  001A64  0E09               	movlw	9
   189  001A66                     clear_0:
   190  001A66  6AEE               	clrf	postinc0,c
   191  001A68  06E8               	decf	wreg,f,c
   192  001A6A  E1FD               	bnz	clear_0
   193                           
   194                           ; Initialize objects allocated to BANK0 (84 bytes)
   195                           ; load TBLPTR registers with __pidataBANK0
   196  001A6C  0E0C               	movlw	low __pidataBANK0
   197  001A6E  6EF6               	movwf	tblptrl,c
   198  001A70  0E1A               	movlw	high __pidataBANK0
   199  001A72  6EF7               	movwf	tblptrh,c
   200  001A74  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   201  001A76  6EF8               	movwf	tblptru,c
   202  001A78  EE00  F060         	lfsr	0,__pdataBANK0
   203  001A7C  EE10 F054          	lfsr	1,84
   204  001A80                     copy_data0:
   205  001A80  0009               	tblrd		*+
   206  001A82  CFF5 FFEE          	movff	tablat,postinc0
   207  001A86  50E5               	movf	postdec1,w,c
   208  001A88  50E1               	movf	fsr1l,w,c
   209  001A8A  E1FA               	bnz	copy_data0
   210  001A8C                     end_of_initialization:
   211                           	opt stack 0
   212  001A8C                     __end_of__initialization:
   213                           	opt stack 0
   214  001A8C  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215  001A8E  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216  001A90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217  001A92  6EF8               	movwf	tblptru,c
   218  001A94  0100               	movlb	0
   219  001A96  EFD3  F00C         	goto	_main	;jump to C main() function
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	bssCOMRAM
   230  000030                     __pbssCOMRAM:
   231                           	opt stack 0
   232  000030                     _hour:
   233                           	opt stack 0
   234  000030                     	ds	1
   235  000031                     _hourA:
   236                           	opt stack 0
   237  000031                     	ds	1
   238  000032                     _hourB:
   239                           	opt stack 0
   240  000032                     	ds	1
   241  000033                     _hourC:
   242                           	opt stack 0
   243  000033                     	ds	1
   244  000034                     _minute:
   245                           	opt stack 0
   246  000034                     	ds	1
   247  000035                     _minuteA:
   248                           	opt stack 0
   249  000035                     	ds	1
   250  000036                     _minuteB:
   251                           	opt stack 0
   252  000036                     	ds	1
   253  000037                     _minuteC:
   254                           	opt stack 0
   255  000037                     	ds	1
   256  000038                     _second:
   257                           	opt stack 0
   258  000038                     	ds	1
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	dataBANK0
   269  000060                     __pdataBANK0:
   270                           	opt stack 0
   271  000060                     SetupAlarmTimeA@F4496:
   272                           	opt stack 0
   273  000060                     	ds	21
   274  000075                     SetupAlarmTimeB@F4506:
   275                           	opt stack 0
   276  000075                     	ds	21
   277  00008A                     SetupAlarmTimeC@F4516:
   278                           	opt stack 0
   279  00008A                     	ds	21
   280  00009F                     SetupTime@F4486:
   281                           	opt stack 0
   282  00009F                     	ds	21
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	cstackBANK0
   293  0000B4                     __pcstackBANK0:
   294                           	opt stack 0
   295  0000B4                     SetupTime@Message:
   296                           	opt stack 0
   297  0000B4                     SetupAlarmTimeA@Message:
   298                           	opt stack 0
   299  0000B4                     SetupAlarmTimeB@Message:
   300                           	opt stack 0
   301  0000B4                     SetupAlarmTimeC@Message:
   302                           	opt stack 0
   303                           
   304                           ; 21 bytes @ 0x0
   305  0000B4                     	ds	21
   306  0000C9                     SetupTime@outchar:
   307                           	opt stack 0
   308  0000C9                     SetupAlarmTimeA@outchar:
   309                           	opt stack 0
   310  0000C9                     SetupAlarmTimeB@outchar:
   311                           	opt stack 0
   312  0000C9                     SetupAlarmTimeC@outchar:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x15
   316  0000C9                     	ds	1
   317  0000CA                     SetupTime@hour10:
   318                           	opt stack 0
   319  0000CA                     SetupAlarmTimeA@hour10:
   320                           	opt stack 0
   321  0000CA                     SetupAlarmTimeB@hour10:
   322                           	opt stack 0
   323  0000CA                     SetupAlarmTimeC@hour10:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x16
   327  0000CA                     	ds	1
   328  0000CB                     SetupTime@hour1:
   329                           	opt stack 0
   330  0000CB                     SetupAlarmTimeA@hour1:
   331                           	opt stack 0
   332  0000CB                     SetupAlarmTimeB@hour1:
   333                           	opt stack 0
   334  0000CB                     SetupAlarmTimeC@hour1:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x17
   338  0000CB                     	ds	1
   339  0000CC                     SetupTime@minute10:
   340                           	opt stack 0
   341  0000CC                     SetupAlarmTimeA@minute10:
   342                           	opt stack 0
   343  0000CC                     SetupAlarmTimeB@minute10:
   344                           	opt stack 0
   345  0000CC                     SetupAlarmTimeC@minute10:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x18
   349  0000CC                     	ds	1
   350  0000CD                     SetupTime@minute1:
   351                           	opt stack 0
   352  0000CD                     SetupAlarmTimeA@minute1:
   353                           	opt stack 0
   354  0000CD                     SetupAlarmTimeB@minute1:
   355                           	opt stack 0
   356  0000CD                     SetupAlarmTimeC@minute1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x19
   360  0000CD                     	ds	1
   361  0000CE                     SetupTime@second10:
   362                           	opt stack 0
   363  0000CE                     SetupAlarmTimeA@msgindex:
   364                           	opt stack 0
   365  0000CE                     SetupAlarmTimeB@msgindex:
   366                           	opt stack 0
   367  0000CE                     SetupAlarmTimeC@msgindex:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x1A
   371  0000CE                     	ds	1
   372  0000CF                     SetupTime@second1:
   373                           	opt stack 0
   374  0000CF                     SetupAlarmTimeA@ctemp:
   375                           	opt stack 0
   376  0000CF                     SetupAlarmTimeB@ctemp:
   377                           	opt stack 0
   378  0000CF                     SetupAlarmTimeC@ctemp:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1B
   382  0000CF                     	ds	1
   383  0000D0                     SetupTime@msgindex:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x1C
   387  0000D0                     	ds	1
   388  0000D1                     SetupTime@ctemp:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x1D
   392  0000D1                     	ds	1
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402                           	psect	cstackCOMRAM
   403  000001                     __pcstackCOMRAM:
   404                           	opt stack 0
   405  000001                     ??i2_lcd_strobe:
   406  000001                     ?___awdiv:
   407                           	opt stack 0
   408  000001                     int_2_char@int1:
   409                           	opt stack 0
   410  000001                     ___awdiv@dividend:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x0
   414  000001                     	ds	1
   415  000002                     ??i2_lcd_write_cmd:
   416  000002                     ??i2_lcd_write_data:
   417  000002                     int_2_char@char1:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x1
   421  000002                     	ds	1
   422  000003                     i2lcd_write_cmd@cmd:
   423                           	opt stack 0
   424  000003                     i2lcd_write_data@data:
   425                           	opt stack 0
   426  000003                     ___awdiv@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000003                     	ds	1
   431  000004                     i2lcd_write_cmd@temp2:
   432                           	opt stack 0
   433  000004                     i2lcd_write_data@temp1:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3
   437  000004                     	ds	1
   438  000005                     ___awdiv@counter:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x4
   442  000005                     	ds	1
   443  000006                     ___awdiv@sign:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x5
   447  000006                     	ds	1
   448  000007                     ___awdiv@quotient:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x6
   452  000007                     	ds	2
   453  000009                     ??_ISR_Timer0_Int:
   454                           
   455                           ; 0 bytes @ 0x8
   456  000009                     	ds	14
   457  000017                     ISR_Timer0_Int@hour1:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x16
   461  000017                     	ds	1
   462  000018                     ISR_Timer0_Int@minute1:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x17
   466  000018                     	ds	1
   467  000019                     ISR_Timer0_Int@second1:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x18
   471  000019                     	ds	1
   472  00001A                     ISR_Timer0_Int@hour10:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x19
   476  00001A                     	ds	1
   477  00001B                     ISR_Timer0_Int@minute10:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x1A
   481  00001B                     	ds	1
   482  00001C                     ISR_Timer0_Int@second10:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x1B
   486  00001C                     	ds	1
   487  00001D                     ??_lcd_strobe:
   488  00001D                     char_2_int@char1:
   489                           	opt stack 0
   490  00001D                     delay_ms@i:
   491                           	opt stack 0
   492  00001D                     getkey@lookup:
   493                           	opt stack 0
   494                           
   495                           ; 18 bytes @ 0x1C
   496  00001D                     	ds	1
   497  00001E                     ??_lcd_write_cmd:
   498  00001E                     ??_lcd_write_data:
   499  00001E                     char_2_int@int1:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1D
   503  00001E                     	ds	1
   504  00001F                     ??_delay_ms:
   505  00001F                     lcd_write_cmd@cmd:
   506                           	opt stack 0
   507  00001F                     lcd_write_data@data:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1E
   511  00001F                     	ds	1
   512  000020                     lcd_write_cmd@temp2:
   513                           	opt stack 0
   514  000020                     lcd_write_data@temp1:
   515                           	opt stack 0
   516  000020                     delay_ms@j:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x1F
   520  000020                     	ds	1
   521  000021                     ??_lcd_init:
   522                           
   523                           ; 0 bytes @ 0x20
   524  000021                     	ds	1
   525  000022                     lcd_init@i:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x21
   529  000022                     	ds	13
   530  00002F                     getkey@keycode:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x2E
   534  00002F                     	ds	1
   535  000030                     tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           postdec1	equ	0xFE5
   542                           fsr1l	equ	0xFE1
   543                           
   544                           ; 0 bytes @ 0x2F
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 304 in file "Main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;		None               void
   557 ;; Registers used:
   558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         0       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    6
   570 ;; This function calls:
   571 ;;		_SetupAlarmTimeA
   572 ;;		_SetupAlarmTimeB
   573 ;;		_SetupAlarmTimeC
   574 ;;		_SetupTime
   575 ;;		_SetupTimerInterruptRegisters
   576 ;;		_lcd_init
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  0019A6                     __ptext0:
   584                           	opt stack 0
   585  0019A6                     _main:
   586                           	opt stack 25
   587                           
   588                           ;Main.c: 306: ADCON1 = 0x0F;
   589                           
   590                           ;incstack = 0
   591  0019A6  0E0F               	movlw	15
   592  0019A8  6EC1               	movwf	4033,c	;volatile
   593                           
   594                           ;Main.c: 307: CMCON = 0x07;
   595  0019AA  0E07               	movlw	7
   596  0019AC  6EB4               	movwf	4020,c	;volatile
   597                           
   598                           ;Main.c: 309: lcd_init();
   599  0019AE  ECF1  F00B         	call	_lcd_init	;wreg free
   600                           
   601                           ;Main.c: 311: SetupTime();
   602  0019B2  ECD5  F008         	call	_SetupTime	;wreg free
   603                           
   604                           ;Main.c: 312: SetupAlarmTimeA();
   605  0019B6  EC66  F00A         	call	_SetupAlarmTimeA	;wreg free
   606                           
   607                           ;Main.c: 313: SetupAlarmTimeB();
   608  0019BA  ECEC  F009         	call	_SetupAlarmTimeB	;wreg free
   609                           
   610                           ;Main.c: 314: SetupAlarmTimeC();
   611  0019BE  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   612                           
   613                           ;Main.c: 315: SetupTimerInterruptRegisters();
   614  0019C2  ECA6  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   615                           
   616                           ;Main.c: 316: TRISA = 0b00000000;
   617  0019C6  0E00               	movlw	0
   618  0019C8  6E92               	movwf	3986,c	;volatile
   619  0019CA                     l1854:
   620                           
   621                           ;Main.c: 319: {
   622                           ;Main.c: 320: if(hour==hourA && minute==minuteA)
   623  0019CA  5031               	movf	_hourA,w,c
   624  0019CC  1830               	xorwf	_hour,w,c
   625  0019CE  A4D8               	btfss	status,2,c
   626  0019D0  D006               	goto	l1860
   627  0019D2  5035               	movf	_minuteA,w,c
   628  0019D4  1834               	xorwf	_minute,w,c
   629  0019D6  A4D8               	btfss	status,2,c
   630  0019D8  D002               	goto	l1860
   631                           
   632                           ;Main.c: 321: {
   633                           ;Main.c: 322: PORTA = 0b00000011;
   634  0019DA  0E03               	movlw	3
   635  0019DC  D015               	goto	L3
   636  0019DE                     l1860:
   637                           
   638                           ;Main.c: 324: else if(hour==hourB && minute==minuteB)
   639  0019DE  5032               	movf	_hourB,w,c
   640  0019E0  1830               	xorwf	_hour,w,c
   641  0019E2  A4D8               	btfss	status,2,c
   642  0019E4  D006               	goto	l1866
   643  0019E6  5036               	movf	_minuteB,w,c
   644  0019E8  1834               	xorwf	_minute,w,c
   645  0019EA  A4D8               	btfss	status,2,c
   646  0019EC  D002               	goto	l1866
   647                           
   648                           ;Main.c: 325: {
   649                           ;Main.c: 326: PORTA = 0b00000101;
   650  0019EE  0E05               	movlw	5
   651  0019F0  D00B               	goto	L3
   652  0019F2                     l1866:
   653                           
   654                           ;Main.c: 328: else if(hour==hourC && minute==minuteC)
   655  0019F2  5033               	movf	_hourC,w,c
   656  0019F4  1830               	xorwf	_hour,w,c
   657  0019F6  A4D8               	btfss	status,2,c
   658  0019F8  D006               	goto	l1872
   659  0019FA  5037               	movf	_minuteC,w,c
   660  0019FC  1834               	xorwf	_minute,w,c
   661  0019FE  A4D8               	btfss	status,2,c
   662  001A00  D002               	goto	l1872
   663                           
   664                           ;Main.c: 329: {
   665                           ;Main.c: 330: PORTA = 0b00001001;
   666  001A02  0E09               	movlw	9
   667  001A04  D001               	goto	L3
   668  001A06                     l1872:
   669                           
   670                           ;Main.c: 332: {
   671                           ;Main.c: 333: PORTA = 0b00000000;
   672  001A06  0E00               	movlw	0
   673  001A08                     L3:
   674  001A08  6E80               	movwf	3968,c	;volatile
   675  001A0A  D7DF               	goto	l1854
   676  001A0C                     __end_of_main:
   677                           	opt stack 0
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           status	equ	0xFD8
   687                           
   688 ;; *************** function _lcd_init *****************
   689 ;; Defined at:
   690 ;;		line 83 in file "lcd_utilities.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  i               2   33[COMRAM] int 
   695 ;; Return value:  Size  Location     Type
   696 ;;		None               void
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   704 ;;      Params:         0       0       0       0       0       0       0       0       0
   705 ;;      Locals:         2       0       0       0       0       0       0       0       0
   706 ;;      Temps:          1       0       0       0       0       0       0       0       0
   707 ;;      Totals:         3       0       0       0       0       0       0       0       0
   708 ;;Total ram usage:        3 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    5
   711 ;; This function calls:
   712 ;;		_lcd_write_cmd
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text1
   719  0017E2                     __ptext1:
   720                           	opt stack 0
   721  0017E2                     _lcd_init:
   722                           	opt stack 25
   723                           
   724                           ;lcd_utilities.c: 85: int i;
   725                           ;lcd_utilities.c: 86: TRISD = 0x00;
   726                           
   727                           ;incstack = 0
   728  0017E2  0E00               	movlw	0
   729  0017E4  6E95               	movwf	3989,c	;volatile
   730                           
   731                           ;lcd_utilities.c: 87: PORTD = 0x00;
   732  0017E6  0E00               	movlw	0
   733  0017E8  6E83               	movwf	3971,c	;volatile
   734                           
   735                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   736  0017EA  9883               	bcf	3971,4,c	;volatile
   737                           
   738                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   739  0017EC  9C83               	bcf	3971,6,c	;volatile
   740                           
   741                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   742  0017EE  9A83               	bcf	3971,5,c	;volatile
   743                           
   744                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   745  0017F0  0E00               	movlw	0
   746  0017F2  6E23               	movwf	lcd_init@i+1,c
   747  0017F4  0E00               	movlw	0
   748  0017F6  6E22               	movwf	lcd_init@i,c
   749  0017F8                     l1484:
   750  0017F8  BE23               	btfsc	lcd_init@i+1,7,c
   751  0017FA  D006               	goto	l1488
   752  0017FC  5023               	movf	lcd_init@i+1,w,c
   753  0017FE  E10F               	bnz	l1492
   754  001800  0E64               	movlw	100
   755  001802  5C22               	subwf	lcd_init@i,w,c
   756  001804  B0D8               	btfsc	status,0,c
   757  001806  D00B               	goto	l1492
   758  001808                     l1488:
   759                           
   760                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   761  001808  0E9C               	movlw	156
   762  00180A  6E21               	movwf	??_lcd_init& (0+255),c
   763  00180C  0ED7               	movlw	215
   764  00180E                     u757:
   765  00180E  2EE8               	decfsz	wreg,f,c
   766  001810  D7FE               	goto	u757
   767  001812  2E21               	decfsz	??_lcd_init& (0+255),f,c
   768  001814  D7FC               	goto	u757
   769  001816  F000               	nop	
   770  001818  4A22               	infsnz	lcd_init@i,f,c
   771  00181A  2A23               	incf	lcd_init@i+1,f,c
   772  00181C  D7ED               	goto	l1484
   773  00181E                     l1492:
   774                           
   775                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   776  00181E  0E33               	movlw	51
   777  001820  EC63  F00C         	call	_lcd_write_cmd
   778                           
   779                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   780  001824  0E32               	movlw	50
   781  001826  EC63  F00C         	call	_lcd_write_cmd
   782                           
   783                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   784  00182A  0E28               	movlw	40
   785  00182C  EC63  F00C         	call	_lcd_write_cmd
   786                           
   787                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   788  001830  0E0E               	movlw	14
   789  001832  EC63  F00C         	call	_lcd_write_cmd
   790                           
   791                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   792  001836  0E06               	movlw	6
   793  001838  EC63  F00C         	call	_lcd_write_cmd
   794                           
   795                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   796  00183C  0E01               	movlw	1
   797  00183E  EC63  F00C         	call	_lcd_write_cmd
   798                           
   799                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   800  001842  0E9C               	movlw	156
   801  001844  6E21               	movwf	??_lcd_init& (0+255),c
   802  001846  0ED7               	movlw	215
   803  001848                     u767:
   804  001848  2EE8               	decfsz	wreg,f,c
   805  00184A  D7FE               	goto	u767
   806  00184C  2E21               	decfsz	??_lcd_init& (0+255),f,c
   807  00184E  D7FC               	goto	u767
   808  001850  F000               	nop	
   809  001852  0012               	return		;funcret
   810  001854                     __end_of_lcd_init:
   811                           	opt stack 0
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1l	equ	0xFE1
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _SetupTimerInterruptRegisters *****************
   823 ;; Defined at:
   824 ;;		line 269 in file "Main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;		None               void
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   838 ;;      Params:         0       0       0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    3
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text2
   853  001B4C                     __ptext2:
   854                           	opt stack 0
   855  001B4C                     _SetupTimerInterruptRegisters:
   856                           	opt stack 27
   857                           
   858                           ;Main.c: 271: RCONbits.IPEN =1;
   859                           
   860                           ;incstack = 0
   861  001B4C  8ED0               	bsf	4048,7,c	;volatile
   862                           
   863                           ;Main.c: 275: INTCONbits.GIEH =1;
   864  001B4E  8EF2               	bsf	intcon,7,c	;volatile
   865                           
   866                           ;Main.c: 280: T0CON = 0b00000111;
   867  001B50  0E07               	movlw	7
   868  001B52  6ED5               	movwf	4053,c	;volatile
   869                           
   870                           ;Main.c: 288: INTCON2 = 0b10000100;
   871  001B54  0E84               	movlw	132
   872  001B56  6EF1               	movwf	intcon2,c	;volatile
   873                           
   874                           ;Main.c: 293: TMR0H = 0x48;
   875  001B58  0E48               	movlw	72
   876  001B5A  6ED7               	movwf	4055,c	;volatile
   877                           
   878                           ;Main.c: 294: TMR0L = 0xE5;
   879  001B5C  0EE5               	movlw	229
   880  001B5E  6ED6               	movwf	4054,c	;volatile
   881                           
   882                           ;Main.c: 296: T0CONbits.TMR0ON = 1;
   883  001B60  8ED5               	bsf	4053,7,c	;volatile
   884                           
   885                           ;Main.c: 297: INTCONbits.TMR0IE = 1;
   886  001B62  8AF2               	bsf	intcon,5,c	;volatile
   887                           
   888                           ;Main.c: 300: INTCONbits.TMR0IF = 0;
   889  001B64  94F2               	bcf	intcon,2,c	;volatile
   890  001B66  0012               	return		;funcret
   891  001B68                     __end_of_SetupTimerInterruptRegisters:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           intcon	equ	0xFF2
   898                           intcon2	equ	0xFF1
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           postdec1	equ	0xFE5
   902                           fsr1l	equ	0xFE1
   903                           status	equ	0xFD8
   904                           
   905 ;; *************** function _SetupTime *****************
   906 ;; Defined at:
   907 ;;		line 107 in file "Main.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  Message        21    0[BANK0 ] unsigned char [21]
   912 ;;  ctemp           1   29[BANK0 ] unsigned char 
   913 ;;  msgindex        1   28[BANK0 ] unsigned char 
   914 ;;  second1         1   27[BANK0 ] unsigned char 
   915 ;;  second10        1   26[BANK0 ] unsigned char 
   916 ;;  minute1         1   25[BANK0 ] unsigned char 
   917 ;;  minute10        1   24[BANK0 ] unsigned char 
   918 ;;  hour1           1   23[BANK0 ] unsigned char 
   919 ;;  hour10          1   22[BANK0 ] unsigned char 
   920 ;;  outchar         1   21[BANK0 ] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   930 ;;      Params:         0       0       0       0       0       0       0       0       0
   931 ;;      Locals:         0      30       0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0
   933 ;;      Totals:         0      30       0       0       0       0       0       0       0
   934 ;;Total ram usage:       30 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    5
   937 ;; This function calls:
   938 ;;		_char_2_int
   939 ;;		_delay_ms
   940 ;;		_getkey
   941 ;;		_lcd_write_cmd
   942 ;;		_lcd_write_data
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text3
   949  0011AA                     __ptext3:
   950                           	opt stack 0
   951  0011AA                     _SetupTime:
   952                           	opt stack 25
   953                           
   954                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
   955                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
   956                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
   957                           
   958                           ;incstack = 0
   959  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4486
   960  0011AE  EE10  F0B4         	lfsr	1,SetupTime@Message
   961  0011B2  0E14               	movlw	20
   962  0011B4                     u471:
   963  0011B4  CFDB FFE3          	movff	plusw2,plusw1
   964  0011B8  06E8               	decf	wreg,f,c
   965  0011BA  E2FC               	bc	u471
   966                           
   967                           ;Main.c: 113: lcd_write_cmd(0x80);
   968  0011BC  0E80               	movlw	128
   969  0011BE  EC63  F00C         	call	_lcd_write_cmd
   970                           
   971                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
   972  0011C2  0E00               	movlw	0
   973  0011C4  0100               	movlb	0	; () banked
   974  0011C6  6FD0               	movwf	SetupTime@msgindex& (0+255),b
   975  0011C8                     l1502:
   976                           
   977                           ; BSR set to: 0
   978  0011C8  0E13               	movlw	19
   979  0011CA  0100               	movlb	0	; () banked
   980  0011CC  65D0               	cpfsgt	SetupTime@msgindex& (0+255),b
   981  0011CE  D001               	goto	l1506
   982  0011D0  D013               	goto	l1514
   983  0011D2                     l1506:
   984                           
   985                           ; BSR set to: 0
   986                           ;Main.c: 116: {
   987                           ;Main.c: 117: outchar = Message[msgindex];
   988  0011D2  0100               	movlb	0	; () banked
   989  0011D4  51D0               	movf	SetupTime@msgindex& (0+255),w,b
   990  0011D6  0D01               	mullw	1
   991  0011D8  0EB4               	movlw	low SetupTime@Message
   992  0011DA  24F3               	addwf	prodl,w,c
   993  0011DC  6ED9               	movwf	fsr2l,c
   994  0011DE  0E00               	movlw	high SetupTime@Message
   995  0011E0  20F4               	addwfc	prodh,w,c
   996  0011E2  6EDA               	movwf	fsr2h,c
   997  0011E4  50DF               	movf	indf2,w,c
   998  0011E6  0100               	movlb	0	; () banked
   999  0011E8  6FC9               	movwf	SetupTime@outchar& (0+255),b
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;Main.c: 118: lcd_write_data(outchar);
  1003  0011EA  0100               	movlb	0	; () banked
  1004  0011EC  51C9               	movf	SetupTime@outchar& (0+255),w,b
  1005  0011EE  ECE0  F00A         	call	_lcd_write_data
  1006  0011F2  0100               	movlb	0	; () banked
  1007  0011F4  2BD0               	incf	SetupTime@msgindex& (0+255),f,b
  1008  0011F6  D7E8               	goto	l1502
  1009  0011F8                     l1514:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;Main.c: 119: }
  1013                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1014  0011F8  0EC0               	movlw	192
  1015  0011FA  EC63  F00C         	call	_lcd_write_cmd
  1016                           
  1017                           ;Main.c: 123: ctemp=getkey();
  1018  0011FE  EC4D  F00D         	call	_getkey	;wreg free
  1019  001202  0100               	movlb	0	; () banked
  1020  001204  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;Main.c: 124: lcd_write_data(ctemp);
  1024  001206  0100               	movlb	0	; () banked
  1025  001208  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1026  00120A  ECE0  F00A         	call	_lcd_write_data
  1027                           
  1028                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1029  00120E  0100               	movlb	0	; () banked
  1030  001210  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1031  001212  EC2A  F00C         	call	_char_2_int
  1032  001216  0100               	movlb	0	; () banked
  1033  001218  6FCA               	movwf	SetupTime@hour10& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;Main.c: 127: ctemp=getkey();
  1037  00121A  EC4D  F00D         	call	_getkey	;wreg free
  1038  00121E  0100               	movlb	0	; () banked
  1039  001220  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1040                           
  1041                           ;Main.c: 128: lcd_write_data(ctemp);
  1042  001222  0100               	movlb	0	; () banked
  1043  001224  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1044  001226  ECE0  F00A         	call	_lcd_write_data
  1045                           
  1046                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1047  00122A  0100               	movlb	0	; () banked
  1048  00122C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1049  00122E  EC2A  F00C         	call	_char_2_int
  1050  001232  0100               	movlb	0	; () banked
  1051  001234  6FCB               	movwf	SetupTime@hour1& (0+255),b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;Main.c: 131: ctemp=getkey();
  1055  001236  EC4D  F00D         	call	_getkey	;wreg free
  1056  00123A  0100               	movlb	0	; () banked
  1057  00123C  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;Main.c: 132: lcd_write_data(ctemp);
  1061  00123E  0100               	movlb	0	; () banked
  1062  001240  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1063  001242  ECE0  F00A         	call	_lcd_write_data
  1064                           
  1065                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1066  001246  0100               	movlb	0	; () banked
  1067  001248  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1068  00124A  EC2A  F00C         	call	_char_2_int
  1069  00124E  0100               	movlb	0	; () banked
  1070  001250  6FCC               	movwf	SetupTime@minute10& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;Main.c: 135: ctemp=getkey();
  1074  001252  EC4D  F00D         	call	_getkey	;wreg free
  1075  001256  0100               	movlb	0	; () banked
  1076  001258  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1077                           
  1078                           ;Main.c: 136: lcd_write_data(ctemp);
  1079  00125A  0100               	movlb	0	; () banked
  1080  00125C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1081  00125E  ECE0  F00A         	call	_lcd_write_data
  1082                           
  1083                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1084  001262  0100               	movlb	0	; () banked
  1085  001264  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1086  001266  EC2A  F00C         	call	_char_2_int
  1087  00126A  0100               	movlb	0	; () banked
  1088  00126C  6FCD               	movwf	SetupTime@minute1& (0+255),b
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;Main.c: 139: ctemp=getkey();
  1092  00126E  EC4D  F00D         	call	_getkey	;wreg free
  1093  001272  0100               	movlb	0	; () banked
  1094  001274  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;Main.c: 140: lcd_write_data(ctemp);
  1098  001276  0100               	movlb	0	; () banked
  1099  001278  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1100  00127A  ECE0  F00A         	call	_lcd_write_data
  1101                           
  1102                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1103  00127E  0100               	movlb	0	; () banked
  1104  001280  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1105  001282  EC2A  F00C         	call	_char_2_int
  1106  001286  0100               	movlb	0	; () banked
  1107  001288  6FCE               	movwf	SetupTime@second10& (0+255),b
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;Main.c: 143: ctemp=getkey();
  1111  00128A  EC4D  F00D         	call	_getkey	;wreg free
  1112  00128E  0100               	movlb	0	; () banked
  1113  001290  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1114                           
  1115                           ;Main.c: 144: lcd_write_data(ctemp);
  1116  001292  0100               	movlb	0	; () banked
  1117  001294  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1118  001296  ECE0  F00A         	call	_lcd_write_data
  1119                           
  1120                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1121  00129A  0100               	movlb	0	; () banked
  1122  00129C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1123  00129E  EC2A  F00C         	call	_char_2_int
  1124  0012A2  0100               	movlb	0	; () banked
  1125  0012A4  6FCF               	movwf	SetupTime@second1& (0+255),b
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1129  0012A6  0100               	movlb	0	; () banked
  1130  0012A8  51CA               	movf	SetupTime@hour10& (0+255),w,b
  1131  0012AA  0D0A               	mullw	10
  1132  0012AC  50F3               	movf	prodl,w,c
  1133  0012AE  0100               	movlb	0	; () banked
  1134  0012B0  25CB               	addwf	SetupTime@hour1& (0+255),w,b
  1135  0012B2  6E30               	movwf	_hour,c
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1139  0012B4  0100               	movlb	0	; () banked
  1140  0012B6  51CC               	movf	SetupTime@minute10& (0+255),w,b
  1141  0012B8  0D0A               	mullw	10
  1142  0012BA  50F3               	movf	prodl,w,c
  1143  0012BC  0100               	movlb	0	; () banked
  1144  0012BE  25CD               	addwf	SetupTime@minute1& (0+255),w,b
  1145  0012C0  6E34               	movwf	_minute,c
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;Main.c: 149: second = second10 * 10 + second1;
  1149  0012C2  0100               	movlb	0	; () banked
  1150  0012C4  51CE               	movf	SetupTime@second10& (0+255),w,b
  1151  0012C6  0D0A               	mullw	10
  1152  0012C8  50F3               	movf	prodl,w,c
  1153  0012CA  0100               	movlb	0	; () banked
  1154  0012CC  25CF               	addwf	SetupTime@second1& (0+255),w,b
  1155  0012CE  6E38               	movwf	_second,c
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;Main.c: 151: delay_ms(500);
  1159  0012D0  0E01               	movlw	1
  1160  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1161  0012D4  0EF4               	movlw	244
  1162  0012D6  6E1D               	movwf	delay_ms@i,c
  1163  0012D8  EC6A  F00D         	call	_delay_ms	;wreg free
  1164                           
  1165                           ;Main.c: 152: lcd_write_cmd(0x01);
  1166  0012DC  0E01               	movlw	1
  1167  0012DE  EC63  F00C         	call	_lcd_write_cmd
  1168  0012E2  0012               	return		;funcret
  1169  0012E4                     __end_of_SetupTime:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           intcon2	equ	0xFF1
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           plusw1	equ	0xFE3
  1183                           fsr1l	equ	0xFE1
  1184                           indf2	equ	0xFDF
  1185                           plusw2	equ	0xFDB
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _SetupAlarmTimeC *****************
  1191 ;; Defined at:
  1192 ;;		line 231 in file "Main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1197 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1198 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1199 ;;  minute1         1   25[BANK0 ] unsigned char 
  1200 ;;  minute10        1   24[BANK0 ] unsigned char 
  1201 ;;  hour1           1   23[BANK0 ] unsigned char 
  1202 ;;  hour10          1   22[BANK0 ] unsigned char 
  1203 ;;  outchar         1   21[BANK0 ] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1217 ;;Total ram usage:       28 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    5
  1220 ;; This function calls:
  1221 ;;		_char_2_int
  1222 ;;		_delay_ms
  1223 ;;		_getkey
  1224 ;;		_lcd_write_cmd
  1225 ;;		_lcd_write_data
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text4
  1232  0012E4                     __ptext4:
  1233                           	opt stack 0
  1234  0012E4                     _SetupAlarmTimeC:
  1235                           	opt stack 25
  1236                           
  1237                           ;Main.c: 233: unsigned char msgindex, outchar, ctemp;
  1238                           ;Main.c: 234: unsigned char hour10, hour1, minute10, minute1;
  1239                           ;Main.c: 235: char Message[ ] = "Subject C Time hhmm:";
  1240                           
  1241                           ;incstack = 0
  1242  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4516
  1243  0012E8  EE10  F0B4         	lfsr	1,SetupAlarmTimeC@Message
  1244  0012EC  0E14               	movlw	20
  1245  0012EE                     u561:
  1246  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1247  0012F2  06E8               	decf	wreg,f,c
  1248  0012F4  E2FC               	bc	u561
  1249                           
  1250                           ;Main.c: 237: lcd_write_cmd(0x80);
  1251  0012F6  0E80               	movlw	128
  1252  0012F8  EC63  F00C         	call	_lcd_write_cmd
  1253                           
  1254                           ;Main.c: 239: for (msgindex = 0; msgindex < 20; msgindex++)
  1255  0012FC  0E00               	movlw	0
  1256  0012FE  0100               	movlb	0	; () banked
  1257  001300  6FCE               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1258  001302                     l1636:
  1259                           
  1260                           ; BSR set to: 0
  1261  001302  0E13               	movlw	19
  1262  001304  0100               	movlb	0	; () banked
  1263  001306  65CE               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1264  001308  D001               	goto	l1640
  1265  00130A  D013               	goto	l1648
  1266  00130C                     l1640:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;Main.c: 240: {
  1270                           ;Main.c: 241: outchar = Message[msgindex];
  1271  00130C  0100               	movlb	0	; () banked
  1272  00130E  51CE               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1273  001310  0D01               	mullw	1
  1274  001312  0EB4               	movlw	low SetupAlarmTimeC@Message
  1275  001314  24F3               	addwf	prodl,w,c
  1276  001316  6ED9               	movwf	fsr2l,c
  1277  001318  0E00               	movlw	high SetupAlarmTimeC@Message
  1278  00131A  20F4               	addwfc	prodh,w,c
  1279  00131C  6EDA               	movwf	fsr2h,c
  1280  00131E  50DF               	movf	indf2,w,c
  1281  001320  0100               	movlb	0	; () banked
  1282  001322  6FC9               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;Main.c: 242: lcd_write_data(outchar);
  1286  001324  0100               	movlb	0	; () banked
  1287  001326  51C9               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1288  001328  ECE0  F00A         	call	_lcd_write_data
  1289  00132C  0100               	movlb	0	; () banked
  1290  00132E  2BCE               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1291  001330  D7E8               	goto	l1636
  1292  001332                     l1648:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;Main.c: 243: }
  1296                           ;Main.c: 245: lcd_write_cmd(0xC0);
  1297  001332  0EC0               	movlw	192
  1298  001334  EC63  F00C         	call	_lcd_write_cmd
  1299                           
  1300                           ;Main.c: 247: ctemp=getkey();
  1301  001338  EC4D  F00D         	call	_getkey	;wreg free
  1302  00133C  0100               	movlb	0	; () banked
  1303  00133E  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;Main.c: 248: lcd_write_data(ctemp);
  1307  001340  0100               	movlb	0	; () banked
  1308  001342  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1309  001344  ECE0  F00A         	call	_lcd_write_data
  1310                           
  1311                           ;Main.c: 249: hour10 = char_2_int (ctemp);
  1312  001348  0100               	movlb	0	; () banked
  1313  00134A  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1314  00134C  EC2A  F00C         	call	_char_2_int
  1315  001350  0100               	movlb	0	; () banked
  1316  001352  6FCA               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;Main.c: 251: ctemp=getkey();
  1320  001354  EC4D  F00D         	call	_getkey	;wreg free
  1321  001358  0100               	movlb	0	; () banked
  1322  00135A  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1323                           
  1324                           ;Main.c: 252: lcd_write_data(ctemp);
  1325  00135C  0100               	movlb	0	; () banked
  1326  00135E  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1327  001360  ECE0  F00A         	call	_lcd_write_data
  1328                           
  1329                           ;Main.c: 253: hour1 = char_2_int (ctemp);
  1330  001364  0100               	movlb	0	; () banked
  1331  001366  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1332  001368  EC2A  F00C         	call	_char_2_int
  1333  00136C  0100               	movlb	0	; () banked
  1334  00136E  6FCB               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;Main.c: 255: ctemp=getkey();
  1338  001370  EC4D  F00D         	call	_getkey	;wreg free
  1339  001374  0100               	movlb	0	; () banked
  1340  001376  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;Main.c: 256: lcd_write_data(ctemp);
  1344  001378  0100               	movlb	0	; () banked
  1345  00137A  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1346  00137C  ECE0  F00A         	call	_lcd_write_data
  1347                           
  1348                           ;Main.c: 257: minute10 = char_2_int (ctemp);
  1349  001380  0100               	movlb	0	; () banked
  1350  001382  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1351  001384  EC2A  F00C         	call	_char_2_int
  1352  001388  0100               	movlb	0	; () banked
  1353  00138A  6FCC               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;Main.c: 259: ctemp=getkey();
  1357  00138C  EC4D  F00D         	call	_getkey	;wreg free
  1358  001390  0100               	movlb	0	; () banked
  1359  001392  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1360                           
  1361                           ;Main.c: 260: lcd_write_data(ctemp);
  1362  001394  0100               	movlb	0	; () banked
  1363  001396  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1364  001398  ECE0  F00A         	call	_lcd_write_data
  1365                           
  1366                           ;Main.c: 261: minute1 = char_2_int (ctemp);
  1367  00139C  0100               	movlb	0	; () banked
  1368  00139E  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1369  0013A0  EC2A  F00C         	call	_char_2_int
  1370  0013A4  0100               	movlb	0	; () banked
  1371  0013A6  6FCD               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;Main.c: 263: hourC = hour10 * 10 + hour1;
  1375  0013A8  0100               	movlb	0	; () banked
  1376  0013AA  51CA               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1377  0013AC  0D0A               	mullw	10
  1378  0013AE  50F3               	movf	prodl,w,c
  1379  0013B0  0100               	movlb	0	; () banked
  1380  0013B2  25CB               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1381  0013B4  6E33               	movwf	_hourC,c
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;Main.c: 264: minuteC = minute10 * 10 + minute1;
  1385  0013B6  0100               	movlb	0	; () banked
  1386  0013B8  51CC               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1387  0013BA  0D0A               	mullw	10
  1388  0013BC  50F3               	movf	prodl,w,c
  1389  0013BE  0100               	movlb	0	; () banked
  1390  0013C0  25CD               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1391  0013C2  6E37               	movwf	_minuteC,c
  1392                           
  1393                           ;Main.c: 266: delay_ms(500);
  1394  0013C4  0E01               	movlw	1
  1395  0013C6  6E1E               	movwf	delay_ms@i+1,c
  1396  0013C8  0EF4               	movlw	244
  1397  0013CA  6E1D               	movwf	delay_ms@i,c
  1398  0013CC  EC6A  F00D         	call	_delay_ms	;wreg free
  1399                           
  1400                           ;Main.c: 267: lcd_write_cmd(0x01);
  1401  0013D0  0E01               	movlw	1
  1402  0013D2  EC63  F00C         	call	_lcd_write_cmd
  1403  0013D6  0012               	return		;funcret
  1404  0013D8                     __end_of_SetupAlarmTimeC:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           intcon	equ	0xFF2
  1413                           intcon2	equ	0xFF1
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           plusw1	equ	0xFE3
  1418                           fsr1l	equ	0xFE1
  1419                           indf2	equ	0xFDF
  1420                           plusw2	equ	0xFDB
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _SetupAlarmTimeB *****************
  1426 ;; Defined at:
  1427 ;;		line 193 in file "Main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1432 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1433 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1434 ;;  minute1         1   25[BANK0 ] unsigned char 
  1435 ;;  minute10        1   24[BANK0 ] unsigned char 
  1436 ;;  hour1           1   23[BANK0 ] unsigned char 
  1437 ;;  hour10          1   22[BANK0 ] unsigned char 
  1438 ;;  outchar         1   21[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;		None               void
  1441 ;; Registers used:
  1442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1452 ;;Total ram usage:       28 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    5
  1455 ;; This function calls:
  1456 ;;		_char_2_int
  1457 ;;		_delay_ms
  1458 ;;		_getkey
  1459 ;;		_lcd_write_cmd
  1460 ;;		_lcd_write_data
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text5
  1467  0013D8                     __ptext5:
  1468                           	opt stack 0
  1469  0013D8                     _SetupAlarmTimeB:
  1470                           	opt stack 25
  1471                           
  1472                           ;Main.c: 195: unsigned char msgindex, outchar, ctemp;
  1473                           ;Main.c: 196: unsigned char hour10, hour1, minute10, minute1;
  1474                           ;Main.c: 197: char Message[ ] = "Subject B Time hhmm:";
  1475                           
  1476                           ;incstack = 0
  1477  0013D8  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4506
  1478  0013DC  EE10  F0B4         	lfsr	1,SetupAlarmTimeB@Message
  1479  0013E0  0E14               	movlw	20
  1480  0013E2                     u531:
  1481  0013E2  CFDB FFE3          	movff	plusw2,plusw1
  1482  0013E6  06E8               	decf	wreg,f,c
  1483  0013E8  E2FC               	bc	u531
  1484                           
  1485                           ;Main.c: 199: lcd_write_cmd(0x80);
  1486  0013EA  0E80               	movlw	128
  1487  0013EC  EC63  F00C         	call	_lcd_write_cmd
  1488                           
  1489                           ;Main.c: 201: for (msgindex = 0; msgindex < 20; msgindex++)
  1490  0013F0  0E00               	movlw	0
  1491  0013F2  0100               	movlb	0	; () banked
  1492  0013F4  6FCE               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1493  0013F6                     l1596:
  1494                           
  1495                           ; BSR set to: 0
  1496  0013F6  0E13               	movlw	19
  1497  0013F8  0100               	movlb	0	; () banked
  1498  0013FA  65CE               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1499  0013FC  D001               	goto	l1600
  1500  0013FE  D013               	goto	l1608
  1501  001400                     l1600:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;Main.c: 202: {
  1505                           ;Main.c: 203: outchar = Message[msgindex];
  1506  001400  0100               	movlb	0	; () banked
  1507  001402  51CE               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1508  001404  0D01               	mullw	1
  1509  001406  0EB4               	movlw	low SetupAlarmTimeB@Message
  1510  001408  24F3               	addwf	prodl,w,c
  1511  00140A  6ED9               	movwf	fsr2l,c
  1512  00140C  0E00               	movlw	high SetupAlarmTimeB@Message
  1513  00140E  20F4               	addwfc	prodh,w,c
  1514  001410  6EDA               	movwf	fsr2h,c
  1515  001412  50DF               	movf	indf2,w,c
  1516  001414  0100               	movlb	0	; () banked
  1517  001416  6FC9               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;Main.c: 204: lcd_write_data(outchar);
  1521  001418  0100               	movlb	0	; () banked
  1522  00141A  51C9               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1523  00141C  ECE0  F00A         	call	_lcd_write_data
  1524  001420  0100               	movlb	0	; () banked
  1525  001422  2BCE               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1526  001424  D7E8               	goto	l1596
  1527  001426                     l1608:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;Main.c: 205: }
  1531                           ;Main.c: 207: lcd_write_cmd(0xC0);
  1532  001426  0EC0               	movlw	192
  1533  001428  EC63  F00C         	call	_lcd_write_cmd
  1534                           
  1535                           ;Main.c: 209: ctemp=getkey();
  1536  00142C  EC4D  F00D         	call	_getkey	;wreg free
  1537  001430  0100               	movlb	0	; () banked
  1538  001432  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;Main.c: 210: lcd_write_data(ctemp);
  1542  001434  0100               	movlb	0	; () banked
  1543  001436  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1544  001438  ECE0  F00A         	call	_lcd_write_data
  1545                           
  1546                           ;Main.c: 211: hour10 = char_2_int (ctemp);
  1547  00143C  0100               	movlb	0	; () banked
  1548  00143E  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1549  001440  EC2A  F00C         	call	_char_2_int
  1550  001444  0100               	movlb	0	; () banked
  1551  001446  6FCA               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;Main.c: 213: ctemp=getkey();
  1555  001448  EC4D  F00D         	call	_getkey	;wreg free
  1556  00144C  0100               	movlb	0	; () banked
  1557  00144E  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1558                           
  1559                           ;Main.c: 214: lcd_write_data(ctemp);
  1560  001450  0100               	movlb	0	; () banked
  1561  001452  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1562  001454  ECE0  F00A         	call	_lcd_write_data
  1563                           
  1564                           ;Main.c: 215: hour1 = char_2_int (ctemp);
  1565  001458  0100               	movlb	0	; () banked
  1566  00145A  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1567  00145C  EC2A  F00C         	call	_char_2_int
  1568  001460  0100               	movlb	0	; () banked
  1569  001462  6FCB               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;Main.c: 217: ctemp=getkey();
  1573  001464  EC4D  F00D         	call	_getkey	;wreg free
  1574  001468  0100               	movlb	0	; () banked
  1575  00146A  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;Main.c: 218: lcd_write_data(ctemp);
  1579  00146C  0100               	movlb	0	; () banked
  1580  00146E  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1581  001470  ECE0  F00A         	call	_lcd_write_data
  1582                           
  1583                           ;Main.c: 219: minute10 = char_2_int (ctemp);
  1584  001474  0100               	movlb	0	; () banked
  1585  001476  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1586  001478  EC2A  F00C         	call	_char_2_int
  1587  00147C  0100               	movlb	0	; () banked
  1588  00147E  6FCC               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;Main.c: 221: ctemp=getkey();
  1592  001480  EC4D  F00D         	call	_getkey	;wreg free
  1593  001484  0100               	movlb	0	; () banked
  1594  001486  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1595                           
  1596                           ;Main.c: 222: lcd_write_data(ctemp);
  1597  001488  0100               	movlb	0	; () banked
  1598  00148A  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1599  00148C  ECE0  F00A         	call	_lcd_write_data
  1600                           
  1601                           ;Main.c: 223: minute1 = char_2_int (ctemp);
  1602  001490  0100               	movlb	0	; () banked
  1603  001492  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1604  001494  EC2A  F00C         	call	_char_2_int
  1605  001498  0100               	movlb	0	; () banked
  1606  00149A  6FCD               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;Main.c: 225: hourB = hour10 * 10 + hour1;
  1610  00149C  0100               	movlb	0	; () banked
  1611  00149E  51CA               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1612  0014A0  0D0A               	mullw	10
  1613  0014A2  50F3               	movf	prodl,w,c
  1614  0014A4  0100               	movlb	0	; () banked
  1615  0014A6  25CB               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1616  0014A8  6E32               	movwf	_hourB,c
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;Main.c: 226: minuteB = minute10 * 10 + minute1;
  1620  0014AA  0100               	movlb	0	; () banked
  1621  0014AC  51CC               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1622  0014AE  0D0A               	mullw	10
  1623  0014B0  50F3               	movf	prodl,w,c
  1624  0014B2  0100               	movlb	0	; () banked
  1625  0014B4  25CD               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1626  0014B6  6E36               	movwf	_minuteB,c
  1627                           
  1628                           ;Main.c: 228: delay_ms(500);
  1629  0014B8  0E01               	movlw	1
  1630  0014BA  6E1E               	movwf	delay_ms@i+1,c
  1631  0014BC  0EF4               	movlw	244
  1632  0014BE  6E1D               	movwf	delay_ms@i,c
  1633  0014C0  EC6A  F00D         	call	_delay_ms	;wreg free
  1634                           
  1635                           ;Main.c: 229: lcd_write_cmd(0x01);
  1636  0014C4  0E01               	movlw	1
  1637  0014C6  EC63  F00C         	call	_lcd_write_cmd
  1638  0014CA  0012               	return		;funcret
  1639  0014CC                     __end_of_SetupAlarmTimeB:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           intcon2	equ	0xFF1
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postdec1	equ	0xFE5
  1652                           plusw1	equ	0xFE3
  1653                           fsr1l	equ	0xFE1
  1654                           indf2	equ	0xFDF
  1655                           plusw2	equ	0xFDB
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _SetupAlarmTimeA *****************
  1661 ;; Defined at:
  1662 ;;		line 155 in file "Main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1667 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1668 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1669 ;;  minute1         1   25[BANK0 ] unsigned char 
  1670 ;;  minute10        1   24[BANK0 ] unsigned char 
  1671 ;;  hour1           1   23[BANK0 ] unsigned char 
  1672 ;;  hour10          1   22[BANK0 ] unsigned char 
  1673 ;;  outchar         1   21[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1687 ;;Total ram usage:       28 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    5
  1690 ;; This function calls:
  1691 ;;		_char_2_int
  1692 ;;		_delay_ms
  1693 ;;		_getkey
  1694 ;;		_lcd_write_cmd
  1695 ;;		_lcd_write_data
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text6
  1702  0014CC                     __ptext6:
  1703                           	opt stack 0
  1704  0014CC                     _SetupAlarmTimeA:
  1705                           	opt stack 25
  1706                           
  1707                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  1708                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  1709                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  1710                           
  1711                           ;incstack = 0
  1712  0014CC  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4496
  1713  0014D0  EE10  F0B4         	lfsr	1,SetupAlarmTimeA@Message
  1714  0014D4  0E14               	movlw	20
  1715  0014D6                     u501:
  1716  0014D6  CFDB FFE3          	movff	plusw2,plusw1
  1717  0014DA  06E8               	decf	wreg,f,c
  1718  0014DC  E2FC               	bc	u501
  1719                           
  1720                           ;Main.c: 161: lcd_write_cmd(0x80);
  1721  0014DE  0E80               	movlw	128
  1722  0014E0  EC63  F00C         	call	_lcd_write_cmd
  1723                           
  1724                           ;Main.c: 163: for (msgindex = 0; msgindex < 20; msgindex++)
  1725  0014E4  0E00               	movlw	0
  1726  0014E6  0100               	movlb	0	; () banked
  1727  0014E8  6FCE               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1728  0014EA                     l1556:
  1729                           
  1730                           ; BSR set to: 0
  1731  0014EA  0E13               	movlw	19
  1732  0014EC  0100               	movlb	0	; () banked
  1733  0014EE  65CE               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1734  0014F0  D001               	goto	l1560
  1735  0014F2  D013               	goto	l1568
  1736  0014F4                     l1560:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;Main.c: 164: {
  1740                           ;Main.c: 165: outchar = Message[msgindex];
  1741  0014F4  0100               	movlb	0	; () banked
  1742  0014F6  51CE               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  1743  0014F8  0D01               	mullw	1
  1744  0014FA  0EB4               	movlw	low SetupAlarmTimeA@Message
  1745  0014FC  24F3               	addwf	prodl,w,c
  1746  0014FE  6ED9               	movwf	fsr2l,c
  1747  001500  0E00               	movlw	high SetupAlarmTimeA@Message
  1748  001502  20F4               	addwfc	prodh,w,c
  1749  001504  6EDA               	movwf	fsr2h,c
  1750  001506  50DF               	movf	indf2,w,c
  1751  001508  0100               	movlb	0	; () banked
  1752  00150A  6FC9               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;Main.c: 166: lcd_write_data(outchar);
  1756  00150C  0100               	movlb	0	; () banked
  1757  00150E  51C9               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  1758  001510  ECE0  F00A         	call	_lcd_write_data
  1759  001514  0100               	movlb	0	; () banked
  1760  001516  2BCE               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  1761  001518  D7E8               	goto	l1556
  1762  00151A                     l1568:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;Main.c: 167: }
  1766                           ;Main.c: 169: lcd_write_cmd(0xC0);
  1767  00151A  0EC0               	movlw	192
  1768  00151C  EC63  F00C         	call	_lcd_write_cmd
  1769                           
  1770                           ;Main.c: 171: ctemp=getkey();
  1771  001520  EC4D  F00D         	call	_getkey	;wreg free
  1772  001524  0100               	movlb	0	; () banked
  1773  001526  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;Main.c: 172: lcd_write_data(ctemp);
  1777  001528  0100               	movlb	0	; () banked
  1778  00152A  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1779  00152C  ECE0  F00A         	call	_lcd_write_data
  1780                           
  1781                           ;Main.c: 173: hour10 = char_2_int (ctemp);
  1782  001530  0100               	movlb	0	; () banked
  1783  001532  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1784  001534  EC2A  F00C         	call	_char_2_int
  1785  001538  0100               	movlb	0	; () banked
  1786  00153A  6FCA               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;Main.c: 175: ctemp=getkey();
  1790  00153C  EC4D  F00D         	call	_getkey	;wreg free
  1791  001540  0100               	movlb	0	; () banked
  1792  001542  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1793                           
  1794                           ;Main.c: 176: lcd_write_data(ctemp);
  1795  001544  0100               	movlb	0	; () banked
  1796  001546  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1797  001548  ECE0  F00A         	call	_lcd_write_data
  1798                           
  1799                           ;Main.c: 177: hour1 = char_2_int (ctemp);
  1800  00154C  0100               	movlb	0	; () banked
  1801  00154E  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1802  001550  EC2A  F00C         	call	_char_2_int
  1803  001554  0100               	movlb	0	; () banked
  1804  001556  6FCB               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;Main.c: 179: ctemp=getkey();
  1808  001558  EC4D  F00D         	call	_getkey	;wreg free
  1809  00155C  0100               	movlb	0	; () banked
  1810  00155E  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;Main.c: 180: lcd_write_data(ctemp);
  1814  001560  0100               	movlb	0	; () banked
  1815  001562  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1816  001564  ECE0  F00A         	call	_lcd_write_data
  1817                           
  1818                           ;Main.c: 181: minute10 = char_2_int (ctemp);
  1819  001568  0100               	movlb	0	; () banked
  1820  00156A  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1821  00156C  EC2A  F00C         	call	_char_2_int
  1822  001570  0100               	movlb	0	; () banked
  1823  001572  6FCC               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;Main.c: 183: ctemp=getkey();
  1827  001574  EC4D  F00D         	call	_getkey	;wreg free
  1828  001578  0100               	movlb	0	; () banked
  1829  00157A  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1830                           
  1831                           ;Main.c: 184: lcd_write_data(ctemp);
  1832  00157C  0100               	movlb	0	; () banked
  1833  00157E  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1834  001580  ECE0  F00A         	call	_lcd_write_data
  1835                           
  1836                           ;Main.c: 185: minute1 = char_2_int (ctemp);
  1837  001584  0100               	movlb	0	; () banked
  1838  001586  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1839  001588  EC2A  F00C         	call	_char_2_int
  1840  00158C  0100               	movlb	0	; () banked
  1841  00158E  6FCD               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Main.c: 187: hourA = hour10 * 10 + hour1;
  1845  001590  0100               	movlb	0	; () banked
  1846  001592  51CA               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  1847  001594  0D0A               	mullw	10
  1848  001596  50F3               	movf	prodl,w,c
  1849  001598  0100               	movlb	0	; () banked
  1850  00159A  25CB               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  1851  00159C  6E31               	movwf	_hourA,c
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;Main.c: 188: minuteA = minute10 * 10 + minute1;
  1855  00159E  0100               	movlb	0	; () banked
  1856  0015A0  51CC               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  1857  0015A2  0D0A               	mullw	10
  1858  0015A4  50F3               	movf	prodl,w,c
  1859  0015A6  0100               	movlb	0	; () banked
  1860  0015A8  25CD               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  1861  0015AA  6E35               	movwf	_minuteA,c
  1862                           
  1863                           ;Main.c: 190: delay_ms(500);
  1864  0015AC  0E01               	movlw	1
  1865  0015AE  6E1E               	movwf	delay_ms@i+1,c
  1866  0015B0  0EF4               	movlw	244
  1867  0015B2  6E1D               	movwf	delay_ms@i,c
  1868  0015B4  EC6A  F00D         	call	_delay_ms	;wreg free
  1869                           
  1870                           ;Main.c: 191: lcd_write_cmd(0x01);
  1871  0015B8  0E01               	movlw	1
  1872  0015BA  EC63  F00C         	call	_lcd_write_cmd
  1873  0015BE  0012               	return		;funcret
  1874  0015C0                     __end_of_SetupAlarmTimeA:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           intcon	equ	0xFF2
  1883                           intcon2	equ	0xFF1
  1884                           postinc0	equ	0xFEE
  1885                           wreg	equ	0xFE8
  1886                           postdec1	equ	0xFE5
  1887                           plusw1	equ	0xFE3
  1888                           fsr1l	equ	0xFE1
  1889                           indf2	equ	0xFDF
  1890                           plusw2	equ	0xFDB
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _lcd_write_data *****************
  1896 ;; Defined at:
  1897 ;;		line 43 in file "lcd_utilities.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  data            1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  data            1   30[COMRAM] unsigned char 
  1902 ;;  temp1           1   31[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;		None               void
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0
  1913 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1915 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    4
  1919 ;; This function calls:
  1920 ;;		_lcd_strobe
  1921 ;; This function is called by:
  1922 ;;		_SetupTime
  1923 ;;		_SetupAlarmTimeA
  1924 ;;		_SetupAlarmTimeB
  1925 ;;		_SetupAlarmTimeC
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text7
  1930  0015C0                     __ptext7:
  1931                           	opt stack 0
  1932  0015C0                     _lcd_write_data:
  1933                           	opt stack 25
  1934                           
  1935                           ;incstack = 0
  1936                           ;lcd_write_data@data stored from wreg
  1937  0015C0  6E1F               	movwf	lcd_write_data@data,c
  1938                           
  1939                           ;lcd_utilities.c: 45: char temp1;
  1940                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  1941  0015C2  8C83               	bsf	3971,6,c	;volatile
  1942                           
  1943                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  1944  0015C4  0E3F               	movlw	63
  1945  0015C6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1946  0015C8  0E55               	movlw	85
  1947  0015CA                     u777:
  1948  0015CA  2EE8               	decfsz	wreg,f,c
  1949  0015CC  D7FE               	goto	u777
  1950  0015CE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1951  0015D0  D7FC               	goto	u777
  1952  0015D2  F000               	nop	
  1953                           
  1954                           ;lcd_utilities.c: 50: temp1 = data;
  1955  0015D4  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1956                           
  1957                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  1958  0015D8  3820               	swapf	lcd_write_data@temp1,w,c
  1959  0015DA  0B0F               	andlw	15
  1960  0015DC  6E20               	movwf	lcd_write_data@temp1,c
  1961                           
  1962                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  1963  0015DE  5020               	movf	lcd_write_data@temp1,w,c
  1964  0015E0  0B0F               	andlw	15
  1965  0015E2  6E83               	movwf	3971,c	;volatile
  1966                           
  1967                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  1968  0015E4  0E7D               	movlw	125
  1969  0015E6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1970  0015E8  0EAC               	movlw	172
  1971  0015EA                     u787:
  1972  0015EA  2EE8               	decfsz	wreg,f,c
  1973  0015EC  D7FE               	goto	u787
  1974  0015EE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1975  0015F0  D7FC               	goto	u787
  1976                           
  1977                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  1978  0015F2  8C83               	bsf	3971,6,c	;volatile
  1979                           
  1980                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  1981  0015F4  0E7D               	movlw	125
  1982  0015F6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1983  0015F8  0EAC               	movlw	172
  1984  0015FA                     u797:
  1985  0015FA  2EE8               	decfsz	wreg,f,c
  1986  0015FC  D7FE               	goto	u797
  1987  0015FE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1988  001600  D7FC               	goto	u797
  1989                           
  1990                           ;lcd_utilities.c: 57: lcd_strobe();
  1991  001602  EC84  F00D         	call	_lcd_strobe	;wreg free
  1992                           
  1993                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  1994  001606  0E7D               	movlw	125
  1995  001608  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1996  00160A  0EAC               	movlw	172
  1997  00160C                     u807:
  1998  00160C  2EE8               	decfsz	wreg,f,c
  1999  00160E  D7FE               	goto	u807
  2000  001610  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2001  001612  D7FC               	goto	u807
  2002                           
  2003                           ;lcd_utilities.c: 60: temp1 = data;
  2004  001614  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2005                           
  2006                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2007  001618  5020               	movf	lcd_write_data@temp1,w,c
  2008  00161A  0B0F               	andlw	15
  2009  00161C  6E83               	movwf	3971,c	;volatile
  2010                           
  2011                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2012  00161E  0E7D               	movlw	125
  2013  001620  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2014  001622  0EAC               	movlw	172
  2015  001624                     u817:
  2016  001624  2EE8               	decfsz	wreg,f,c
  2017  001626  D7FE               	goto	u817
  2018  001628  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2019  00162A  D7FC               	goto	u817
  2020                           
  2021                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2022  00162C  8C83               	bsf	3971,6,c	;volatile
  2023                           
  2024                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2025  00162E  0E9C               	movlw	156
  2026  001630  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2027  001632  0ED7               	movlw	215
  2028  001634                     u827:
  2029  001634  2EE8               	decfsz	wreg,f,c
  2030  001636  D7FE               	goto	u827
  2031  001638  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2032  00163A  D7FC               	goto	u827
  2033  00163C  F000               	nop	
  2034                           
  2035                           ;lcd_utilities.c: 66: lcd_strobe();
  2036  00163E  EC84  F00D         	call	_lcd_strobe	;wreg free
  2037                           
  2038                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2039  001642  0E9C               	movlw	156
  2040  001644  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2041  001646  0ED7               	movlw	215
  2042  001648                     u837:
  2043  001648  2EE8               	decfsz	wreg,f,c
  2044  00164A  D7FE               	goto	u837
  2045  00164C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2046  00164E  D7FC               	goto	u837
  2047  001650  F000               	nop	
  2048  001652  0012               	return		;funcret
  2049  001654                     __end_of_lcd_write_data:
  2050                           	opt stack 0
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           prodh	equ	0xFF4
  2056                           prodl	equ	0xFF3
  2057                           intcon	equ	0xFF2
  2058                           intcon2	equ	0xFF1
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           postdec1	equ	0xFE5
  2062                           plusw1	equ	0xFE3
  2063                           fsr1l	equ	0xFE1
  2064                           indf2	equ	0xFDF
  2065                           plusw2	equ	0xFDB
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _lcd_write_cmd *****************
  2071 ;; Defined at:
  2072 ;;		line 18 in file "lcd_utilities.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  cmd             1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  cmd             1   30[COMRAM] unsigned char 
  2077 ;;  temp2           1   31[COMRAM] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0
  2088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2089 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    4
  2094 ;; This function calls:
  2095 ;;		_lcd_strobe
  2096 ;; This function is called by:
  2097 ;;		_lcd_init
  2098 ;;		_SetupTime
  2099 ;;		_SetupAlarmTimeA
  2100 ;;		_SetupAlarmTimeB
  2101 ;;		_SetupAlarmTimeC
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text8
  2106  0018C6                     __ptext8:
  2107                           	opt stack 0
  2108  0018C6                     _lcd_write_cmd:
  2109                           	opt stack 25
  2110                           
  2111                           ;incstack = 0
  2112                           ;lcd_write_cmd@cmd stored from wreg
  2113  0018C6  6E1F               	movwf	lcd_write_cmd@cmd,c
  2114                           
  2115                           ;lcd_utilities.c: 20: unsigned char temp2;
  2116                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2117  0018C8  9C83               	bcf	3971,6,c	;volatile
  2118                           
  2119                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2120  0018CA  0E3F               	movlw	63
  2121  0018CC  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2122  0018CE  0E55               	movlw	85
  2123  0018D0                     u847:
  2124  0018D0  2EE8               	decfsz	wreg,f,c
  2125  0018D2  D7FE               	goto	u847
  2126  0018D4  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2127  0018D6  D7FC               	goto	u847
  2128  0018D8  F000               	nop	
  2129                           
  2130                           ;lcd_utilities.c: 23: temp2 = cmd;
  2131  0018DA  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2132                           
  2133                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2134  0018DE  3820               	swapf	lcd_write_cmd@temp2,w,c
  2135  0018E0  0B0F               	andlw	15
  2136  0018E2  6E20               	movwf	lcd_write_cmd@temp2,c
  2137                           
  2138                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2139  0018E4  5020               	movf	lcd_write_cmd@temp2,w,c
  2140  0018E6  0B0F               	andlw	15
  2141  0018E8  6E83               	movwf	3971,c	;volatile
  2142                           
  2143                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2144  0018EA  0E7D               	movlw	125
  2145  0018EC  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2146  0018EE  0EAC               	movlw	172
  2147  0018F0                     u857:
  2148  0018F0  2EE8               	decfsz	wreg,f,c
  2149  0018F2  D7FE               	goto	u857
  2150  0018F4  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2151  0018F6  D7FC               	goto	u857
  2152                           
  2153                           ;lcd_utilities.c: 28: lcd_strobe();
  2154  0018F8  EC84  F00D         	call	_lcd_strobe	;wreg free
  2155                           
  2156                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2157  0018FC  0E7D               	movlw	125
  2158  0018FE  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2159  001900  0EAC               	movlw	172
  2160  001902                     u867:
  2161  001902  2EE8               	decfsz	wreg,f,c
  2162  001904  D7FE               	goto	u867
  2163  001906  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2164  001908  D7FC               	goto	u867
  2165                           
  2166                           ;lcd_utilities.c: 32: temp2 = cmd;
  2167  00190A  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2168                           
  2169                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2170  00190E  5020               	movf	lcd_write_cmd@temp2,w,c
  2171  001910  0B0F               	andlw	15
  2172  001912  6E83               	movwf	3971,c	;volatile
  2173                           
  2174                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2175  001914  0E7D               	movlw	125
  2176  001916  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2177  001918  0EAC               	movlw	172
  2178  00191A                     u877:
  2179  00191A  2EE8               	decfsz	wreg,f,c
  2180  00191C  D7FE               	goto	u877
  2181  00191E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2182  001920  D7FC               	goto	u877
  2183                           
  2184                           ;lcd_utilities.c: 36: lcd_strobe();
  2185  001922  EC84  F00D         	call	_lcd_strobe	;wreg free
  2186                           
  2187                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2188  001926  0E7D               	movlw	125
  2189  001928  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2190  00192A  0EAC               	movlw	172
  2191  00192C                     u887:
  2192  00192C  2EE8               	decfsz	wreg,f,c
  2193  00192E  D7FE               	goto	u887
  2194  001930  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2195  001932  D7FC               	goto	u887
  2196  001934  0012               	return		;funcret
  2197  001936                     __end_of_lcd_write_cmd:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           prodh	equ	0xFF4
  2204                           prodl	equ	0xFF3
  2205                           intcon	equ	0xFF2
  2206                           intcon2	equ	0xFF1
  2207                           postinc0	equ	0xFEE
  2208                           wreg	equ	0xFE8
  2209                           postdec1	equ	0xFE5
  2210                           plusw1	equ	0xFE3
  2211                           fsr1l	equ	0xFE1
  2212                           indf2	equ	0xFDF
  2213                           plusw2	equ	0xFDB
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _lcd_strobe *****************
  2219 ;; Defined at:
  2220 ;;		line 73 in file "lcd_utilities.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2236 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2237 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        1 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    3
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_lcd_write_cmd
  2245 ;;		_lcd_write_data
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text9
  2250  001B08                     __ptext9:
  2251                           	opt stack 0
  2252  001B08                     _lcd_strobe:
  2253                           	opt stack 25
  2254                           
  2255                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2256                           
  2257                           ;incstack = 0
  2258  001B08  8883               	bsf	3971,4,c	;volatile
  2259                           
  2260                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2261  001B0A  0E7D               	movlw	125
  2262  001B0C  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2263  001B0E  0EAC               	movlw	172
  2264  001B10                     u897:
  2265  001B10  2EE8               	decfsz	wreg,f,c
  2266  001B12  D7FE               	goto	u897
  2267  001B14  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2268  001B16  D7FC               	goto	u897
  2269                           
  2270                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2271  001B18  9883               	bcf	3971,4,c	;volatile
  2272                           
  2273                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2274  001B1A  0E7D               	movlw	125
  2275  001B1C  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2276  001B1E  0EAC               	movlw	172
  2277  001B20                     u907:
  2278  001B20  2EE8               	decfsz	wreg,f,c
  2279  001B22  D7FE               	goto	u907
  2280  001B24  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2281  001B26  D7FC               	goto	u907
  2282  001B28  0012               	return		;funcret
  2283  001B2A                     __end_of_lcd_strobe:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           prodh	equ	0xFF4
  2290                           prodl	equ	0xFF3
  2291                           intcon	equ	0xFF2
  2292                           intcon2	equ	0xFF1
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           plusw1	equ	0xFE3
  2297                           fsr1l	equ	0xFE1
  2298                           indf2	equ	0xFDF
  2299                           plusw2	equ	0xFDB
  2300                           fsr2h	equ	0xFDA
  2301                           fsr2l	equ	0xFD9
  2302                           status	equ	0xFD8
  2303                           
  2304 ;; *************** function _getkey *****************
  2305 ;; Defined at:
  2306 ;;		line 17 in file "keypad_utilities.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  lookup         18   28[COMRAM] const unsigned char [18]
  2311 ;;  keycode         1   46[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      unsigned char 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0
  2322 ;;      Locals:        19       0       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2324 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2325 ;;Total ram usage:       19 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_SetupTime
  2332 ;;		_SetupAlarmTimeA
  2333 ;;		_SetupAlarmTimeB
  2334 ;;		_SetupAlarmTimeC
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text10
  2339  001A9A                     __ptext10:
  2340                           	opt stack 0
  2341  001A9A                     _getkey:
  2342                           	opt stack 26
  2343                           
  2344                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2345                           
  2346                           ;incstack = 0
  2347  001A9A  0E1B               	movlw	low getkey@F4444
  2348  001A9C  6EF6               	movwf	tblptrl,c
  2349  001A9E                     	if	1	;There is more than 1 active tblptr byte
  2350  001A9E  0E10               	movlw	high getkey@F4444
  2351  001AA0  6EF7               	movwf	tblptrh,c
  2352  001AA2                     	endif
  2353  001AA2                     	if	0	;There are less than 3 active tblptr bytes
  2354  001AA2                     	endif
  2355  001AA2  EE20  F01D         	lfsr	2,getkey@lookup
  2356  001AA6  0E11               	movlw	17
  2357  001AA8                     u400:
  2358  001AA8  0009               	tblrd		*+
  2359  001AAA  CFF5 FFDE          	movff	tablat,postinc2
  2360  001AAE  06E8               	decf	wreg,f,c
  2361  001AB0  E2FB               	bc	u400
  2362  001AB2                     l33:
  2363  001AB2  AA81               	btfss	3969,5,c	;volatile
  2364  001AB4  D7FE               	goto	l33
  2365                           
  2366                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2367  001AB6  5081               	movf	3969,w,c	;volatile
  2368  001AB8  0B0F               	andlw	15
  2369  001ABA  6E2F               	movwf	getkey@keycode,c
  2370  001ABC                     l36:
  2371  001ABC  BA81               	btfsc	3969,5,c	;volatile
  2372  001ABE  D7FE               	goto	l36
  2373                           
  2374                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2375  001AC0  502F               	movf	getkey@keycode,w,c
  2376  001AC2  0D01               	mullw	1
  2377  001AC4  0E1D               	movlw	low getkey@lookup
  2378  001AC6  24F3               	addwf	prodl,w,c
  2379  001AC8  6ED9               	movwf	fsr2l,c
  2380  001ACA  0E00               	movlw	high getkey@lookup
  2381  001ACC  20F4               	addwfc	prodh,w,c
  2382  001ACE  6EDA               	movwf	fsr2h,c
  2383  001AD0  50DF               	movf	indf2,w,c
  2384  001AD2  0012               	return	
  2385  001AD4                     __end_of_getkey:
  2386                           	opt stack 0
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           intcon2	equ	0xFF1
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           postdec1	equ	0xFE5
  2398                           plusw1	equ	0xFE3
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           plusw2	equ	0xFDB
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _delay_ms *****************
  2408 ;; Defined at:
  2409 ;;		line 10 in file "delays_utilities.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  i               2   28[COMRAM] unsigned int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  j               2   31[COMRAM] unsigned int 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         2       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2425 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2426 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2427 ;;Total ram usage:        5 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    3
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_SetupTime
  2434 ;;		_SetupAlarmTimeA
  2435 ;;		_SetupAlarmTimeB
  2436 ;;		_SetupAlarmTimeC
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text11
  2441  001AD4                     __ptext11:
  2442                           	opt stack 0
  2443  001AD4                     _delay_ms:
  2444                           	opt stack 26
  2445                           
  2446                           ;delays_utilities.c: 12: if(i!=0)
  2447                           
  2448                           ;incstack = 0
  2449  001AD4  501D               	movf	delay_ms@i,w,c
  2450  001AD6  101E               	iorwf	delay_ms@i+1,w,c
  2451  001AD8  B4D8               	btfsc	status,2,c
  2452  001ADA  0012               	return	
  2453                           
  2454                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2455  001ADC  0E00               	movlw	0
  2456  001ADE  6E21               	movwf	delay_ms@j+1,c
  2457  001AE0  0E00               	movlw	0
  2458  001AE2  6E20               	movwf	delay_ms@j,c
  2459  001AE4  D00A               	goto	l177
  2460  001AE6                     l1466:
  2461  001AE6  0E10               	movlw	16
  2462  001AE8  6E1F               	movwf	??_delay_ms& (0+255),c
  2463  001AEA  0E94               	movlw	148
  2464  001AEC                     u917:
  2465  001AEC  2EE8               	decfsz	wreg,f,c
  2466  001AEE  D7FE               	goto	u917
  2467  001AF0  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2468  001AF2  D7FC               	goto	u917
  2469  001AF4  D000               	nop2	
  2470  001AF6  4A20               	infsnz	delay_ms@j,f,c
  2471  001AF8  2A21               	incf	delay_ms@j+1,f,c
  2472  001AFA                     l177:
  2473  001AFA  501D               	movf	delay_ms@i,w,c
  2474  001AFC  5C20               	subwf	delay_ms@j,w,c
  2475  001AFE  501E               	movf	delay_ms@i+1,w,c
  2476  001B00  5821               	subwfb	delay_ms@j+1,w,c
  2477  001B02  B0D8               	btfsc	status,0,c
  2478  001B04  0012               	return	
  2479  001B06  D7EF               	goto	l1466
  2480  001B08                     __end_of_delay_ms:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           intcon2	equ	0xFF1
  2490                           postinc0	equ	0xFEE
  2491                           wreg	equ	0xFE8
  2492                           postdec1	equ	0xFE5
  2493                           plusw1	equ	0xFE3
  2494                           fsr1l	equ	0xFE1
  2495                           indf2	equ	0xFDF
  2496                           postinc2	equ	0xFDE
  2497                           plusw2	equ	0xFDB
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _char_2_int *****************
  2503 ;; Defined at:
  2504 ;;		line 35 in file "Main.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  char1           1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  char1           1   28[COMRAM] unsigned char 
  2509 ;;  int1            1   29[COMRAM] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      unsigned char 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0
  2520 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2522 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2523 ;;Total ram usage:        2 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_SetupTime
  2530 ;;		_SetupAlarmTimeA
  2531 ;;		_SetupAlarmTimeB
  2532 ;;		_SetupAlarmTimeC
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text12
  2537  001854                     __ptext12:
  2538                           	opt stack 0
  2539  001854                     _char_2_int:
  2540                           	opt stack 26
  2541                           
  2542                           ;incstack = 0
  2543                           ;char_2_int@char1 stored from wreg
  2544  001854  6E1D               	movwf	char_2_int@char1,c
  2545                           
  2546                           ;Main.c: 37: unsigned char int1;
  2547                           ;Main.c: 38: switch (char1)
  2548  001856  D015               	goto	l1460
  2549  001858                     l1440:
  2550  001858  0E01               	movlw	1
  2551  00185A  D011               	goto	L13
  2552  00185C                     l1442:
  2553  00185C  0E02               	movlw	2
  2554  00185E  D00F               	goto	L13
  2555  001860                     l1444:
  2556  001860  0E03               	movlw	3
  2557  001862  D00D               	goto	L13
  2558  001864                     l1446:
  2559  001864  0E04               	movlw	4
  2560  001866  D00B               	goto	L13
  2561  001868                     l1448:
  2562  001868  0E05               	movlw	5
  2563  00186A  D009               	goto	L13
  2564  00186C                     l1450:
  2565  00186C  0E06               	movlw	6
  2566  00186E  D007               	goto	L13
  2567  001870                     l1452:
  2568  001870  0E07               	movlw	7
  2569  001872  D005               	goto	L13
  2570  001874                     l1454:
  2571  001874  0E08               	movlw	8
  2572  001876  D003               	goto	L13
  2573  001878                     l1456:
  2574  001878  0E09               	movlw	9
  2575  00187A  D001               	goto	L13
  2576  00187C                     l1458:
  2577  00187C  0E00               	movlw	0
  2578  00187E                     L13:
  2579  00187E  6E1E               	movwf	char_2_int@int1,c
  2580                           
  2581                           ;Main.c: 51: }
  2582  001880  D020               	goto	l110
  2583  001882                     l1460:
  2584  001882  501D               	movf	char_2_int@char1,w,c
  2585                           
  2586                           ; Switch size 1, requested type "space"
  2587                           ; Number of cases is 10, Range of values is 48 to 57
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte           31    16 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592  001884  0A30               	xorlw	48	; case 48
  2593  001886  B4D8               	btfsc	status,2,c
  2594  001888  D7F9               	goto	l1458
  2595  00188A  0A01               	xorlw	1	; case 49
  2596  00188C  B4D8               	btfsc	status,2,c
  2597  00188E  D7E4               	goto	l1440
  2598  001890  0A03               	xorlw	3	; case 50
  2599  001892  B4D8               	btfsc	status,2,c
  2600  001894  D7E3               	goto	l1442
  2601  001896  0A01               	xorlw	1	; case 51
  2602  001898  B4D8               	btfsc	status,2,c
  2603  00189A  D7E2               	goto	l1444
  2604  00189C  0A07               	xorlw	7	; case 52
  2605  00189E  B4D8               	btfsc	status,2,c
  2606  0018A0  D7E1               	goto	l1446
  2607  0018A2  0A01               	xorlw	1	; case 53
  2608  0018A4  B4D8               	btfsc	status,2,c
  2609  0018A6  D7E0               	goto	l1448
  2610  0018A8  0A03               	xorlw	3	; case 54
  2611  0018AA  B4D8               	btfsc	status,2,c
  2612  0018AC  D7DF               	goto	l1450
  2613  0018AE  0A01               	xorlw	1	; case 55
  2614  0018B0  B4D8               	btfsc	status,2,c
  2615  0018B2  D7DE               	goto	l1452
  2616  0018B4  0A0F               	xorlw	15	; case 56
  2617  0018B6  B4D8               	btfsc	status,2,c
  2618  0018B8  D7DD               	goto	l1454
  2619  0018BA  0A01               	xorlw	1	; case 57
  2620  0018BC  B4D8               	btfsc	status,2,c
  2621  0018BE  D7DC               	goto	l1456
  2622  0018C0  D7DD               	goto	l1458
  2623  0018C2                     l110:
  2624                           
  2625                           ;Main.c: 52: return(int1);
  2626  0018C2  501E               	movf	char_2_int@int1,w,c
  2627  0018C4  0012               	return		;funcret
  2628  0018C6                     __end_of_char_2_int:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           intcon2	equ	0xFF1
  2638                           postinc0	equ	0xFEE
  2639                           wreg	equ	0xFE8
  2640                           postdec1	equ	0xFE5
  2641                           plusw1	equ	0xFE3
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           plusw2	equ	0xFDB
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _ISR_Timer0_Int *****************
  2651 ;; Defined at:
  2652 ;;		line 55 in file "Main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  second10        1   27[COMRAM] unsigned char 
  2657 ;;  minute10        1   26[COMRAM] unsigned char 
  2658 ;;  hour10          1   25[COMRAM] unsigned char 
  2659 ;;  second1         1   24[COMRAM] unsigned char 
  2660 ;;  minute1         1   23[COMRAM] unsigned char 
  2661 ;;  hour1           1   22[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0
  2672 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2673 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2674 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2675 ;;Total ram usage:       20 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    2
  2678 ;; This function calls:
  2679 ;;		___awdiv
  2680 ;;		_int_2_char
  2681 ;;		i2_lcd_write_cmd
  2682 ;;		i2_lcd_write_data
  2683 ;; This function is called by:
  2684 ;;		Interrupt level 2
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	intcode
  2689  001008                     __pintcode:
  2690                           	opt stack 0
  2691  001008                     _ISR_Timer0_Int:
  2692                           	opt stack 25
  2693                           
  2694                           ;incstack = 0
  2695  001008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2696  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2697  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2698  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2699                           pclatu	equ	0xFFB
  2700                           pclath	equ	0xFFA
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           intcon	equ	0xFF2
  2708                           intcon2	equ	0xFF1
  2709                           postinc0	equ	0xFEE
  2710                           wreg	equ	0xFE8
  2711                           postdec1	equ	0xFE5
  2712                           plusw1	equ	0xFE3
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           plusw2	equ	0xFDB
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721                           	psect	intcode_body
  2722  00102E                     __pintcode_body:
  2723                           	opt stack 25
  2724  00102E                     int_func:
  2725                           	opt stack 25
  2726  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2727  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2728  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2729  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2730  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2731  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2732  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2733  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2734  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2735  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2736  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2737  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2738  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2739                           
  2740                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2741                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  2742  001060  A4F2               	btfss	intcon,2,c	;volatile
  2743  001062  D085               	goto	i2l128
  2744                           
  2745                           ;Main.c: 59: {
  2746                           ;Main.c: 63: second = second + 1;
  2747  001064  2838               	incf	_second,w,c
  2748  001066  6E38               	movwf	_second,c
  2749                           
  2750                           ;Main.c: 64: if ( second > 59 )
  2751  001068  0E3B               	movlw	59
  2752  00106A  6438               	cpfsgt	_second,c
  2753  00106C  D010               	goto	i2l1792
  2754                           
  2755                           ;Main.c: 65: {
  2756                           ;Main.c: 66: second = 0;
  2757  00106E  0E00               	movlw	0
  2758  001070  6E38               	movwf	_second,c
  2759                           
  2760                           ;Main.c: 67: minute = minute + 1;
  2761  001072  2834               	incf	_minute,w,c
  2762  001074  6E34               	movwf	_minute,c
  2763                           
  2764                           ;Main.c: 68: if ( minute > 59 )
  2765  001076  0E3B               	movlw	59
  2766  001078  6434               	cpfsgt	_minute,c
  2767  00107A  D009               	goto	i2l1792
  2768                           
  2769                           ;Main.c: 69: {
  2770                           ;Main.c: 70: minute = 0;
  2771  00107C  0E00               	movlw	0
  2772  00107E  6E34               	movwf	_minute,c
  2773                           
  2774                           ;Main.c: 71: hour = hour + 1;
  2775  001080  2830               	incf	_hour,w,c
  2776  001082  6E30               	movwf	_hour,c
  2777                           
  2778                           ;Main.c: 72: if ( hour > 23 )
  2779  001084  0E17               	movlw	23
  2780  001086  6430               	cpfsgt	_hour,c
  2781  001088  D002               	goto	i2l1792
  2782                           
  2783                           ;Main.c: 73: hour = 0;
  2784  00108A  0E00               	movlw	0
  2785  00108C  6E30               	movwf	_hour,c
  2786  00108E                     i2l1792:
  2787                           
  2788                           ;Main.c: 74: }
  2789                           ;Main.c: 75: }
  2790                           ;Main.c: 77: hour10 = hour / 10;
  2791  00108E  C030  F001         	movff	_hour,___awdiv@dividend
  2792  001092  6A02               	clrf	___awdiv@dividend+1,c
  2793  001094  0E00               	movlw	0
  2794  001096  6E04               	movwf	___awdiv@divisor+1,c
  2795  001098  0E0A               	movlw	10
  2796  00109A  6E03               	movwf	___awdiv@divisor,c
  2797  00109C  EC74  F00B         	call	___awdiv	;wreg free
  2798  0010A0  5001               	movf	?___awdiv,w,c
  2799  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  2800                           
  2801                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  2802  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2803  0010A6  0D0A               	mullw	10
  2804  0010A8  50F3               	movf	prodl,w,c
  2805  0010AA  0800               	sublw	0
  2806  0010AC  2430               	addwf	_hour,w,c
  2807  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  2808                           
  2809                           ;Main.c: 80: minute10 = minute / 10;
  2810  0010B0  C034  F001         	movff	_minute,___awdiv@dividend
  2811  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  2812  0010B6  0E00               	movlw	0
  2813  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  2814  0010BA  0E0A               	movlw	10
  2815  0010BC  6E03               	movwf	___awdiv@divisor,c
  2816  0010BE  EC74  F00B         	call	___awdiv	;wreg free
  2817  0010C2  5001               	movf	?___awdiv,w,c
  2818  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  2819                           
  2820                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  2821  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2822  0010C8  0D0A               	mullw	10
  2823  0010CA  50F3               	movf	prodl,w,c
  2824  0010CC  0800               	sublw	0
  2825  0010CE  2434               	addwf	_minute,w,c
  2826  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  2827                           
  2828                           ;Main.c: 83: second10 = second / 10;
  2829  0010D2  C038  F001         	movff	_second,___awdiv@dividend
  2830  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  2831  0010D8  0E00               	movlw	0
  2832  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  2833  0010DC  0E0A               	movlw	10
  2834  0010DE  6E03               	movwf	___awdiv@divisor,c
  2835  0010E0  EC74  F00B         	call	___awdiv	;wreg free
  2836  0010E4  5001               	movf	?___awdiv,w,c
  2837  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  2838                           
  2839                           ;Main.c: 84: second1 = second - second10 * 10;
  2840  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  2841  0010EA  0D0A               	mullw	10
  2842  0010EC  50F3               	movf	prodl,w,c
  2843  0010EE  0800               	sublw	0
  2844  0010F0  2438               	addwf	_second,w,c
  2845  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  2846                           
  2847                           ;Main.c: 86: lcd_write_cmd(0x80);
  2848  0010F4  0E80               	movlw	128
  2849  0010F6  EC9B  F00C         	call	i2_lcd_write_cmd
  2850                           
  2851                           ;Main.c: 87: lcd_write_data('t');
  2852  0010FA  0E74               	movlw	116
  2853  0010FC  EC2A  F00B         	call	i2_lcd_write_data
  2854                           
  2855                           ;Main.c: 88: lcd_write_data('i');
  2856  001100  0E69               	movlw	105
  2857  001102  EC2A  F00B         	call	i2_lcd_write_data
  2858                           
  2859                           ;Main.c: 89: lcd_write_data('m');
  2860  001106  0E6D               	movlw	109
  2861  001108  EC2A  F00B         	call	i2_lcd_write_data
  2862                           
  2863                           ;Main.c: 90: lcd_write_data('e');
  2864  00110C  0E65               	movlw	101
  2865  00110E  EC2A  F00B         	call	i2_lcd_write_data
  2866                           
  2867                           ;Main.c: 91: lcd_write_data(' ');
  2868  001112  0E20               	movlw	32
  2869  001114  EC2A  F00B         	call	i2_lcd_write_data
  2870                           
  2871                           ;Main.c: 92: lcd_write_data('=');
  2872  001118  0E3D               	movlw	61
  2873  00111A  EC2A  F00B         	call	i2_lcd_write_data
  2874                           
  2875                           ;Main.c: 93: lcd_write_data(' ');
  2876  00111E  0E20               	movlw	32
  2877  001120  EC2A  F00B         	call	i2_lcd_write_data
  2878                           
  2879                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  2880  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2881  001126  ECB6  F00B         	call	_int_2_char
  2882  00112A  EC2A  F00B         	call	i2_lcd_write_data
  2883                           
  2884                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  2885  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  2886  001130  ECB6  F00B         	call	_int_2_char
  2887  001134  EC2A  F00B         	call	i2_lcd_write_data
  2888                           
  2889                           ;Main.c: 96: lcd_write_data(':');
  2890  001138  0E3A               	movlw	58
  2891  00113A  EC2A  F00B         	call	i2_lcd_write_data
  2892                           
  2893                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  2894  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2895  001140  ECB6  F00B         	call	_int_2_char
  2896  001144  EC2A  F00B         	call	i2_lcd_write_data
  2897                           
  2898                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  2899  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  2900  00114A  ECB6  F00B         	call	_int_2_char
  2901  00114E  EC2A  F00B         	call	i2_lcd_write_data
  2902                           
  2903                           ;Main.c: 99: lcd_write_data(':');
  2904  001152  0E3A               	movlw	58
  2905  001154  EC2A  F00B         	call	i2_lcd_write_data
  2906                           
  2907                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  2908  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  2909  00115A  ECB6  F00B         	call	_int_2_char
  2910  00115E  EC2A  F00B         	call	i2_lcd_write_data
  2911                           
  2912                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  2913  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  2914  001164  ECB6  F00B         	call	_int_2_char
  2915  001168  EC2A  F00B         	call	i2_lcd_write_data
  2916                           
  2917                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  2918  00116C  94F2               	bcf	intcon,2,c	;volatile
  2919  00116E                     i2l128:
  2920  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  2921  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  2922  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  2923  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  2924  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  2925  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  2926  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  2927  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  2928  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  2929  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  2930  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  2931  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  2932  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  2933  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  2934  0011A6  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2935  0011A8  0011               	retfie		f
  2936  0011AA                     __end_of_ISR_Timer0_Int:
  2937                           	opt stack 0
  2938                           pclatu	equ	0xFFB
  2939                           pclath	equ	0xFFA
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           intcon	equ	0xFF2
  2947                           intcon2	equ	0xFF1
  2948                           postinc0	equ	0xFEE
  2949                           fsr0h	equ	0xFEA
  2950                           fsr0l	equ	0xFE9
  2951                           wreg	equ	0xFE8
  2952                           postdec1	equ	0xFE5
  2953                           plusw1	equ	0xFE3
  2954                           fsr1h	equ	0xFE2
  2955                           fsr1l	equ	0xFE1
  2956                           indf2	equ	0xFDF
  2957                           postinc2	equ	0xFDE
  2958                           plusw2	equ	0xFDB
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function i2_lcd_write_data *****************
  2964 ;; Defined at:
  2965 ;;		line 43 in file "lcd_utilities.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  data            1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  data            1    2[COMRAM] unsigned char 
  2970 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0
  2981 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2983 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2984 ;;Total ram usage:        3 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		i2_lcd_strobe
  2989 ;; This function is called by:
  2990 ;;		_ISR_Timer0_Int
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text14
  2995  001654                     __ptext14:
  2996                           	opt stack 0
  2997  001654                     i2_lcd_write_data:
  2998                           	opt stack 25
  2999                           
  3000                           ;incstack = 0
  3001                           ;i2lcd_write_data@data stored from wreg
  3002  001654  6E03               	movwf	i2lcd_write_data@data,c
  3003                           
  3004                           ;lcd_utilities.c: 45: char temp1;
  3005                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3006  001656  8C83               	bsf	3971,6,c	;volatile
  3007                           
  3008                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3009  001658  0E3F               	movlw	63
  3010  00165A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3011  00165C  0E55               	movlw	85
  3012  00165E                     i2u92_47:
  3013  00165E  2EE8               	decfsz	wreg,f,c
  3014  001660  D7FE               	goto	i2u92_47
  3015  001662  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3016  001664  D7FC               	goto	i2u92_47
  3017  001666  F000               	nop	
  3018                           
  3019                           ;lcd_utilities.c: 50: temp1 = data;
  3020  001668  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3021                           
  3022                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3023  00166C  3804               	swapf	i2lcd_write_data@temp1,w,c
  3024  00166E  0B0F               	andlw	15
  3025  001670  6E04               	movwf	i2lcd_write_data@temp1,c
  3026                           
  3027                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3028  001672  5004               	movf	i2lcd_write_data@temp1,w,c
  3029  001674  0B0F               	andlw	15
  3030  001676  6E83               	movwf	3971,c	;volatile
  3031                           
  3032                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3033  001678  0E7D               	movlw	125
  3034  00167A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3035  00167C  0EAC               	movlw	172
  3036  00167E                     i2u93_47:
  3037  00167E  2EE8               	decfsz	wreg,f,c
  3038  001680  D7FE               	goto	i2u93_47
  3039  001682  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3040  001684  D7FC               	goto	i2u93_47
  3041                           
  3042                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3043  001686  8C83               	bsf	3971,6,c	;volatile
  3044                           
  3045                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3046  001688  0E7D               	movlw	125
  3047  00168A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3048  00168C  0EAC               	movlw	172
  3049  00168E                     i2u94_47:
  3050  00168E  2EE8               	decfsz	wreg,f,c
  3051  001690  D7FE               	goto	i2u94_47
  3052  001692  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3053  001694  D7FC               	goto	i2u94_47
  3054                           
  3055                           ;lcd_utilities.c: 57: lcd_strobe();
  3056  001696  EC95  F00D         	call	i2_lcd_strobe	;wreg free
  3057                           
  3058                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3059  00169A  0E7D               	movlw	125
  3060  00169C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3061  00169E  0EAC               	movlw	172
  3062  0016A0                     i2u95_47:
  3063  0016A0  2EE8               	decfsz	wreg,f,c
  3064  0016A2  D7FE               	goto	i2u95_47
  3065  0016A4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3066  0016A6  D7FC               	goto	i2u95_47
  3067                           
  3068                           ;lcd_utilities.c: 60: temp1 = data;
  3069  0016A8  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3070                           
  3071                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3072  0016AC  5004               	movf	i2lcd_write_data@temp1,w,c
  3073  0016AE  0B0F               	andlw	15
  3074  0016B0  6E83               	movwf	3971,c	;volatile
  3075                           
  3076                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3077  0016B2  0E7D               	movlw	125
  3078  0016B4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3079  0016B6  0EAC               	movlw	172
  3080  0016B8                     i2u96_47:
  3081  0016B8  2EE8               	decfsz	wreg,f,c
  3082  0016BA  D7FE               	goto	i2u96_47
  3083  0016BC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3084  0016BE  D7FC               	goto	i2u96_47
  3085                           
  3086                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3087  0016C0  8C83               	bsf	3971,6,c	;volatile
  3088                           
  3089                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3090  0016C2  0E9C               	movlw	156
  3091  0016C4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3092  0016C6  0ED7               	movlw	215
  3093  0016C8                     i2u97_47:
  3094  0016C8  2EE8               	decfsz	wreg,f,c
  3095  0016CA  D7FE               	goto	i2u97_47
  3096  0016CC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3097  0016CE  D7FC               	goto	i2u97_47
  3098  0016D0  F000               	nop	
  3099                           
  3100                           ;lcd_utilities.c: 66: lcd_strobe();
  3101  0016D2  EC95  F00D         	call	i2_lcd_strobe	;wreg free
  3102                           
  3103                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3104  0016D6  0E9C               	movlw	156
  3105  0016D8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3106  0016DA  0ED7               	movlw	215
  3107  0016DC                     i2u98_47:
  3108  0016DC  2EE8               	decfsz	wreg,f,c
  3109  0016DE  D7FE               	goto	i2u98_47
  3110  0016E0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3111  0016E2  D7FC               	goto	i2u98_47
  3112  0016E4  F000               	nop	
  3113  0016E6  0012               	return		;funcret
  3114  0016E8                     __end_ofi2_lcd_write_data:
  3115                           	opt stack 0
  3116                           pclatu	equ	0xFFB
  3117                           pclath	equ	0xFFA
  3118                           tblptru	equ	0xFF8
  3119                           tblptrh	equ	0xFF7
  3120                           tblptrl	equ	0xFF6
  3121                           tablat	equ	0xFF5
  3122                           prodh	equ	0xFF4
  3123                           prodl	equ	0xFF3
  3124                           intcon	equ	0xFF2
  3125                           intcon2	equ	0xFF1
  3126                           postinc0	equ	0xFEE
  3127                           fsr0h	equ	0xFEA
  3128                           fsr0l	equ	0xFE9
  3129                           wreg	equ	0xFE8
  3130                           postdec1	equ	0xFE5
  3131                           plusw1	equ	0xFE3
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           postinc2	equ	0xFDE
  3136                           plusw2	equ	0xFDB
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function i2_lcd_write_cmd *****************
  3142 ;; Defined at:
  3143 ;;		line 18 in file "lcd_utilities.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  cmd             1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  cmd             1    2[COMRAM] unsigned char 
  3148 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;		None               void
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0
  3159 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3160 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3161 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3162 ;;Total ram usage:        3 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    1
  3165 ;; This function calls:
  3166 ;;		i2_lcd_strobe
  3167 ;; This function is called by:
  3168 ;;		_ISR_Timer0_Int
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text15
  3173  001936                     __ptext15:
  3174                           	opt stack 0
  3175  001936                     i2_lcd_write_cmd:
  3176                           	opt stack 25
  3177                           
  3178                           ;incstack = 0
  3179                           ;i2lcd_write_cmd@cmd stored from wreg
  3180  001936  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3181                           
  3182                           ;lcd_utilities.c: 20: unsigned char temp2;
  3183                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3184  001938  9C83               	bcf	3971,6,c	;volatile
  3185                           
  3186                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3187  00193A  0E3F               	movlw	63
  3188  00193C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3189  00193E  0E55               	movlw	85
  3190  001940                     i2u99_47:
  3191  001940  2EE8               	decfsz	wreg,f,c
  3192  001942  D7FE               	goto	i2u99_47
  3193  001944  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3194  001946  D7FC               	goto	i2u99_47
  3195  001948  F000               	nop	
  3196                           
  3197                           ;lcd_utilities.c: 23: temp2 = cmd;
  3198  00194A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3199                           
  3200                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3201  00194E  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3202  001950  0B0F               	andlw	15
  3203  001952  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3204                           
  3205                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3206  001954  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3207  001956  0B0F               	andlw	15
  3208  001958  6E83               	movwf	3971,c	;volatile
  3209                           
  3210                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3211  00195A  0E7D               	movlw	125
  3212  00195C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3213  00195E  0EAC               	movlw	172
  3214  001960                     i2u100_47:
  3215  001960  2EE8               	decfsz	wreg,f,c
  3216  001962  D7FE               	goto	i2u100_47
  3217  001964  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3218  001966  D7FC               	goto	i2u100_47
  3219                           
  3220                           ;lcd_utilities.c: 28: lcd_strobe();
  3221  001968  EC95  F00D         	call	i2_lcd_strobe	;wreg free
  3222                           
  3223                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3224  00196C  0E7D               	movlw	125
  3225  00196E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3226  001970  0EAC               	movlw	172
  3227  001972                     i2u101_47:
  3228  001972  2EE8               	decfsz	wreg,f,c
  3229  001974  D7FE               	goto	i2u101_47
  3230  001976  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3231  001978  D7FC               	goto	i2u101_47
  3232                           
  3233                           ;lcd_utilities.c: 32: temp2 = cmd;
  3234  00197A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3235                           
  3236                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3237  00197E  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3238  001980  0B0F               	andlw	15
  3239  001982  6E83               	movwf	3971,c	;volatile
  3240                           
  3241                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3242  001984  0E7D               	movlw	125
  3243  001986  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3244  001988  0EAC               	movlw	172
  3245  00198A                     i2u102_47:
  3246  00198A  2EE8               	decfsz	wreg,f,c
  3247  00198C  D7FE               	goto	i2u102_47
  3248  00198E  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3249  001990  D7FC               	goto	i2u102_47
  3250                           
  3251                           ;lcd_utilities.c: 36: lcd_strobe();
  3252  001992  EC95  F00D         	call	i2_lcd_strobe	;wreg free
  3253                           
  3254                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3255  001996  0E7D               	movlw	125
  3256  001998  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3257  00199A  0EAC               	movlw	172
  3258  00199C                     i2u103_47:
  3259  00199C  2EE8               	decfsz	wreg,f,c
  3260  00199E  D7FE               	goto	i2u103_47
  3261  0019A0  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3262  0019A2  D7FC               	goto	i2u103_47
  3263  0019A4  0012               	return		;funcret
  3264  0019A6                     __end_ofi2_lcd_write_cmd:
  3265                           	opt stack 0
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           intcon2	equ	0xFF1
  3276                           postinc0	equ	0xFEE
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           plusw1	equ	0xFE3
  3282                           fsr1h	equ	0xFE2
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           postinc2	equ	0xFDE
  3286                           plusw2	equ	0xFDB
  3287                           fsr2h	equ	0xFDA
  3288                           fsr2l	equ	0xFD9
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function i2_lcd_strobe *****************
  3292 ;; Defined at:
  3293 ;;		line 73 in file "lcd_utilities.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3310 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		i2_lcd_write_cmd
  3317 ;;		i2_lcd_write_data
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text16
  3322  001B2A                     __ptext16:
  3323                           	opt stack 0
  3324  001B2A                     i2_lcd_strobe:
  3325                           	opt stack 25
  3326                           
  3327                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3328                           
  3329                           ;incstack = 0
  3330  001B2A  8883               	bsf	3971,4,c	;volatile
  3331                           
  3332                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3333  001B2C  0E7D               	movlw	125
  3334  001B2E  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3335  001B30  0EAC               	movlw	172
  3336  001B32                     i2u104_47:
  3337  001B32  2EE8               	decfsz	wreg,f,c
  3338  001B34  D7FE               	goto	i2u104_47
  3339  001B36  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3340  001B38  D7FC               	goto	i2u104_47
  3341                           
  3342                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3343  001B3A  9883               	bcf	3971,4,c	;volatile
  3344                           
  3345                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3346  001B3C  0E7D               	movlw	125
  3347  001B3E  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3348  001B40  0EAC               	movlw	172
  3349  001B42                     i2u105_47:
  3350  001B42  2EE8               	decfsz	wreg,f,c
  3351  001B44  D7FE               	goto	i2u105_47
  3352  001B46  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3353  001B48  D7FC               	goto	i2u105_47
  3354  001B4A  0012               	return		;funcret
  3355  001B4C                     __end_ofi2_lcd_strobe:
  3356                           	opt stack 0
  3357                           pclatu	equ	0xFFB
  3358                           pclath	equ	0xFFA
  3359                           tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           prodh	equ	0xFF4
  3364                           prodl	equ	0xFF3
  3365                           intcon	equ	0xFF2
  3366                           intcon2	equ	0xFF1
  3367                           postinc0	equ	0xFEE
  3368                           fsr0h	equ	0xFEA
  3369                           fsr0l	equ	0xFE9
  3370                           wreg	equ	0xFE8
  3371                           postdec1	equ	0xFE5
  3372                           plusw1	equ	0xFE3
  3373                           fsr1h	equ	0xFE2
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           postinc2	equ	0xFDE
  3377                           plusw2	equ	0xFDB
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _int_2_char *****************
  3383 ;; Defined at:
  3384 ;;		line 15 in file "Main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  int1            1    wreg     unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  int1            1    0[COMRAM] unsigned char 
  3389 ;;  char1           1    1[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      unsigned char 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_ISR_Timer0_Int
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text17
  3413  00176C                     __ptext17:
  3414                           	opt stack 0
  3415  00176C                     _int_2_char:
  3416                           	opt stack 26
  3417                           
  3418                           ;incstack = 0
  3419                           ;int_2_char@int1 stored from wreg
  3420  00176C  6E01               	movwf	int_2_char@int1,c
  3421                           
  3422                           ;Main.c: 17: char char1;
  3423                           ;Main.c: 18: switch (int1)
  3424  00176E  D017               	goto	i2l948
  3425  001770                     i2l926:
  3426  001770  0E30               	movlw	48
  3427  001772  D013               	goto	L23
  3428  001774                     i2l928:
  3429  001774  0E31               	movlw	49
  3430  001776  D011               	goto	L23
  3431  001778                     i2l930:
  3432  001778  0E32               	movlw	50
  3433  00177A  D00F               	goto	L23
  3434  00177C                     i2l932:
  3435  00177C  0E33               	movlw	51
  3436  00177E  D00D               	goto	L23
  3437  001780                     i2l934:
  3438  001780  0E34               	movlw	52
  3439  001782  D00B               	goto	L23
  3440  001784                     i2l936:
  3441  001784  0E35               	movlw	53
  3442  001786  D009               	goto	L23
  3443  001788                     i2l938:
  3444  001788  0E36               	movlw	54
  3445  00178A  D007               	goto	L23
  3446  00178C                     i2l940:
  3447  00178C  0E37               	movlw	55
  3448  00178E  D005               	goto	L23
  3449  001790                     i2l942:
  3450  001790  0E38               	movlw	56
  3451  001792  D003               	goto	L23
  3452  001794                     i2l944:
  3453  001794  0E39               	movlw	57
  3454  001796  D001               	goto	L23
  3455  001798                     i2l946:
  3456  001798  0E3F               	movlw	63
  3457  00179A                     L23:
  3458  00179A  6E02               	movwf	int_2_char@char1,c
  3459                           
  3460                           ;Main.c: 31: }
  3461  00179C  D020               	goto	i2l94
  3462  00179E                     i2l948:
  3463  00179E  5001               	movf	int_2_char@int1,w,c
  3464                           
  3465                           ; Switch size 1, requested type "space"
  3466                           ; Number of cases is 10, Range of values is 0 to 9
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte           31    16 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471  0017A0  0A00               	xorlw	0	; case 0
  3472  0017A2  B4D8               	btfsc	status,2,c
  3473  0017A4  D7E5               	goto	i2l926
  3474  0017A6  0A01               	xorlw	1	; case 1
  3475  0017A8  B4D8               	btfsc	status,2,c
  3476  0017AA  D7E4               	goto	i2l928
  3477  0017AC  0A03               	xorlw	3	; case 2
  3478  0017AE  B4D8               	btfsc	status,2,c
  3479  0017B0  D7E3               	goto	i2l930
  3480  0017B2  0A01               	xorlw	1	; case 3
  3481  0017B4  B4D8               	btfsc	status,2,c
  3482  0017B6  D7E2               	goto	i2l932
  3483  0017B8  0A07               	xorlw	7	; case 4
  3484  0017BA  B4D8               	btfsc	status,2,c
  3485  0017BC  D7E1               	goto	i2l934
  3486  0017BE  0A01               	xorlw	1	; case 5
  3487  0017C0  B4D8               	btfsc	status,2,c
  3488  0017C2  D7E0               	goto	i2l936
  3489  0017C4  0A03               	xorlw	3	; case 6
  3490  0017C6  B4D8               	btfsc	status,2,c
  3491  0017C8  D7DF               	goto	i2l938
  3492  0017CA  0A01               	xorlw	1	; case 7
  3493  0017CC  B4D8               	btfsc	status,2,c
  3494  0017CE  D7DE               	goto	i2l940
  3495  0017D0  0A0F               	xorlw	15	; case 8
  3496  0017D2  B4D8               	btfsc	status,2,c
  3497  0017D4  D7DD               	goto	i2l942
  3498  0017D6  0A01               	xorlw	1	; case 9
  3499  0017D8  B4D8               	btfsc	status,2,c
  3500  0017DA  D7DC               	goto	i2l944
  3501  0017DC  D7DD               	goto	i2l946
  3502  0017DE                     i2l94:
  3503                           
  3504                           ;Main.c: 32: return(char1);
  3505  0017DE  5002               	movf	int_2_char@char1,w,c
  3506  0017E0  0012               	return		;funcret
  3507  0017E2                     __end_of_int_2_char:
  3508                           	opt stack 0
  3509                           pclatu	equ	0xFFB
  3510                           pclath	equ	0xFFA
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           prodh	equ	0xFF4
  3516                           prodl	equ	0xFF3
  3517                           intcon	equ	0xFF2
  3518                           intcon2	equ	0xFF1
  3519                           postinc0	equ	0xFEE
  3520                           fsr0h	equ	0xFEA
  3521                           fsr0l	equ	0xFE9
  3522                           wreg	equ	0xFE8
  3523                           postdec1	equ	0xFE5
  3524                           plusw1	equ	0xFE3
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           plusw2	equ	0xFDB
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function ___awdiv *****************
  3535 ;; Defined at:
  3536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  dividend        2    0[COMRAM] int 
  3539 ;;  divisor         2    2[COMRAM] int 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  quotient        2    6[COMRAM] int 
  3542 ;;  sign            1    5[COMRAM] unsigned char 
  3543 ;;  counter         1    4[COMRAM] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  2    0[COMRAM] int 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3553 ;;      Params:         4       0       0       0       0       0       0       0       0
  3554 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3556 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3557 ;;Total ram usage:        8 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_ISR_Timer0_Int
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text18
  3567  0016E8                     __ptext18:
  3568                           	opt stack 0
  3569  0016E8                     ___awdiv:
  3570                           	opt stack 26
  3571                           
  3572                           ;incstack = 0
  3573  0016E8  0E00               	movlw	0
  3574  0016EA  6E06               	movwf	___awdiv@sign,c
  3575  0016EC  AE04               	btfss	___awdiv@divisor+1,7,c
  3576  0016EE  D006               	goto	i2l1678
  3577  0016F0  6C03               	negf	___awdiv@divisor,c
  3578  0016F2  1E04               	comf	___awdiv@divisor+1,f,c
  3579  0016F4  B0D8               	btfsc	status,0,c
  3580  0016F6  2A04               	incf	___awdiv@divisor+1,f,c
  3581  0016F8  0E01               	movlw	1
  3582  0016FA  6E06               	movwf	___awdiv@sign,c
  3583  0016FC                     i2l1678:
  3584  0016FC  AE02               	btfss	___awdiv@dividend+1,7,c
  3585  0016FE  D006               	goto	i2l1684
  3586  001700  6C01               	negf	___awdiv@dividend,c
  3587  001702  1E02               	comf	___awdiv@dividend+1,f,c
  3588  001704  B0D8               	btfsc	status,0,c
  3589  001706  2A02               	incf	___awdiv@dividend+1,f,c
  3590  001708  0E01               	movlw	1
  3591  00170A  1A06               	xorwf	___awdiv@sign,f,c
  3592  00170C                     i2l1684:
  3593  00170C  0E00               	movlw	0
  3594  00170E  6E08               	movwf	___awdiv@quotient+1,c
  3595  001710  0E00               	movlw	0
  3596  001712  6E07               	movwf	___awdiv@quotient,c
  3597  001714  5003               	movf	___awdiv@divisor,w,c
  3598  001716  1004               	iorwf	___awdiv@divisor+1,w,c
  3599  001718  B4D8               	btfsc	status,2,c
  3600  00171A  D01C               	goto	i2l1706
  3601  00171C  0E01               	movlw	1
  3602  00171E  6E05               	movwf	___awdiv@counter,c
  3603  001720  D004               	goto	i2l1692
  3604  001722                     i2l1690:
  3605  001722  90D8               	bcf	status,0,c
  3606  001724  3603               	rlcf	___awdiv@divisor,f,c
  3607  001726  3604               	rlcf	___awdiv@divisor+1,f,c
  3608  001728  2A05               	incf	___awdiv@counter,f,c
  3609  00172A                     i2l1692:
  3610  00172A  AE04               	btfss	___awdiv@divisor+1,7,c
  3611  00172C  D7FA               	goto	i2l1690
  3612  00172E                     i2l1694:
  3613  00172E  90D8               	bcf	status,0,c
  3614  001730  3607               	rlcf	___awdiv@quotient,f,c
  3615  001732  3608               	rlcf	___awdiv@quotient+1,f,c
  3616  001734  5003               	movf	___awdiv@divisor,w,c
  3617  001736  5C01               	subwf	___awdiv@dividend,w,c
  3618  001738  5004               	movf	___awdiv@divisor+1,w,c
  3619  00173A  5802               	subwfb	___awdiv@dividend+1,w,c
  3620  00173C  A0D8               	btfss	status,0,c
  3621  00173E  D005               	goto	i2l1702
  3622  001740  5003               	movf	___awdiv@divisor,w,c
  3623  001742  5E01               	subwf	___awdiv@dividend,f,c
  3624  001744  5004               	movf	___awdiv@divisor+1,w,c
  3625  001746  5A02               	subwfb	___awdiv@dividend+1,f,c
  3626  001748  8007               	bsf	___awdiv@quotient,0,c
  3627  00174A                     i2l1702:
  3628  00174A  90D8               	bcf	status,0,c
  3629  00174C  3204               	rrcf	___awdiv@divisor+1,f,c
  3630  00174E  3203               	rrcf	___awdiv@divisor,f,c
  3631  001750  2E05               	decfsz	___awdiv@counter,f,c
  3632  001752  D7ED               	goto	i2l1694
  3633  001754                     i2l1706:
  3634  001754  5006               	movf	___awdiv@sign,w,c
  3635  001756  B4D8               	btfsc	status,2,c
  3636  001758  D004               	goto	i2l1710
  3637  00175A  6C07               	negf	___awdiv@quotient,c
  3638  00175C  1E08               	comf	___awdiv@quotient+1,f,c
  3639  00175E  B0D8               	btfsc	status,0,c
  3640  001760  2A08               	incf	___awdiv@quotient+1,f,c
  3641  001762                     i2l1710:
  3642  001762  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3643  001766  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3644  00176A  0012               	return	
  3645  00176C                     __end_of___awdiv:
  3646                           	opt stack 0
  3647                           pclatu	equ	0xFFB
  3648                           pclath	equ	0xFFA
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           intcon	equ	0xFF2
  3656                           intcon2	equ	0xFF1
  3657                           postinc0	equ	0xFEE
  3658                           fsr0h	equ	0xFEA
  3659                           fsr0l	equ	0xFE9
  3660                           wreg	equ	0xFE8
  3661                           postdec1	equ	0xFE5
  3662                           plusw1	equ	0xFE3
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           plusw2	equ	0xFDB
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           pclatu	equ	0xFFB
  3672                           pclath	equ	0xFFA
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           intcon	equ	0xFF2
  3680                           intcon2	equ	0xFF1
  3681                           postinc0	equ	0xFEE
  3682                           fsr0h	equ	0xFEA
  3683                           fsr0l	equ	0xFE9
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           plusw1	equ	0xFE3
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           plusw2	equ	0xFDB
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696                           	psect	rparam
  3697  0000                     pclatu	equ	0xFFB
  3698                           pclath	equ	0xFFA
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           intcon2	equ	0xFF1
  3707                           postinc0	equ	0xFEE
  3708                           fsr0h	equ	0xFEA
  3709                           fsr0l	equ	0xFE9
  3710                           wreg	equ	0xFE8
  3711                           postdec1	equ	0xFE5
  3712                           plusw1	equ	0xFE3
  3713                           fsr1h	equ	0xFE2
  3714                           fsr1l	equ	0xFE1
  3715                           indf2	equ	0xFDF
  3716                           postinc2	equ	0xFDE
  3717                           plusw2	equ	0xFDB
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722                           	psect	temp
  3723  000039                     btemp:
  3724                           	opt stack 0
  3725  000039                     	ds	1
  3726  0000                     int$flags	set	btemp
  3727                           pclatu	equ	0xFFB
  3728                           pclath	equ	0xFFA
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           intcon	equ	0xFF2
  3736                           intcon2	equ	0xFF1
  3737                           postinc0	equ	0xFEE
  3738                           fsr0h	equ	0xFEA
  3739                           fsr0l	equ	0xFE9
  3740                           wreg	equ	0xFE8
  3741                           postdec1	equ	0xFE5
  3742                           plusw1	equ	0xFE3
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           plusw2	equ	0xFDB
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        84
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      56
    BANK0           160     30     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _lcd_init->_lcd_write_cmd
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4119
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     159
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1092
                                              0 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      48
                                             28 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     240
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      72       5       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      38       1       59.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      20        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 03 11:43:52 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1AB2  
                                   l36 1ABC                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l110 18C2  
                                  l177 1AFA                                    u400 1AA8  
                                  u501 14D6                                    u531 13E2  
                                  u471 11B4                                    u561 12EE  
                                  u807 160C                                    u817 1624  
                                  u907 1B20                                    u827 1634  
                                  u917 1AEC                                    u837 1648  
                                  u757 180E                                    u847 18D0  
                                  u767 1848                                    u857 18F0  
                                  u777 15CA                                    u867 1902  
                                  u787 15EA                                    u877 191A  
                                  u797 15FA                                    u887 192C  
                                  u897 1B10                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4444 101B  
                                 l1502 11C8                                   l1440 1858  
                                 l1600 1400                                   l1450 186C  
                                 l1442 185C                                   l1514 11F8  
                                 l1506 11D2                                   l1452 1870  
                                 l1444 1860                                   l1460 1882  
                                 l1454 1874                                   l1446 1864  
                                 l1456 1878                                   l1448 1868  
                                 l1560 14F4                                   l1608 1426  
                                 l1640 130C                                   l1458 187C  
                                 l1466 1AE6                                   l1556 14EA  
                                 l1636 1302                                   l1492 181E  
                                 l1484 17F8                                   l1568 151A  
                                 l1648 1332                                   l1488 1808  
                                 l1596 13F6                                   l1860 19DE  
                                 l1854 19CA                                   l1872 1A06  
                                 l1866 19F2                                   i2l94 17DE  
               __end_of_lcd_write_data 1654                                   _main 19A6  
                                 _hour 0030                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0039                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 16E8                           ___param_bank 000010  
                                ?_main 0001                        __end_of___awdiv 176C  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l128 116E  
                                i2l930 1778                                  i2l940 178C  
                                i2l932 177C                                  i2l942 1790  
                                i2l934 1780                                  i2l926 1770  
                                i2l944 1794                                  i2l936 1784  
                                i2l928 1774                                  i2l946 1798  
                                i2l938 1788                                  i2l948 179E  
                      ___awdiv@counter 0005                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISD 000F95  
                     lcd_write_cmd@cmd 001F                                  _hourA 0031  
                                _hourB 0032                                  _hourC 0033  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 001D                        __initialization 1A60  
                         __end_of_main 1A0C                                 ??_main 0030  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1B2A                                 i2l1710 1762  
                               i2l1702 174A                                 i2l1706 1754  
                               i2l1690 1722                                 i2l1692 172A  
                               i2l1684 170C                                 i2l1694 172E  
                               i2l1678 16FC                                 i2l1792 108E  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1B08  
                     __end_of_lcd_init 1854                         char_2_int@int1 001E  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1A9A                                 clear_0 1A66  
                     ___awdiv@quotient 0007                                 _minute 0034  
                               _second 0038                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                           __accesstop 0060                __end_of__initialization 1A8C  
                        getkey@keycode 002F                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1A0C                             _char_2_int 1854  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                                i2u92_47 165E  
                              i2u93_47 167E                                i2u94_47 168E  
                              i2u95_47 16A0                                i2u96_47 16B8  
                              i2u97_47 16C8                                i2u98_47 16DC  
                     ??_lcd_write_data 001E                                i2u99_47 1940  
                           _lcd_strobe 1B08               __size_of_SetupAlarmTimeA 00F4  
             __size_of_SetupAlarmTimeB 00F4               __size_of_SetupAlarmTimeC 00F4  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                             _int_2_char 176C  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 16E8  
                         __psmallconst 101A                        __size_of_getkey 003A  
                      i2_lcd_write_cmd 1936                                __pcinit 1A60  
                              __ramtop 0800                                __ptext0 19A6  
                              __ptext1 17E2                                __ptext2 1B4C  
                              __ptext3 11AA                                __ptext4 12E4  
                              __ptext5 13D8                                __ptext6 14CC  
                              __ptext7 15C0                                __ptext8 18C6  
                              __ptext9 1B08                              _T0CONbits 000FD5  
                       SetupTime@F4486 009F                                _minuteA 0035  
                              _minuteB 0036                                _minuteC 0037  
                           ??_delay_ms 001F                            ?_char_2_int 0001  
                           ??_lcd_init 0021                         __pintcode_body 102E  
                 end_of_initialization 1A8C                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00D1  
                       SetupTime@hour1 00CB                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00CA                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00CA  
                SetupAlarmTimeC@hour10 00CA                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0030  
                    ??_SetupAlarmTimeB 0030                      ??_SetupAlarmTimeC 0030  
                __end_of_lcd_write_cmd 1936                __end_ofi2_lcd_write_cmd 19A6  
                  __size_of_char_2_int 0072                         __end_of_getkey 1AD4  
                  start_initialization 1A60                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00CC  
                    SetupTime@second10 00CE                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00D0                            __pbssCOMRAM 0030  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                        ?i2_lcd_strobe 0001                   SetupAlarmTimeA@F4496 0060  
                 SetupAlarmTimeB@F4506 0075                              delay_ms@i 001D  
                            delay_ms@j 0020                   SetupAlarmTimeC@F4516 008A  
                  ISR_Timer0_Int@hour1 0017                               i2u100_47 1960  
                             i2u101_47 1972                               i2u102_47 198A  
                             i2u103_47 199C                               i2u104_47 1B32  
                             i2u105_47 1B42                               _RCONbits 000FD0  
                 SetupAlarmTimeA@ctemp 00CF                   SetupAlarmTimeA@hour1 00CB  
                 SetupAlarmTimeB@ctemp 00CF                     __end_of_char_2_int 18C6  
                 SetupAlarmTimeB@hour1 00CB                   SetupAlarmTimeC@ctemp 00CF  
                 SetupAlarmTimeC@hour1 00CB                              lcd_init@i 0022  
                  lcd_write_data@temp1 0020                        _SetupAlarmTimeA 14CC  
                      _SetupAlarmTimeB 13D8                        _SetupAlarmTimeC 12E4  
                       ??i2_lcd_strobe 0001                           ??_lcd_strobe 001D  
                     SetupTime@Message 00B4                              copy_data0 1A80  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1B68  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1B4C  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                          ??_SetupTime 0030                       SetupTime@minute1 00CD  
                     SetupTime@second1 00CF                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1B2A                       SetupTime@outchar 00C9  
                   __end_of_int_2_char 17E2                       i2_lcd_write_data 1654  
                             _delay_ms 1AD4                               __ptext10 1A9A  
                             __ptext11 1AD4                               __ptext12 1854  
                             __ptext14 1654                               __ptext15 1936  
                             __ptext16 1B2A                               __ptext17 176C  
                             __ptext18 16E8                               _lcd_init 17E2  
                        __size_of_main 0066          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0039                __end_of_SetupAlarmTimeA 15C0  
              __end_of_SetupAlarmTimeB 14CC                __end_of_SetupAlarmTimeC 13D8  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00CA  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                 __end_ofi2_lcd_strobe 1B4C                 SetupAlarmTimeA@Message 00B4  
               SetupAlarmTimeB@Message 00B4                 SetupAlarmTimeC@Message 00B4  
              SetupAlarmTimeA@minute10 00CC                SetupAlarmTimeA@msgindex 00CE  
              SetupAlarmTimeB@minute10 00CC                SetupAlarmTimeB@msgindex 00CE  
              SetupAlarmTimeC@minute10 00CC                SetupAlarmTimeC@msgindex 00CE  
               SetupAlarmTimeA@minute1 00CD                 SetupAlarmTimeB@minute1 00CD  
               SetupAlarmTimeA@outchar 00C9                 SetupAlarmTimeC@minute1 00CD  
               SetupAlarmTimeB@outchar 00C9                         _lcd_write_data 15C0  
               SetupAlarmTimeC@outchar 00C9                          _lcd_write_cmd 18C6  
