

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 15 08:13:42 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001C90                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for version@F4277
    44  001C90  45                 	db	69
    45  001C91  54                 	db	84
    46  001C92  54                 	db	84
    47  001C93  20                 	db	32
    48  001C94  56                 	db	86
    49  001C95  65                 	db	101
    50  001C96  72                 	db	114
    51  001C97  73                 	db	115
    52  001C98  69                 	db	105
    53  001C99  6F                 	db	111
    54  001C9A  6E                 	db	110
    55  001C9B  20                 	db	32
    56  001C9C  31                 	db	49
    57  001C9D  2E                 	db	46
    58  001C9E  32                 	db	50
    59  001C9F  20                 	db	32
    60  001CA0  20                 	db	32
    61  001CA1  20                 	db	32
    62  001CA2  20                 	db	32
    63  001CA3  20                 	db	32
    64  001CA4  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001B1C                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4322
    71  001B1C  53                 	db	83
    72  001B1D  75                 	db	117
    73  001B1E  62                 	db	98
    74  001B1F  6A                 	db	106
    75  001B20  65                 	db	101
    76  001B21  63                 	db	99
    77  001B22  74                 	db	116
    78  001B23  20                 	db	32
    79  001B24  41                 	db	65
    80  001B25  20                 	db	32
    81  001B26  54                 	db	84
    82  001B27  69                 	db	105
    83  001B28  6D                 	db	109
    84  001B29  65                 	db	101
    85  001B2A  20                 	db	32
    86  001B2B  68                 	db	104
    87  001B2C  68                 	db	104
    88  001B2D  6D                 	db	109
    89  001B2E  6D                 	db	109
    90  001B2F  3A                 	db	58
    91  001B30  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4332
    94  001B31  53                 	db	83
    95  001B32  75                 	db	117
    96  001B33  62                 	db	98
    97  001B34  6A                 	db	106
    98  001B35  65                 	db	101
    99  001B36  63                 	db	99
   100  001B37  74                 	db	116
   101  001B38  20                 	db	32
   102  001B39  42                 	db	66
   103  001B3A  20                 	db	32
   104  001B3B  54                 	db	84
   105  001B3C  69                 	db	105
   106  001B3D  6D                 	db	109
   107  001B3E  65                 	db	101
   108  001B3F  20                 	db	32
   109  001B40  68                 	db	104
   110  001B41  68                 	db	104
   111  001B42  6D                 	db	109
   112  001B43  6D                 	db	109
   113  001B44  3A                 	db	58
   114  001B45  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4342
   117  001B46  53                 	db	83
   118  001B47  75                 	db	117
   119  001B48  62                 	db	98
   120  001B49  6A                 	db	106
   121  001B4A  65                 	db	101
   122  001B4B  63                 	db	99
   123  001B4C  74                 	db	116
   124  001B4D  20                 	db	32
   125  001B4E  43                 	db	67
   126  001B4F  20                 	db	32
   127  001B50  54                 	db	84
   128  001B51  69                 	db	105
   129  001B52  6D                 	db	109
   130  001B53  65                 	db	101
   131  001B54  20                 	db	32
   132  001B55  68                 	db	104
   133  001B56  68                 	db	104
   134  001B57  6D                 	db	109
   135  001B58  6D                 	db	109
   136  001B59  3A                 	db	58
   137  001B5A  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4312
   140  001B5B  53                 	db	83
   141  001B5C  65                 	db	101
   142  001B5D  74                 	db	116
   143  001B5E  20                 	db	32
   144  001B5F  74                 	db	116
   145  001B60  69                 	db	105
   146  001B61  6D                 	db	109
   147  001B62  65                 	db	101
   148  001B63  20                 	db	32
   149  001B64  68                 	db	104
   150  001B65  68                 	db	104
   151  001B66  6D                 	db	109
   152  001B67  6D                 	db	109
   153  001B68  73                 	db	115
   154  001B69  73                 	db	115
   155  001B6A  3A                 	db	58
   156  001B6B  20                 	db	32
   157  001B6C  20                 	db	32
   158  001B6D  20                 	db	32
   159  001B6E  20                 	db	32
   160  001B6F  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4270:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4270:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTB	set	3969
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTD	set	3971
   197  0000                     _PORTDbits	set	3971
   198  0000                     _RCONbits	set	4048
   199  0000                     _T0CON	set	4053
   200  0000                     _T0CONbits	set	4053
   201  0000                     _TMR0H	set	4055
   202  0000                     _TMR0L	set	4054
   203  0000                     _TRISA	set	3986
   204  0000                     _TRISD	set	3989
   205  00102D  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  001AC2                     __pcinit:
   211                           	opt stack 0
   212  001AC2                     start_initialization:
   213                           	opt stack 0
   214  001AC2                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Initialize objects allocated to BANK0 (84 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  001AC2  0E1C               	movlw	low __pidataBANK0
   220  001AC4  6EF6               	movwf	tblptrl,c
   221  001AC6  0E1B               	movlw	high __pidataBANK0
   222  001AC8  6EF7               	movwf	tblptrh,c
   223  001ACA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  001ACC  6EF8               	movwf	tblptru,c
   225  001ACE  EE00  F060         	lfsr	0,__pdataBANK0
   226  001AD2  EE10 F054          	lfsr	1,84
   227  001AD6                     copy_data0:
   228  001AD6  0009               	tblrd		*+
   229  001AD8  CFF5 FFEE          	movff	tablat,postinc0
   230  001ADC  50E5               	movf	postdec1,w,c
   231  001ADE  50E1               	movf	fsr1l,w,c
   232  001AE0  E1FA               	bnz	copy_data0
   233                           
   234                           ; Initialize objects allocated to COMRAM (21 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236  001AE2  0E90               	movlw	low __pidataCOMRAM
   237  001AE4  6EF6               	movwf	tblptrl,c
   238  001AE6  0E1C               	movlw	high __pidataCOMRAM
   239  001AE8  6EF7               	movwf	tblptrh,c
   240  001AEA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241  001AEC  6EF8               	movwf	tblptru,c
   242  001AEE  EE00  F024         	lfsr	0,__pdataCOMRAM
   243  001AF2  EE10 F015          	lfsr	1,21
   244  001AF6                     copy_data1:
   245  001AF6  0009               	tblrd		*+
   246  001AF8  CFF5 FFEE          	movff	tablat,postinc0
   247  001AFC  50E5               	movf	postdec1,w,c
   248  001AFE  50E1               	movf	fsr1l,w,c
   249  001B00  E1FA               	bnz	copy_data1
   250                           
   251                           ; Clear objects allocated to COMRAM (9 bytes)
   252  001B02  EE00  F039         	lfsr	0,__pbssCOMRAM
   253  001B06  0E09               	movlw	9
   254  001B08                     clear_0:
   255  001B08  6AEE               	clrf	postinc0,c
   256  001B0A  06E8               	decf	wreg,f,c
   257  001B0C  E1FD               	bnz	clear_0
   258  001B0E                     end_of_initialization:
   259                           	opt stack 0
   260  001B0E                     __end_of__initialization:
   261                           	opt stack 0
   262  001B0E  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  001B10  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  001B12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   265  001B14  6EF8               	movwf	tblptru,c
   266  001B16  0100               	movlb	0
   267  001B18  EF72  F009         	goto	_main	;jump to C main() function
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssCOMRAM
   278  000039                     __pbssCOMRAM:
   279                           	opt stack 0
   280  000039                     _hour:
   281                           	opt stack 0
   282  000039                     	ds	1
   283  00003A                     _hourA:
   284                           	opt stack 0
   285  00003A                     	ds	1
   286  00003B                     _hourB:
   287                           	opt stack 0
   288  00003B                     	ds	1
   289  00003C                     _hourC:
   290                           	opt stack 0
   291  00003C                     	ds	1
   292  00003D                     _minute:
   293                           	opt stack 0
   294  00003D                     	ds	1
   295  00003E                     _minuteA:
   296                           	opt stack 0
   297  00003E                     	ds	1
   298  00003F                     _minuteB:
   299                           	opt stack 0
   300  00003F                     	ds	1
   301  000040                     _minuteC:
   302                           	opt stack 0
   303  000040                     	ds	1
   304  000041                     _second:
   305                           	opt stack 0
   306  000041                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  000024                     __pdataCOMRAM:
   318                           	opt stack 0
   319  000024                     version@F4277:
   320                           	opt stack 0
   321  000024                     	ds	21
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	dataBANK0
   332  000060                     __pdataBANK0:
   333                           	opt stack 0
   334  000060                     SetupAlarmTimeA@F4322:
   335                           	opt stack 0
   336  000060                     	ds	21
   337  000075                     SetupAlarmTimeB@F4332:
   338                           	opt stack 0
   339  000075                     	ds	21
   340  00008A                     SetupAlarmTimeC@F4342:
   341                           	opt stack 0
   342  00008A                     	ds	21
   343  00009F                     SetupTime@F4312:
   344                           	opt stack 0
   345  00009F                     	ds	21
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackBANK0
   356  0000B4                     __pcstackBANK0:
   357                           	opt stack 0
   358  0000B4                     getkey@lookup:
   359                           	opt stack 0
   360  0000B4                     version@Version:
   361                           	opt stack 0
   362                           
   363                           ; 21 bytes @ 0x0
   364  0000B4                     	ds	18
   365  0000C6                     getkey@keycode:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x12
   369  0000C6                     	ds	1
   370  0000C7                     SetupTime@Message:
   371                           	opt stack 0
   372  0000C7                     SetupAlarmTimeA@Message:
   373                           	opt stack 0
   374  0000C7                     SetupAlarmTimeB@Message:
   375                           	opt stack 0
   376  0000C7                     SetupAlarmTimeC@Message:
   377                           	opt stack 0
   378                           
   379                           ; 21 bytes @ 0x13
   380  0000C7                     	ds	2
   381  0000C9                     version@outchar:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  0000C9                     	ds	1
   386  0000CA                     version@msgindex:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x16
   390  0000CA                     	ds	18
   391  0000DC                     SetupTime@outchar:
   392                           	opt stack 0
   393  0000DC                     SetupAlarmTimeA@outchar:
   394                           	opt stack 0
   395  0000DC                     SetupAlarmTimeB@outchar:
   396                           	opt stack 0
   397  0000DC                     SetupAlarmTimeC@outchar:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x28
   401  0000DC                     	ds	1
   402  0000DD                     SetupTime@hour10:
   403                           	opt stack 0
   404  0000DD                     SetupAlarmTimeA@hour10:
   405                           	opt stack 0
   406  0000DD                     SetupAlarmTimeB@hour10:
   407                           	opt stack 0
   408  0000DD                     SetupAlarmTimeC@hour10:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x29
   412  0000DD                     	ds	1
   413  0000DE                     SetupTime@hour1:
   414                           	opt stack 0
   415  0000DE                     SetupAlarmTimeA@hour1:
   416                           	opt stack 0
   417  0000DE                     SetupAlarmTimeB@hour1:
   418                           	opt stack 0
   419  0000DE                     SetupAlarmTimeC@hour1:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x2A
   423  0000DE                     	ds	1
   424  0000DF                     SetupTime@minute10:
   425                           	opt stack 0
   426  0000DF                     SetupAlarmTimeA@minute10:
   427                           	opt stack 0
   428  0000DF                     SetupAlarmTimeB@minute10:
   429                           	opt stack 0
   430  0000DF                     SetupAlarmTimeC@minute10:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x2B
   434  0000DF                     	ds	1
   435  0000E0                     SetupTime@minute1:
   436                           	opt stack 0
   437  0000E0                     SetupAlarmTimeA@minute1:
   438                           	opt stack 0
   439  0000E0                     SetupAlarmTimeB@minute1:
   440                           	opt stack 0
   441  0000E0                     SetupAlarmTimeC@minute1:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x2C
   445  0000E0                     	ds	1
   446  0000E1                     SetupTime@second10:
   447                           	opt stack 0
   448  0000E1                     SetupAlarmTimeA@msgindex:
   449                           	opt stack 0
   450  0000E1                     SetupAlarmTimeB@msgindex:
   451                           	opt stack 0
   452  0000E1                     SetupAlarmTimeC@msgindex:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x2D
   456  0000E1                     	ds	1
   457  0000E2                     SetupTime@second1:
   458                           	opt stack 0
   459  0000E2                     SetupAlarmTimeA@ctemp:
   460                           	opt stack 0
   461  0000E2                     SetupAlarmTimeB@ctemp:
   462                           	opt stack 0
   463  0000E2                     SetupAlarmTimeC@ctemp:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2E
   467  0000E2                     	ds	1
   468  0000E3                     SetupTime@msgindex:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x2F
   472  0000E3                     	ds	1
   473  0000E4                     SetupTime@ctemp:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x30
   477  0000E4                     	ds	1
   478  0000E5                     main@AlarmAOff:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x31
   482  0000E5                     	ds	2
   483  0000E7                     main@AlarmBOff:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x33
   487  0000E7                     	ds	2
   488  0000E9                     main@AlarmCOff:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x35
   492  0000E9                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	cstackCOMRAM
   503  000001                     __pcstackCOMRAM:
   504                           	opt stack 0
   505  000001                     ??i2_lcd_strobe:
   506  000001                     ?___awdiv:
   507                           	opt stack 0
   508  000001                     int_2_char@int1:
   509                           	opt stack 0
   510  000001                     ___awdiv@dividend:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000001                     	ds	1
   515  000002                     ??i2_lcd_write_cmd:
   516  000002                     ??i2_lcd_write_data:
   517  000002                     int_2_char@char1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x1
   521  000002                     	ds	1
   522  000003                     i2lcd_write_cmd@cmd:
   523                           	opt stack 0
   524  000003                     i2lcd_write_data@data:
   525                           	opt stack 0
   526  000003                     ___awdiv@divisor:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530  000003                     	ds	1
   531  000004                     i2lcd_write_cmd@temp2:
   532                           	opt stack 0
   533  000004                     i2lcd_write_data@temp1:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x3
   537  000004                     	ds	1
   538  000005                     ___awdiv@counter:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x4
   542  000005                     	ds	1
   543  000006                     ___awdiv@sign:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x5
   547  000006                     	ds	1
   548  000007                     ___awdiv@quotient:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000007                     	ds	2
   553  000009                     ??_ISR_Timer0_Int:
   554                           
   555                           ; 1 bytes @ 0x8
   556  000009                     	ds	14
   557  000017                     ISR_Timer0_Int@hour1:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x16
   561  000017                     	ds	1
   562  000018                     ISR_Timer0_Int@minute1:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x17
   566  000018                     	ds	1
   567  000019                     ISR_Timer0_Int@second1:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x18
   571  000019                     	ds	1
   572  00001A                     ISR_Timer0_Int@hour10:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576  00001A                     	ds	1
   577  00001B                     ISR_Timer0_Int@minute10:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581  00001B                     	ds	1
   582  00001C                     ISR_Timer0_Int@second10:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x1B
   586  00001C                     	ds	1
   587  00001D                     ??_lcd_strobe:
   588  00001D                     char_2_int@char1:
   589                           	opt stack 0
   590  00001D                     delay_ms@i:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x1C
   594  00001D                     	ds	1
   595  00001E                     ??_lcd_write_cmd:
   596  00001E                     ??_lcd_write_data:
   597  00001E                     char_2_int@int1:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x1D
   601  00001E                     	ds	1
   602  00001F                     ??_delay_ms:
   603  00001F                     lcd_write_cmd@cmd:
   604                           	opt stack 0
   605  00001F                     lcd_write_data@data:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x1E
   609  00001F                     	ds	1
   610  000020                     lcd_write_cmd@temp2:
   611                           	opt stack 0
   612  000020                     lcd_write_data@temp1:
   613                           	opt stack 0
   614  000020                     delay_ms@j:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x1F
   618  000020                     	ds	1
   619  000021                     ??_lcd_init:
   620                           
   621                           ; 1 bytes @ 0x20
   622  000021                     	ds	1
   623  000022                     lcd_init@i:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x21
   627  000022                     	ds	2
   628  000024                     tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637                           ; 1 bytes @ 0x23
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 311 in file "Main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  AlarmCOff       2   53[BANK0 ] int 
   648 ;;  AlarmBOff       2   51[BANK0 ] int 
   649 ;;  AlarmAOff       2   49[BANK0 ] int 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         0       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0       6       0       0       0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0
   662 ;;      Totals:         0       6       0       0       0       0       0       0       0
   663 ;;Total ram usage:        6 bytes
   664 ;; Hardware stack levels required when called:    6
   665 ;; This function calls:
   666 ;;		_SetupAlarmTimeA
   667 ;;		_SetupAlarmTimeB
   668 ;;		_SetupAlarmTimeC
   669 ;;		_SetupTime
   670 ;;		_SetupTimerInterruptRegisters
   671 ;;		_lcd_init
   672 ;;		_version
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text0
   679  0012E4                     __ptext0:
   680                           	opt stack 0
   681  0012E4                     _main:
   682                           	opt stack 25
   683                           
   684                           ;Main.c: 313: ADCON1 = 0x0F;
   685                           
   686                           ;incstack = 0
   687  0012E4  0E0F               	movlw	15
   688  0012E6  6EC1               	movwf	4033,c	;volatile
   689                           
   690                           ;Main.c: 314: CMCON = 0x07;
   691  0012E8  0E07               	movlw	7
   692  0012EA  6EB4               	movwf	4020,c	;volatile
   693                           
   694                           ;Main.c: 316: lcd_init();
   695  0012EC  EC7F  F00C         	call	_lcd_init	;wreg free
   696                           
   697                           ;Main.c: 317: TRISA = 0b00000000;
   698  0012F0  0E00               	movlw	0
   699  0012F2  6E92               	movwf	3986,c	;volatile
   700                           
   701                           ;Main.c: 318: int AlarmAOff = 0;
   702  0012F4  0E00               	movlw	0
   703  0012F6  0100               	movlb	0	; () banked
   704  0012F8  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   705  0012FA  0E00               	movlw	0
   706  0012FC  6FE5               	movwf	main@AlarmAOff& (0+255),b
   707                           
   708                           ; BSR set to: 0
   709                           ;Main.c: 319: int AlarmBOff = 0;
   710  0012FE  0E00               	movlw	0
   711  001300  0100               	movlb	0	; () banked
   712  001302  6FE8               	movwf	(main@AlarmBOff+1)& (0+255),b
   713  001304  0E00               	movlw	0
   714  001306  6FE7               	movwf	main@AlarmBOff& (0+255),b
   715                           
   716                           ; BSR set to: 0
   717                           ;Main.c: 320: int AlarmCOff = 0;
   718  001308  0E00               	movlw	0
   719  00130A  0100               	movlb	0	; () banked
   720  00130C  6FEA               	movwf	(main@AlarmCOff+1)& (0+255),b
   721  00130E  0E00               	movlw	0
   722  001310  6FE9               	movwf	main@AlarmCOff& (0+255),b
   723                           
   724                           ; BSR set to: 0
   725                           ;Main.c: 322: version();
   726  001312  ECB8  F00D         	call	_version	;wreg free
   727                           
   728                           ;Main.c: 323: SetupTime();
   729  001316  ECD5  F008         	call	_SetupTime	;wreg free
   730                           
   731                           ;Main.c: 324: SetupAlarmTimeA();
   732  00131A  ECF2  F00A         	call	_SetupAlarmTimeA	;wreg free
   733                           
   734                           ;Main.c: 325: SetupAlarmTimeB();
   735  00131E  EC76  F00A         	call	_SetupAlarmTimeB	;wreg free
   736                           
   737                           ;Main.c: 326: SetupAlarmTimeC();
   738  001322  ECFA  F009         	call	_SetupAlarmTimeC	;wreg free
   739                           
   740                           ;Main.c: 327: SetupTimerInterruptRegisters();
   741  001326  EC3A  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   742                           
   743                           ;Main.c: 330: {
   744                           ;Main.c: 331: while(PORTAbits.RA5 == 1)
   745                           
   746                           ;Main.c: 329: while(1)
   747  00132A  D032               	goto	l2411
   748  00132C                     l2385:
   749                           
   750                           ;Main.c: 332: {
   751                           ;Main.c: 333: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   752  00132C  503A               	movf	_hourA,w,c
   753  00132E  1839               	xorwf	_hour,w,c
   754  001330  A4D8               	btfss	status,2,c
   755  001332  D00C               	goto	l2393
   756  001334  503E               	movf	_minuteA,w,c
   757  001336  183D               	xorwf	_minute,w,c
   758  001338  A4D8               	btfss	status,2,c
   759  00133A  D008               	goto	l2393
   760  00133C  0100               	movlb	0	; () banked
   761  00133E  51E5               	movf	main@AlarmAOff& (0+255),w,b
   762  001340  0100               	movlb	0	; () banked
   763  001342  11E6               	iorwf	(main@AlarmAOff+1)& (0+255),w,b
   764  001344  A4D8               	btfss	status,2,c
   765  001346  D002               	goto	l2393
   766                           
   767                           ; BSR set to: 0
   768                           ;Main.c: 334: {
   769                           ;Main.c: 335: PORTA = 0b00000011;
   770  001348  0E03               	movlw	3
   771  00134A  D021               	goto	L3
   772  00134C                     l2393:
   773                           
   774                           ;Main.c: 337: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   775  00134C  503B               	movf	_hourB,w,c
   776  00134E  1839               	xorwf	_hour,w,c
   777  001350  A4D8               	btfss	status,2,c
   778  001352  D00C               	goto	l2401
   779  001354  503F               	movf	_minuteB,w,c
   780  001356  183D               	xorwf	_minute,w,c
   781  001358  A4D8               	btfss	status,2,c
   782  00135A  D008               	goto	l2401
   783  00135C  0100               	movlb	0	; () banked
   784  00135E  51E7               	movf	main@AlarmBOff& (0+255),w,b
   785  001360  0100               	movlb	0	; () banked
   786  001362  11E8               	iorwf	(main@AlarmBOff+1)& (0+255),w,b
   787  001364  A4D8               	btfss	status,2,c
   788  001366  D002               	goto	l2401
   789                           
   790                           ; BSR set to: 0
   791                           ;Main.c: 338: {
   792                           ;Main.c: 339: PORTA = 0b00000101;
   793  001368  0E05               	movlw	5
   794  00136A  D011               	goto	L3
   795  00136C                     l2401:
   796                           
   797                           ;Main.c: 341: else if(hour==hourC && minute==minuteC && AlarmCOff == 0)
   798  00136C  503C               	movf	_hourC,w,c
   799  00136E  1839               	xorwf	_hour,w,c
   800  001370  A4D8               	btfss	status,2,c
   801  001372  D00C               	goto	l2409
   802  001374  5040               	movf	_minuteC,w,c
   803  001376  183D               	xorwf	_minute,w,c
   804  001378  A4D8               	btfss	status,2,c
   805  00137A  D008               	goto	l2409
   806  00137C  0100               	movlb	0	; () banked
   807  00137E  51E9               	movf	main@AlarmCOff& (0+255),w,b
   808  001380  0100               	movlb	0	; () banked
   809  001382  11EA               	iorwf	(main@AlarmCOff+1)& (0+255),w,b
   810  001384  A4D8               	btfss	status,2,c
   811  001386  D002               	goto	l2409
   812                           
   813                           ; BSR set to: 0
   814                           ;Main.c: 342: {
   815                           ;Main.c: 343: PORTA = 0b00001001;
   816  001388  0E09               	movlw	9
   817  00138A  D001               	goto	L3
   818  00138C                     l2409:
   819                           
   820                           ;Main.c: 345: else
   821                           ;Main.c: 346: {
   822                           ;Main.c: 347: PORTA = 0b00000000;
   823  00138C  0E00               	movlw	0
   824  00138E                     L3:
   825  00138E  6E80               	movwf	3968,c	;volatile
   826  001390                     l2411:
   827  001390  AA80               	btfss	3968,5,c	;volatile
   828  001392  D02D               	goto	l2433
   829  001394  D7CB               	goto	l2385
   830  001396                     l2413:
   831                           
   832                           ;Main.c: 351: {
   833                           ;Main.c: 352: if(hour==hourA && minute==minuteA)
   834  001396  503A               	movf	_hourA,w,c
   835  001398  1839               	xorwf	_hour,w,c
   836  00139A  A4D8               	btfss	status,2,c
   837  00139C  D00A               	goto	l2419
   838  00139E  503E               	movf	_minuteA,w,c
   839  0013A0  183D               	xorwf	_minute,w,c
   840  0013A2  A4D8               	btfss	status,2,c
   841  0013A4  D006               	goto	l2419
   842                           
   843                           ;Main.c: 353: {
   844                           ;Main.c: 354: AlarmAOff = 1;
   845  0013A6  0E00               	movlw	0
   846  0013A8  0100               	movlb	0	; () banked
   847  0013AA  6FE6               	movwf	(main@AlarmAOff+1)& (0+255),b
   848  0013AC  0E01               	movlw	1
   849  0013AE  6FE5               	movwf	main@AlarmAOff& (0+255),b
   850                           
   851                           ;Main.c: 355: }
   852  0013B0  D01E               	goto	l2433
   853  0013B2                     l2419:
   854                           
   855                           ;Main.c: 356: else if(hour==hourB && minute==minuteB)
   856  0013B2  503B               	movf	_hourB,w,c
   857  0013B4  1839               	xorwf	_hour,w,c
   858  0013B6  A4D8               	btfss	status,2,c
   859  0013B8  D00A               	goto	l2425
   860  0013BA  503F               	movf	_minuteB,w,c
   861  0013BC  183D               	xorwf	_minute,w,c
   862  0013BE  A4D8               	btfss	status,2,c
   863  0013C0  D006               	goto	l2425
   864                           
   865                           ;Main.c: 357: {
   866                           ;Main.c: 358: AlarmBOff = 1;
   867  0013C2  0E00               	movlw	0
   868  0013C4  0100               	movlb	0	; () banked
   869  0013C6  6FE8               	movwf	(main@AlarmBOff+1)& (0+255),b
   870  0013C8  0E01               	movlw	1
   871  0013CA  6FE7               	movwf	main@AlarmBOff& (0+255),b
   872                           
   873                           ;Main.c: 359: }
   874  0013CC  D010               	goto	l2433
   875  0013CE                     l2425:
   876                           
   877                           ;Main.c: 360: else if(hour==hourC && minute==minuteC)
   878  0013CE  503C               	movf	_hourC,w,c
   879  0013D0  1839               	xorwf	_hour,w,c
   880  0013D2  A4D8               	btfss	status,2,c
   881  0013D4  D00A               	goto	l2431
   882  0013D6  5040               	movf	_minuteC,w,c
   883  0013D8  183D               	xorwf	_minute,w,c
   884  0013DA  A4D8               	btfss	status,2,c
   885  0013DC  D006               	goto	l2431
   886                           
   887                           ;Main.c: 361: {
   888                           ;Main.c: 362: AlarmCOff = 1;
   889  0013DE  0E00               	movlw	0
   890  0013E0  0100               	movlb	0	; () banked
   891  0013E2  6FEA               	movwf	(main@AlarmCOff+1)& (0+255),b
   892  0013E4  0E01               	movlw	1
   893  0013E6  6FE9               	movwf	main@AlarmCOff& (0+255),b
   894                           
   895                           ;Main.c: 363: }
   896  0013E8  D002               	goto	l2433
   897  0013EA                     l2431:
   898                           
   899                           ;Main.c: 364: else
   900                           ;Main.c: 365: {
   901                           ;Main.c: 366: PORTA = 0b00000000;
   902  0013EA  0E00               	movlw	0
   903  0013EC  6E80               	movwf	3968,c	;volatile
   904  0013EE                     l2433:
   905  0013EE  BA80               	btfsc	3968,5,c	;volatile
   906  0013F0  D7CF               	goto	l2411
   907  0013F2  D7D1               	goto	l2413
   908  0013F4                     __end_of_main:
   909                           	opt stack 0
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _version *****************
   921 ;; Defined at:
   922 ;;		line 12 in file "version.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  Version        21    0[BANK0 ] unsigned char [21]
   927 ;;  msgindex        1   22[BANK0 ] unsigned char 
   928 ;;  outchar         1   21[BANK0 ] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2   73[None  ] int 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       0       0       0       0       0       0       0       0
   939 ;;      Locals:         0      23       0       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0
   941 ;;      Totals:         0      23       0       0       0       0       0       0       0
   942 ;;Total ram usage:       23 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    5
   945 ;; This function calls:
   946 ;;		_lcd_write_cmd
   947 ;;		_lcd_write_data
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text1
   954  001B70                     __ptext1:
   955                           	opt stack 0
   956  001B70                     _version:
   957                           	opt stack 25
   958                           
   959                           ;version.c: 14: unsigned char msgindex, outchar;
   960                           ;version.c: 15: char Version[ ] = "ETT Version 1.2     ";
   961                           
   962                           ;incstack = 0
   963  001B70  EE20  F024         	lfsr	2,version@F4277
   964  001B74  EE10  F0B4         	lfsr	1,version@Version
   965  001B78  0E14               	movlw	20
   966  001B7A                     u1221:
   967  001B7A  CFDB FFE3          	movff	plusw2,plusw1
   968  001B7E  06E8               	decf	wreg,f,c
   969  001B80  E2FC               	bc	u1221
   970                           
   971                           ;version.c: 17: lcd_write_cmd(0x80);
   972  001B82  0E80               	movlw	128
   973  001B84  ECF1  F00C         	call	_lcd_write_cmd
   974                           
   975                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   976  001B88  0E00               	movlw	0
   977  001B8A  0100               	movlb	0	; () banked
   978  001B8C  6FCA               	movwf	version@msgindex& (0+255),b
   979  001B8E                     l2349:
   980                           
   981                           ; BSR set to: 0
   982  001B8E  0E13               	movlw	19
   983  001B90  0100               	movlb	0	; () banked
   984  001B92  65CA               	cpfsgt	version@msgindex& (0+255),b
   985  001B94  D001               	goto	l2353
   986  001B96  0012               	return	
   987  001B98                     l2353:
   988                           
   989                           ; BSR set to: 0
   990                           ;version.c: 20: {
   991                           ;version.c: 21: outchar = Version[msgindex];
   992  001B98  0100               	movlb	0	; () banked
   993  001B9A  51CA               	movf	version@msgindex& (0+255),w,b
   994  001B9C  0D01               	mullw	1
   995  001B9E  0EB4               	movlw	low version@Version
   996  001BA0  24F3               	addwf	prodl,w,c
   997  001BA2  6ED9               	movwf	fsr2l,c
   998  001BA4  0E00               	movlw	high version@Version
   999  001BA6  20F4               	addwfc	prodh,w,c
  1000  001BA8  6EDA               	movwf	fsr2h,c
  1001  001BAA  50DF               	movf	indf2,w,c
  1002  001BAC  0100               	movlb	0	; () banked
  1003  001BAE  6FC9               	movwf	version@outchar& (0+255),b
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;version.c: 22: lcd_write_data(outchar);
  1007  001BB0  0100               	movlb	0	; () banked
  1008  001BB2  51C9               	movf	version@outchar& (0+255),w,b
  1009  001BB4  EC6E  F00B         	call	_lcd_write_data
  1010  001BB8  0100               	movlb	0	; () banked
  1011  001BBA  2BCA               	incf	version@msgindex& (0+255),f,b
  1012  001BBC  D7E8               	goto	l2349
  1013  001BBE                     __end_of_version:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           prodh	equ	0xFF4
  1020                           prodl	equ	0xFF3
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           plusw1	equ	0xFE3
  1025                           fsr1l	equ	0xFE1
  1026                           indf2	equ	0xFDF
  1027                           plusw2	equ	0xFDB
  1028                           fsr2h	equ	0xFDA
  1029                           fsr2l	equ	0xFD9
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _lcd_init *****************
  1033 ;; Defined at:
  1034 ;;		line 83 in file "lcd_utilities.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  i               2   33[COMRAM] int 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1051 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:        3 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    5
  1055 ;; This function calls:
  1056 ;;		_lcd_write_cmd
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text2
  1063  0018FE                     __ptext2:
  1064                           	opt stack 0
  1065  0018FE                     _lcd_init:
  1066                           	opt stack 25
  1067                           
  1068                           ;lcd_utilities.c: 85: int i;
  1069                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;incstack = 0
  1073  0018FE  0E00               	movlw	0
  1074  001900  6E95               	movwf	3989,c	;volatile
  1075                           
  1076                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1077  001902  0E00               	movlw	0
  1078  001904  6E83               	movwf	3971,c	;volatile
  1079                           
  1080                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1081  001906  9883               	bcf	3971,4,c	;volatile
  1082                           
  1083                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1084  001908  9C83               	bcf	3971,6,c	;volatile
  1085                           
  1086                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1087  00190A  9A83               	bcf	3971,5,c	;volatile
  1088                           
  1089                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1090  00190C  0E00               	movlw	0
  1091  00190E  6E23               	movwf	lcd_init@i+1,c
  1092  001910  0E00               	movlw	0
  1093  001912  6E22               	movwf	lcd_init@i,c
  1094  001914                     l2141:
  1095  001914  BE23               	btfsc	lcd_init@i+1,7,c
  1096  001916  D006               	goto	l2145
  1097  001918  5023               	movf	lcd_init@i+1,w,c
  1098  00191A  E10F               	bnz	l2149
  1099  00191C  0E64               	movlw	100
  1100  00191E  5C22               	subwf	lcd_init@i,w,c
  1101  001920  B0D8               	btfsc	status,0,c
  1102  001922  D00B               	goto	l2149
  1103  001924                     l2145:
  1104                           
  1105                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1106  001924  0E9C               	movlw	156
  1107  001926  6E21               	movwf	??_lcd_init& (0+255),c
  1108  001928  0ED7               	movlw	215
  1109  00192A                     u1427:
  1110  00192A  2EE8               	decfsz	wreg,f,c
  1111  00192C  D7FE               	goto	u1427
  1112  00192E  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1113  001930  D7FC               	goto	u1427
  1114  001932  F000               	nop	
  1115  001934  4A22               	infsnz	lcd_init@i,f,c
  1116  001936  2A23               	incf	lcd_init@i+1,f,c
  1117  001938  D7ED               	goto	l2141
  1118  00193A                     l2149:
  1119                           
  1120                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1121  00193A  0E33               	movlw	51
  1122  00193C  ECF1  F00C         	call	_lcd_write_cmd
  1123                           
  1124                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1125  001940  0E32               	movlw	50
  1126  001942  ECF1  F00C         	call	_lcd_write_cmd
  1127                           
  1128                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1129  001946  0E28               	movlw	40
  1130  001948  ECF1  F00C         	call	_lcd_write_cmd
  1131                           
  1132                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1133  00194C  0E0E               	movlw	14
  1134  00194E  ECF1  F00C         	call	_lcd_write_cmd
  1135                           
  1136                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1137  001952  0E06               	movlw	6
  1138  001954  ECF1  F00C         	call	_lcd_write_cmd
  1139                           
  1140                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1141  001958  0E01               	movlw	1
  1142  00195A  ECF1  F00C         	call	_lcd_write_cmd
  1143                           
  1144                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1145  00195E  0E9C               	movlw	156
  1146  001960  6E21               	movwf	??_lcd_init& (0+255),c
  1147  001962  0ED7               	movlw	215
  1148  001964                     u1437:
  1149  001964  2EE8               	decfsz	wreg,f,c
  1150  001966  D7FE               	goto	u1437
  1151  001968  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1152  00196A  D7FC               	goto	u1437
  1153  00196C  F000               	nop	
  1154  00196E  0012               	return		;funcret
  1155  001970                     __end_of_lcd_init:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           prodh	equ	0xFF4
  1162                           prodl	equ	0xFF3
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           postdec1	equ	0xFE5
  1166                           plusw1	equ	0xFE3
  1167                           fsr1l	equ	0xFE1
  1168                           indf2	equ	0xFDF
  1169                           plusw2	equ	0xFDB
  1170                           fsr2h	equ	0xFDA
  1171                           fsr2l	equ	0xFD9
  1172                           status	equ	0xFD8
  1173                           
  1174 ;; *************** function _SetupTimerInterruptRegisters *****************
  1175 ;; Defined at:
  1176 ;;		line 275 in file "Main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    3
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text3
  1205  001C74                     __ptext3:
  1206                           	opt stack 0
  1207  001C74                     _SetupTimerInterruptRegisters:
  1208                           	opt stack 27
  1209                           
  1210                           ;Main.c: 277: RCONbits.IPEN =1;
  1211                           
  1212                           ;incstack = 0
  1213  001C74  8ED0               	bsf	4048,7,c	;volatile
  1214                           
  1215                           ;Main.c: 281: INTCONbits.GIEH =1;
  1216  001C76  8EF2               	bsf	intcon,7,c	;volatile
  1217                           
  1218                           ;Main.c: 286: T0CON = 0b00000111;
  1219  001C78  0E07               	movlw	7
  1220  001C7A  6ED5               	movwf	4053,c	;volatile
  1221                           
  1222                           ;Main.c: 294: INTCON2 = 0b10000100;
  1223  001C7C  0E84               	movlw	132
  1224  001C7E  6EF1               	movwf	intcon2,c	;volatile
  1225                           
  1226                           ;Main.c: 299: TMR0H = 0x48;
  1227  001C80  0E48               	movlw	72
  1228  001C82  6ED7               	movwf	4055,c	;volatile
  1229                           
  1230                           ;Main.c: 300: TMR0L = 0xE5;
  1231  001C84  0EE5               	movlw	229
  1232  001C86  6ED6               	movwf	4054,c	;volatile
  1233                           
  1234                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1235  001C88  8ED5               	bsf	4053,7,c	;volatile
  1236                           
  1237                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1238  001C8A  8AF2               	bsf	intcon,5,c	;volatile
  1239                           
  1240                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1241  001C8C  94F2               	bcf	intcon,2,c	;volatile
  1242  001C8E  0012               	return		;funcret
  1243  001C90                     __end_of_SetupTimerInterruptRegisters:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           intcon2	equ	0xFF1
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           plusw1	equ	0xFE3
  1257                           fsr1l	equ	0xFE1
  1258                           indf2	equ	0xFDF
  1259                           plusw2	equ	0xFDB
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function _SetupTime *****************
  1265 ;; Defined at:
  1266 ;;		line 107 in file "Main.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1271 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1272 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1273 ;;  second1         1   46[BANK0 ] unsigned char 
  1274 ;;  second10        1   45[BANK0 ] unsigned char 
  1275 ;;  minute1         1   44[BANK0 ] unsigned char 
  1276 ;;  minute10        1   43[BANK0 ] unsigned char 
  1277 ;;  hour1           1   42[BANK0 ] unsigned char 
  1278 ;;  hour10          1   41[BANK0 ] unsigned char 
  1279 ;;  outchar         1   40[BANK0 ] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1293 ;;Total ram usage:       30 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		_char_2_int
  1298 ;;		_delay_ms
  1299 ;;		_getkey
  1300 ;;		_lcd_write_cmd
  1301 ;;		_lcd_write_data
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text4
  1308  0011AA                     __ptext4:
  1309                           	opt stack 0
  1310  0011AA                     _SetupTime:
  1311                           	opt stack 25
  1312                           
  1313                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1314                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1315                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1316                           
  1317                           ;incstack = 0
  1318  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4312
  1319  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1320  0011B2  0E14               	movlw	20
  1321  0011B4                     u1101:
  1322  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1323  0011B8  06E8               	decf	wreg,f,c
  1324  0011BA  E2FC               	bc	u1101
  1325                           
  1326                           ;Main.c: 113: lcd_write_cmd(0x80);
  1327  0011BC  0E80               	movlw	128
  1328  0011BE  ECF1  F00C         	call	_lcd_write_cmd
  1329                           
  1330                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1331  0011C2  0E00               	movlw	0
  1332  0011C4  0100               	movlb	0	; () banked
  1333  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1334  0011C8                     l2159:
  1335                           
  1336                           ; BSR set to: 0
  1337  0011C8  0E13               	movlw	19
  1338  0011CA  0100               	movlb	0	; () banked
  1339  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1340  0011CE  D001               	goto	l2163
  1341  0011D0  D013               	goto	l2171
  1342  0011D2                     l2163:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;Main.c: 116: {
  1346                           ;Main.c: 117: outchar = Message[msgindex];
  1347  0011D2  0100               	movlb	0	; () banked
  1348  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1349  0011D6  0D01               	mullw	1
  1350  0011D8  0EC7               	movlw	low SetupTime@Message
  1351  0011DA  24F3               	addwf	prodl,w,c
  1352  0011DC  6ED9               	movwf	fsr2l,c
  1353  0011DE  0E00               	movlw	high SetupTime@Message
  1354  0011E0  20F4               	addwfc	prodh,w,c
  1355  0011E2  6EDA               	movwf	fsr2h,c
  1356  0011E4  50DF               	movf	indf2,w,c
  1357  0011E6  0100               	movlb	0	; () banked
  1358  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;Main.c: 118: lcd_write_data(outchar);
  1362  0011EA  0100               	movlb	0	; () banked
  1363  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1364  0011EE  EC6E  F00B         	call	_lcd_write_data
  1365  0011F2  0100               	movlb	0	; () banked
  1366  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1367  0011F6  D7E8               	goto	l2159
  1368  0011F8                     l2171:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;Main.c: 119: }
  1372                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1373  0011F8  0EC0               	movlw	192
  1374  0011FA  ECF1  F00C         	call	_lcd_write_cmd
  1375                           
  1376                           ;Main.c: 123: ctemp=getkey();
  1377  0011FE  ECDF  F00D         	call	_getkey	;wreg free
  1378  001202  0100               	movlb	0	; () banked
  1379  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Main.c: 124: lcd_write_data(ctemp);
  1383  001206  0100               	movlb	0	; () banked
  1384  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1385  00120A  EC6E  F00B         	call	_lcd_write_data
  1386                           
  1387                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1388  00120E  0100               	movlb	0	; () banked
  1389  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1390  001212  ECB8  F00C         	call	_char_2_int
  1391  001216  0100               	movlb	0	; () banked
  1392  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;Main.c: 127: ctemp=getkey();
  1396  00121A  ECDF  F00D         	call	_getkey	;wreg free
  1397  00121E  0100               	movlb	0	; () banked
  1398  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1399                           
  1400                           ;Main.c: 128: lcd_write_data(ctemp);
  1401  001222  0100               	movlb	0	; () banked
  1402  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1403  001226  EC6E  F00B         	call	_lcd_write_data
  1404                           
  1405                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1406  00122A  0100               	movlb	0	; () banked
  1407  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1408  00122E  ECB8  F00C         	call	_char_2_int
  1409  001232  0100               	movlb	0	; () banked
  1410  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;Main.c: 131: ctemp=getkey();
  1414  001236  ECDF  F00D         	call	_getkey	;wreg free
  1415  00123A  0100               	movlb	0	; () banked
  1416  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;Main.c: 132: lcd_write_data(ctemp);
  1420  00123E  0100               	movlb	0	; () banked
  1421  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1422  001242  EC6E  F00B         	call	_lcd_write_data
  1423                           
  1424                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1425  001246  0100               	movlb	0	; () banked
  1426  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1427  00124A  ECB8  F00C         	call	_char_2_int
  1428  00124E  0100               	movlb	0	; () banked
  1429  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;Main.c: 135: ctemp=getkey();
  1433  001252  ECDF  F00D         	call	_getkey	;wreg free
  1434  001256  0100               	movlb	0	; () banked
  1435  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1436                           
  1437                           ;Main.c: 136: lcd_write_data(ctemp);
  1438  00125A  0100               	movlb	0	; () banked
  1439  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1440  00125E  EC6E  F00B         	call	_lcd_write_data
  1441                           
  1442                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1443  001262  0100               	movlb	0	; () banked
  1444  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1445  001266  ECB8  F00C         	call	_char_2_int
  1446  00126A  0100               	movlb	0	; () banked
  1447  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;Main.c: 139: ctemp=getkey();
  1451  00126E  ECDF  F00D         	call	_getkey	;wreg free
  1452  001272  0100               	movlb	0	; () banked
  1453  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;Main.c: 140: lcd_write_data(ctemp);
  1457  001276  0100               	movlb	0	; () banked
  1458  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1459  00127A  EC6E  F00B         	call	_lcd_write_data
  1460                           
  1461                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1462  00127E  0100               	movlb	0	; () banked
  1463  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1464  001282  ECB8  F00C         	call	_char_2_int
  1465  001286  0100               	movlb	0	; () banked
  1466  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;Main.c: 143: ctemp=getkey();
  1470  00128A  ECDF  F00D         	call	_getkey	;wreg free
  1471  00128E  0100               	movlb	0	; () banked
  1472  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1473                           
  1474                           ;Main.c: 144: lcd_write_data(ctemp);
  1475  001292  0100               	movlb	0	; () banked
  1476  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1477  001296  EC6E  F00B         	call	_lcd_write_data
  1478                           
  1479                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1480  00129A  0100               	movlb	0	; () banked
  1481  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1482  00129E  ECB8  F00C         	call	_char_2_int
  1483  0012A2  0100               	movlb	0	; () banked
  1484  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1488  0012A6  0100               	movlb	0	; () banked
  1489  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1490  0012AA  0D0A               	mullw	10
  1491  0012AC  50F3               	movf	prodl,w,c
  1492  0012AE  0100               	movlb	0	; () banked
  1493  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1494  0012B2  6E39               	movwf	_hour,c
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1498  0012B4  0100               	movlb	0	; () banked
  1499  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1500  0012B8  0D0A               	mullw	10
  1501  0012BA  50F3               	movf	prodl,w,c
  1502  0012BC  0100               	movlb	0	; () banked
  1503  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1504  0012C0  6E3D               	movwf	_minute,c
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Main.c: 149: second = second10 * 10 + second1;
  1508  0012C2  0100               	movlb	0	; () banked
  1509  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1510  0012C6  0D0A               	mullw	10
  1511  0012C8  50F3               	movf	prodl,w,c
  1512  0012CA  0100               	movlb	0	; () banked
  1513  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1514  0012CE  6E41               	movwf	_second,c
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;Main.c: 151: delay_ms(500);
  1518  0012D0  0E01               	movlw	1
  1519  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1520  0012D4  0EF4               	movlw	244
  1521  0012D6  6E1D               	movwf	delay_ms@i,c
  1522  0012D8  ECFE  F00D         	call	_delay_ms	;wreg free
  1523                           
  1524                           ;Main.c: 152: lcd_write_cmd(0x01);
  1525  0012DC  0E01               	movlw	1
  1526  0012DE  ECF1  F00C         	call	_lcd_write_cmd
  1527  0012E2  0012               	return		;funcret
  1528  0012E4                     __end_of_SetupTime:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           intcon	equ	0xFF2
  1537                           intcon2	equ	0xFF1
  1538                           postinc0	equ	0xFEE
  1539                           wreg	equ	0xFE8
  1540                           postdec1	equ	0xFE5
  1541                           plusw1	equ	0xFE3
  1542                           fsr1l	equ	0xFE1
  1543                           indf2	equ	0xFDF
  1544                           plusw2	equ	0xFDB
  1545                           fsr2h	equ	0xFDA
  1546                           fsr2l	equ	0xFD9
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _SetupAlarmTimeC *****************
  1550 ;; Defined at:
  1551 ;;		line 235 in file "Main.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1556 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1557 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1558 ;;  minute1         1   44[BANK0 ] unsigned char 
  1559 ;;  minute10        1   43[BANK0 ] unsigned char 
  1560 ;;  hour1           1   42[BANK0 ] unsigned char 
  1561 ;;  hour10          1   41[BANK0 ] unsigned char 
  1562 ;;  outchar         1   40[BANK0 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0
  1573 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1575 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1576 ;;Total ram usage:       28 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    5
  1579 ;; This function calls:
  1580 ;;		_char_2_int
  1581 ;;		_delay_ms
  1582 ;;		_getkey
  1583 ;;		_lcd_write_cmd
  1584 ;;		_lcd_write_data
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text5
  1591  0013F4                     __ptext5:
  1592                           	opt stack 0
  1593  0013F4                     _SetupAlarmTimeC:
  1594                           	opt stack 25
  1595                           
  1596                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1597                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1598                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1599                           
  1600                           ;incstack = 0
  1601  0013F4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4342
  1602  0013F8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1603  0013FC  0E14               	movlw	20
  1604  0013FE                     u1191:
  1605  0013FE  CFDB FFE3          	movff	plusw2,plusw1
  1606  001402  06E8               	decf	wreg,f,c
  1607  001404  E2FC               	bc	u1191
  1608                           
  1609                           ;Main.c: 241: PORTA = 0b00001000;
  1610  001406  0E08               	movlw	8
  1611  001408  6E80               	movwf	3968,c	;volatile
  1612                           
  1613                           ;Main.c: 243: lcd_write_cmd(0x80);
  1614  00140A  0E80               	movlw	128
  1615  00140C  ECF1  F00C         	call	_lcd_write_cmd
  1616                           
  1617                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1618  001410  0E00               	movlw	0
  1619  001412  0100               	movlb	0	; () banked
  1620  001414  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1621  001416                     l2299:
  1622                           
  1623                           ; BSR set to: 0
  1624  001416  0E13               	movlw	19
  1625  001418  0100               	movlb	0	; () banked
  1626  00141A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1627  00141C  D001               	goto	l2303
  1628  00141E  D013               	goto	l2311
  1629  001420                     l2303:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;Main.c: 246: {
  1633                           ;Main.c: 247: outchar = Message[msgindex];
  1634  001420  0100               	movlb	0	; () banked
  1635  001422  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1636  001424  0D01               	mullw	1
  1637  001426  0EC7               	movlw	low SetupAlarmTimeC@Message
  1638  001428  24F3               	addwf	prodl,w,c
  1639  00142A  6ED9               	movwf	fsr2l,c
  1640  00142C  0E00               	movlw	high SetupAlarmTimeC@Message
  1641  00142E  20F4               	addwfc	prodh,w,c
  1642  001430  6EDA               	movwf	fsr2h,c
  1643  001432  50DF               	movf	indf2,w,c
  1644  001434  0100               	movlb	0	; () banked
  1645  001436  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;Main.c: 248: lcd_write_data(outchar);
  1649  001438  0100               	movlb	0	; () banked
  1650  00143A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1651  00143C  EC6E  F00B         	call	_lcd_write_data
  1652  001440  0100               	movlb	0	; () banked
  1653  001442  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1654  001444  D7E8               	goto	l2299
  1655  001446                     l2311:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;Main.c: 249: }
  1659                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1660  001446  0EC0               	movlw	192
  1661  001448  ECF1  F00C         	call	_lcd_write_cmd
  1662                           
  1663                           ;Main.c: 253: ctemp=getkey();
  1664  00144C  ECDF  F00D         	call	_getkey	;wreg free
  1665  001450  0100               	movlb	0	; () banked
  1666  001452  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;Main.c: 254: lcd_write_data(ctemp);
  1670  001454  0100               	movlb	0	; () banked
  1671  001456  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1672  001458  EC6E  F00B         	call	_lcd_write_data
  1673                           
  1674                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1675  00145C  0100               	movlb	0	; () banked
  1676  00145E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1677  001460  ECB8  F00C         	call	_char_2_int
  1678  001464  0100               	movlb	0	; () banked
  1679  001466  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;Main.c: 257: ctemp=getkey();
  1683  001468  ECDF  F00D         	call	_getkey	;wreg free
  1684  00146C  0100               	movlb	0	; () banked
  1685  00146E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1686                           
  1687                           ;Main.c: 258: lcd_write_data(ctemp);
  1688  001470  0100               	movlb	0	; () banked
  1689  001472  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1690  001474  EC6E  F00B         	call	_lcd_write_data
  1691                           
  1692                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1693  001478  0100               	movlb	0	; () banked
  1694  00147A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1695  00147C  ECB8  F00C         	call	_char_2_int
  1696  001480  0100               	movlb	0	; () banked
  1697  001482  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;Main.c: 261: ctemp=getkey();
  1701  001484  ECDF  F00D         	call	_getkey	;wreg free
  1702  001488  0100               	movlb	0	; () banked
  1703  00148A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;Main.c: 262: lcd_write_data(ctemp);
  1707  00148C  0100               	movlb	0	; () banked
  1708  00148E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1709  001490  EC6E  F00B         	call	_lcd_write_data
  1710                           
  1711                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1712  001494  0100               	movlb	0	; () banked
  1713  001496  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1714  001498  ECB8  F00C         	call	_char_2_int
  1715  00149C  0100               	movlb	0	; () banked
  1716  00149E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Main.c: 265: ctemp=getkey();
  1720  0014A0  ECDF  F00D         	call	_getkey	;wreg free
  1721  0014A4  0100               	movlb	0	; () banked
  1722  0014A6  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1723                           
  1724                           ;Main.c: 266: lcd_write_data(ctemp);
  1725  0014A8  0100               	movlb	0	; () banked
  1726  0014AA  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1727  0014AC  EC6E  F00B         	call	_lcd_write_data
  1728                           
  1729                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1730  0014B0  0100               	movlb	0	; () banked
  1731  0014B2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1732  0014B4  ECB8  F00C         	call	_char_2_int
  1733  0014B8  0100               	movlb	0	; () banked
  1734  0014BA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1738  0014BC  0100               	movlb	0	; () banked
  1739  0014BE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1740  0014C0  0D0A               	mullw	10
  1741  0014C2  50F3               	movf	prodl,w,c
  1742  0014C4  0100               	movlb	0	; () banked
  1743  0014C6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1744  0014C8  6E3C               	movwf	_hourC,c
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1748  0014CA  0100               	movlb	0	; () banked
  1749  0014CC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1750  0014CE  0D0A               	mullw	10
  1751  0014D0  50F3               	movf	prodl,w,c
  1752  0014D2  0100               	movlb	0	; () banked
  1753  0014D4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1754  0014D6  6E40               	movwf	_minuteC,c
  1755                           
  1756                           ;Main.c: 272: delay_ms(500);
  1757  0014D8  0E01               	movlw	1
  1758  0014DA  6E1E               	movwf	delay_ms@i+1,c
  1759  0014DC  0EF4               	movlw	244
  1760  0014DE  6E1D               	movwf	delay_ms@i,c
  1761  0014E0  ECFE  F00D         	call	_delay_ms	;wreg free
  1762                           
  1763                           ;Main.c: 273: lcd_write_cmd(0x01);
  1764  0014E4  0E01               	movlw	1
  1765  0014E6  ECF1  F00C         	call	_lcd_write_cmd
  1766  0014EA  0012               	return		;funcret
  1767  0014EC                     __end_of_SetupAlarmTimeC:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           intcon2	equ	0xFF1
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           plusw1	equ	0xFE3
  1781                           fsr1l	equ	0xFE1
  1782                           indf2	equ	0xFDF
  1783                           plusw2	equ	0xFDB
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _SetupAlarmTimeB *****************
  1789 ;; Defined at:
  1790 ;;		line 195 in file "Main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1795 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1796 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1797 ;;  minute1         1   44[BANK0 ] unsigned char 
  1798 ;;  minute10        1   43[BANK0 ] unsigned char 
  1799 ;;  hour1           1   42[BANK0 ] unsigned char 
  1800 ;;  hour10          1   41[BANK0 ] unsigned char 
  1801 ;;  outchar         1   40[BANK0 ] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1815 ;;Total ram usage:       28 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    5
  1818 ;; This function calls:
  1819 ;;		_char_2_int
  1820 ;;		_delay_ms
  1821 ;;		_getkey
  1822 ;;		_lcd_write_cmd
  1823 ;;		_lcd_write_data
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text6
  1830  0014EC                     __ptext6:
  1831                           	opt stack 0
  1832  0014EC                     _SetupAlarmTimeB:
  1833                           	opt stack 25
  1834                           
  1835                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1836                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1837                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1838                           
  1839                           ;incstack = 0
  1840  0014EC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4332
  1841  0014F0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1842  0014F4  0E14               	movlw	20
  1843  0014F6                     u1161:
  1844  0014F6  CFDB FFE3          	movff	plusw2,plusw1
  1845  0014FA  06E8               	decf	wreg,f,c
  1846  0014FC  E2FC               	bc	u1161
  1847                           
  1848                           ;Main.c: 201: PORTA = 0b00000100;
  1849  0014FE  0E04               	movlw	4
  1850  001500  6E80               	movwf	3968,c	;volatile
  1851                           
  1852                           ;Main.c: 203: lcd_write_cmd(0x80);
  1853  001502  0E80               	movlw	128
  1854  001504  ECF1  F00C         	call	_lcd_write_cmd
  1855                           
  1856                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1857  001508  0E00               	movlw	0
  1858  00150A  0100               	movlb	0	; () banked
  1859  00150C  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1860  00150E                     l2257:
  1861                           
  1862                           ; BSR set to: 0
  1863  00150E  0E13               	movlw	19
  1864  001510  0100               	movlb	0	; () banked
  1865  001512  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1866  001514  D001               	goto	l2261
  1867  001516  D013               	goto	l2269
  1868  001518                     l2261:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;Main.c: 206: {
  1872                           ;Main.c: 207: outchar = Message[msgindex];
  1873  001518  0100               	movlb	0	; () banked
  1874  00151A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1875  00151C  0D01               	mullw	1
  1876  00151E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1877  001520  24F3               	addwf	prodl,w,c
  1878  001522  6ED9               	movwf	fsr2l,c
  1879  001524  0E00               	movlw	high SetupAlarmTimeB@Message
  1880  001526  20F4               	addwfc	prodh,w,c
  1881  001528  6EDA               	movwf	fsr2h,c
  1882  00152A  50DF               	movf	indf2,w,c
  1883  00152C  0100               	movlb	0	; () banked
  1884  00152E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;Main.c: 208: lcd_write_data(outchar);
  1888  001530  0100               	movlb	0	; () banked
  1889  001532  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1890  001534  EC6E  F00B         	call	_lcd_write_data
  1891  001538  0100               	movlb	0	; () banked
  1892  00153A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1893  00153C  D7E8               	goto	l2257
  1894  00153E                     l2269:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;Main.c: 209: }
  1898                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1899  00153E  0EC0               	movlw	192
  1900  001540  ECF1  F00C         	call	_lcd_write_cmd
  1901                           
  1902                           ;Main.c: 213: ctemp=getkey();
  1903  001544  ECDF  F00D         	call	_getkey	;wreg free
  1904  001548  0100               	movlb	0	; () banked
  1905  00154A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;Main.c: 214: lcd_write_data(ctemp);
  1909  00154C  0100               	movlb	0	; () banked
  1910  00154E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1911  001550  EC6E  F00B         	call	_lcd_write_data
  1912                           
  1913                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1914  001554  0100               	movlb	0	; () banked
  1915  001556  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1916  001558  ECB8  F00C         	call	_char_2_int
  1917  00155C  0100               	movlb	0	; () banked
  1918  00155E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;Main.c: 217: ctemp=getkey();
  1922  001560  ECDF  F00D         	call	_getkey	;wreg free
  1923  001564  0100               	movlb	0	; () banked
  1924  001566  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1925                           
  1926                           ;Main.c: 218: lcd_write_data(ctemp);
  1927  001568  0100               	movlb	0	; () banked
  1928  00156A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1929  00156C  EC6E  F00B         	call	_lcd_write_data
  1930                           
  1931                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1932  001570  0100               	movlb	0	; () banked
  1933  001572  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1934  001574  ECB8  F00C         	call	_char_2_int
  1935  001578  0100               	movlb	0	; () banked
  1936  00157A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;Main.c: 221: ctemp=getkey();
  1940  00157C  ECDF  F00D         	call	_getkey	;wreg free
  1941  001580  0100               	movlb	0	; () banked
  1942  001582  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;Main.c: 222: lcd_write_data(ctemp);
  1946  001584  0100               	movlb	0	; () banked
  1947  001586  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1948  001588  EC6E  F00B         	call	_lcd_write_data
  1949                           
  1950                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1951  00158C  0100               	movlb	0	; () banked
  1952  00158E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1953  001590  ECB8  F00C         	call	_char_2_int
  1954  001594  0100               	movlb	0	; () banked
  1955  001596  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;Main.c: 225: ctemp=getkey();
  1959  001598  ECDF  F00D         	call	_getkey	;wreg free
  1960  00159C  0100               	movlb	0	; () banked
  1961  00159E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1962                           
  1963                           ;Main.c: 226: lcd_write_data(ctemp);
  1964  0015A0  0100               	movlb	0	; () banked
  1965  0015A2  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1966  0015A4  EC6E  F00B         	call	_lcd_write_data
  1967                           
  1968                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1969  0015A8  0100               	movlb	0	; () banked
  1970  0015AA  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1971  0015AC  ECB8  F00C         	call	_char_2_int
  1972  0015B0  0100               	movlb	0	; () banked
  1973  0015B2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1977  0015B4  0100               	movlb	0	; () banked
  1978  0015B6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1979  0015B8  0D0A               	mullw	10
  1980  0015BA  50F3               	movf	prodl,w,c
  1981  0015BC  0100               	movlb	0	; () banked
  1982  0015BE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1983  0015C0  6E3B               	movwf	_hourB,c
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1987  0015C2  0100               	movlb	0	; () banked
  1988  0015C4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1989  0015C6  0D0A               	mullw	10
  1990  0015C8  50F3               	movf	prodl,w,c
  1991  0015CA  0100               	movlb	0	; () banked
  1992  0015CC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1993  0015CE  6E3F               	movwf	_minuteB,c
  1994                           
  1995                           ;Main.c: 232: delay_ms(500);
  1996  0015D0  0E01               	movlw	1
  1997  0015D2  6E1E               	movwf	delay_ms@i+1,c
  1998  0015D4  0EF4               	movlw	244
  1999  0015D6  6E1D               	movwf	delay_ms@i,c
  2000  0015D8  ECFE  F00D         	call	_delay_ms	;wreg free
  2001                           
  2002                           ;Main.c: 233: lcd_write_cmd(0x01);
  2003  0015DC  0E01               	movlw	1
  2004  0015DE  ECF1  F00C         	call	_lcd_write_cmd
  2005  0015E2  0012               	return		;funcret
  2006  0015E4                     __end_of_SetupAlarmTimeB:
  2007                           	opt stack 0
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           prodh	equ	0xFF4
  2013                           prodl	equ	0xFF3
  2014                           intcon	equ	0xFF2
  2015                           intcon2	equ	0xFF1
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           plusw1	equ	0xFE3
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           plusw2	equ	0xFDB
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _SetupAlarmTimeA *****************
  2028 ;; Defined at:
  2029 ;;		line 155 in file "Main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2034 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2035 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2036 ;;  minute1         1   44[BANK0 ] unsigned char 
  2037 ;;  minute10        1   43[BANK0 ] unsigned char 
  2038 ;;  hour1           1   42[BANK0 ] unsigned char 
  2039 ;;  hour10          1   41[BANK0 ] unsigned char 
  2040 ;;  outchar         1   40[BANK0 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0
  2051 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2053 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2054 ;;Total ram usage:       28 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    5
  2057 ;; This function calls:
  2058 ;;		_char_2_int
  2059 ;;		_delay_ms
  2060 ;;		_getkey
  2061 ;;		_lcd_write_cmd
  2062 ;;		_lcd_write_data
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text7
  2069  0015E4                     __ptext7:
  2070                           	opt stack 0
  2071  0015E4                     _SetupAlarmTimeA:
  2072                           	opt stack 25
  2073                           
  2074                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  2075                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  2076                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  2077                           
  2078                           ;incstack = 0
  2079  0015E4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4322
  2080  0015E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  2081  0015EC  0E14               	movlw	20
  2082  0015EE                     u1131:
  2083  0015EE  CFDB FFE3          	movff	plusw2,plusw1
  2084  0015F2  06E8               	decf	wreg,f,c
  2085  0015F4  E2FC               	bc	u1131
  2086                           
  2087                           ;Main.c: 161: PORTA = 0b00000010;
  2088  0015F6  0E02               	movlw	2
  2089  0015F8  6E80               	movwf	3968,c	;volatile
  2090                           
  2091                           ;Main.c: 163: lcd_write_cmd(0x80);
  2092  0015FA  0E80               	movlw	128
  2093  0015FC  ECF1  F00C         	call	_lcd_write_cmd
  2094                           
  2095                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  2096  001600  0E00               	movlw	0
  2097  001602  0100               	movlb	0	; () banked
  2098  001604  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2099  001606                     l2215:
  2100                           
  2101                           ; BSR set to: 0
  2102  001606  0E13               	movlw	19
  2103  001608  0100               	movlb	0	; () banked
  2104  00160A  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2105  00160C  D001               	goto	l2219
  2106  00160E  D013               	goto	l2227
  2107  001610                     l2219:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;Main.c: 166: {
  2111                           ;Main.c: 167: outchar = Message[msgindex];
  2112  001610  0100               	movlb	0	; () banked
  2113  001612  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2114  001614  0D01               	mullw	1
  2115  001616  0EC7               	movlw	low SetupAlarmTimeA@Message
  2116  001618  24F3               	addwf	prodl,w,c
  2117  00161A  6ED9               	movwf	fsr2l,c
  2118  00161C  0E00               	movlw	high SetupAlarmTimeA@Message
  2119  00161E  20F4               	addwfc	prodh,w,c
  2120  001620  6EDA               	movwf	fsr2h,c
  2121  001622  50DF               	movf	indf2,w,c
  2122  001624  0100               	movlb	0	; () banked
  2123  001626  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;Main.c: 168: lcd_write_data(outchar);
  2127  001628  0100               	movlb	0	; () banked
  2128  00162A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2129  00162C  EC6E  F00B         	call	_lcd_write_data
  2130  001630  0100               	movlb	0	; () banked
  2131  001632  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2132  001634  D7E8               	goto	l2215
  2133  001636                     l2227:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;Main.c: 169: }
  2137                           ;Main.c: 171: lcd_write_cmd(0xC0);
  2138  001636  0EC0               	movlw	192
  2139  001638  ECF1  F00C         	call	_lcd_write_cmd
  2140                           
  2141                           ;Main.c: 173: ctemp=getkey();
  2142  00163C  ECDF  F00D         	call	_getkey	;wreg free
  2143  001640  0100               	movlb	0	; () banked
  2144  001642  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;Main.c: 174: lcd_write_data(ctemp);
  2148  001644  0100               	movlb	0	; () banked
  2149  001646  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2150  001648  EC6E  F00B         	call	_lcd_write_data
  2151                           
  2152                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  2153  00164C  0100               	movlb	0	; () banked
  2154  00164E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2155  001650  ECB8  F00C         	call	_char_2_int
  2156  001654  0100               	movlb	0	; () banked
  2157  001656  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;Main.c: 177: ctemp=getkey();
  2161  001658  ECDF  F00D         	call	_getkey	;wreg free
  2162  00165C  0100               	movlb	0	; () banked
  2163  00165E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2164                           
  2165                           ;Main.c: 178: lcd_write_data(ctemp);
  2166  001660  0100               	movlb	0	; () banked
  2167  001662  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2168  001664  EC6E  F00B         	call	_lcd_write_data
  2169                           
  2170                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2171  001668  0100               	movlb	0	; () banked
  2172  00166A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2173  00166C  ECB8  F00C         	call	_char_2_int
  2174  001670  0100               	movlb	0	; () banked
  2175  001672  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;Main.c: 181: ctemp=getkey();
  2179  001674  ECDF  F00D         	call	_getkey	;wreg free
  2180  001678  0100               	movlb	0	; () banked
  2181  00167A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;Main.c: 182: lcd_write_data(ctemp);
  2185  00167C  0100               	movlb	0	; () banked
  2186  00167E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2187  001680  EC6E  F00B         	call	_lcd_write_data
  2188                           
  2189                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2190  001684  0100               	movlb	0	; () banked
  2191  001686  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2192  001688  ECB8  F00C         	call	_char_2_int
  2193  00168C  0100               	movlb	0	; () banked
  2194  00168E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;Main.c: 185: ctemp=getkey();
  2198  001690  ECDF  F00D         	call	_getkey	;wreg free
  2199  001694  0100               	movlb	0	; () banked
  2200  001696  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2201                           
  2202                           ;Main.c: 186: lcd_write_data(ctemp);
  2203  001698  0100               	movlb	0	; () banked
  2204  00169A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2205  00169C  EC6E  F00B         	call	_lcd_write_data
  2206                           
  2207                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2208  0016A0  0100               	movlb	0	; () banked
  2209  0016A2  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2210  0016A4  ECB8  F00C         	call	_char_2_int
  2211  0016A8  0100               	movlb	0	; () banked
  2212  0016AA  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2216  0016AC  0100               	movlb	0	; () banked
  2217  0016AE  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2218  0016B0  0D0A               	mullw	10
  2219  0016B2  50F3               	movf	prodl,w,c
  2220  0016B4  0100               	movlb	0	; () banked
  2221  0016B6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2222  0016B8  6E3A               	movwf	_hourA,c
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2226  0016BA  0100               	movlb	0	; () banked
  2227  0016BC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2228  0016BE  0D0A               	mullw	10
  2229  0016C0  50F3               	movf	prodl,w,c
  2230  0016C2  0100               	movlb	0	; () banked
  2231  0016C4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2232  0016C6  6E3E               	movwf	_minuteA,c
  2233                           
  2234                           ;Main.c: 192: delay_ms(500);
  2235  0016C8  0E01               	movlw	1
  2236  0016CA  6E1E               	movwf	delay_ms@i+1,c
  2237  0016CC  0EF4               	movlw	244
  2238  0016CE  6E1D               	movwf	delay_ms@i,c
  2239  0016D0  ECFE  F00D         	call	_delay_ms	;wreg free
  2240                           
  2241                           ;Main.c: 193: lcd_write_cmd(0x01);
  2242  0016D4  0E01               	movlw	1
  2243  0016D6  ECF1  F00C         	call	_lcd_write_cmd
  2244  0016DA  0012               	return		;funcret
  2245  0016DC                     __end_of_SetupAlarmTimeA:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           prodh	equ	0xFF4
  2252                           prodl	equ	0xFF3
  2253                           intcon	equ	0xFF2
  2254                           intcon2	equ	0xFF1
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           plusw1	equ	0xFE3
  2259                           fsr1l	equ	0xFE1
  2260                           indf2	equ	0xFDF
  2261                           plusw2	equ	0xFDB
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _lcd_write_data *****************
  2267 ;; Defined at:
  2268 ;;		line 43 in file "lcd_utilities.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  data            1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  data            1   30[COMRAM] unsigned char 
  2273 ;;  temp1           1   31[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0
  2284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2286 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2287 ;;Total ram usage:        3 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    4
  2290 ;; This function calls:
  2291 ;;		_lcd_strobe
  2292 ;; This function is called by:
  2293 ;;		_SetupTime
  2294 ;;		_SetupAlarmTimeA
  2295 ;;		_SetupAlarmTimeB
  2296 ;;		_SetupAlarmTimeC
  2297 ;;		_version
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text8
  2302  0016DC                     __ptext8:
  2303                           	opt stack 0
  2304  0016DC                     _lcd_write_data:
  2305                           	opt stack 25
  2306                           
  2307                           ;incstack = 0
  2308                           ;lcd_write_data@data stored from wreg
  2309  0016DC  6E1F               	movwf	lcd_write_data@data,c
  2310                           
  2311                           ;lcd_utilities.c: 45: char temp1;
  2312                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2313  0016DE  8C83               	bsf	3971,6,c	;volatile
  2314                           
  2315                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2316  0016E0  0E3F               	movlw	63
  2317  0016E2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2318  0016E4  0E55               	movlw	85
  2319  0016E6                     u1447:
  2320  0016E6  2EE8               	decfsz	wreg,f,c
  2321  0016E8  D7FE               	goto	u1447
  2322  0016EA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2323  0016EC  D7FC               	goto	u1447
  2324  0016EE  F000               	nop	
  2325                           
  2326                           ;lcd_utilities.c: 50: temp1 = data;
  2327  0016F0  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2328                           
  2329                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2330  0016F4  3820               	swapf	lcd_write_data@temp1,w,c
  2331  0016F6  0B0F               	andlw	15
  2332  0016F8  6E20               	movwf	lcd_write_data@temp1,c
  2333                           
  2334                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2335  0016FA  5020               	movf	lcd_write_data@temp1,w,c
  2336  0016FC  0B0F               	andlw	15
  2337  0016FE  6E83               	movwf	3971,c	;volatile
  2338                           
  2339                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2340  001700  0E7D               	movlw	125
  2341  001702  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2342  001704  0EAC               	movlw	172
  2343  001706                     u1457:
  2344  001706  2EE8               	decfsz	wreg,f,c
  2345  001708  D7FE               	goto	u1457
  2346  00170A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2347  00170C  D7FC               	goto	u1457
  2348                           
  2349                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2350  00170E  8C83               	bsf	3971,6,c	;volatile
  2351                           
  2352                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2353  001710  0E7D               	movlw	125
  2354  001712  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2355  001714  0EAC               	movlw	172
  2356  001716                     u1467:
  2357  001716  2EE8               	decfsz	wreg,f,c
  2358  001718  D7FE               	goto	u1467
  2359  00171A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2360  00171C  D7FC               	goto	u1467
  2361                           
  2362                           ;lcd_utilities.c: 57: lcd_strobe();
  2363  00171E  EC18  F00E         	call	_lcd_strobe	;wreg free
  2364                           
  2365                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2366  001722  0E7D               	movlw	125
  2367  001724  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2368  001726  0EAC               	movlw	172
  2369  001728                     u1477:
  2370  001728  2EE8               	decfsz	wreg,f,c
  2371  00172A  D7FE               	goto	u1477
  2372  00172C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2373  00172E  D7FC               	goto	u1477
  2374                           
  2375                           ;lcd_utilities.c: 60: temp1 = data;
  2376  001730  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2377                           
  2378                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2379  001734  5020               	movf	lcd_write_data@temp1,w,c
  2380  001736  0B0F               	andlw	15
  2381  001738  6E83               	movwf	3971,c	;volatile
  2382                           
  2383                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2384  00173A  0E7D               	movlw	125
  2385  00173C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2386  00173E  0EAC               	movlw	172
  2387  001740                     u1487:
  2388  001740  2EE8               	decfsz	wreg,f,c
  2389  001742  D7FE               	goto	u1487
  2390  001744  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2391  001746  D7FC               	goto	u1487
  2392                           
  2393                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2394  001748  8C83               	bsf	3971,6,c	;volatile
  2395                           
  2396                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2397  00174A  0E9C               	movlw	156
  2398  00174C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2399  00174E  0ED7               	movlw	215
  2400  001750                     u1497:
  2401  001750  2EE8               	decfsz	wreg,f,c
  2402  001752  D7FE               	goto	u1497
  2403  001754  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2404  001756  D7FC               	goto	u1497
  2405  001758  F000               	nop	
  2406                           
  2407                           ;lcd_utilities.c: 66: lcd_strobe();
  2408  00175A  EC18  F00E         	call	_lcd_strobe	;wreg free
  2409                           
  2410                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2411  00175E  0E9C               	movlw	156
  2412  001760  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2413  001762  0ED7               	movlw	215
  2414  001764                     u1507:
  2415  001764  2EE8               	decfsz	wreg,f,c
  2416  001766  D7FE               	goto	u1507
  2417  001768  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2418  00176A  D7FC               	goto	u1507
  2419  00176C  F000               	nop	
  2420  00176E  0012               	return		;funcret
  2421  001770                     __end_of_lcd_write_data:
  2422                           	opt stack 0
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           plusw1	equ	0xFE3
  2435                           fsr1l	equ	0xFE1
  2436                           indf2	equ	0xFDF
  2437                           plusw2	equ	0xFDB
  2438                           fsr2h	equ	0xFDA
  2439                           fsr2l	equ	0xFD9
  2440                           status	equ	0xFD8
  2441                           
  2442 ;; *************** function _lcd_write_cmd *****************
  2443 ;; Defined at:
  2444 ;;		line 18 in file "lcd_utilities.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  cmd             1    wreg     unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  cmd             1   30[COMRAM] unsigned char 
  2449 ;;  temp2           1   31[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0
  2460 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2461 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        3 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    4
  2466 ;; This function calls:
  2467 ;;		_lcd_strobe
  2468 ;; This function is called by:
  2469 ;;		_lcd_init
  2470 ;;		_SetupTime
  2471 ;;		_SetupAlarmTimeA
  2472 ;;		_SetupAlarmTimeB
  2473 ;;		_SetupAlarmTimeC
  2474 ;;		_version
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text9
  2479  0019E2                     __ptext9:
  2480                           	opt stack 0
  2481  0019E2                     _lcd_write_cmd:
  2482                           	opt stack 25
  2483                           
  2484                           ;incstack = 0
  2485                           ;lcd_write_cmd@cmd stored from wreg
  2486  0019E2  6E1F               	movwf	lcd_write_cmd@cmd,c
  2487                           
  2488                           ;lcd_utilities.c: 20: unsigned char temp2;
  2489                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2490  0019E4  9C83               	bcf	3971,6,c	;volatile
  2491                           
  2492                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2493  0019E6  0E3F               	movlw	63
  2494  0019E8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2495  0019EA  0E55               	movlw	85
  2496  0019EC                     u1517:
  2497  0019EC  2EE8               	decfsz	wreg,f,c
  2498  0019EE  D7FE               	goto	u1517
  2499  0019F0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2500  0019F2  D7FC               	goto	u1517
  2501  0019F4  F000               	nop	
  2502                           
  2503                           ;lcd_utilities.c: 23: temp2 = cmd;
  2504  0019F6  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2505                           
  2506                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2507  0019FA  3820               	swapf	lcd_write_cmd@temp2,w,c
  2508  0019FC  0B0F               	andlw	15
  2509  0019FE  6E20               	movwf	lcd_write_cmd@temp2,c
  2510                           
  2511                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2512  001A00  5020               	movf	lcd_write_cmd@temp2,w,c
  2513  001A02  0B0F               	andlw	15
  2514  001A04  6E83               	movwf	3971,c	;volatile
  2515                           
  2516                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2517  001A06  0E7D               	movlw	125
  2518  001A08  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2519  001A0A  0EAC               	movlw	172
  2520  001A0C                     u1527:
  2521  001A0C  2EE8               	decfsz	wreg,f,c
  2522  001A0E  D7FE               	goto	u1527
  2523  001A10  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2524  001A12  D7FC               	goto	u1527
  2525                           
  2526                           ;lcd_utilities.c: 28: lcd_strobe();
  2527  001A14  EC18  F00E         	call	_lcd_strobe	;wreg free
  2528                           
  2529                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2530  001A18  0E7D               	movlw	125
  2531  001A1A  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2532  001A1C  0EAC               	movlw	172
  2533  001A1E                     u1537:
  2534  001A1E  2EE8               	decfsz	wreg,f,c
  2535  001A20  D7FE               	goto	u1537
  2536  001A22  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2537  001A24  D7FC               	goto	u1537
  2538                           
  2539                           ;lcd_utilities.c: 32: temp2 = cmd;
  2540  001A26  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2541                           
  2542                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2543  001A2A  5020               	movf	lcd_write_cmd@temp2,w,c
  2544  001A2C  0B0F               	andlw	15
  2545  001A2E  6E83               	movwf	3971,c	;volatile
  2546                           
  2547                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2548  001A30  0E7D               	movlw	125
  2549  001A32  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2550  001A34  0EAC               	movlw	172
  2551  001A36                     u1547:
  2552  001A36  2EE8               	decfsz	wreg,f,c
  2553  001A38  D7FE               	goto	u1547
  2554  001A3A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2555  001A3C  D7FC               	goto	u1547
  2556                           
  2557                           ;lcd_utilities.c: 36: lcd_strobe();
  2558  001A3E  EC18  F00E         	call	_lcd_strobe	;wreg free
  2559                           
  2560                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2561  001A42  0E7D               	movlw	125
  2562  001A44  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2563  001A46  0EAC               	movlw	172
  2564  001A48                     u1557:
  2565  001A48  2EE8               	decfsz	wreg,f,c
  2566  001A4A  D7FE               	goto	u1557
  2567  001A4C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2568  001A4E  D7FC               	goto	u1557
  2569  001A50  0012               	return		;funcret
  2570  001A52                     __end_of_lcd_write_cmd:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           intcon2	equ	0xFF1
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           plusw1	equ	0xFE3
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           plusw2	equ	0xFDB
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _lcd_strobe *****************
  2592 ;; Defined at:
  2593 ;;		line 73 in file "lcd_utilities.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_lcd_write_cmd
  2618 ;;		_lcd_write_data
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text10
  2623  001C30                     __ptext10:
  2624                           	opt stack 0
  2625  001C30                     _lcd_strobe:
  2626                           	opt stack 25
  2627                           
  2628                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2629                           
  2630                           ;incstack = 0
  2631  001C30  8883               	bsf	3971,4,c	;volatile
  2632                           
  2633                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2634  001C32  0E7D               	movlw	125
  2635  001C34  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2636  001C36  0EAC               	movlw	172
  2637  001C38                     u1567:
  2638  001C38  2EE8               	decfsz	wreg,f,c
  2639  001C3A  D7FE               	goto	u1567
  2640  001C3C  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2641  001C3E  D7FC               	goto	u1567
  2642                           
  2643                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2644  001C40  9883               	bcf	3971,4,c	;volatile
  2645                           
  2646                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2647  001C42  0E7D               	movlw	125
  2648  001C44  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2649  001C46  0EAC               	movlw	172
  2650  001C48                     u1577:
  2651  001C48  2EE8               	decfsz	wreg,f,c
  2652  001C4A  D7FE               	goto	u1577
  2653  001C4C  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2654  001C4E  D7FC               	goto	u1577
  2655  001C50  0012               	return		;funcret
  2656  001C52                     __end_of_lcd_strobe:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           prodh	equ	0xFF4
  2663                           prodl	equ	0xFF3
  2664                           intcon	equ	0xFF2
  2665                           intcon2	equ	0xFF1
  2666                           postinc0	equ	0xFEE
  2667                           wreg	equ	0xFE8
  2668                           postdec1	equ	0xFE5
  2669                           plusw1	equ	0xFE3
  2670                           fsr1l	equ	0xFE1
  2671                           indf2	equ	0xFDF
  2672                           plusw2	equ	0xFDB
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _getkey *****************
  2678 ;; Defined at:
  2679 ;;		line 17 in file "keypad_utilities.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2684 ;;  keycode         1   18[BANK0 ] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      unsigned char 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0
  2695 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2697 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2698 ;;Total ram usage:       19 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    3
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_SetupTime
  2705 ;;		_SetupAlarmTimeA
  2706 ;;		_SetupAlarmTimeB
  2707 ;;		_SetupAlarmTimeC
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text11
  2712  001BBE                     __ptext11:
  2713                           	opt stack 0
  2714  001BBE                     _getkey:
  2715                           	opt stack 26
  2716                           
  2717                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2718                           
  2719                           ;incstack = 0
  2720  001BBE  0E1B               	movlw	low getkey@F4270
  2721  001BC0  6EF6               	movwf	tblptrl,c
  2722  001BC2                     	if	1	;There is more than 1 active tblptr byte
  2723  001BC2  0E10               	movlw	high getkey@F4270
  2724  001BC4  6EF7               	movwf	tblptrh,c
  2725  001BC6                     	endif
  2726  001BC6                     	if	0	;There are less than 3 active tblptr bytes
  2727  001BC6                     	endif
  2728  001BC6  EE20  F0B4         	lfsr	2,getkey@lookup
  2729  001BCA  0E11               	movlw	17
  2730  001BCC                     u1030:
  2731  001BCC  0009               	tblrd		*+
  2732  001BCE  CFF5 FFDE          	movff	tablat,postinc2
  2733  001BD2  06E8               	decf	wreg,f,c
  2734  001BD4  E2FB               	bc	u1030
  2735  001BD6                     l33:
  2736  001BD6  AA81               	btfss	3969,5,c	;volatile
  2737  001BD8  D7FE               	goto	l33
  2738                           
  2739                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2740  001BDA  5081               	movf	3969,w,c	;volatile
  2741  001BDC  0B0F               	andlw	15
  2742  001BDE  0100               	movlb	0	; () banked
  2743  001BE0  6FC6               	movwf	getkey@keycode& (0+255),b
  2744  001BE2                     l36:
  2745  001BE2  BA81               	btfsc	3969,5,c	;volatile
  2746  001BE4  D7FE               	goto	l36
  2747                           
  2748                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2749  001BE6  0100               	movlb	0	; () banked
  2750  001BE8  51C6               	movf	getkey@keycode& (0+255),w,b
  2751  001BEA  0D01               	mullw	1
  2752  001BEC  0EB4               	movlw	low getkey@lookup
  2753  001BEE  24F3               	addwf	prodl,w,c
  2754  001BF0  6ED9               	movwf	fsr2l,c
  2755  001BF2  0E00               	movlw	high getkey@lookup
  2756  001BF4  20F4               	addwfc	prodh,w,c
  2757  001BF6  6EDA               	movwf	fsr2h,c
  2758  001BF8  50DF               	movf	indf2,w,c
  2759  001BFA  0012               	return	
  2760  001BFC                     __end_of_getkey:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon	equ	0xFF2
  2769                           intcon2	equ	0xFF1
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           postdec1	equ	0xFE5
  2773                           plusw1	equ	0xFE3
  2774                           fsr1l	equ	0xFE1
  2775                           indf2	equ	0xFDF
  2776                           postinc2	equ	0xFDE
  2777                           plusw2	equ	0xFDB
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _delay_ms *****************
  2783 ;; Defined at:
  2784 ;;		line 10 in file "delays_utilities.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  i               2   28[COMRAM] unsigned int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  j               2   31[COMRAM] unsigned int 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         2       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2801 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        5 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    3
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_SetupTime
  2809 ;;		_SetupAlarmTimeA
  2810 ;;		_SetupAlarmTimeB
  2811 ;;		_SetupAlarmTimeC
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text12
  2816  001BFC                     __ptext12:
  2817                           	opt stack 0
  2818  001BFC                     _delay_ms:
  2819                           	opt stack 26
  2820                           
  2821                           ;delays_utilities.c: 12: if(i!=0)
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;incstack = 0
  2825  001BFC  501D               	movf	delay_ms@i,w,c
  2826  001BFE  101E               	iorwf	delay_ms@i+1,w,c
  2827  001C00  B4D8               	btfsc	status,2,c
  2828  001C02  0012               	return	
  2829                           
  2830                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2831  001C04  0E00               	movlw	0
  2832  001C06  6E21               	movwf	delay_ms@j+1,c
  2833  001C08  0E00               	movlw	0
  2834  001C0A  6E20               	movwf	delay_ms@j,c
  2835  001C0C  D00A               	goto	l193
  2836  001C0E                     l2129:
  2837  001C0E  0E10               	movlw	16
  2838  001C10  6E1F               	movwf	??_delay_ms& (0+255),c
  2839  001C12  0E94               	movlw	148
  2840  001C14                     u1587:
  2841  001C14  2EE8               	decfsz	wreg,f,c
  2842  001C16  D7FE               	goto	u1587
  2843  001C18  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2844  001C1A  D7FC               	goto	u1587
  2845  001C1C  D000               	nop2	
  2846  001C1E  4A20               	infsnz	delay_ms@j,f,c
  2847  001C20  2A21               	incf	delay_ms@j+1,f,c
  2848  001C22                     l193:
  2849  001C22  501D               	movf	delay_ms@i,w,c
  2850  001C24  5C20               	subwf	delay_ms@j,w,c
  2851  001C26  501E               	movf	delay_ms@i+1,w,c
  2852  001C28  5821               	subwfb	delay_ms@j+1,w,c
  2853  001C2A  B0D8               	btfsc	status,0,c
  2854  001C2C  0012               	return	
  2855  001C2E  D7EF               	goto	l2129
  2856  001C30                     __end_of_delay_ms:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           tblptrh	equ	0xFF7
  2860                           tblptrl	equ	0xFF6
  2861                           tablat	equ	0xFF5
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           intcon	equ	0xFF2
  2865                           intcon2	equ	0xFF1
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           plusw1	equ	0xFE3
  2870                           fsr1l	equ	0xFE1
  2871                           indf2	equ	0xFDF
  2872                           postinc2	equ	0xFDE
  2873                           plusw2	equ	0xFDB
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _char_2_int *****************
  2879 ;; Defined at:
  2880 ;;		line 35 in file "Main.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  char1           1    wreg     unsigned char 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  char1           1   28[COMRAM] unsigned char 
  2885 ;;  int1            1   29[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    3
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_SetupTime
  2906 ;;		_SetupAlarmTimeA
  2907 ;;		_SetupAlarmTimeB
  2908 ;;		_SetupAlarmTimeC
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text13
  2913  001970                     __ptext13:
  2914                           	opt stack 0
  2915  001970                     _char_2_int:
  2916                           	opt stack 26
  2917                           
  2918                           ;incstack = 0
  2919                           ;char_2_int@char1 stored from wreg
  2920  001970  6E1D               	movwf	char_2_int@char1,c
  2921                           
  2922                           ;Main.c: 37: unsigned char int1;
  2923                           ;Main.c: 38: switch (char1)
  2924  001972  D015               	goto	l2123
  2925  001974                     l2103:
  2926  001974  0E01               	movlw	1
  2927  001976  D011               	goto	L13
  2928  001978                     l2105:
  2929  001978  0E02               	movlw	2
  2930  00197A  D00F               	goto	L13
  2931  00197C                     l2107:
  2932  00197C  0E03               	movlw	3
  2933  00197E  D00D               	goto	L13
  2934  001980                     l2109:
  2935  001980  0E04               	movlw	4
  2936  001982  D00B               	goto	L13
  2937  001984                     l2111:
  2938  001984  0E05               	movlw	5
  2939  001986  D009               	goto	L13
  2940  001988                     l2113:
  2941  001988  0E06               	movlw	6
  2942  00198A  D007               	goto	L13
  2943  00198C                     l2115:
  2944  00198C  0E07               	movlw	7
  2945  00198E  D005               	goto	L13
  2946  001990                     l2117:
  2947  001990  0E08               	movlw	8
  2948  001992  D003               	goto	L13
  2949  001994                     l2119:
  2950  001994  0E09               	movlw	9
  2951  001996  D001               	goto	L13
  2952  001998                     l2121:
  2953  001998  0E00               	movlw	0
  2954  00199A                     L13:
  2955  00199A  6E1E               	movwf	char_2_int@int1,c
  2956                           
  2957                           ;Main.c: 51: }
  2958  00199C  D020               	goto	l114
  2959  00199E                     l2123:
  2960  00199E  501D               	movf	char_2_int@char1,w,c
  2961                           
  2962                           ; Switch size 1, requested type "space"
  2963                           ; Number of cases is 10, Range of values is 48 to 57
  2964                           ; switch strategies available:
  2965                           ; Name         Instructions Cycles
  2966                           ; simple_byte           31    16 (average)
  2967                           ;	Chosen strategy is simple_byte
  2968  0019A0  0A30               	xorlw	48	; case 48
  2969  0019A2  B4D8               	btfsc	status,2,c
  2970  0019A4  D7F9               	goto	l2121
  2971  0019A6  0A01               	xorlw	1	; case 49
  2972  0019A8  B4D8               	btfsc	status,2,c
  2973  0019AA  D7E4               	goto	l2103
  2974  0019AC  0A03               	xorlw	3	; case 50
  2975  0019AE  B4D8               	btfsc	status,2,c
  2976  0019B0  D7E3               	goto	l2105
  2977  0019B2  0A01               	xorlw	1	; case 51
  2978  0019B4  B4D8               	btfsc	status,2,c
  2979  0019B6  D7E2               	goto	l2107
  2980  0019B8  0A07               	xorlw	7	; case 52
  2981  0019BA  B4D8               	btfsc	status,2,c
  2982  0019BC  D7E1               	goto	l2109
  2983  0019BE  0A01               	xorlw	1	; case 53
  2984  0019C0  B4D8               	btfsc	status,2,c
  2985  0019C2  D7E0               	goto	l2111
  2986  0019C4  0A03               	xorlw	3	; case 54
  2987  0019C6  B4D8               	btfsc	status,2,c
  2988  0019C8  D7DF               	goto	l2113
  2989  0019CA  0A01               	xorlw	1	; case 55
  2990  0019CC  B4D8               	btfsc	status,2,c
  2991  0019CE  D7DE               	goto	l2115
  2992  0019D0  0A0F               	xorlw	15	; case 56
  2993  0019D2  B4D8               	btfsc	status,2,c
  2994  0019D4  D7DD               	goto	l2117
  2995  0019D6  0A01               	xorlw	1	; case 57
  2996  0019D8  B4D8               	btfsc	status,2,c
  2997  0019DA  D7DC               	goto	l2119
  2998  0019DC  D7DD               	goto	l2121
  2999  0019DE                     l114:
  3000                           
  3001                           ;Main.c: 52: return(int1);
  3002  0019DE  501E               	movf	char_2_int@int1,w,c
  3003  0019E0  0012               	return		;funcret
  3004  0019E2                     __end_of_char_2_int:
  3005                           	opt stack 0
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           intcon2	equ	0xFF1
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           plusw1	equ	0xFE3
  3018                           fsr1l	equ	0xFE1
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           plusw2	equ	0xFDB
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _ISR_Timer0_Int *****************
  3027 ;; Defined at:
  3028 ;;		line 55 in file "Main.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  second10        1   27[COMRAM] unsigned char 
  3033 ;;  minute10        1   26[COMRAM] unsigned char 
  3034 ;;  hour10          1   25[COMRAM] unsigned char 
  3035 ;;  second1         1   24[COMRAM] unsigned char 
  3036 ;;  minute1         1   23[COMRAM] unsigned char 
  3037 ;;  hour1           1   22[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0
  3048 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3049 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3050 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3051 ;;Total ram usage:       20 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    2
  3054 ;; This function calls:
  3055 ;;		___awdiv
  3056 ;;		_int_2_char
  3057 ;;		i2_lcd_write_cmd
  3058 ;;		i2_lcd_write_data
  3059 ;; This function is called by:
  3060 ;;		Interrupt level 2
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	intcode
  3065  001008                     __pintcode:
  3066                           	opt stack 0
  3067  001008                     _ISR_Timer0_Int:
  3068                           	opt stack 25
  3069                           
  3070                           ;incstack = 0
  3071  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3072  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3073  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3074  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3075                           pclatu	equ	0xFFB
  3076                           pclath	equ	0xFFA
  3077                           tblptru	equ	0xFF8
  3078                           tblptrh	equ	0xFF7
  3079                           tblptrl	equ	0xFF6
  3080                           tablat	equ	0xFF5
  3081                           prodh	equ	0xFF4
  3082                           prodl	equ	0xFF3
  3083                           intcon	equ	0xFF2
  3084                           intcon2	equ	0xFF1
  3085                           postinc0	equ	0xFEE
  3086                           wreg	equ	0xFE8
  3087                           postdec1	equ	0xFE5
  3088                           plusw1	equ	0xFE3
  3089                           fsr1l	equ	0xFE1
  3090                           indf2	equ	0xFDF
  3091                           postinc2	equ	0xFDE
  3092                           plusw2	equ	0xFDB
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8
  3096                           
  3097                           	psect	intcode_body
  3098  00102E                     __pintcode_body:
  3099                           	opt stack 25
  3100  00102E                     int_func:
  3101                           	opt stack 25
  3102  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3103  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3104  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3105  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3106  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3107  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3108  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3109  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3110  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3111  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3112  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3113  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3114  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3115                           
  3116                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3117                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  3118  001060  A4F2               	btfss	intcon,2,c	;volatile
  3119  001062  D085               	goto	i2l132
  3120                           
  3121                           ;Main.c: 59: {
  3122                           ;Main.c: 63: second = second + 1;
  3123  001064  2841               	incf	_second,w,c
  3124  001066  6E41               	movwf	_second,c
  3125                           
  3126                           ;Main.c: 64: if ( second > 59 )
  3127  001068  0E3B               	movlw	59
  3128  00106A  6441               	cpfsgt	_second,c
  3129  00106C  D010               	goto	i2l1905
  3130                           
  3131                           ;Main.c: 65: {
  3132                           ;Main.c: 66: second = 0;
  3133  00106E  0E00               	movlw	0
  3134  001070  6E41               	movwf	_second,c
  3135                           
  3136                           ;Main.c: 67: minute = minute + 1;
  3137  001072  283D               	incf	_minute,w,c
  3138  001074  6E3D               	movwf	_minute,c
  3139                           
  3140                           ;Main.c: 68: if ( minute > 59 )
  3141  001076  0E3B               	movlw	59
  3142  001078  643D               	cpfsgt	_minute,c
  3143  00107A  D009               	goto	i2l1905
  3144                           
  3145                           ;Main.c: 69: {
  3146                           ;Main.c: 70: minute = 0;
  3147  00107C  0E00               	movlw	0
  3148  00107E  6E3D               	movwf	_minute,c
  3149                           
  3150                           ;Main.c: 71: hour = hour + 1;
  3151  001080  2839               	incf	_hour,w,c
  3152  001082  6E39               	movwf	_hour,c
  3153                           
  3154                           ;Main.c: 72: if ( hour > 23 )
  3155  001084  0E17               	movlw	23
  3156  001086  6439               	cpfsgt	_hour,c
  3157  001088  D002               	goto	i2l1905
  3158                           
  3159                           ;Main.c: 73: hour = 0;
  3160  00108A  0E00               	movlw	0
  3161  00108C  6E39               	movwf	_hour,c
  3162  00108E                     i2l1905:
  3163                           
  3164                           ;Main.c: 74: }
  3165                           ;Main.c: 75: }
  3166                           ;Main.c: 77: hour10 = hour / 10;
  3167  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3168  001092  6A02               	clrf	___awdiv@dividend+1,c
  3169  001094  0E00               	movlw	0
  3170  001096  6E04               	movwf	___awdiv@divisor+1,c
  3171  001098  0E0A               	movlw	10
  3172  00109A  6E03               	movwf	___awdiv@divisor,c
  3173  00109C  EC02  F00C         	call	___awdiv	;wreg free
  3174  0010A0  5001               	movf	?___awdiv,w,c
  3175  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3176                           
  3177                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3178  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3179  0010A6  0D0A               	mullw	10
  3180  0010A8  50F3               	movf	prodl,w,c
  3181  0010AA  0800               	sublw	0
  3182  0010AC  2439               	addwf	_hour,w,c
  3183  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3184                           
  3185                           ;Main.c: 80: minute10 = minute / 10;
  3186  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3187  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3188  0010B6  0E00               	movlw	0
  3189  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3190  0010BA  0E0A               	movlw	10
  3191  0010BC  6E03               	movwf	___awdiv@divisor,c
  3192  0010BE  EC02  F00C         	call	___awdiv	;wreg free
  3193  0010C2  5001               	movf	?___awdiv,w,c
  3194  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3195                           
  3196                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3197  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3198  0010C8  0D0A               	mullw	10
  3199  0010CA  50F3               	movf	prodl,w,c
  3200  0010CC  0800               	sublw	0
  3201  0010CE  243D               	addwf	_minute,w,c
  3202  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3203                           
  3204                           ;Main.c: 83: second10 = second / 10;
  3205  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3206  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3207  0010D8  0E00               	movlw	0
  3208  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3209  0010DC  0E0A               	movlw	10
  3210  0010DE  6E03               	movwf	___awdiv@divisor,c
  3211  0010E0  EC02  F00C         	call	___awdiv	;wreg free
  3212  0010E4  5001               	movf	?___awdiv,w,c
  3213  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3214                           
  3215                           ;Main.c: 84: second1 = second - second10 * 10;
  3216  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3217  0010EA  0D0A               	mullw	10
  3218  0010EC  50F3               	movf	prodl,w,c
  3219  0010EE  0800               	sublw	0
  3220  0010F0  2441               	addwf	_second,w,c
  3221  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3222                           
  3223                           ;Main.c: 86: lcd_write_cmd(0x80);
  3224  0010F4  0E80               	movlw	128
  3225  0010F6  EC29  F00D         	call	i2_lcd_write_cmd
  3226                           
  3227                           ;Main.c: 87: lcd_write_data('T');
  3228  0010FA  0E54               	movlw	84
  3229  0010FC  ECB8  F00B         	call	i2_lcd_write_data
  3230                           
  3231                           ;Main.c: 88: lcd_write_data('i');
  3232  001100  0E69               	movlw	105
  3233  001102  ECB8  F00B         	call	i2_lcd_write_data
  3234                           
  3235                           ;Main.c: 89: lcd_write_data('m');
  3236  001106  0E6D               	movlw	109
  3237  001108  ECB8  F00B         	call	i2_lcd_write_data
  3238                           
  3239                           ;Main.c: 90: lcd_write_data('e');
  3240  00110C  0E65               	movlw	101
  3241  00110E  ECB8  F00B         	call	i2_lcd_write_data
  3242                           
  3243                           ;Main.c: 91: lcd_write_data(' ');
  3244  001112  0E20               	movlw	32
  3245  001114  ECB8  F00B         	call	i2_lcd_write_data
  3246                           
  3247                           ;Main.c: 92: lcd_write_data('=');
  3248  001118  0E3D               	movlw	61
  3249  00111A  ECB8  F00B         	call	i2_lcd_write_data
  3250                           
  3251                           ;Main.c: 93: lcd_write_data(' ');
  3252  00111E  0E20               	movlw	32
  3253  001120  ECB8  F00B         	call	i2_lcd_write_data
  3254                           
  3255                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3256  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3257  001126  EC44  F00C         	call	_int_2_char
  3258  00112A  ECB8  F00B         	call	i2_lcd_write_data
  3259                           
  3260                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3261  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3262  001130  EC44  F00C         	call	_int_2_char
  3263  001134  ECB8  F00B         	call	i2_lcd_write_data
  3264                           
  3265                           ;Main.c: 96: lcd_write_data(':');
  3266  001138  0E3A               	movlw	58
  3267  00113A  ECB8  F00B         	call	i2_lcd_write_data
  3268                           
  3269                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3270  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3271  001140  EC44  F00C         	call	_int_2_char
  3272  001144  ECB8  F00B         	call	i2_lcd_write_data
  3273                           
  3274                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3275  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3276  00114A  EC44  F00C         	call	_int_2_char
  3277  00114E  ECB8  F00B         	call	i2_lcd_write_data
  3278                           
  3279                           ;Main.c: 99: lcd_write_data(':');
  3280  001152  0E3A               	movlw	58
  3281  001154  ECB8  F00B         	call	i2_lcd_write_data
  3282                           
  3283                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3284  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3285  00115A  EC44  F00C         	call	_int_2_char
  3286  00115E  ECB8  F00B         	call	i2_lcd_write_data
  3287                           
  3288                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3289  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3290  001164  EC44  F00C         	call	_int_2_char
  3291  001168  ECB8  F00B         	call	i2_lcd_write_data
  3292                           
  3293                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3294  00116C  94F2               	bcf	intcon,2,c	;volatile
  3295  00116E                     i2l132:
  3296  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3297  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3298  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3299  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3300  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3301  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3302  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3303  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3304  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3305  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3306  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3307  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3308  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3309  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3310  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3311  0011A8  0011               	retfie		f
  3312  0011AA                     __end_of_ISR_Timer0_Int:
  3313                           	opt stack 0
  3314                           pclatu	equ	0xFFB
  3315                           pclath	equ	0xFFA
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           intcon2	equ	0xFF1
  3324                           postinc0	equ	0xFEE
  3325                           fsr0h	equ	0xFEA
  3326                           fsr0l	equ	0xFE9
  3327                           wreg	equ	0xFE8
  3328                           postdec1	equ	0xFE5
  3329                           plusw1	equ	0xFE3
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           plusw2	equ	0xFDB
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function i2_lcd_write_data *****************
  3340 ;; Defined at:
  3341 ;;		line 43 in file "lcd_utilities.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  data            1    wreg     unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  data            1    2[COMRAM] unsigned char 
  3346 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0
  3357 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3358 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3359 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3360 ;;Total ram usage:        3 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    1
  3363 ;; This function calls:
  3364 ;;		i2_lcd_strobe
  3365 ;; This function is called by:
  3366 ;;		_ISR_Timer0_Int
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text15
  3371  001770                     __ptext15:
  3372                           	opt stack 0
  3373  001770                     i2_lcd_write_data:
  3374                           	opt stack 25
  3375                           
  3376                           ;incstack = 0
  3377                           ;i2lcd_write_data@data stored from wreg
  3378  001770  6E03               	movwf	i2lcd_write_data@data,c
  3379                           
  3380                           ;lcd_utilities.c: 45: char temp1;
  3381                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3382  001772  8C83               	bsf	3971,6,c	;volatile
  3383                           
  3384                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3385  001774  0E3F               	movlw	63
  3386  001776  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3387  001778  0E55               	movlw	85
  3388  00177A                     i2u159_47:
  3389  00177A  2EE8               	decfsz	wreg,f,c
  3390  00177C  D7FE               	goto	i2u159_47
  3391  00177E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3392  001780  D7FC               	goto	i2u159_47
  3393  001782  F000               	nop	
  3394                           
  3395                           ;lcd_utilities.c: 50: temp1 = data;
  3396  001784  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3397                           
  3398                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3399  001788  3804               	swapf	i2lcd_write_data@temp1,w,c
  3400  00178A  0B0F               	andlw	15
  3401  00178C  6E04               	movwf	i2lcd_write_data@temp1,c
  3402                           
  3403                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3404  00178E  5004               	movf	i2lcd_write_data@temp1,w,c
  3405  001790  0B0F               	andlw	15
  3406  001792  6E83               	movwf	3971,c	;volatile
  3407                           
  3408                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3409  001794  0E7D               	movlw	125
  3410  001796  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3411  001798  0EAC               	movlw	172
  3412  00179A                     i2u160_47:
  3413  00179A  2EE8               	decfsz	wreg,f,c
  3414  00179C  D7FE               	goto	i2u160_47
  3415  00179E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3416  0017A0  D7FC               	goto	i2u160_47
  3417                           
  3418                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3419  0017A2  8C83               	bsf	3971,6,c	;volatile
  3420                           
  3421                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3422  0017A4  0E7D               	movlw	125
  3423  0017A6  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3424  0017A8  0EAC               	movlw	172
  3425  0017AA                     i2u161_47:
  3426  0017AA  2EE8               	decfsz	wreg,f,c
  3427  0017AC  D7FE               	goto	i2u161_47
  3428  0017AE  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3429  0017B0  D7FC               	goto	i2u161_47
  3430                           
  3431                           ;lcd_utilities.c: 57: lcd_strobe();
  3432  0017B2  EC29  F00E         	call	i2_lcd_strobe	;wreg free
  3433                           
  3434                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3435  0017B6  0E7D               	movlw	125
  3436  0017B8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3437  0017BA  0EAC               	movlw	172
  3438  0017BC                     i2u162_47:
  3439  0017BC  2EE8               	decfsz	wreg,f,c
  3440  0017BE  D7FE               	goto	i2u162_47
  3441  0017C0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3442  0017C2  D7FC               	goto	i2u162_47
  3443                           
  3444                           ;lcd_utilities.c: 60: temp1 = data;
  3445  0017C4  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3446                           
  3447                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3448  0017C8  5004               	movf	i2lcd_write_data@temp1,w,c
  3449  0017CA  0B0F               	andlw	15
  3450  0017CC  6E83               	movwf	3971,c	;volatile
  3451                           
  3452                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3453  0017CE  0E7D               	movlw	125
  3454  0017D0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3455  0017D2  0EAC               	movlw	172
  3456  0017D4                     i2u163_47:
  3457  0017D4  2EE8               	decfsz	wreg,f,c
  3458  0017D6  D7FE               	goto	i2u163_47
  3459  0017D8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3460  0017DA  D7FC               	goto	i2u163_47
  3461                           
  3462                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3463  0017DC  8C83               	bsf	3971,6,c	;volatile
  3464                           
  3465                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3466  0017DE  0E9C               	movlw	156
  3467  0017E0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3468  0017E2  0ED7               	movlw	215
  3469  0017E4                     i2u164_47:
  3470  0017E4  2EE8               	decfsz	wreg,f,c
  3471  0017E6  D7FE               	goto	i2u164_47
  3472  0017E8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3473  0017EA  D7FC               	goto	i2u164_47
  3474  0017EC  F000               	nop	
  3475                           
  3476                           ;lcd_utilities.c: 66: lcd_strobe();
  3477  0017EE  EC29  F00E         	call	i2_lcd_strobe	;wreg free
  3478                           
  3479                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3480  0017F2  0E9C               	movlw	156
  3481  0017F4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3482  0017F6  0ED7               	movlw	215
  3483  0017F8                     i2u165_47:
  3484  0017F8  2EE8               	decfsz	wreg,f,c
  3485  0017FA  D7FE               	goto	i2u165_47
  3486  0017FC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3487  0017FE  D7FC               	goto	i2u165_47
  3488  001800  F000               	nop	
  3489  001802  0012               	return		;funcret
  3490  001804                     __end_ofi2_lcd_write_data:
  3491                           	opt stack 0
  3492                           pclatu	equ	0xFFB
  3493                           pclath	equ	0xFFA
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           intcon2	equ	0xFF1
  3502                           postinc0	equ	0xFEE
  3503                           fsr0h	equ	0xFEA
  3504                           fsr0l	equ	0xFE9
  3505                           wreg	equ	0xFE8
  3506                           postdec1	equ	0xFE5
  3507                           plusw1	equ	0xFE3
  3508                           fsr1h	equ	0xFE2
  3509                           fsr1l	equ	0xFE1
  3510                           indf2	equ	0xFDF
  3511                           postinc2	equ	0xFDE
  3512                           plusw2	equ	0xFDB
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function i2_lcd_write_cmd *****************
  3518 ;; Defined at:
  3519 ;;		line 18 in file "lcd_utilities.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  cmd             1    wreg     unsigned char 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  cmd             1    2[COMRAM] unsigned char 
  3524 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0
  3535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3536 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3537 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        3 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		i2_lcd_strobe
  3543 ;; This function is called by:
  3544 ;;		_ISR_Timer0_Int
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text16
  3549  001A52                     __ptext16:
  3550                           	opt stack 0
  3551  001A52                     i2_lcd_write_cmd:
  3552                           	opt stack 25
  3553                           
  3554                           ;incstack = 0
  3555                           ;i2lcd_write_cmd@cmd stored from wreg
  3556  001A52  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3557                           
  3558                           ;lcd_utilities.c: 20: unsigned char temp2;
  3559                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3560  001A54  9C83               	bcf	3971,6,c	;volatile
  3561                           
  3562                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3563  001A56  0E3F               	movlw	63
  3564  001A58  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3565  001A5A  0E55               	movlw	85
  3566  001A5C                     i2u166_47:
  3567  001A5C  2EE8               	decfsz	wreg,f,c
  3568  001A5E  D7FE               	goto	i2u166_47
  3569  001A60  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3570  001A62  D7FC               	goto	i2u166_47
  3571  001A64  F000               	nop	
  3572                           
  3573                           ;lcd_utilities.c: 23: temp2 = cmd;
  3574  001A66  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3575                           
  3576                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3577  001A6A  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3578  001A6C  0B0F               	andlw	15
  3579  001A6E  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3580                           
  3581                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3582  001A70  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3583  001A72  0B0F               	andlw	15
  3584  001A74  6E83               	movwf	3971,c	;volatile
  3585                           
  3586                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3587  001A76  0E7D               	movlw	125
  3588  001A78  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3589  001A7A  0EAC               	movlw	172
  3590  001A7C                     i2u167_47:
  3591  001A7C  2EE8               	decfsz	wreg,f,c
  3592  001A7E  D7FE               	goto	i2u167_47
  3593  001A80  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3594  001A82  D7FC               	goto	i2u167_47
  3595                           
  3596                           ;lcd_utilities.c: 28: lcd_strobe();
  3597  001A84  EC29  F00E         	call	i2_lcd_strobe	;wreg free
  3598                           
  3599                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3600  001A88  0E7D               	movlw	125
  3601  001A8A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3602  001A8C  0EAC               	movlw	172
  3603  001A8E                     i2u168_47:
  3604  001A8E  2EE8               	decfsz	wreg,f,c
  3605  001A90  D7FE               	goto	i2u168_47
  3606  001A92  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3607  001A94  D7FC               	goto	i2u168_47
  3608                           
  3609                           ;lcd_utilities.c: 32: temp2 = cmd;
  3610  001A96  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3611                           
  3612                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3613  001A9A  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3614  001A9C  0B0F               	andlw	15
  3615  001A9E  6E83               	movwf	3971,c	;volatile
  3616                           
  3617                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3618  001AA0  0E7D               	movlw	125
  3619  001AA2  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3620  001AA4  0EAC               	movlw	172
  3621  001AA6                     i2u169_47:
  3622  001AA6  2EE8               	decfsz	wreg,f,c
  3623  001AA8  D7FE               	goto	i2u169_47
  3624  001AAA  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3625  001AAC  D7FC               	goto	i2u169_47
  3626                           
  3627                           ;lcd_utilities.c: 36: lcd_strobe();
  3628  001AAE  EC29  F00E         	call	i2_lcd_strobe	;wreg free
  3629                           
  3630                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3631  001AB2  0E7D               	movlw	125
  3632  001AB4  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3633  001AB6  0EAC               	movlw	172
  3634  001AB8                     i2u170_47:
  3635  001AB8  2EE8               	decfsz	wreg,f,c
  3636  001ABA  D7FE               	goto	i2u170_47
  3637  001ABC  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3638  001ABE  D7FC               	goto	i2u170_47
  3639  001AC0  0012               	return		;funcret
  3640  001AC2                     __end_ofi2_lcd_write_cmd:
  3641                           	opt stack 0
  3642                           pclatu	equ	0xFFB
  3643                           pclath	equ	0xFFA
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           intcon2	equ	0xFF1
  3652                           postinc0	equ	0xFEE
  3653                           fsr0h	equ	0xFEA
  3654                           fsr0l	equ	0xFE9
  3655                           wreg	equ	0xFE8
  3656                           postdec1	equ	0xFE5
  3657                           plusw1	equ	0xFE3
  3658                           fsr1h	equ	0xFE2
  3659                           fsr1l	equ	0xFE1
  3660                           indf2	equ	0xFDF
  3661                           postinc2	equ	0xFDE
  3662                           plusw2	equ	0xFDB
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function i2_lcd_strobe *****************
  3668 ;; Defined at:
  3669 ;;		line 73 in file "lcd_utilities.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		i2_lcd_write_cmd
  3693 ;;		i2_lcd_write_data
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text17
  3698  001C52                     __ptext17:
  3699                           	opt stack 0
  3700  001C52                     i2_lcd_strobe:
  3701                           	opt stack 25
  3702                           
  3703                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3704                           
  3705                           ;incstack = 0
  3706  001C52  8883               	bsf	3971,4,c	;volatile
  3707                           
  3708                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3709  001C54  0E7D               	movlw	125
  3710  001C56  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3711  001C58  0EAC               	movlw	172
  3712  001C5A                     i2u171_47:
  3713  001C5A  2EE8               	decfsz	wreg,f,c
  3714  001C5C  D7FE               	goto	i2u171_47
  3715  001C5E  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3716  001C60  D7FC               	goto	i2u171_47
  3717                           
  3718                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3719  001C62  9883               	bcf	3971,4,c	;volatile
  3720                           
  3721                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3722  001C64  0E7D               	movlw	125
  3723  001C66  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3724  001C68  0EAC               	movlw	172
  3725  001C6A                     i2u172_47:
  3726  001C6A  2EE8               	decfsz	wreg,f,c
  3727  001C6C  D7FE               	goto	i2u172_47
  3728  001C6E  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3729  001C70  D7FC               	goto	i2u172_47
  3730  001C72  0012               	return		;funcret
  3731  001C74                     __end_ofi2_lcd_strobe:
  3732                           	opt stack 0
  3733                           pclatu	equ	0xFFB
  3734                           pclath	equ	0xFFA
  3735                           tblptru	equ	0xFF8
  3736                           tblptrh	equ	0xFF7
  3737                           tblptrl	equ	0xFF6
  3738                           tablat	equ	0xFF5
  3739                           prodh	equ	0xFF4
  3740                           prodl	equ	0xFF3
  3741                           intcon	equ	0xFF2
  3742                           intcon2	equ	0xFF1
  3743                           postinc0	equ	0xFEE
  3744                           fsr0h	equ	0xFEA
  3745                           fsr0l	equ	0xFE9
  3746                           wreg	equ	0xFE8
  3747                           postdec1	equ	0xFE5
  3748                           plusw1	equ	0xFE3
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           indf2	equ	0xFDF
  3752                           postinc2	equ	0xFDE
  3753                           plusw2	equ	0xFDB
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _int_2_char *****************
  3759 ;; Defined at:
  3760 ;;		line 15 in file "Main.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  int1            1    wreg     unsigned char 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  int1            1    0[COMRAM] unsigned char 
  3765 ;;  char1           1    1[COMRAM] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      unsigned char 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0
  3776 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3778 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3779 ;;Total ram usage:        2 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_ISR_Timer0_Int
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text18
  3789  001888                     __ptext18:
  3790                           	opt stack 0
  3791  001888                     _int_2_char:
  3792                           	opt stack 26
  3793                           
  3794                           ;incstack = 0
  3795                           ;int_2_char@int1 stored from wreg
  3796  001888  6E01               	movwf	int_2_char@int1,c
  3797                           
  3798                           ;Main.c: 17: char char1;
  3799                           ;Main.c: 18: switch (int1)
  3800  00188A  D017               	goto	i2l975
  3801  00188C                     i2l953:
  3802  00188C  0E30               	movlw	48
  3803  00188E  D013               	goto	L23
  3804  001890                     i2l955:
  3805  001890  0E31               	movlw	49
  3806  001892  D011               	goto	L23
  3807  001894                     i2l957:
  3808  001894  0E32               	movlw	50
  3809  001896  D00F               	goto	L23
  3810  001898                     i2l959:
  3811  001898  0E33               	movlw	51
  3812  00189A  D00D               	goto	L23
  3813  00189C                     i2l961:
  3814  00189C  0E34               	movlw	52
  3815  00189E  D00B               	goto	L23
  3816  0018A0                     i2l963:
  3817  0018A0  0E35               	movlw	53
  3818  0018A2  D009               	goto	L23
  3819  0018A4                     i2l965:
  3820  0018A4  0E36               	movlw	54
  3821  0018A6  D007               	goto	L23
  3822  0018A8                     i2l967:
  3823  0018A8  0E37               	movlw	55
  3824  0018AA  D005               	goto	L23
  3825  0018AC                     i2l969:
  3826  0018AC  0E38               	movlw	56
  3827  0018AE  D003               	goto	L23
  3828  0018B0                     i2l971:
  3829  0018B0  0E39               	movlw	57
  3830  0018B2  D001               	goto	L23
  3831  0018B4                     i2l973:
  3832  0018B4  0E3F               	movlw	63
  3833  0018B6                     L23:
  3834  0018B6  6E02               	movwf	int_2_char@char1,c
  3835                           
  3836                           ;Main.c: 31: }
  3837  0018B8  D020               	goto	i2l98
  3838  0018BA                     i2l975:
  3839  0018BA  5001               	movf	int_2_char@int1,w,c
  3840                           
  3841                           ; Switch size 1, requested type "space"
  3842                           ; Number of cases is 10, Range of values is 0 to 9
  3843                           ; switch strategies available:
  3844                           ; Name         Instructions Cycles
  3845                           ; simple_byte           31    16 (average)
  3846                           ;	Chosen strategy is simple_byte
  3847  0018BC  0A00               	xorlw	0	; case 0
  3848  0018BE  B4D8               	btfsc	status,2,c
  3849  0018C0  D7E5               	goto	i2l953
  3850  0018C2  0A01               	xorlw	1	; case 1
  3851  0018C4  B4D8               	btfsc	status,2,c
  3852  0018C6  D7E4               	goto	i2l955
  3853  0018C8  0A03               	xorlw	3	; case 2
  3854  0018CA  B4D8               	btfsc	status,2,c
  3855  0018CC  D7E3               	goto	i2l957
  3856  0018CE  0A01               	xorlw	1	; case 3
  3857  0018D0  B4D8               	btfsc	status,2,c
  3858  0018D2  D7E2               	goto	i2l959
  3859  0018D4  0A07               	xorlw	7	; case 4
  3860  0018D6  B4D8               	btfsc	status,2,c
  3861  0018D8  D7E1               	goto	i2l961
  3862  0018DA  0A01               	xorlw	1	; case 5
  3863  0018DC  B4D8               	btfsc	status,2,c
  3864  0018DE  D7E0               	goto	i2l963
  3865  0018E0  0A03               	xorlw	3	; case 6
  3866  0018E2  B4D8               	btfsc	status,2,c
  3867  0018E4  D7DF               	goto	i2l965
  3868  0018E6  0A01               	xorlw	1	; case 7
  3869  0018E8  B4D8               	btfsc	status,2,c
  3870  0018EA  D7DE               	goto	i2l967
  3871  0018EC  0A0F               	xorlw	15	; case 8
  3872  0018EE  B4D8               	btfsc	status,2,c
  3873  0018F0  D7DD               	goto	i2l969
  3874  0018F2  0A01               	xorlw	1	; case 9
  3875  0018F4  B4D8               	btfsc	status,2,c
  3876  0018F6  D7DC               	goto	i2l971
  3877  0018F8  D7DD               	goto	i2l973
  3878  0018FA                     i2l98:
  3879                           
  3880                           ;Main.c: 32: return(char1);
  3881  0018FA  5002               	movf	int_2_char@char1,w,c
  3882  0018FC  0012               	return		;funcret
  3883  0018FE                     __end_of_int_2_char:
  3884                           	opt stack 0
  3885                           pclatu	equ	0xFFB
  3886                           pclath	equ	0xFFA
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           intcon	equ	0xFF2
  3894                           intcon2	equ	0xFF1
  3895                           postinc0	equ	0xFEE
  3896                           fsr0h	equ	0xFEA
  3897                           fsr0l	equ	0xFE9
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           plusw1	equ	0xFE3
  3901                           fsr1h	equ	0xFE2
  3902                           fsr1l	equ	0xFE1
  3903                           indf2	equ	0xFDF
  3904                           postinc2	equ	0xFDE
  3905                           plusw2	equ	0xFDB
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function ___awdiv *****************
  3911 ;; Defined at:
  3912 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  dividend        2    0[COMRAM] int 
  3915 ;;  divisor         2    2[COMRAM] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  quotient        2    6[COMRAM] int 
  3918 ;;  sign            1    5[COMRAM] unsigned char 
  3919 ;;  counter         1    4[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[COMRAM] int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         4       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        8 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_ISR_Timer0_Int
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text19
  3943  001804                     __ptext19:
  3944                           	opt stack 0
  3945  001804                     ___awdiv:
  3946                           	opt stack 26
  3947                           
  3948                           ;incstack = 0
  3949  001804  0E00               	movlw	0
  3950  001806  6E06               	movwf	___awdiv@sign,c
  3951  001808  AE04               	btfss	___awdiv@divisor+1,7,c
  3952  00180A  D006               	goto	i2l1791
  3953  00180C  6C03               	negf	___awdiv@divisor,c
  3954  00180E  1E04               	comf	___awdiv@divisor+1,f,c
  3955  001810  B0D8               	btfsc	status,0,c
  3956  001812  2A04               	incf	___awdiv@divisor+1,f,c
  3957  001814  0E01               	movlw	1
  3958  001816  6E06               	movwf	___awdiv@sign,c
  3959  001818                     i2l1791:
  3960  001818  AE02               	btfss	___awdiv@dividend+1,7,c
  3961  00181A  D006               	goto	i2l1797
  3962  00181C  6C01               	negf	___awdiv@dividend,c
  3963  00181E  1E02               	comf	___awdiv@dividend+1,f,c
  3964  001820  B0D8               	btfsc	status,0,c
  3965  001822  2A02               	incf	___awdiv@dividend+1,f,c
  3966  001824  0E01               	movlw	1
  3967  001826  1A06               	xorwf	___awdiv@sign,f,c
  3968  001828                     i2l1797:
  3969  001828  0E00               	movlw	0
  3970  00182A  6E08               	movwf	___awdiv@quotient+1,c
  3971  00182C  0E00               	movlw	0
  3972  00182E  6E07               	movwf	___awdiv@quotient,c
  3973  001830  5003               	movf	___awdiv@divisor,w,c
  3974  001832  1004               	iorwf	___awdiv@divisor+1,w,c
  3975  001834  B4D8               	btfsc	status,2,c
  3976  001836  D01C               	goto	i2l1819
  3977  001838  0E01               	movlw	1
  3978  00183A  6E05               	movwf	___awdiv@counter,c
  3979  00183C  D004               	goto	i2l1805
  3980  00183E                     i2l1803:
  3981  00183E  90D8               	bcf	status,0,c
  3982  001840  3603               	rlcf	___awdiv@divisor,f,c
  3983  001842  3604               	rlcf	___awdiv@divisor+1,f,c
  3984  001844  2A05               	incf	___awdiv@counter,f,c
  3985  001846                     i2l1805:
  3986  001846  AE04               	btfss	___awdiv@divisor+1,7,c
  3987  001848  D7FA               	goto	i2l1803
  3988  00184A                     i2l1807:
  3989  00184A  90D8               	bcf	status,0,c
  3990  00184C  3607               	rlcf	___awdiv@quotient,f,c
  3991  00184E  3608               	rlcf	___awdiv@quotient+1,f,c
  3992  001850  5003               	movf	___awdiv@divisor,w,c
  3993  001852  5C01               	subwf	___awdiv@dividend,w,c
  3994  001854  5004               	movf	___awdiv@divisor+1,w,c
  3995  001856  5802               	subwfb	___awdiv@dividend+1,w,c
  3996  001858  A0D8               	btfss	status,0,c
  3997  00185A  D005               	goto	i2l1815
  3998  00185C  5003               	movf	___awdiv@divisor,w,c
  3999  00185E  5E01               	subwf	___awdiv@dividend,f,c
  4000  001860  5004               	movf	___awdiv@divisor+1,w,c
  4001  001862  5A02               	subwfb	___awdiv@dividend+1,f,c
  4002  001864  8007               	bsf	___awdiv@quotient,0,c
  4003  001866                     i2l1815:
  4004  001866  90D8               	bcf	status,0,c
  4005  001868  3204               	rrcf	___awdiv@divisor+1,f,c
  4006  00186A  3203               	rrcf	___awdiv@divisor,f,c
  4007  00186C  2E05               	decfsz	___awdiv@counter,f,c
  4008  00186E  D7ED               	goto	i2l1807
  4009  001870                     i2l1819:
  4010  001870  5006               	movf	___awdiv@sign,w,c
  4011  001872  B4D8               	btfsc	status,2,c
  4012  001874  D004               	goto	i2l1823
  4013  001876  6C07               	negf	___awdiv@quotient,c
  4014  001878  1E08               	comf	___awdiv@quotient+1,f,c
  4015  00187A  B0D8               	btfsc	status,0,c
  4016  00187C  2A08               	incf	___awdiv@quotient+1,f,c
  4017  00187E                     i2l1823:
  4018  00187E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4019  001882  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4020  001886  0012               	return	
  4021  001888                     __end_of___awdiv:
  4022                           	opt stack 0
  4023                           pclatu	equ	0xFFB
  4024                           pclath	equ	0xFFA
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           intcon2	equ	0xFF1
  4033                           postinc0	equ	0xFEE
  4034                           fsr0h	equ	0xFEA
  4035                           fsr0l	equ	0xFE9
  4036                           wreg	equ	0xFE8
  4037                           postdec1	equ	0xFE5
  4038                           plusw1	equ	0xFE3
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           plusw2	equ	0xFDB
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           pclatu	equ	0xFFB
  4048                           pclath	equ	0xFFA
  4049                           tblptru	equ	0xFF8
  4050                           tblptrh	equ	0xFF7
  4051                           tblptrl	equ	0xFF6
  4052                           tablat	equ	0xFF5
  4053                           prodh	equ	0xFF4
  4054                           prodl	equ	0xFF3
  4055                           intcon	equ	0xFF2
  4056                           intcon2	equ	0xFF1
  4057                           postinc0	equ	0xFEE
  4058                           fsr0h	equ	0xFEA
  4059                           fsr0l	equ	0xFE9
  4060                           wreg	equ	0xFE8
  4061                           postdec1	equ	0xFE5
  4062                           plusw1	equ	0xFE3
  4063                           fsr1h	equ	0xFE2
  4064                           fsr1l	equ	0xFE1
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           plusw2	equ	0xFDB
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072                           	psect	rparam
  4073  0000                     pclatu	equ	0xFFB
  4074                           pclath	equ	0xFFA
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           prodh	equ	0xFF4
  4080                           prodl	equ	0xFF3
  4081                           intcon	equ	0xFF2
  4082                           intcon2	equ	0xFF1
  4083                           postinc0	equ	0xFEE
  4084                           fsr0h	equ	0xFEA
  4085                           fsr0l	equ	0xFE9
  4086                           wreg	equ	0xFE8
  4087                           postdec1	equ	0xFE5
  4088                           plusw1	equ	0xFE3
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           indf2	equ	0xFDF
  4092                           postinc2	equ	0xFDE
  4093                           plusw2	equ	0xFDB
  4094                           fsr2h	equ	0xFDA
  4095                           fsr2l	equ	0xFD9
  4096                           status	equ	0xFD8
  4097                           
  4098                           	psect	temp
  4099  000042                     btemp:
  4100                           	opt stack 0
  4101  000042                     	ds	1
  4102  0000                     int$flags	set	btemp
  4103                           pclatu	equ	0xFFB
  4104                           pclath	equ	0xFFA
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           intcon2	equ	0xFF1
  4113                           postinc0	equ	0xFEE
  4114                           fsr0h	equ	0xFEA
  4115                           fsr0l	equ	0xFE9
  4116                           wreg	equ	0xFE8
  4117                           postdec1	equ	0xFE5
  4118                           plusw1	equ	0xFE3
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     55     139
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6551
                                             49 BANK0      6     6      0
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1576
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1378
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     315
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      95
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 15 08:13:42 2016

                        main@AlarmAOff 00E5                          main@AlarmBOff 00E7  
                        main@AlarmCOff 00E9         ??_SetupTimerInterruptRegisters 001D  
                                   l33 1BD6                                     l36 1BE2  
                         ___awdiv@sign 0006                __size_of_ISR_Timer0_Int 01A2  
             __size_ofi2_lcd_write_cmd 0070                       ?_SetupAlarmTimeA 0001  
                     ?_SetupAlarmTimeB 0001                       ?_SetupAlarmTimeC 0001  
                                  l114 19DE                                    l193 1C22  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4270 101B                                   l2111 1984  
                                 l2103 1974                                   l2121 1998  
                                 l2113 1988                                   l2105 1978  
                                 l2115 198C                                   l2107 197C  
                                 l2123 199E                                   l2117 1990  
                                 l2109 1980                                   l2141 1914  
                                 l2119 1994                                   l2215 1606  
                                 l2311 1446                                   l2303 1420  
                                 l2129 1C0E                                   l2145 1924  
                                 l2401 136C                                   l2227 1636  
                                 l2219 1610                                   l2171 11F8  
                                 l2163 11D2                                   l2411 1390  
                                 l2261 1518                                   l2149 193A  
                                 l2413 1396                                   l2159 11C8  
                                 l2431 13EA                                   l2257 150E  
                                 l2353 1B98                                   l2425 13CE  
                                 l2433 13EE                                   l2409 138C  
                                 l2419 13B2                                   l2269 153E  
                                 l2349 1B8E                                   l2393 134C  
                                 l2385 132C                                   l2299 1416  
                                 u1101 11B4                                   u1030 1BCC  
                                 u1131 15EE                                   u1221 1B7A  
                                 u1161 14F6                                   u1191 13FE  
                                 u1507 1764                                   u1427 192A  
                                 u1517 19EC                                   u1437 1964  
                                 u1527 1A0C                                   u1447 16E6  
                                 u1537 1A1E                                   u1457 1706  
                                 u1547 1A36                                   u1467 1716  
                                 u1557 1A48                                   u1477 1728  
                                 u1567 1C38                                   u1487 1740  
                                 u1577 1C48                                   u1497 1750  
                                 u1587 1C14                                   i2l98 18FA  
               __end_of_lcd_write_data 1770                                   _main 12E4  
                                 _hour 0039                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0042                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 1804                           ___param_bank 000010  
                                ?_main 0001                        __end_of___awdiv 1888  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l132 116E  
                                i2l961 189C                                  i2l953 188C  
                                i2l971 18B0                                  i2l963 18A0  
                                i2l955 1890                        ___awdiv@counter 0005  
                                i2l973 18B4                                  i2l965 18A4  
                                i2l957 1894                                  i2l967 18A8  
                                i2l959 1898                                  i2l975 18BA  
                                i2l969 18AC                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISD 000F95  
                     lcd_write_cmd@cmd 001F                                  _hourA 003A  
                                _hourB 003B                                  _hourC 003C  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                      __end_of_version 1BBE                                  status 000FD8  
                __size_ofi2_lcd_strobe 0022                           getkey@lookup 00B4  
                      __initialization 1AC2                           __end_of_main 13F4  
                               ??_main 0024                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                         version@F4277 0024                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1C52                                 i2l1803 183E  
                               i2l1805 1846                                 i2l1823 187E  
                               i2l1815 1866                                 i2l1807 184A  
                               i2l1905 108E                                 i2l1819 1870  
                               i2l1791 1818                                 i2l1797 1828  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1C30  
                     __end_of_lcd_init 1970                         char_2_int@int1 001E  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1BBE                                 clear_0 1B08  
                     ___awdiv@quotient 0007                                 _minute 003D  
                               _second 0041                           __pdataCOMRAM 0024  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ??_version 0021  
                           __accesstop 0060                __end_of__initialization 1B0E  
                        getkey@keycode 00C6                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1B1C                             _char_2_int 1970  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1C30               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                             _int_2_char 1888  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 1804  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1A52                                __pcinit 1AC2  
                              __ramtop 0800                                __ptext0 12E4  
                              __ptext1 1B70                                __ptext2 18FE  
                              __ptext3 1C74                                __ptext4 11AA  
                              __ptext5 13F4                                __ptext6 14EC  
                              __ptext7 15E4                                __ptext8 16DC  
                              __ptext9 19E2                              _T0CONbits 000FD5  
                       SetupTime@F4312 009F                                _minuteA 003E  
                              _minuteB 003F                                _minuteC 0040  
                           ??_delay_ms 001F                            ?_char_2_int 0001  
                              _version 1B70                             ??_lcd_init 0021  
                       __pintcode_body 102E                   end_of_initialization 1B0E  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00E4                         SetupTime@hour1 00DE  
                        __Lmediumconst 0000                                int_func 102E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                  SetupAlarmTimeA@hour10 00DD  
                            _PORTAbits 000F80                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00DD  
                SetupAlarmTimeC@hour10 00DD                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0022  
                    ??_SetupAlarmTimeB 0022                      ??_SetupAlarmTimeC 0022  
                __end_of_lcd_write_cmd 1A52                __end_ofi2_lcd_write_cmd 1AC2  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1C90  
                       __end_of_getkey 1BFC                    start_initialization 1AC2  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00CA                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0039  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4322 0060                   SetupAlarmTimeB@F4332 0075  
                            delay_ms@i 001D                              delay_ms@j 0020  
                 SetupAlarmTimeC@F4342 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u160_47 179A                               i2u161_47 17AA  
                             i2u170_47 1AB8                               i2u162_47 17BC  
                             i2u171_47 1C5A                               i2u163_47 17D4  
                             i2u172_47 1C6A                               i2u164_47 17E4  
                             i2u165_47 17F8                               i2u166_47 1A5C  
                             i2u167_47 1A7C                               i2u159_47 177A  
                             i2u168_47 1A8E                               i2u169_47 1AA6  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 19E2                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 0022                    lcd_write_data@temp1 0020  
                      _SetupAlarmTimeA 15E4                        _SetupAlarmTimeB 14EC  
                      _SetupAlarmTimeC 13F4                         ??i2_lcd_strobe 0001  
                       version@Version 00B4                           ??_lcd_strobe 001D  
                     SetupTime@Message 00C7                              copy_data0 1AD6  
                            copy_data1 1AF6                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 1C90  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1C74                __size_of_lcd_write_data 0094  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                         version@outchar 00C9  
                          ??_SetupTime 0022                       SetupTime@minute1 00E0  
                     SetupTime@second1 00E2                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1C52                       SetupTime@outchar 00DC  
                   __end_of_int_2_char 18FE                       i2_lcd_write_data 1770  
                             _delay_ms 1BFC                               __ptext10 1C30  
                             __ptext11 1BBE                               __ptext12 1BFC  
                             __ptext13 1970                               __ptext15 1770  
                             __ptext16 1A52                               __ptext17 1C52  
                             __ptext18 1888                               __ptext19 1804  
                             _lcd_init 18FE                       __size_of_version 004E  
                        __size_of_main 0110          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0042                __end_of_SetupAlarmTimeA 16DC  
              __end_of_SetupAlarmTimeB 15E4                __end_of_SetupAlarmTimeC 14EC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1C74                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 16DC  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 19E2  
