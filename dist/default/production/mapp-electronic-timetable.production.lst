

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 16 12:03:25 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataCOMRAM
    44  001D6C                     __pidataCOMRAM:
    45                           	opt stack 0
    46                           
    47                           ;initializer for Startup@F4354
    48  001D6C  53                 	db	83
    49  001D6D  79                 	db	121
    50  001D6E  73                 	db	115
    51  001D6F  74                 	db	116
    52  001D70  65                 	db	101
    53  001D71  6D                 	db	109
    54  001D72  20                 	db	32
    55  001D73  43                 	db	67
    56  001D74  68                 	db	104
    57  001D75  65                 	db	101
    58  001D76  63                 	db	99
    59  001D77  6B                 	db	107
    60  001D78  20                 	db	32
    61  001D79  44                 	db	68
    62  001D7A  6F                 	db	111
    63  001D7B  6E                 	db	110
    64  001D7C  65                 	db	101
    65  001D7D  20                 	db	32
    66  001D7E  20                 	db	32
    67  001D7F  20                 	db	32
    68  001D80  00                 	db	0
    69                           
    70                           	psect	idataBANK0
    71  001BD8                     __pidataBANK0:
    72                           	opt stack 0
    73                           
    74                           ;initializer for SetupAlarmTimeA@F4326
    75  001BD8  53                 	db	83
    76  001BD9  75                 	db	117
    77  001BDA  62                 	db	98
    78  001BDB  6A                 	db	106
    79  001BDC  65                 	db	101
    80  001BDD  63                 	db	99
    81  001BDE  74                 	db	116
    82  001BDF  20                 	db	32
    83  001BE0  41                 	db	65
    84  001BE1  20                 	db	32
    85  001BE2  54                 	db	84
    86  001BE3  69                 	db	105
    87  001BE4  6D                 	db	109
    88  001BE5  65                 	db	101
    89  001BE6  20                 	db	32
    90  001BE7  68                 	db	104
    91  001BE8  68                 	db	104
    92  001BE9  6D                 	db	109
    93  001BEA  6D                 	db	109
    94  001BEB  3A                 	db	58
    95  001BEC  00                 	db	0
    96                           
    97                           ;initializer for SetupAlarmTimeB@F4336
    98  001BED  53                 	db	83
    99  001BEE  75                 	db	117
   100  001BEF  62                 	db	98
   101  001BF0  6A                 	db	106
   102  001BF1  65                 	db	101
   103  001BF2  63                 	db	99
   104  001BF3  74                 	db	116
   105  001BF4  20                 	db	32
   106  001BF5  42                 	db	66
   107  001BF6  20                 	db	32
   108  001BF7  54                 	db	84
   109  001BF8  69                 	db	105
   110  001BF9  6D                 	db	109
   111  001BFA  65                 	db	101
   112  001BFB  20                 	db	32
   113  001BFC  68                 	db	104
   114  001BFD  68                 	db	104
   115  001BFE  6D                 	db	109
   116  001BFF  6D                 	db	109
   117  001C00  3A                 	db	58
   118  001C01  00                 	db	0
   119                           
   120                           ;initializer for SetupAlarmTimeC@F4346
   121  001C02  53                 	db	83
   122  001C03  75                 	db	117
   123  001C04  62                 	db	98
   124  001C05  6A                 	db	106
   125  001C06  65                 	db	101
   126  001C07  63                 	db	99
   127  001C08  74                 	db	116
   128  001C09  20                 	db	32
   129  001C0A  43                 	db	67
   130  001C0B  20                 	db	32
   131  001C0C  54                 	db	84
   132  001C0D  69                 	db	105
   133  001C0E  6D                 	db	109
   134  001C0F  65                 	db	101
   135  001C10  20                 	db	32
   136  001C11  68                 	db	104
   137  001C12  68                 	db	104
   138  001C13  6D                 	db	109
   139  001C14  6D                 	db	109
   140  001C15  3A                 	db	58
   141  001C16  00                 	db	0
   142                           
   143                           ;initializer for SetupTime@F4316
   144  001C17  53                 	db	83
   145  001C18  65                 	db	101
   146  001C19  74                 	db	116
   147  001C1A  20                 	db	32
   148  001C1B  74                 	db	116
   149  001C1C  69                 	db	105
   150  001C1D  6D                 	db	109
   151  001C1E  65                 	db	101
   152  001C1F  20                 	db	32
   153  001C20  68                 	db	104
   154  001C21  68                 	db	104
   155  001C22  6D                 	db	109
   156  001C23  6D                 	db	109
   157  001C24  73                 	db	115
   158  001C25  73                 	db	115
   159  001C26  3A                 	db	58
   160  001C27  20                 	db	32
   161  001C28  20                 	db	32
   162  001C29  20                 	db	32
   163  001C2A  20                 	db	32
   164  001C2B  00                 	db	0
   165                           
   166                           ;initializer for Startup@F4352
   167  001C2C  53                 	db	83
   168  001C2D  79                 	db	121
   169  001C2E  73                 	db	115
   170  001C2F  74                 	db	116
   171  001C30  65                 	db	101
   172  001C31  6D                 	db	109
   173  001C32  20                 	db	32
   174  001C33  43                 	db	67
   175  001C34  68                 	db	104
   176  001C35  65                 	db	101
   177  001C36  63                 	db	99
   178  001C37  6B                 	db	107
   179  001C38  20                 	db	32
   180  001C39  20                 	db	32
   181  001C3A  20                 	db	32
   182  001C3B  20                 	db	32
   183  001C3C  20                 	db	32
   184  001C3D  20                 	db	32
   185  001C3E  20                 	db	32
   186  001C3F  20                 	db	32
   187  001C40  00                 	db	0
   188                           
   189                           	psect	idataBANK1
   190  001D81                     __pidataBANK1:
   191                           	opt stack 0
   192                           
   193                           ;initializer for version@F4277
   194  001D81  45                 	db	69
   195  001D82  54                 	db	84
   196  001D83  54                 	db	84
   197  001D84  20                 	db	32
   198  001D85  56                 	db	86
   199  001D86  65                 	db	101
   200  001D87  72                 	db	114
   201  001D88  73                 	db	115
   202  001D89  69                 	db	105
   203  001D8A  6F                 	db	111
   204  001D8B  6E                 	db	110
   205  001D8C  20                 	db	32
   206  001D8D  31                 	db	49
   207  001D8E  2E                 	db	46
   208  001D8F  36                 	db	54
   209  001D90  20                 	db	32
   210  001D91  20                 	db	32
   211  001D92  20                 	db	32
   212  001D93  20                 	db	32
   213  001D94  20                 	db	32
   214  001D95  00                 	db	0
   215                           
   216                           	psect	smallconst
   217  00101A                     __psmallconst:
   218                           	opt stack 0
   219  00101A  00                 	db	0
   220  00101B                     getkey@F4270:
   221                           	opt stack 0
   222  00101B  31                 	db	49
   223  00101C  32                 	db	50
   224  00101D  33                 	db	51
   225  00101E  46                 	db	70
   226  00101F  34                 	db	52
   227  001020  35                 	db	53
   228  001021  36                 	db	54
   229  001022  45                 	db	69
   230  001023  37                 	db	55
   231  001024  38                 	db	56
   232  001025  39                 	db	57
   233  001026  44                 	db	68
   234  001027  41                 	db	65
   235  001028  30                 	db	48
   236  001029  42                 	db	66
   237  00102A  43                 	db	67
   238  00102B  20                 	db	32
   239  00102C  00                 	db	0
   240  00102D                     __end_ofgetkey@F4270:
   241                           	opt stack 0
   242  0000                     _ADCON1	set	4033
   243  0000                     _CMCON	set	4020
   244  0000                     _INTCON2	set	4081
   245  0000                     _INTCONbits	set	4082
   246  0000                     _PORTA	set	3968
   247  0000                     _PORTAbits	set	3968
   248  0000                     _PORTB	set	3969
   249  0000                     _PORTBbits	set	3969
   250  0000                     _PORTD	set	3971
   251  0000                     _PORTDbits	set	3971
   252  0000                     _RCONbits	set	4048
   253  0000                     _T0CON	set	4053
   254  0000                     _T0CONbits	set	4053
   255  0000                     _TMR0H	set	4055
   256  0000                     _TMR0L	set	4054
   257  0000                     _TRISA	set	3986
   258  0000                     _TRISD	set	3989
   259  00102D  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264  001906                     __pcinit:
   265                           	opt stack 0
   266  001906                     start_initialization:
   267                           	opt stack 0
   268  001906                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Initialize objects allocated to BANK1 (21 bytes)
   272                           ; load TBLPTR registers with __pidataBANK1
   273  001906  0E81               	movlw	low __pidataBANK1
   274  001908  6EF6               	movwf	tblptrl,c
   275  00190A  0E1D               	movlw	high __pidataBANK1
   276  00190C  6EF7               	movwf	tblptrh,c
   277  00190E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   278  001910  6EF8               	movwf	tblptru,c
   279  001912  EE01  F000         	lfsr	0,__pdataBANK1
   280  001916  EE10 F015          	lfsr	1,21
   281  00191A                     copy_data0:
   282  00191A  0009               	tblrd		*+
   283  00191C  CFF5 FFEE          	movff	tablat,postinc0
   284  001920  50E5               	movf	postdec1,w,c
   285  001922  50E1               	movf	fsr1l,w,c
   286  001924  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to BANK0 (105 bytes)
   289                           ; load TBLPTR registers with __pidataBANK0
   290  001926  0ED8               	movlw	low __pidataBANK0
   291  001928  6EF6               	movwf	tblptrl,c
   292  00192A  0E1B               	movlw	high __pidataBANK0
   293  00192C  6EF7               	movwf	tblptrh,c
   294  00192E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   295  001930  6EF8               	movwf	tblptru,c
   296  001932  EE00  F060         	lfsr	0,__pdataBANK0
   297  001936  EE10 F069          	lfsr	1,105
   298  00193A                     copy_data1:
   299  00193A  0009               	tblrd		*+
   300  00193C  CFF5 FFEE          	movff	tablat,postinc0
   301  001940  50E5               	movf	postdec1,w,c
   302  001942  50E1               	movf	fsr1l,w,c
   303  001944  E1FA               	bnz	copy_data1
   304                           
   305                           ; Initialize objects allocated to COMRAM (21 bytes)
   306                           ; load TBLPTR registers with __pidataCOMRAM
   307  001946  0E6C               	movlw	low __pidataCOMRAM
   308  001948  6EF6               	movwf	tblptrl,c
   309  00194A  0E1D               	movlw	high __pidataCOMRAM
   310  00194C  6EF7               	movwf	tblptrh,c
   311  00194E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   312  001950  6EF8               	movwf	tblptru,c
   313  001952  EE00  F01F         	lfsr	0,__pdataCOMRAM
   314  001956  EE10 F015          	lfsr	1,21
   315  00195A                     copy_data2:
   316  00195A  0009               	tblrd		*+
   317  00195C  CFF5 FFEE          	movff	tablat,postinc0
   318  001960  50E5               	movf	postdec1,w,c
   319  001962  50E1               	movf	fsr1l,w,c
   320  001964  E1FA               	bnz	copy_data2
   321                           
   322                           ; Clear objects allocated to BANK0 (2 bytes)
   323  001966  0100               	movlb	0
   324  001968  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   325  00196A  6BFA               	clrf	__pbssBANK0& (0+255),b
   326                           
   327                           ; Clear objects allocated to COMRAM (15 bytes)
   328  00196C  EE00  F034         	lfsr	0,__pbssCOMRAM
   329  001970  0E0F               	movlw	15
   330  001972                     clear_0:
   331  001972  6AEE               	clrf	postinc0,c
   332  001974  06E8               	decf	wreg,f,c
   333  001976  E1FD               	bnz	clear_0
   334  001978                     end_of_initialization:
   335                           	opt stack 0
   336  001978                     __end_of__initialization:
   337                           	opt stack 0
   338  001978  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   339  00197A  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   340  00197C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   341  00197E  6EF8               	movwf	tblptru,c
   342  001980  0100               	movlb	0
   343  001982  EF50  F00B         	goto	_main	;jump to C main() function
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           postdec1	equ	0xFE5
   351                           fsr1l	equ	0xFE1
   352                           
   353                           	psect	bssCOMRAM
   354  000034                     __pbssCOMRAM:
   355                           	opt stack 0
   356  000034                     _AlarmAOff:
   357                           	opt stack 0
   358  000034                     	ds	2
   359  000036                     _AlarmBOff:
   360                           	opt stack 0
   361  000036                     	ds	2
   362  000038                     _AlarmC2Off:
   363                           	opt stack 0
   364  000038                     	ds	2
   365  00003A                     _hour:
   366                           	opt stack 0
   367  00003A                     	ds	1
   368  00003B                     _hourA:
   369                           	opt stack 0
   370  00003B                     	ds	1
   371  00003C                     _hourB:
   372                           	opt stack 0
   373  00003C                     	ds	1
   374  00003D                     _hourC:
   375                           	opt stack 0
   376  00003D                     	ds	1
   377  00003E                     _minute:
   378                           	opt stack 0
   379  00003E                     	ds	1
   380  00003F                     _minuteA:
   381                           	opt stack 0
   382  00003F                     	ds	1
   383  000040                     _minuteB:
   384                           	opt stack 0
   385  000040                     	ds	1
   386  000041                     _minuteC:
   387                           	opt stack 0
   388  000041                     	ds	1
   389  000042                     _second:
   390                           	opt stack 0
   391  000042                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	dataCOMRAM
   402  00001F                     __pdataCOMRAM:
   403                           	opt stack 0
   404  00001F                     Startup@F4354:
   405                           	opt stack 0
   406  00001F                     	ds	21
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	bssBANK0
   417  0000FA                     __pbssBANK0:
   418                           	opt stack 0
   419  0000FA                     _AlarmCOff:
   420                           	opt stack 0
   421  0000FA                     	ds	2
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1l	equ	0xFE1
   430                           
   431                           	psect	dataBANK0
   432  000060                     __pdataBANK0:
   433                           	opt stack 0
   434  000060                     SetupAlarmTimeA@F4326:
   435                           	opt stack 0
   436  000060                     	ds	21
   437  000075                     SetupAlarmTimeB@F4336:
   438                           	opt stack 0
   439  000075                     	ds	21
   440  00008A                     SetupAlarmTimeC@F4346:
   441                           	opt stack 0
   442  00008A                     	ds	21
   443  00009F                     SetupTime@F4316:
   444                           	opt stack 0
   445  00009F                     	ds	21
   446  0000B4                     Startup@F4352:
   447                           	opt stack 0
   448  0000B4                     	ds	21
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458                           	psect	dataBANK1
   459  000100                     __pdataBANK1:
   460                           	opt stack 0
   461  000100                     version@F4277:
   462                           	opt stack 0
   463  000100                     	ds	21
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	cstackBANK0
   474  0000C9                     __pcstackBANK0:
   475                           	opt stack 0
   476  0000C9                     ??_delay_ms:
   477  0000C9                     lcd_write_cmd@cmd:
   478                           	opt stack 0
   479  0000C9                     lcd_write_data@data:
   480                           	opt stack 0
   481  0000C9                     getkey@lookup:
   482                           	opt stack 0
   483                           
   484                           ; 18 bytes @ 0x0
   485  0000C9                     	ds	1
   486  0000CA                     lcd_write_cmd@temp2:
   487                           	opt stack 0
   488  0000CA                     lcd_write_data@temp1:
   489                           	opt stack 0
   490  0000CA                     delay_ms@j:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x1
   494  0000CA                     	ds	1
   495  0000CB                     ??_lcd_init:
   496  0000CB                     version@Version:
   497                           	opt stack 0
   498                           
   499                           ; 21 bytes @ 0x2
   500  0000CB                     	ds	1
   501  0000CC                     lcd_init@i:
   502                           	opt stack 0
   503  0000CC                     Startup@Startup:
   504                           	opt stack 0
   505                           
   506                           ; 21 bytes @ 0x3
   507  0000CC                     	ds	15
   508  0000DB                     getkey@keycode:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x12
   512  0000DB                     	ds	1
   513  0000DC                     SetupTime@Message:
   514                           	opt stack 0
   515  0000DC                     SetupAlarmTimeA@Message:
   516                           	opt stack 0
   517  0000DC                     SetupAlarmTimeB@Message:
   518                           	opt stack 0
   519  0000DC                     SetupAlarmTimeC@Message:
   520                           	opt stack 0
   521                           
   522                           ; 21 bytes @ 0x13
   523  0000DC                     	ds	4
   524  0000E0                     version@outchar:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x17
   528  0000E0                     	ds	1
   529  0000E1                     version@msgindex:
   530                           	opt stack 0
   531  0000E1                     Startup@StartupDone:
   532                           	opt stack 0
   533                           
   534                           ; 21 bytes @ 0x18
   535  0000E1                     	ds	16
   536  0000F1                     SetupTime@outchar:
   537                           	opt stack 0
   538  0000F1                     SetupAlarmTimeA@outchar:
   539                           	opt stack 0
   540  0000F1                     SetupAlarmTimeB@outchar:
   541                           	opt stack 0
   542  0000F1                     SetupAlarmTimeC@outchar:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x28
   546  0000F1                     	ds	1
   547  0000F2                     SetupTime@hour10:
   548                           	opt stack 0
   549  0000F2                     SetupAlarmTimeA@hour10:
   550                           	opt stack 0
   551  0000F2                     SetupAlarmTimeB@hour10:
   552                           	opt stack 0
   553  0000F2                     SetupAlarmTimeC@hour10:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x29
   557  0000F2                     	ds	1
   558  0000F3                     SetupTime@hour1:
   559                           	opt stack 0
   560  0000F3                     SetupAlarmTimeA@hour1:
   561                           	opt stack 0
   562  0000F3                     SetupAlarmTimeB@hour1:
   563                           	opt stack 0
   564  0000F3                     SetupAlarmTimeC@hour1:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x2A
   568  0000F3                     	ds	1
   569  0000F4                     SetupTime@minute10:
   570                           	opt stack 0
   571  0000F4                     SetupAlarmTimeA@minute10:
   572                           	opt stack 0
   573  0000F4                     SetupAlarmTimeB@minute10:
   574                           	opt stack 0
   575  0000F4                     SetupAlarmTimeC@minute10:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2B
   579  0000F4                     	ds	1
   580  0000F5                     SetupTime@minute1:
   581                           	opt stack 0
   582  0000F5                     SetupAlarmTimeA@minute1:
   583                           	opt stack 0
   584  0000F5                     SetupAlarmTimeB@minute1:
   585                           	opt stack 0
   586  0000F5                     SetupAlarmTimeC@minute1:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x2C
   590  0000F5                     	ds	1
   591  0000F6                     SetupTime@second10:
   592                           	opt stack 0
   593  0000F6                     SetupAlarmTimeA@msgindex:
   594                           	opt stack 0
   595  0000F6                     SetupAlarmTimeB@msgindex:
   596                           	opt stack 0
   597  0000F6                     SetupAlarmTimeC@msgindex:
   598                           	opt stack 0
   599  0000F6                     Startup@outchar:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x2D
   603  0000F6                     	ds	1
   604  0000F7                     SetupTime@second1:
   605                           	opt stack 0
   606  0000F7                     SetupAlarmTimeA@ctemp:
   607                           	opt stack 0
   608  0000F7                     SetupAlarmTimeB@ctemp:
   609                           	opt stack 0
   610  0000F7                     SetupAlarmTimeC@ctemp:
   611                           	opt stack 0
   612  0000F7                     Startup@msgindex:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x2E
   616  0000F7                     	ds	1
   617  0000F8                     SetupTime@msgindex:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x2F
   621  0000F8                     	ds	1
   622  0000F9                     SetupTime@ctemp:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x30
   626  0000F9                     	ds	1
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	cstackCOMRAM
   637  000001                     __pcstackCOMRAM:
   638                           	opt stack 0
   639  000001                     ??i2_lcd_strobe:
   640  000001                     ?___awdiv:
   641                           	opt stack 0
   642  000001                     int_2_char@int1:
   643                           	opt stack 0
   644  000001                     ___awdiv@dividend:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x0
   648  000001                     	ds	1
   649  000002                     ??i2_lcd_write_cmd:
   650  000002                     ??i2_lcd_write_data:
   651  000002                     int_2_char@char1:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x1
   655  000002                     	ds	1
   656  000003                     i2lcd_write_cmd@cmd:
   657                           	opt stack 0
   658  000003                     i2lcd_write_data@data:
   659                           	opt stack 0
   660  000003                     ___awdiv@divisor:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x2
   664  000003                     	ds	1
   665  000004                     i2lcd_write_cmd@temp2:
   666                           	opt stack 0
   667  000004                     i2lcd_write_data@temp1:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x3
   671  000004                     	ds	1
   672  000005                     ___awdiv@counter:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x4
   676  000005                     	ds	1
   677  000006                     ___awdiv@sign:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x5
   681  000006                     	ds	1
   682  000007                     ___awdiv@quotient:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x6
   686  000007                     	ds	2
   687  000009                     ??_ISR_Timer0_Int:
   688                           
   689                           ; 1 bytes @ 0x8
   690  000009                     	ds	14
   691  000017                     ISR_Timer0_Int@hour1:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x16
   695  000017                     	ds	1
   696  000018                     ISR_Timer0_Int@minute1:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x17
   700  000018                     	ds	1
   701  000019                     ISR_Timer0_Int@second1:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x18
   705  000019                     	ds	1
   706  00001A                     ISR_Timer0_Int@hour10:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x19
   710  00001A                     	ds	1
   711  00001B                     ISR_Timer0_Int@minute10:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x1A
   715  00001B                     	ds	1
   716  00001C                     ISR_Timer0_Int@second10:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x1B
   720  00001C                     	ds	1
   721  00001D                     ??_lcd_strobe:
   722  00001D                     char_2_int@char1:
   723                           	opt stack 0
   724  00001D                     delay_ms@i:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x1C
   728  00001D                     	ds	1
   729  00001E                     ??_lcd_write_cmd:
   730  00001E                     ??_lcd_write_data:
   731  00001E                     char_2_int@int1:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x1D
   735  00001E                     	ds	1
   736  00001F                     tblptru	equ	0xFF8
   737                           tblptrh	equ	0xFF7
   738                           tblptrl	equ	0xFF6
   739                           tablat	equ	0xFF5
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           
   745                           ; 1 bytes @ 0x1E
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 344 in file "Main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels required when called:    6
   771 ;; This function calls:
   772 ;;		_SetupAlarmTimeA
   773 ;;		_SetupAlarmTimeB
   774 ;;		_SetupAlarmTimeC
   775 ;;		_SetupTime
   776 ;;		_SetupTimerInterruptRegisters
   777 ;;		_Startup
   778 ;;		_lcd_init
   779 ;;		_version
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786  0016A0                     __ptext0:
   787                           	opt stack 0
   788  0016A0                     _main:
   789                           	opt stack 25
   790                           
   791                           ;Main.c: 346: ADCON1 = 0x0F;
   792                           
   793                           ;incstack = 0
   794  0016A0  0E0F               	movlw	15
   795  0016A2  6EC1               	movwf	4033,c	;volatile
   796                           
   797                           ;Main.c: 347: CMCON = 0x07;
   798  0016A4  0E07               	movlw	7
   799  0016A6  6EB4               	movwf	4020,c	;volatile
   800                           
   801                           ;Main.c: 349: lcd_init();
   802  0016A8  ECC3  F00C         	call	_lcd_init	;wreg free
   803                           
   804                           ;Main.c: 350: TRISA = 0b00110000;
   805  0016AC  0E30               	movlw	48
   806  0016AE  6E92               	movwf	3986,c	;volatile
   807                           
   808                           ;Main.c: 352: version();
   809  0016B0  EC21  F00E         	call	_version	;wreg free
   810                           
   811                           ;Main.c: 353: Startup();
   812  0016B4  ECE6  F00A         	call	_Startup	;wreg free
   813                           
   814                           ;Main.c: 354: SetupTime();
   815  0016B8  ECD5  F008         	call	_SetupTime	;wreg free
   816                           
   817                           ;Main.c: 355: SetupAlarmTimeA();
   818  0016BC  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   819                           
   820                           ;Main.c: 356: SetupAlarmTimeB();
   821  0016C0  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   822                           
   823                           ;Main.c: 357: SetupAlarmTimeC();
   824  0016C4  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   825                           
   826                           ;Main.c: 358: SetupTimerInterruptRegisters();
   827  0016C8  ECA8  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   828  0016CC                     l2449:
   829                           
   830                           ;Main.c: 361: {
   831                           ;Main.c: 362: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   832  0016CC  503B               	movf	_hourA,w,c
   833  0016CE  183A               	xorwf	_hour,w,c
   834  0016D0  A4D8               	btfss	status,2,c
   835  0016D2  D011               	goto	l2459
   836  0016D4  503F               	movf	_minuteA,w,c
   837  0016D6  183E               	xorwf	_minute,w,c
   838  0016D8  A4D8               	btfss	status,2,c
   839  0016DA  D00D               	goto	l2459
   840  0016DC  5034               	movf	_AlarmAOff,w,c
   841  0016DE  1035               	iorwf	_AlarmAOff+1,w,c
   842  0016E0  A4D8               	btfss	status,2,c
   843  0016E2  D009               	goto	l2459
   844                           
   845                           ;Main.c: 363: {
   846                           ;Main.c: 365: PORTAbits.RA0 = 1;
   847  0016E4  8080               	bsf	3968,0,c	;volatile
   848                           
   849                           ;Main.c: 366: PORTAbits.RA1 = 1;
   850  0016E6  8280               	bsf	3968,1,c	;volatile
   851  0016E8                     l187:
   852  0016E8  BA80               	btfsc	3968,5,c	;volatile
   853  0016EA  D7FE               	goto	l187
   854                           
   855                           ;Main.c: 368: AlarmAOff = 1;
   856  0016EC  0E00               	movlw	0
   857  0016EE  6E35               	movwf	_AlarmAOff+1,c
   858  0016F0  0E01               	movlw	1
   859  0016F2  6E34               	movwf	_AlarmAOff,c
   860                           
   861                           ;Main.c: 369: }
   862  0016F4  D7EB               	goto	l2449
   863  0016F6                     l2459:
   864                           
   865                           ;Main.c: 370: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   866  0016F6  503C               	movf	_hourB,w,c
   867  0016F8  183A               	xorwf	_hour,w,c
   868  0016FA  A4D8               	btfss	status,2,c
   869  0016FC  D011               	goto	l2469
   870  0016FE  5040               	movf	_minuteB,w,c
   871  001700  183E               	xorwf	_minute,w,c
   872  001702  A4D8               	btfss	status,2,c
   873  001704  D00D               	goto	l2469
   874  001706  5036               	movf	_AlarmBOff,w,c
   875  001708  1037               	iorwf	_AlarmBOff+1,w,c
   876  00170A  A4D8               	btfss	status,2,c
   877  00170C  D009               	goto	l2469
   878                           
   879                           ;Main.c: 371: {
   880                           ;Main.c: 373: PORTAbits.RA0 = 1;
   881  00170E  8080               	bsf	3968,0,c	;volatile
   882                           
   883                           ;Main.c: 374: PORTAbits.RA2 = 1;
   884  001710  8480               	bsf	3968,2,c	;volatile
   885  001712                     l192:
   886  001712  BA80               	btfsc	3968,5,c	;volatile
   887  001714  D7FE               	goto	l192
   888                           
   889                           ;Main.c: 376: AlarmBOff = 1;
   890  001716  0E00               	movlw	0
   891  001718  6E37               	movwf	_AlarmBOff+1,c
   892  00171A  0E01               	movlw	1
   893  00171C  6E36               	movwf	_AlarmBOff,c
   894                           
   895                           ;Main.c: 377: }
   896  00171E  D7D6               	goto	l2449
   897  001720                     l2469:
   898                           
   899                           ;Main.c: 378: else if(hour==hourC && minute==minuteC && AlarmC2Off == 0)
   900  001720  503D               	movf	_hourC,w,c
   901  001722  183A               	xorwf	_hour,w,c
   902  001724  A4D8               	btfss	status,2,c
   903  001726  D011               	goto	l2479
   904  001728  5041               	movf	_minuteC,w,c
   905  00172A  183E               	xorwf	_minute,w,c
   906  00172C  A4D8               	btfss	status,2,c
   907  00172E  D00D               	goto	l2479
   908  001730  5038               	movf	_AlarmC2Off,w,c
   909  001732  1039               	iorwf	_AlarmC2Off+1,w,c
   910  001734  A4D8               	btfss	status,2,c
   911  001736  D009               	goto	l2479
   912                           
   913                           ;Main.c: 379: {
   914                           ;Main.c: 381: PORTAbits.RA0 = 1;
   915  001738  8080               	bsf	3968,0,c	;volatile
   916                           
   917                           ;Main.c: 382: PORTAbits.RA3 = 1;
   918  00173A  8680               	bsf	3968,3,c	;volatile
   919  00173C                     l197:
   920  00173C  BA80               	btfsc	3968,5,c	;volatile
   921  00173E  D7FE               	goto	l197
   922                           
   923                           ;Main.c: 384: AlarmC2Off = 1;
   924  001740  0E00               	movlw	0
   925  001742  6E39               	movwf	_AlarmC2Off+1,c
   926  001744  0E01               	movlw	1
   927  001746  6E38               	movwf	_AlarmC2Off,c
   928                           
   929                           ;Main.c: 385: }
   930  001748  D7C1               	goto	l2449
   931  00174A                     l2479:
   932                           
   933                           ;Main.c: 386: else
   934                           ;Main.c: 387: {
   935                           ;Main.c: 388: PORTA = 0b00000000;
   936  00174A  0E00               	movlw	0
   937  00174C  6E80               	movwf	3968,c	;volatile
   938  00174E  D7BE               	goto	l2449
   939  001750                     __end_of_main:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _version *****************
   952 ;; Defined at:
   953 ;;		line 12 in file "version.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  Version        21    2[BANK0 ] unsigned char [21]
   958 ;;  msgindex        1   24[BANK0 ] unsigned char 
   959 ;;  outchar         1   23[BANK0 ] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  2   73[None  ] int 
   962 ;; Registers used:
   963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         0       0       0       0       0       0       0       0       0
   970 ;;      Locals:         0      23       0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0
   972 ;;      Totals:         0      23       0       0       0       0       0       0       0
   973 ;;Total ram usage:       23 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    5
   976 ;; This function calls:
   977 ;;		_lcd_write_cmd
   978 ;;		_lcd_write_data
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text1
   985  001C42                     __ptext1:
   986                           	opt stack 0
   987  001C42                     _version:
   988                           	opt stack 25
   989                           
   990                           ;version.c: 14: unsigned char msgindex, outchar;
   991                           ;version.c: 15: char Version[ ] = "ETT Version 1.6     ";
   992                           
   993                           ;incstack = 0
   994  001C42  EE21  F000         	lfsr	2,version@F4277
   995  001C46  EE10  F0CB         	lfsr	1,version@Version
   996  001C4A  0E14               	movlw	20
   997  001C4C                     u1301:
   998  001C4C  CFDB FFE3          	movff	plusw2,plusw1
   999  001C50  06E8               	decf	wreg,f,c
  1000  001C52  E2FC               	bc	u1301
  1001                           
  1002                           ;version.c: 17: lcd_write_cmd(0x80);
  1003  001C54  0E80               	movlw	128
  1004  001C56  EC03  F00D         	call	_lcd_write_cmd
  1005                           
  1006                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
  1007  001C5A  0E00               	movlw	0
  1008  001C5C  0100               	movlb	0	; () banked
  1009  001C5E  6FE1               	movwf	version@msgindex& (0+255),b
  1010  001C60                     l2417:
  1011                           
  1012                           ; BSR set to: 0
  1013  001C60  0E13               	movlw	19
  1014  001C62  0100               	movlb	0	; () banked
  1015  001C64  65E1               	cpfsgt	version@msgindex& (0+255),b
  1016  001C66  D001               	goto	l2421
  1017  001C68  0012               	return	
  1018  001C6A                     l2421:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;version.c: 20: {
  1022                           ;version.c: 21: outchar = Version[msgindex];
  1023  001C6A  0100               	movlb	0	; () banked
  1024  001C6C  51E1               	movf	version@msgindex& (0+255),w,b
  1025  001C6E  0D01               	mullw	1
  1026  001C70  0ECB               	movlw	low version@Version
  1027  001C72  24F3               	addwf	prodl,w,c
  1028  001C74  6ED9               	movwf	fsr2l,c
  1029  001C76  0E00               	movlw	high version@Version
  1030  001C78  20F4               	addwfc	prodh,w,c
  1031  001C7A  6EDA               	movwf	fsr2h,c
  1032  001C7C  50DF               	movf	indf2,w,c
  1033  001C7E  0100               	movlb	0	; () banked
  1034  001C80  6FE0               	movwf	version@outchar& (0+255),b
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;version.c: 22: lcd_write_data(outchar);
  1038  001C82  0100               	movlb	0	; () banked
  1039  001C84  51E0               	movf	version@outchar& (0+255),w,b
  1040  001C86  ECA8  F00B         	call	_lcd_write_data
  1041  001C8A  0100               	movlb	0	; () banked
  1042  001C8C  2BE1               	incf	version@msgindex& (0+255),f,b
  1043  001C8E  D7E8               	goto	l2417
  1044  001C90                     __end_of_version:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           prodh	equ	0xFF4
  1051                           prodl	equ	0xFF3
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           postdec1	equ	0xFE5
  1055                           plusw1	equ	0xFE3
  1056                           fsr1l	equ	0xFE1
  1057                           indf2	equ	0xFDF
  1058                           plusw2	equ	0xFDB
  1059                           fsr2h	equ	0xFDA
  1060                           fsr2l	equ	0xFD9
  1061                           status	equ	0xFD8
  1062                           
  1063 ;; *************** function _lcd_init *****************
  1064 ;; Defined at:
  1065 ;;		line 83 in file "lcd_utilities.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  i               2    3[BANK0 ] int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0
  1080 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1081 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1082 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1083 ;;Total ram usage:        3 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		_lcd_write_cmd
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text2
  1094  001986                     __ptext2:
  1095                           	opt stack 0
  1096  001986                     _lcd_init:
  1097                           	opt stack 25
  1098                           
  1099                           ;lcd_utilities.c: 85: int i;
  1100                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;incstack = 0
  1104  001986  0E00               	movlw	0
  1105  001988  6E95               	movwf	3989,c	;volatile
  1106                           
  1107                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1108  00198A  0E00               	movlw	0
  1109  00198C  6E83               	movwf	3971,c	;volatile
  1110                           
  1111                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1112  00198E  9883               	bcf	3971,4,c	;volatile
  1113                           
  1114                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1115  001990  9C83               	bcf	3971,6,c	;volatile
  1116                           
  1117                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1118  001992  9A83               	bcf	3971,5,c	;volatile
  1119                           
  1120                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1121  001994  0E00               	movlw	0
  1122  001996  0100               	movlb	0	; () banked
  1123  001998  6FCD               	movwf	(lcd_init@i+1)& (0+255),b
  1124  00199A  0E00               	movlw	0
  1125  00199C  6FCC               	movwf	lcd_init@i& (0+255),b
  1126  00199E                     l2175:
  1127                           
  1128                           ; BSR set to: 0
  1129  00199E  0100               	movlb	0	; () banked
  1130  0019A0  BFCD               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1131  0019A2  D008               	goto	l2179
  1132  0019A4  0100               	movlb	0	; () banked
  1133  0019A6  51CD               	movf	(lcd_init@i+1)& (0+255),w,b
  1134  0019A8  E112               	bnz	l2183
  1135  0019AA  0E64               	movlw	100
  1136  0019AC  0100               	movlb	0	; () banked
  1137  0019AE  5DCC               	subwf	lcd_init@i& (0+255),w,b
  1138  0019B0  B0D8               	btfsc	status,0,c
  1139  0019B2  D00D               	goto	l2183
  1140  0019B4                     l2179:
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1144  0019B4  0E9C               	movlw	156
  1145  0019B6  0100               	movlb	0	; () banked
  1146  0019B8  6FCB               	movwf	??_lcd_init& (0+255),b
  1147  0019BA  0ED7               	movlw	215
  1148  0019BC                     u1457:
  1149  0019BC  2EE8               	decfsz	wreg,f,c
  1150  0019BE  D7FE               	goto	u1457
  1151  0019C0  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1152  0019C2  D7FC               	goto	u1457
  1153  0019C4  F000               	nop	
  1154  0019C6  0100               	movlb	0	; () banked
  1155  0019C8  4BCC               	infsnz	lcd_init@i& (0+255),f,b
  1156  0019CA  2BCD               	incf	(lcd_init@i+1)& (0+255),f,b
  1157  0019CC  D7E8               	goto	l2175
  1158  0019CE                     l2183:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1162  0019CE  0E33               	movlw	51
  1163  0019D0  EC03  F00D         	call	_lcd_write_cmd
  1164                           
  1165                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1166  0019D4  0E32               	movlw	50
  1167  0019D6  EC03  F00D         	call	_lcd_write_cmd
  1168                           
  1169                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1170  0019DA  0E28               	movlw	40
  1171  0019DC  EC03  F00D         	call	_lcd_write_cmd
  1172                           
  1173                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1174  0019E0  0E0E               	movlw	14
  1175  0019E2  EC03  F00D         	call	_lcd_write_cmd
  1176                           
  1177                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1178  0019E6  0E06               	movlw	6
  1179  0019E8  EC03  F00D         	call	_lcd_write_cmd
  1180                           
  1181                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1182  0019EC  0E01               	movlw	1
  1183  0019EE  EC03  F00D         	call	_lcd_write_cmd
  1184                           
  1185                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1186  0019F2  0E9C               	movlw	156
  1187  0019F4  0100               	movlb	0	; () banked
  1188  0019F6  6FCB               	movwf	??_lcd_init& (0+255),b
  1189  0019F8  0ED7               	movlw	215
  1190  0019FA                     u1467:
  1191  0019FA  2EE8               	decfsz	wreg,f,c
  1192  0019FC  D7FE               	goto	u1467
  1193  0019FE  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1194  001A00  D7FC               	goto	u1467
  1195  001A02  F000               	nop	
  1196  001A04  0012               	return		;funcret
  1197  001A06                     __end_of_lcd_init:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           prodh	equ	0xFF4
  1204                           prodl	equ	0xFF3
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           plusw1	equ	0xFE3
  1209                           fsr1l	equ	0xFE1
  1210                           indf2	equ	0xFDF
  1211                           plusw2	equ	0xFDB
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _Startup *****************
  1217 ;; Defined at:
  1218 ;;		line 312 in file "Main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  StartupDone    21   24[BANK0 ] unsigned char [21]
  1223 ;;  Startup        21    3[BANK0 ] unsigned char [21]
  1224 ;;  msgindex        1   46[BANK0 ] unsigned char 
  1225 ;;  outchar         1   45[BANK0 ] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         0       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         0      44       0       0       0       0       0       0       0
  1239 ;;Total ram usage:       44 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    5
  1242 ;; This function calls:
  1243 ;;		_delay_ms
  1244 ;;		_lcd_write_cmd
  1245 ;;		_lcd_write_data
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text3
  1252  0015CC                     __ptext3:
  1253                           	opt stack 0
  1254  0015CC                     _Startup:
  1255                           	opt stack 25
  1256                           
  1257                           ;Main.c: 314: unsigned char msgindex, outchar;
  1258                           ;Main.c: 315: char Startup[ ] = "System Check        ";
  1259                           
  1260                           ;incstack = 0
  1261  0015CC  EE20  F0B4         	lfsr	2,Startup@F4352
  1262  0015D0  EE10  F0CC         	lfsr	1,Startup@Startup
  1263  0015D4  0E14               	movlw	20
  1264  0015D6                     u1241:
  1265  0015D6  CFDB FFE3          	movff	plusw2,plusw1
  1266  0015DA  06E8               	decf	wreg,f,c
  1267  0015DC  E2FC               	bc	u1241
  1268                           
  1269                           ;Main.c: 317: lcd_write_cmd(0x80);
  1270  0015DE  0E80               	movlw	128
  1271  0015E0  EC03  F00D         	call	_lcd_write_cmd
  1272                           
  1273                           ;Main.c: 319: for (msgindex = 0; msgindex < 20; msgindex++)
  1274  0015E4  0E00               	movlw	0
  1275  0015E6  0100               	movlb	0	; () banked
  1276  0015E8  6FF7               	movwf	Startup@msgindex& (0+255),b
  1277  0015EA                     l2373:
  1278                           
  1279                           ; BSR set to: 0
  1280  0015EA  0E13               	movlw	19
  1281  0015EC  0100               	movlb	0	; () banked
  1282  0015EE  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1283  0015F0  D001               	goto	l2377
  1284  0015F2  D013               	goto	l2385
  1285  0015F4                     l2377:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;Main.c: 320: {
  1289                           ;Main.c: 321: outchar = Startup[msgindex];
  1290  0015F4  0100               	movlb	0	; () banked
  1291  0015F6  51F7               	movf	Startup@msgindex& (0+255),w,b
  1292  0015F8  0D01               	mullw	1
  1293  0015FA  0ECC               	movlw	low Startup@Startup
  1294  0015FC  24F3               	addwf	prodl,w,c
  1295  0015FE  6ED9               	movwf	fsr2l,c
  1296  001600  0E00               	movlw	high Startup@Startup
  1297  001602  20F4               	addwfc	prodh,w,c
  1298  001604  6EDA               	movwf	fsr2h,c
  1299  001606  50DF               	movf	indf2,w,c
  1300  001608  0100               	movlb	0	; () banked
  1301  00160A  6FF6               	movwf	Startup@outchar& (0+255),b
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;Main.c: 322: lcd_write_data(outchar);
  1305  00160C  0100               	movlb	0	; () banked
  1306  00160E  51F6               	movf	Startup@outchar& (0+255),w,b
  1307  001610  ECA8  F00B         	call	_lcd_write_data
  1308  001614  0100               	movlb	0	; () banked
  1309  001616  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1310  001618  D7E8               	goto	l2373
  1311  00161A                     l2385:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;Main.c: 323: }
  1315                           ;Main.c: 325: PORTA = 0b00001111;
  1316  00161A  0E0F               	movlw	15
  1317  00161C  6E80               	movwf	3968,c	;volatile
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;Main.c: 326: delay_ms(1000);
  1321  00161E  0E03               	movlw	3
  1322  001620  6E1E               	movwf	delay_ms@i+1,c
  1323  001622  0EE8               	movlw	232
  1324  001624  6E1D               	movwf	delay_ms@i,c
  1325  001626  EC67  F00E         	call	_delay_ms	;wreg free
  1326                           
  1327                           ;Main.c: 327: PORTA = 0b00000000;
  1328  00162A  0E00               	movlw	0
  1329  00162C  6E80               	movwf	3968,c	;volatile
  1330                           
  1331                           ;Main.c: 329: char StartupDone[ ] = "System Check Done   ";
  1332  00162E  EE20  F01F         	lfsr	2,Startup@F4354
  1333  001632  EE10  F0E1         	lfsr	1,Startup@StartupDone
  1334  001636  0E14               	movlw	20
  1335  001638                     u1271:
  1336  001638  CFDB FFE3          	movff	plusw2,plusw1
  1337  00163C  06E8               	decf	wreg,f,c
  1338  00163E  E2FC               	bc	u1271
  1339                           
  1340                           ;Main.c: 331: lcd_write_cmd(0x80);
  1341  001640  0E80               	movlw	128
  1342  001642  EC03  F00D         	call	_lcd_write_cmd
  1343                           
  1344                           ;Main.c: 333: for (msgindex = 0; msgindex < 20; msgindex++)
  1345  001646  0E00               	movlw	0
  1346  001648  0100               	movlb	0	; () banked
  1347  00164A  6FF7               	movwf	Startup@msgindex& (0+255),b
  1348  00164C                     l2397:
  1349                           
  1350                           ; BSR set to: 0
  1351  00164C  0E13               	movlw	19
  1352  00164E  0100               	movlb	0	; () banked
  1353  001650  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1354  001652  D001               	goto	l2401
  1355  001654  D013               	goto	l2409
  1356  001656                     l2401:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;Main.c: 334: {
  1360                           ;Main.c: 335: outchar = StartupDone[msgindex];
  1361  001656  0100               	movlb	0	; () banked
  1362  001658  51F7               	movf	Startup@msgindex& (0+255),w,b
  1363  00165A  0D01               	mullw	1
  1364  00165C  0EE1               	movlw	low Startup@StartupDone
  1365  00165E  24F3               	addwf	prodl,w,c
  1366  001660  6ED9               	movwf	fsr2l,c
  1367  001662  0E00               	movlw	high Startup@StartupDone
  1368  001664  20F4               	addwfc	prodh,w,c
  1369  001666  6EDA               	movwf	fsr2h,c
  1370  001668  50DF               	movf	indf2,w,c
  1371  00166A  0100               	movlb	0	; () banked
  1372  00166C  6FF6               	movwf	Startup@outchar& (0+255),b
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;Main.c: 336: lcd_write_data(outchar);
  1376  00166E  0100               	movlb	0	; () banked
  1377  001670  51F6               	movf	Startup@outchar& (0+255),w,b
  1378  001672  ECA8  F00B         	call	_lcd_write_data
  1379  001676  0100               	movlb	0	; () banked
  1380  001678  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1381  00167A  D7E8               	goto	l2397
  1382  00167C                     l2409:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;Main.c: 337: }
  1386                           ;Main.c: 339: AlarmAOff = 0;
  1387  00167C  0E00               	movlw	0
  1388  00167E  6E35               	movwf	_AlarmAOff+1,c
  1389  001680  0E00               	movlw	0
  1390  001682  6E34               	movwf	_AlarmAOff,c
  1391                           
  1392                           ;Main.c: 340: AlarmBOff = 0;
  1393  001684  0E00               	movlw	0
  1394  001686  6E37               	movwf	_AlarmBOff+1,c
  1395  001688  0E00               	movlw	0
  1396  00168A  6E36               	movwf	_AlarmBOff,c
  1397                           
  1398                           ;Main.c: 341: AlarmC2Off = 0;
  1399  00168C  0E00               	movlw	0
  1400  00168E  6E39               	movwf	_AlarmC2Off+1,c
  1401  001690  0E00               	movlw	0
  1402  001692  6E38               	movwf	_AlarmC2Off,c
  1403                           
  1404                           ;Main.c: 342: AlarmCOff = 0;
  1405  001694  0E00               	movlw	0
  1406  001696  0100               	movlb	0	; () banked
  1407  001698  6FFB               	movwf	(_AlarmCOff+1)& (0+255),b
  1408  00169A  0E00               	movlw	0
  1409  00169C  6FFA               	movwf	_AlarmCOff& (0+255),b
  1410                           
  1411                           ; BSR set to: 0
  1412  00169E  0012               	return		;funcret
  1413  0016A0                     __end_of_Startup:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           plusw1	equ	0xFE3
  1425                           fsr1l	equ	0xFE1
  1426                           indf2	equ	0xFDF
  1427                           plusw2	equ	0xFDB
  1428                           fsr2h	equ	0xFDA
  1429                           fsr2l	equ	0xFD9
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _SetupTimerInterruptRegisters *****************
  1433 ;; Defined at:
  1434 ;;		line 276 in file "Main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text4
  1463  001D50                     __ptext4:
  1464                           	opt stack 0
  1465  001D50                     _SetupTimerInterruptRegisters:
  1466                           	opt stack 27
  1467                           
  1468                           ;Main.c: 278: RCONbits.IPEN =1;
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;incstack = 0
  1472  001D50  8ED0               	bsf	4048,7,c	;volatile
  1473                           
  1474                           ;Main.c: 282: INTCONbits.GIEH =1;
  1475  001D52  8EF2               	bsf	intcon,7,c	;volatile
  1476                           
  1477                           ;Main.c: 287: T0CON = 0b00000111;
  1478  001D54  0E07               	movlw	7
  1479  001D56  6ED5               	movwf	4053,c	;volatile
  1480                           
  1481                           ;Main.c: 295: INTCON2 = 0b10000100;
  1482  001D58  0E84               	movlw	132
  1483  001D5A  6EF1               	movwf	intcon2,c	;volatile
  1484                           
  1485                           ;Main.c: 300: TMR0H = 0x48;
  1486  001D5C  0E48               	movlw	72
  1487  001D5E  6ED7               	movwf	4055,c	;volatile
  1488                           
  1489                           ;Main.c: 301: TMR0L = 0xE5;
  1490  001D60  0EE5               	movlw	229
  1491  001D62  6ED6               	movwf	4054,c	;volatile
  1492                           
  1493                           ;Main.c: 303: T0CONbits.TMR0ON = 1;
  1494  001D64  8ED5               	bsf	4053,7,c	;volatile
  1495                           
  1496                           ;Main.c: 304: INTCONbits.TMR0IE = 1;
  1497  001D66  8AF2               	bsf	intcon,5,c	;volatile
  1498                           
  1499                           ;Main.c: 307: INTCONbits.TMR0IF = 0;
  1500  001D68  94F2               	bcf	intcon,2,c	;volatile
  1501  001D6A  0012               	return		;funcret
  1502  001D6C                     __end_of_SetupTimerInterruptRegisters:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           intcon2	equ	0xFF1
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           postdec1	equ	0xFE5
  1515                           plusw1	equ	0xFE3
  1516                           fsr1l	equ	0xFE1
  1517                           indf2	equ	0xFDF
  1518                           plusw2	equ	0xFDB
  1519                           fsr2h	equ	0xFDA
  1520                           fsr2l	equ	0xFD9
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _SetupTime *****************
  1524 ;; Defined at:
  1525 ;;		line 108 in file "Main.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1530 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1531 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1532 ;;  second1         1   46[BANK0 ] unsigned char 
  1533 ;;  second10        1   45[BANK0 ] unsigned char 
  1534 ;;  minute1         1   44[BANK0 ] unsigned char 
  1535 ;;  minute10        1   43[BANK0 ] unsigned char 
  1536 ;;  hour1           1   42[BANK0 ] unsigned char 
  1537 ;;  hour10          1   41[BANK0 ] unsigned char 
  1538 ;;  outchar         1   40[BANK0 ] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0
  1549 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1551 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1552 ;;Total ram usage:       30 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    5
  1555 ;; This function calls:
  1556 ;;		_char_2_int
  1557 ;;		_delay_ms
  1558 ;;		_getkey
  1559 ;;		_lcd_write_cmd
  1560 ;;		_lcd_write_data
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text5
  1567  0011AA                     __ptext5:
  1568                           	opt stack 0
  1569  0011AA                     _SetupTime:
  1570                           	opt stack 25
  1571                           
  1572                           ;Main.c: 110: unsigned char msgindex, outchar, ctemp;
  1573                           ;Main.c: 111: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1574                           ;Main.c: 112: char Message[ ] = "Set time hhmmss:    ";
  1575                           
  1576                           ;incstack = 0
  1577  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4316
  1578  0011AE  EE10  F0DC         	lfsr	1,SetupTime@Message
  1579  0011B2  0E14               	movlw	20
  1580  0011B4                     u1121:
  1581  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1582  0011B8  06E8               	decf	wreg,f,c
  1583  0011BA  E2FC               	bc	u1121
  1584                           
  1585                           ;Main.c: 114: lcd_write_cmd(0x80);
  1586  0011BC  0E80               	movlw	128
  1587  0011BE  EC03  F00D         	call	_lcd_write_cmd
  1588                           
  1589                           ;Main.c: 116: for (msgindex = 0; msgindex < 20; msgindex++)
  1590  0011C2  0E00               	movlw	0
  1591  0011C4  0100               	movlb	0	; () banked
  1592  0011C6  6FF8               	movwf	SetupTime@msgindex& (0+255),b
  1593  0011C8                     l2193:
  1594                           
  1595                           ; BSR set to: 0
  1596  0011C8  0E13               	movlw	19
  1597  0011CA  0100               	movlb	0	; () banked
  1598  0011CC  65F8               	cpfsgt	SetupTime@msgindex& (0+255),b
  1599  0011CE  D001               	goto	l2197
  1600  0011D0  D013               	goto	l2205
  1601  0011D2                     l2197:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;Main.c: 117: {
  1605                           ;Main.c: 118: outchar = Message[msgindex];
  1606  0011D2  0100               	movlb	0	; () banked
  1607  0011D4  51F8               	movf	SetupTime@msgindex& (0+255),w,b
  1608  0011D6  0D01               	mullw	1
  1609  0011D8  0EDC               	movlw	low SetupTime@Message
  1610  0011DA  24F3               	addwf	prodl,w,c
  1611  0011DC  6ED9               	movwf	fsr2l,c
  1612  0011DE  0E00               	movlw	high SetupTime@Message
  1613  0011E0  20F4               	addwfc	prodh,w,c
  1614  0011E2  6EDA               	movwf	fsr2h,c
  1615  0011E4  50DF               	movf	indf2,w,c
  1616  0011E6  0100               	movlb	0	; () banked
  1617  0011E8  6FF1               	movwf	SetupTime@outchar& (0+255),b
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;Main.c: 119: lcd_write_data(outchar);
  1621  0011EA  0100               	movlb	0	; () banked
  1622  0011EC  51F1               	movf	SetupTime@outchar& (0+255),w,b
  1623  0011EE  ECA8  F00B         	call	_lcd_write_data
  1624  0011F2  0100               	movlb	0	; () banked
  1625  0011F4  2BF8               	incf	SetupTime@msgindex& (0+255),f,b
  1626  0011F6  D7E8               	goto	l2193
  1627  0011F8                     l2205:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;Main.c: 120: }
  1631                           ;Main.c: 122: lcd_write_cmd(0xC0);
  1632  0011F8  0EC0               	movlw	192
  1633  0011FA  EC03  F00D         	call	_lcd_write_cmd
  1634                           
  1635                           ;Main.c: 124: ctemp=getkey();
  1636  0011FE  EC48  F00E         	call	_getkey	;wreg free
  1637  001202  0100               	movlb	0	; () banked
  1638  001204  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;Main.c: 125: lcd_write_data(ctemp);
  1642  001206  0100               	movlb	0	; () banked
  1643  001208  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1644  00120A  ECA8  F00B         	call	_lcd_write_data
  1645                           
  1646                           ;Main.c: 126: hour10 = char_2_int (ctemp);
  1647  00120E  0100               	movlb	0	; () banked
  1648  001210  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1649  001212  EC7B  F00D         	call	_char_2_int
  1650  001216  0100               	movlb	0	; () banked
  1651  001218  6FF2               	movwf	SetupTime@hour10& (0+255),b
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;Main.c: 128: ctemp=getkey();
  1655  00121A  EC48  F00E         	call	_getkey	;wreg free
  1656  00121E  0100               	movlb	0	; () banked
  1657  001220  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1658                           
  1659                           ;Main.c: 129: lcd_write_data(ctemp);
  1660  001222  0100               	movlb	0	; () banked
  1661  001224  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1662  001226  ECA8  F00B         	call	_lcd_write_data
  1663                           
  1664                           ;Main.c: 130: hour1 = char_2_int (ctemp);
  1665  00122A  0100               	movlb	0	; () banked
  1666  00122C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1667  00122E  EC7B  F00D         	call	_char_2_int
  1668  001232  0100               	movlb	0	; () banked
  1669  001234  6FF3               	movwf	SetupTime@hour1& (0+255),b
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;Main.c: 132: ctemp=getkey();
  1673  001236  EC48  F00E         	call	_getkey	;wreg free
  1674  00123A  0100               	movlb	0	; () banked
  1675  00123C  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;Main.c: 133: lcd_write_data(ctemp);
  1679  00123E  0100               	movlb	0	; () banked
  1680  001240  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1681  001242  ECA8  F00B         	call	_lcd_write_data
  1682                           
  1683                           ;Main.c: 134: minute10 = char_2_int (ctemp);
  1684  001246  0100               	movlb	0	; () banked
  1685  001248  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1686  00124A  EC7B  F00D         	call	_char_2_int
  1687  00124E  0100               	movlb	0	; () banked
  1688  001250  6FF4               	movwf	SetupTime@minute10& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;Main.c: 136: ctemp=getkey();
  1692  001252  EC48  F00E         	call	_getkey	;wreg free
  1693  001256  0100               	movlb	0	; () banked
  1694  001258  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1695                           
  1696                           ;Main.c: 137: lcd_write_data(ctemp);
  1697  00125A  0100               	movlb	0	; () banked
  1698  00125C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1699  00125E  ECA8  F00B         	call	_lcd_write_data
  1700                           
  1701                           ;Main.c: 138: minute1 = char_2_int (ctemp);
  1702  001262  0100               	movlb	0	; () banked
  1703  001264  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1704  001266  EC7B  F00D         	call	_char_2_int
  1705  00126A  0100               	movlb	0	; () banked
  1706  00126C  6FF5               	movwf	SetupTime@minute1& (0+255),b
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;Main.c: 140: ctemp=getkey();
  1710  00126E  EC48  F00E         	call	_getkey	;wreg free
  1711  001272  0100               	movlb	0	; () banked
  1712  001274  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;Main.c: 141: lcd_write_data(ctemp);
  1716  001276  0100               	movlb	0	; () banked
  1717  001278  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1718  00127A  ECA8  F00B         	call	_lcd_write_data
  1719                           
  1720                           ;Main.c: 142: second10 = char_2_int (ctemp);
  1721  00127E  0100               	movlb	0	; () banked
  1722  001280  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1723  001282  EC7B  F00D         	call	_char_2_int
  1724  001286  0100               	movlb	0	; () banked
  1725  001288  6FF6               	movwf	SetupTime@second10& (0+255),b
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;Main.c: 144: ctemp=getkey();
  1729  00128A  EC48  F00E         	call	_getkey	;wreg free
  1730  00128E  0100               	movlb	0	; () banked
  1731  001290  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1732                           
  1733                           ;Main.c: 145: lcd_write_data(ctemp);
  1734  001292  0100               	movlb	0	; () banked
  1735  001294  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1736  001296  ECA8  F00B         	call	_lcd_write_data
  1737                           
  1738                           ;Main.c: 146: second1 = char_2_int (ctemp);
  1739  00129A  0100               	movlb	0	; () banked
  1740  00129C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1741  00129E  EC7B  F00D         	call	_char_2_int
  1742  0012A2  0100               	movlb	0	; () banked
  1743  0012A4  6FF7               	movwf	SetupTime@second1& (0+255),b
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;Main.c: 148: hour = hour10 * 10 + hour1;
  1747  0012A6  0100               	movlb	0	; () banked
  1748  0012A8  51F2               	movf	SetupTime@hour10& (0+255),w,b
  1749  0012AA  0D0A               	mullw	10
  1750  0012AC  50F3               	movf	prodl,w,c
  1751  0012AE  0100               	movlb	0	; () banked
  1752  0012B0  25F3               	addwf	SetupTime@hour1& (0+255),w,b
  1753  0012B2  6E3A               	movwf	_hour,c
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;Main.c: 149: minute = minute10 * 10 + minute1;
  1757  0012B4  0100               	movlb	0	; () banked
  1758  0012B6  51F4               	movf	SetupTime@minute10& (0+255),w,b
  1759  0012B8  0D0A               	mullw	10
  1760  0012BA  50F3               	movf	prodl,w,c
  1761  0012BC  0100               	movlb	0	; () banked
  1762  0012BE  25F5               	addwf	SetupTime@minute1& (0+255),w,b
  1763  0012C0  6E3E               	movwf	_minute,c
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;Main.c: 150: second = second10 * 10 + second1;
  1767  0012C2  0100               	movlb	0	; () banked
  1768  0012C4  51F6               	movf	SetupTime@second10& (0+255),w,b
  1769  0012C6  0D0A               	mullw	10
  1770  0012C8  50F3               	movf	prodl,w,c
  1771  0012CA  0100               	movlb	0	; () banked
  1772  0012CC  25F7               	addwf	SetupTime@second1& (0+255),w,b
  1773  0012CE  6E42               	movwf	_second,c
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;Main.c: 152: delay_ms(500);
  1777  0012D0  0E01               	movlw	1
  1778  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1779  0012D4  0EF4               	movlw	244
  1780  0012D6  6E1D               	movwf	delay_ms@i,c
  1781  0012D8  EC67  F00E         	call	_delay_ms	;wreg free
  1782                           
  1783                           ;Main.c: 153: lcd_write_cmd(0x01);
  1784  0012DC  0E01               	movlw	1
  1785  0012DE  EC03  F00D         	call	_lcd_write_cmd
  1786  0012E2  0012               	return		;funcret
  1787  0012E4                     __end_of_SetupTime:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodh	equ	0xFF4
  1794                           prodl	equ	0xFF3
  1795                           intcon	equ	0xFF2
  1796                           intcon2	equ	0xFF1
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postdec1	equ	0xFE5
  1800                           plusw1	equ	0xFE3
  1801                           fsr1l	equ	0xFE1
  1802                           indf2	equ	0xFDF
  1803                           plusw2	equ	0xFDB
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function _SetupAlarmTimeC *****************
  1809 ;; Defined at:
  1810 ;;		line 236 in file "Main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1815 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1816 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1817 ;;  minute1         1   44[BANK0 ] unsigned char 
  1818 ;;  minute10        1   43[BANK0 ] unsigned char 
  1819 ;;  hour1           1   42[BANK0 ] unsigned char 
  1820 ;;  hour10          1   41[BANK0 ] unsigned char 
  1821 ;;  outchar         1   40[BANK0 ] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1835 ;;Total ram usage:       28 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    5
  1838 ;; This function calls:
  1839 ;;		_char_2_int
  1840 ;;		_delay_ms
  1841 ;;		_getkey
  1842 ;;		_lcd_write_cmd
  1843 ;;		_lcd_write_data
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text6
  1850  0012E4                     __ptext6:
  1851                           	opt stack 0
  1852  0012E4                     _SetupAlarmTimeC:
  1853                           	opt stack 25
  1854                           
  1855                           ;Main.c: 238: unsigned char msgindex, outchar, ctemp;
  1856                           ;Main.c: 239: unsigned char hour10, hour1, minute10, minute1;
  1857                           ;Main.c: 240: char Message[ ] = "Subject C Time hhmm:";
  1858                           
  1859                           ;incstack = 0
  1860  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4346
  1861  0012E8  EE10  F0DC         	lfsr	1,SetupAlarmTimeC@Message
  1862  0012EC  0E14               	movlw	20
  1863  0012EE                     u1211:
  1864  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1865  0012F2  06E8               	decf	wreg,f,c
  1866  0012F4  E2FC               	bc	u1211
  1867                           
  1868                           ;Main.c: 242: PORTA = 0b00001000;
  1869  0012F6  0E08               	movlw	8
  1870  0012F8  6E80               	movwf	3968,c	;volatile
  1871                           
  1872                           ;Main.c: 244: lcd_write_cmd(0x80);
  1873  0012FA  0E80               	movlw	128
  1874  0012FC  EC03  F00D         	call	_lcd_write_cmd
  1875                           
  1876                           ;Main.c: 246: for (msgindex = 0; msgindex < 20; msgindex++)
  1877  001300  0E00               	movlw	0
  1878  001302  0100               	movlb	0	; () banked
  1879  001304  6FF6               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1880  001306                     l2333:
  1881                           
  1882                           ; BSR set to: 0
  1883  001306  0E13               	movlw	19
  1884  001308  0100               	movlb	0	; () banked
  1885  00130A  65F6               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1886  00130C  D001               	goto	l2337
  1887  00130E  D013               	goto	l2345
  1888  001310                     l2337:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;Main.c: 247: {
  1892                           ;Main.c: 248: outchar = Message[msgindex];
  1893  001310  0100               	movlb	0	; () banked
  1894  001312  51F6               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1895  001314  0D01               	mullw	1
  1896  001316  0EDC               	movlw	low SetupAlarmTimeC@Message
  1897  001318  24F3               	addwf	prodl,w,c
  1898  00131A  6ED9               	movwf	fsr2l,c
  1899  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1900  00131E  20F4               	addwfc	prodh,w,c
  1901  001320  6EDA               	movwf	fsr2h,c
  1902  001322  50DF               	movf	indf2,w,c
  1903  001324  0100               	movlb	0	; () banked
  1904  001326  6FF1               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;Main.c: 249: lcd_write_data(outchar);
  1908  001328  0100               	movlb	0	; () banked
  1909  00132A  51F1               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1910  00132C  ECA8  F00B         	call	_lcd_write_data
  1911  001330  0100               	movlb	0	; () banked
  1912  001332  2BF6               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1913  001334  D7E8               	goto	l2333
  1914  001336                     l2345:
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;Main.c: 250: }
  1918                           ;Main.c: 252: lcd_write_cmd(0xC0);
  1919  001336  0EC0               	movlw	192
  1920  001338  EC03  F00D         	call	_lcd_write_cmd
  1921                           
  1922                           ;Main.c: 254: ctemp=getkey();
  1923  00133C  EC48  F00E         	call	_getkey	;wreg free
  1924  001340  0100               	movlb	0	; () banked
  1925  001342  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;Main.c: 255: lcd_write_data(ctemp);
  1929  001344  0100               	movlb	0	; () banked
  1930  001346  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1931  001348  ECA8  F00B         	call	_lcd_write_data
  1932                           
  1933                           ;Main.c: 256: hour10 = char_2_int (ctemp);
  1934  00134C  0100               	movlb	0	; () banked
  1935  00134E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1936  001350  EC7B  F00D         	call	_char_2_int
  1937  001354  0100               	movlb	0	; () banked
  1938  001356  6FF2               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;Main.c: 258: ctemp=getkey();
  1942  001358  EC48  F00E         	call	_getkey	;wreg free
  1943  00135C  0100               	movlb	0	; () banked
  1944  00135E  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1945                           
  1946                           ;Main.c: 259: lcd_write_data(ctemp);
  1947  001360  0100               	movlb	0	; () banked
  1948  001362  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1949  001364  ECA8  F00B         	call	_lcd_write_data
  1950                           
  1951                           ;Main.c: 260: hour1 = char_2_int (ctemp);
  1952  001368  0100               	movlb	0	; () banked
  1953  00136A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1954  00136C  EC7B  F00D         	call	_char_2_int
  1955  001370  0100               	movlb	0	; () banked
  1956  001372  6FF3               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;Main.c: 262: ctemp=getkey();
  1960  001374  EC48  F00E         	call	_getkey	;wreg free
  1961  001378  0100               	movlb	0	; () banked
  1962  00137A  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;Main.c: 263: lcd_write_data(ctemp);
  1966  00137C  0100               	movlb	0	; () banked
  1967  00137E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1968  001380  ECA8  F00B         	call	_lcd_write_data
  1969                           
  1970                           ;Main.c: 264: minute10 = char_2_int (ctemp);
  1971  001384  0100               	movlb	0	; () banked
  1972  001386  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1973  001388  EC7B  F00D         	call	_char_2_int
  1974  00138C  0100               	movlb	0	; () banked
  1975  00138E  6FF4               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;Main.c: 266: ctemp=getkey();
  1979  001390  EC48  F00E         	call	_getkey	;wreg free
  1980  001394  0100               	movlb	0	; () banked
  1981  001396  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1982                           
  1983                           ;Main.c: 267: lcd_write_data(ctemp);
  1984  001398  0100               	movlb	0	; () banked
  1985  00139A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1986  00139C  ECA8  F00B         	call	_lcd_write_data
  1987                           
  1988                           ;Main.c: 268: minute1 = char_2_int (ctemp);
  1989  0013A0  0100               	movlb	0	; () banked
  1990  0013A2  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1991  0013A4  EC7B  F00D         	call	_char_2_int
  1992  0013A8  0100               	movlb	0	; () banked
  1993  0013AA  6FF5               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;Main.c: 270: hourC = hour10 * 10 + hour1;
  1997  0013AC  0100               	movlb	0	; () banked
  1998  0013AE  51F2               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1999  0013B0  0D0A               	mullw	10
  2000  0013B2  50F3               	movf	prodl,w,c
  2001  0013B4  0100               	movlb	0	; () banked
  2002  0013B6  25F3               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  2003  0013B8  6E3D               	movwf	_hourC,c
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;Main.c: 271: minuteC = minute10 * 10 + minute1;
  2007  0013BA  0100               	movlb	0	; () banked
  2008  0013BC  51F4               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  2009  0013BE  0D0A               	mullw	10
  2010  0013C0  50F3               	movf	prodl,w,c
  2011  0013C2  0100               	movlb	0	; () banked
  2012  0013C4  25F5               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  2013  0013C6  6E41               	movwf	_minuteC,c
  2014                           
  2015                           ;Main.c: 273: delay_ms(500);
  2016  0013C8  0E01               	movlw	1
  2017  0013CA  6E1E               	movwf	delay_ms@i+1,c
  2018  0013CC  0EF4               	movlw	244
  2019  0013CE  6E1D               	movwf	delay_ms@i,c
  2020  0013D0  EC67  F00E         	call	_delay_ms	;wreg free
  2021                           
  2022                           ;Main.c: 274: lcd_write_cmd(0x01);
  2023  0013D4  0E01               	movlw	1
  2024  0013D6  EC03  F00D         	call	_lcd_write_cmd
  2025  0013DA  0012               	return		;funcret
  2026  0013DC                     __end_of_SetupAlarmTimeC:
  2027                           	opt stack 0
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           prodh	equ	0xFF4
  2033                           prodl	equ	0xFF3
  2034                           intcon	equ	0xFF2
  2035                           intcon2	equ	0xFF1
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           plusw1	equ	0xFE3
  2040                           fsr1l	equ	0xFE1
  2041                           indf2	equ	0xFDF
  2042                           plusw2	equ	0xFDB
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           
  2047 ;; *************** function _SetupAlarmTimeB *****************
  2048 ;; Defined at:
  2049 ;;		line 196 in file "Main.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2054 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2055 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2056 ;;  minute1         1   44[BANK0 ] unsigned char 
  2057 ;;  minute10        1   43[BANK0 ] unsigned char 
  2058 ;;  hour1           1   42[BANK0 ] unsigned char 
  2059 ;;  hour10          1   41[BANK0 ] unsigned char 
  2060 ;;  outchar         1   40[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0
  2071 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2073 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2074 ;;Total ram usage:       28 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    5
  2077 ;; This function calls:
  2078 ;;		_char_2_int
  2079 ;;		_delay_ms
  2080 ;;		_getkey
  2081 ;;		_lcd_write_cmd
  2082 ;;		_lcd_write_data
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text7
  2089  0013DC                     __ptext7:
  2090                           	opt stack 0
  2091  0013DC                     _SetupAlarmTimeB:
  2092                           	opt stack 25
  2093                           
  2094                           ;Main.c: 198: unsigned char msgindex, outchar, ctemp;
  2095                           ;Main.c: 199: unsigned char hour10, hour1, minute10, minute1;
  2096                           ;Main.c: 200: char Message[ ] = "Subject B Time hhmm:";
  2097                           
  2098                           ;incstack = 0
  2099  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4336
  2100  0013E0  EE10  F0DC         	lfsr	1,SetupAlarmTimeB@Message
  2101  0013E4  0E14               	movlw	20
  2102  0013E6                     u1181:
  2103  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  2104  0013EA  06E8               	decf	wreg,f,c
  2105  0013EC  E2FC               	bc	u1181
  2106                           
  2107                           ;Main.c: 202: PORTA = 0b00000100;
  2108  0013EE  0E04               	movlw	4
  2109  0013F0  6E80               	movwf	3968,c	;volatile
  2110                           
  2111                           ;Main.c: 204: lcd_write_cmd(0x80);
  2112  0013F2  0E80               	movlw	128
  2113  0013F4  EC03  F00D         	call	_lcd_write_cmd
  2114                           
  2115                           ;Main.c: 206: for (msgindex = 0; msgindex < 20; msgindex++)
  2116  0013F8  0E00               	movlw	0
  2117  0013FA  0100               	movlb	0	; () banked
  2118  0013FC  6FF6               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  2119  0013FE                     l2291:
  2120                           
  2121                           ; BSR set to: 0
  2122  0013FE  0E13               	movlw	19
  2123  001400  0100               	movlb	0	; () banked
  2124  001402  65F6               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  2125  001404  D001               	goto	l2295
  2126  001406  D013               	goto	l2303
  2127  001408                     l2295:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;Main.c: 207: {
  2131                           ;Main.c: 208: outchar = Message[msgindex];
  2132  001408  0100               	movlb	0	; () banked
  2133  00140A  51F6               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  2134  00140C  0D01               	mullw	1
  2135  00140E  0EDC               	movlw	low SetupAlarmTimeB@Message
  2136  001410  24F3               	addwf	prodl,w,c
  2137  001412  6ED9               	movwf	fsr2l,c
  2138  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  2139  001416  20F4               	addwfc	prodh,w,c
  2140  001418  6EDA               	movwf	fsr2h,c
  2141  00141A  50DF               	movf	indf2,w,c
  2142  00141C  0100               	movlb	0	; () banked
  2143  00141E  6FF1               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;Main.c: 209: lcd_write_data(outchar);
  2147  001420  0100               	movlb	0	; () banked
  2148  001422  51F1               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  2149  001424  ECA8  F00B         	call	_lcd_write_data
  2150  001428  0100               	movlb	0	; () banked
  2151  00142A  2BF6               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  2152  00142C  D7E8               	goto	l2291
  2153  00142E                     l2303:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;Main.c: 210: }
  2157                           ;Main.c: 212: lcd_write_cmd(0xC0);
  2158  00142E  0EC0               	movlw	192
  2159  001430  EC03  F00D         	call	_lcd_write_cmd
  2160                           
  2161                           ;Main.c: 214: ctemp=getkey();
  2162  001434  EC48  F00E         	call	_getkey	;wreg free
  2163  001438  0100               	movlb	0	; () banked
  2164  00143A  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;Main.c: 215: lcd_write_data(ctemp);
  2168  00143C  0100               	movlb	0	; () banked
  2169  00143E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2170  001440  ECA8  F00B         	call	_lcd_write_data
  2171                           
  2172                           ;Main.c: 216: hour10 = char_2_int (ctemp);
  2173  001444  0100               	movlb	0	; () banked
  2174  001446  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2175  001448  EC7B  F00D         	call	_char_2_int
  2176  00144C  0100               	movlb	0	; () banked
  2177  00144E  6FF2               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;Main.c: 218: ctemp=getkey();
  2181  001450  EC48  F00E         	call	_getkey	;wreg free
  2182  001454  0100               	movlb	0	; () banked
  2183  001456  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2184                           
  2185                           ;Main.c: 219: lcd_write_data(ctemp);
  2186  001458  0100               	movlb	0	; () banked
  2187  00145A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2188  00145C  ECA8  F00B         	call	_lcd_write_data
  2189                           
  2190                           ;Main.c: 220: hour1 = char_2_int (ctemp);
  2191  001460  0100               	movlb	0	; () banked
  2192  001462  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2193  001464  EC7B  F00D         	call	_char_2_int
  2194  001468  0100               	movlb	0	; () banked
  2195  00146A  6FF3               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;Main.c: 222: ctemp=getkey();
  2199  00146C  EC48  F00E         	call	_getkey	;wreg free
  2200  001470  0100               	movlb	0	; () banked
  2201  001472  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;Main.c: 223: lcd_write_data(ctemp);
  2205  001474  0100               	movlb	0	; () banked
  2206  001476  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2207  001478  ECA8  F00B         	call	_lcd_write_data
  2208                           
  2209                           ;Main.c: 224: minute10 = char_2_int (ctemp);
  2210  00147C  0100               	movlb	0	; () banked
  2211  00147E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2212  001480  EC7B  F00D         	call	_char_2_int
  2213  001484  0100               	movlb	0	; () banked
  2214  001486  6FF4               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;Main.c: 226: ctemp=getkey();
  2218  001488  EC48  F00E         	call	_getkey	;wreg free
  2219  00148C  0100               	movlb	0	; () banked
  2220  00148E  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2221                           
  2222                           ;Main.c: 227: lcd_write_data(ctemp);
  2223  001490  0100               	movlb	0	; () banked
  2224  001492  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2225  001494  ECA8  F00B         	call	_lcd_write_data
  2226                           
  2227                           ;Main.c: 228: minute1 = char_2_int (ctemp);
  2228  001498  0100               	movlb	0	; () banked
  2229  00149A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2230  00149C  EC7B  F00D         	call	_char_2_int
  2231  0014A0  0100               	movlb	0	; () banked
  2232  0014A2  6FF5               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;Main.c: 230: hourB = hour10 * 10 + hour1;
  2236  0014A4  0100               	movlb	0	; () banked
  2237  0014A6  51F2               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  2238  0014A8  0D0A               	mullw	10
  2239  0014AA  50F3               	movf	prodl,w,c
  2240  0014AC  0100               	movlb	0	; () banked
  2241  0014AE  25F3               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  2242  0014B0  6E3C               	movwf	_hourB,c
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;Main.c: 231: minuteB = minute10 * 10 + minute1;
  2246  0014B2  0100               	movlb	0	; () banked
  2247  0014B4  51F4               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  2248  0014B6  0D0A               	mullw	10
  2249  0014B8  50F3               	movf	prodl,w,c
  2250  0014BA  0100               	movlb	0	; () banked
  2251  0014BC  25F5               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  2252  0014BE  6E40               	movwf	_minuteB,c
  2253                           
  2254                           ;Main.c: 233: delay_ms(500);
  2255  0014C0  0E01               	movlw	1
  2256  0014C2  6E1E               	movwf	delay_ms@i+1,c
  2257  0014C4  0EF4               	movlw	244
  2258  0014C6  6E1D               	movwf	delay_ms@i,c
  2259  0014C8  EC67  F00E         	call	_delay_ms	;wreg free
  2260                           
  2261                           ;Main.c: 234: lcd_write_cmd(0x01);
  2262  0014CC  0E01               	movlw	1
  2263  0014CE  EC03  F00D         	call	_lcd_write_cmd
  2264  0014D2  0012               	return		;funcret
  2265  0014D4                     __end_of_SetupAlarmTimeB:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           intcon2	equ	0xFF1
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           plusw1	equ	0xFE3
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           plusw2	equ	0xFDB
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _SetupAlarmTimeA *****************
  2287 ;; Defined at:
  2288 ;;		line 156 in file "Main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2293 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2294 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2295 ;;  minute1         1   44[BANK0 ] unsigned char 
  2296 ;;  minute10        1   43[BANK0 ] unsigned char 
  2297 ;;  hour1           1   42[BANK0 ] unsigned char 
  2298 ;;  hour10          1   41[BANK0 ] unsigned char 
  2299 ;;  outchar         1   40[BANK0 ] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0
  2310 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2312 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2313 ;;Total ram usage:       28 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    5
  2316 ;; This function calls:
  2317 ;;		_char_2_int
  2318 ;;		_delay_ms
  2319 ;;		_getkey
  2320 ;;		_lcd_write_cmd
  2321 ;;		_lcd_write_data
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text8
  2328  0014D4                     __ptext8:
  2329                           	opt stack 0
  2330  0014D4                     _SetupAlarmTimeA:
  2331                           	opt stack 25
  2332                           
  2333                           ;Main.c: 158: unsigned char msgindex, outchar, ctemp;
  2334                           ;Main.c: 159: unsigned char hour10, hour1, minute10, minute1;
  2335                           ;Main.c: 160: char Message[ ] = "Subject A Time hhmm:";
  2336                           
  2337                           ;incstack = 0
  2338  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4326
  2339  0014D8  EE10  F0DC         	lfsr	1,SetupAlarmTimeA@Message
  2340  0014DC  0E14               	movlw	20
  2341  0014DE                     u1151:
  2342  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  2343  0014E2  06E8               	decf	wreg,f,c
  2344  0014E4  E2FC               	bc	u1151
  2345                           
  2346                           ;Main.c: 162: PORTA = 0b00000010;
  2347  0014E6  0E02               	movlw	2
  2348  0014E8  6E80               	movwf	3968,c	;volatile
  2349                           
  2350                           ;Main.c: 164: lcd_write_cmd(0x80);
  2351  0014EA  0E80               	movlw	128
  2352  0014EC  EC03  F00D         	call	_lcd_write_cmd
  2353                           
  2354                           ;Main.c: 166: for (msgindex = 0; msgindex < 20; msgindex++)
  2355  0014F0  0E00               	movlw	0
  2356  0014F2  0100               	movlb	0	; () banked
  2357  0014F4  6FF6               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2358  0014F6                     l2249:
  2359                           
  2360                           ; BSR set to: 0
  2361  0014F6  0E13               	movlw	19
  2362  0014F8  0100               	movlb	0	; () banked
  2363  0014FA  65F6               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2364  0014FC  D001               	goto	l2253
  2365  0014FE  D013               	goto	l2261
  2366  001500                     l2253:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;Main.c: 167: {
  2370                           ;Main.c: 168: outchar = Message[msgindex];
  2371  001500  0100               	movlb	0	; () banked
  2372  001502  51F6               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2373  001504  0D01               	mullw	1
  2374  001506  0EDC               	movlw	low SetupAlarmTimeA@Message
  2375  001508  24F3               	addwf	prodl,w,c
  2376  00150A  6ED9               	movwf	fsr2l,c
  2377  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  2378  00150E  20F4               	addwfc	prodh,w,c
  2379  001510  6EDA               	movwf	fsr2h,c
  2380  001512  50DF               	movf	indf2,w,c
  2381  001514  0100               	movlb	0	; () banked
  2382  001516  6FF1               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;Main.c: 169: lcd_write_data(outchar);
  2386  001518  0100               	movlb	0	; () banked
  2387  00151A  51F1               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2388  00151C  ECA8  F00B         	call	_lcd_write_data
  2389  001520  0100               	movlb	0	; () banked
  2390  001522  2BF6               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2391  001524  D7E8               	goto	l2249
  2392  001526                     l2261:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;Main.c: 170: }
  2396                           ;Main.c: 172: lcd_write_cmd(0xC0);
  2397  001526  0EC0               	movlw	192
  2398  001528  EC03  F00D         	call	_lcd_write_cmd
  2399                           
  2400                           ;Main.c: 174: ctemp=getkey();
  2401  00152C  EC48  F00E         	call	_getkey	;wreg free
  2402  001530  0100               	movlb	0	; () banked
  2403  001532  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;Main.c: 175: lcd_write_data(ctemp);
  2407  001534  0100               	movlb	0	; () banked
  2408  001536  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2409  001538  ECA8  F00B         	call	_lcd_write_data
  2410                           
  2411                           ;Main.c: 176: hour10 = char_2_int (ctemp);
  2412  00153C  0100               	movlb	0	; () banked
  2413  00153E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2414  001540  EC7B  F00D         	call	_char_2_int
  2415  001544  0100               	movlb	0	; () banked
  2416  001546  6FF2               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;Main.c: 178: ctemp=getkey();
  2420  001548  EC48  F00E         	call	_getkey	;wreg free
  2421  00154C  0100               	movlb	0	; () banked
  2422  00154E  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2423                           
  2424                           ;Main.c: 179: lcd_write_data(ctemp);
  2425  001550  0100               	movlb	0	; () banked
  2426  001552  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2427  001554  ECA8  F00B         	call	_lcd_write_data
  2428                           
  2429                           ;Main.c: 180: hour1 = char_2_int (ctemp);
  2430  001558  0100               	movlb	0	; () banked
  2431  00155A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2432  00155C  EC7B  F00D         	call	_char_2_int
  2433  001560  0100               	movlb	0	; () banked
  2434  001562  6FF3               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;Main.c: 182: ctemp=getkey();
  2438  001564  EC48  F00E         	call	_getkey	;wreg free
  2439  001568  0100               	movlb	0	; () banked
  2440  00156A  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;Main.c: 183: lcd_write_data(ctemp);
  2444  00156C  0100               	movlb	0	; () banked
  2445  00156E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2446  001570  ECA8  F00B         	call	_lcd_write_data
  2447                           
  2448                           ;Main.c: 184: minute10 = char_2_int (ctemp);
  2449  001574  0100               	movlb	0	; () banked
  2450  001576  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2451  001578  EC7B  F00D         	call	_char_2_int
  2452  00157C  0100               	movlb	0	; () banked
  2453  00157E  6FF4               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;Main.c: 186: ctemp=getkey();
  2457  001580  EC48  F00E         	call	_getkey	;wreg free
  2458  001584  0100               	movlb	0	; () banked
  2459  001586  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2460                           
  2461                           ;Main.c: 187: lcd_write_data(ctemp);
  2462  001588  0100               	movlb	0	; () banked
  2463  00158A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2464  00158C  ECA8  F00B         	call	_lcd_write_data
  2465                           
  2466                           ;Main.c: 188: minute1 = char_2_int (ctemp);
  2467  001590  0100               	movlb	0	; () banked
  2468  001592  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2469  001594  EC7B  F00D         	call	_char_2_int
  2470  001598  0100               	movlb	0	; () banked
  2471  00159A  6FF5               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;Main.c: 190: hourA = hour10 * 10 + hour1;
  2475  00159C  0100               	movlb	0	; () banked
  2476  00159E  51F2               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2477  0015A0  0D0A               	mullw	10
  2478  0015A2  50F3               	movf	prodl,w,c
  2479  0015A4  0100               	movlb	0	; () banked
  2480  0015A6  25F3               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2481  0015A8  6E3B               	movwf	_hourA,c
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;Main.c: 191: minuteA = minute10 * 10 + minute1;
  2485  0015AA  0100               	movlb	0	; () banked
  2486  0015AC  51F4               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2487  0015AE  0D0A               	mullw	10
  2488  0015B0  50F3               	movf	prodl,w,c
  2489  0015B2  0100               	movlb	0	; () banked
  2490  0015B4  25F5               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2491  0015B6  6E3F               	movwf	_minuteA,c
  2492                           
  2493                           ;Main.c: 193: delay_ms(500);
  2494  0015B8  0E01               	movlw	1
  2495  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2496  0015BC  0EF4               	movlw	244
  2497  0015BE  6E1D               	movwf	delay_ms@i,c
  2498  0015C0  EC67  F00E         	call	_delay_ms	;wreg free
  2499                           
  2500                           ;Main.c: 194: lcd_write_cmd(0x01);
  2501  0015C4  0E01               	movlw	1
  2502  0015C6  EC03  F00D         	call	_lcd_write_cmd
  2503  0015CA  0012               	return		;funcret
  2504  0015CC                     __end_of_SetupAlarmTimeA:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           intcon	equ	0xFF2
  2513                           intcon2	equ	0xFF1
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           plusw1	equ	0xFE3
  2518                           fsr1l	equ	0xFE1
  2519                           indf2	equ	0xFDF
  2520                           plusw2	equ	0xFDB
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _lcd_write_data *****************
  2526 ;; Defined at:
  2527 ;;		line 43 in file "lcd_utilities.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  data            1    wreg     unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  data            1    0[BANK0 ] unsigned char 
  2532 ;;  temp1           1    1[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2544 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        3 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    4
  2549 ;; This function calls:
  2550 ;;		_lcd_strobe
  2551 ;; This function is called by:
  2552 ;;		_SetupTime
  2553 ;;		_SetupAlarmTimeA
  2554 ;;		_SetupAlarmTimeB
  2555 ;;		_SetupAlarmTimeC
  2556 ;;		_Startup
  2557 ;;		_version
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text9
  2562  001750                     __ptext9:
  2563                           	opt stack 0
  2564  001750                     _lcd_write_data:
  2565                           	opt stack 25
  2566                           
  2567                           ;incstack = 0
  2568                           ;lcd_write_data@data stored from wreg
  2569  001750  0100               	movlb	0	; () banked
  2570  001752  6FC9               	movwf	lcd_write_data@data& (0+255),b
  2571                           
  2572                           ;lcd_utilities.c: 45: char temp1;
  2573                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2574  001754  8C83               	bsf	3971,6,c	;volatile
  2575                           
  2576                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2577  001756  0E3F               	movlw	63
  2578  001758  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2579  00175A  0E55               	movlw	85
  2580  00175C                     u1477:
  2581  00175C  2EE8               	decfsz	wreg,f,c
  2582  00175E  D7FE               	goto	u1477
  2583  001760  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2584  001762  D7FC               	goto	u1477
  2585  001764  F000               	nop	
  2586                           
  2587                           ;lcd_utilities.c: 50: temp1 = data;
  2588  001766  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2589                           
  2590                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2591  00176A  0100               	movlb	0	; () banked
  2592  00176C  39CA               	swapf	lcd_write_data@temp1& (0+255),w,b
  2593  00176E  0B0F               	andlw	15
  2594  001770  0100               	movlb	0	; () banked
  2595  001772  6FCA               	movwf	lcd_write_data@temp1& (0+255),b
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2599  001774  0100               	movlb	0	; () banked
  2600  001776  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2601  001778  0B0F               	andlw	15
  2602  00177A  6E83               	movwf	3971,c	;volatile
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2606  00177C  0E7D               	movlw	125
  2607  00177E  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2608  001780  0EAC               	movlw	172
  2609  001782                     u1487:
  2610  001782  2EE8               	decfsz	wreg,f,c
  2611  001784  D7FE               	goto	u1487
  2612  001786  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2613  001788  D7FC               	goto	u1487
  2614                           
  2615                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2616  00178A  8C83               	bsf	3971,6,c	;volatile
  2617                           
  2618                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2619  00178C  0E7D               	movlw	125
  2620  00178E  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2621  001790  0EAC               	movlw	172
  2622  001792                     u1497:
  2623  001792  2EE8               	decfsz	wreg,f,c
  2624  001794  D7FE               	goto	u1497
  2625  001796  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2626  001798  D7FC               	goto	u1497
  2627                           
  2628                           ;lcd_utilities.c: 57: lcd_strobe();
  2629  00179A  EC86  F00E         	call	_lcd_strobe	;wreg free
  2630                           
  2631                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2632  00179E  0E7D               	movlw	125
  2633  0017A0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2634  0017A2  0EAC               	movlw	172
  2635  0017A4                     u1507:
  2636  0017A4  2EE8               	decfsz	wreg,f,c
  2637  0017A6  D7FE               	goto	u1507
  2638  0017A8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2639  0017AA  D7FC               	goto	u1507
  2640                           
  2641                           ;lcd_utilities.c: 60: temp1 = data;
  2642  0017AC  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2643                           
  2644                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2645  0017B0  0100               	movlb	0	; () banked
  2646  0017B2  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2647  0017B4  0B0F               	andlw	15
  2648  0017B6  6E83               	movwf	3971,c	;volatile
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2652  0017B8  0E7D               	movlw	125
  2653  0017BA  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2654  0017BC  0EAC               	movlw	172
  2655  0017BE                     u1517:
  2656  0017BE  2EE8               	decfsz	wreg,f,c
  2657  0017C0  D7FE               	goto	u1517
  2658  0017C2  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2659  0017C4  D7FC               	goto	u1517
  2660                           
  2661                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2662  0017C6  8C83               	bsf	3971,6,c	;volatile
  2663                           
  2664                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2665  0017C8  0E9C               	movlw	156
  2666  0017CA  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2667  0017CC  0ED7               	movlw	215
  2668  0017CE                     u1527:
  2669  0017CE  2EE8               	decfsz	wreg,f,c
  2670  0017D0  D7FE               	goto	u1527
  2671  0017D2  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2672  0017D4  D7FC               	goto	u1527
  2673  0017D6  F000               	nop	
  2674                           
  2675                           ;lcd_utilities.c: 66: lcd_strobe();
  2676  0017D8  EC86  F00E         	call	_lcd_strobe	;wreg free
  2677                           
  2678                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2679  0017DC  0E9C               	movlw	156
  2680  0017DE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2681  0017E0  0ED7               	movlw	215
  2682  0017E2                     u1537:
  2683  0017E2  2EE8               	decfsz	wreg,f,c
  2684  0017E4  D7FE               	goto	u1537
  2685  0017E6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2686  0017E8  D7FC               	goto	u1537
  2687  0017EA  F000               	nop	
  2688  0017EC  0012               	return		;funcret
  2689  0017EE                     __end_of_lcd_write_data:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           prodh	equ	0xFF4
  2696                           prodl	equ	0xFF3
  2697                           intcon	equ	0xFF2
  2698                           intcon2	equ	0xFF1
  2699                           postinc0	equ	0xFEE
  2700                           wreg	equ	0xFE8
  2701                           postdec1	equ	0xFE5
  2702                           plusw1	equ	0xFE3
  2703                           fsr1l	equ	0xFE1
  2704                           indf2	equ	0xFDF
  2705                           plusw2	equ	0xFDB
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _lcd_write_cmd *****************
  2711 ;; Defined at:
  2712 ;;		line 18 in file "lcd_utilities.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  cmd             1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  cmd             1    0[BANK0 ] unsigned char 
  2717 ;;  temp2           1    1[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0
  2728 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2729 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2730 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2731 ;;Total ram usage:        3 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    4
  2734 ;; This function calls:
  2735 ;;		_lcd_strobe
  2736 ;; This function is called by:
  2737 ;;		_lcd_init
  2738 ;;		_SetupTime
  2739 ;;		_SetupAlarmTimeA
  2740 ;;		_SetupAlarmTimeB
  2741 ;;		_SetupAlarmTimeC
  2742 ;;		_Startup
  2743 ;;		_version
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text10
  2748  001A06                     __ptext10:
  2749                           	opt stack 0
  2750  001A06                     _lcd_write_cmd:
  2751                           	opt stack 25
  2752                           
  2753                           ;incstack = 0
  2754                           ;lcd_write_cmd@cmd stored from wreg
  2755  001A06  0100               	movlb	0	; () banked
  2756  001A08  6FC9               	movwf	lcd_write_cmd@cmd& (0+255),b
  2757                           
  2758                           ;lcd_utilities.c: 20: unsigned char temp2;
  2759                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2760  001A0A  9C83               	bcf	3971,6,c	;volatile
  2761                           
  2762                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2763  001A0C  0E3F               	movlw	63
  2764  001A0E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2765  001A10  0E55               	movlw	85
  2766  001A12                     u1547:
  2767  001A12  2EE8               	decfsz	wreg,f,c
  2768  001A14  D7FE               	goto	u1547
  2769  001A16  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2770  001A18  D7FC               	goto	u1547
  2771  001A1A  F000               	nop	
  2772                           
  2773                           ;lcd_utilities.c: 23: temp2 = cmd;
  2774  001A1C  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2775                           
  2776                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2777  001A20  0100               	movlb	0	; () banked
  2778  001A22  39CA               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  2779  001A24  0B0F               	andlw	15
  2780  001A26  0100               	movlb	0	; () banked
  2781  001A28  6FCA               	movwf	lcd_write_cmd@temp2& (0+255),b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2785  001A2A  0100               	movlb	0	; () banked
  2786  001A2C  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2787  001A2E  0B0F               	andlw	15
  2788  001A30  6E83               	movwf	3971,c	;volatile
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2792  001A32  0E7D               	movlw	125
  2793  001A34  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2794  001A36  0EAC               	movlw	172
  2795  001A38                     u1557:
  2796  001A38  2EE8               	decfsz	wreg,f,c
  2797  001A3A  D7FE               	goto	u1557
  2798  001A3C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2799  001A3E  D7FC               	goto	u1557
  2800                           
  2801                           ;lcd_utilities.c: 28: lcd_strobe();
  2802  001A40  EC86  F00E         	call	_lcd_strobe	;wreg free
  2803                           
  2804                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2805  001A44  0E7D               	movlw	125
  2806  001A46  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2807  001A48  0EAC               	movlw	172
  2808  001A4A                     u1567:
  2809  001A4A  2EE8               	decfsz	wreg,f,c
  2810  001A4C  D7FE               	goto	u1567
  2811  001A4E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2812  001A50  D7FC               	goto	u1567
  2813                           
  2814                           ;lcd_utilities.c: 32: temp2 = cmd;
  2815  001A52  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2816                           
  2817                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2818  001A56  0100               	movlb	0	; () banked
  2819  001A58  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2820  001A5A  0B0F               	andlw	15
  2821  001A5C  6E83               	movwf	3971,c	;volatile
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2825  001A5E  0E7D               	movlw	125
  2826  001A60  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2827  001A62  0EAC               	movlw	172
  2828  001A64                     u1577:
  2829  001A64  2EE8               	decfsz	wreg,f,c
  2830  001A66  D7FE               	goto	u1577
  2831  001A68  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2832  001A6A  D7FC               	goto	u1577
  2833                           
  2834                           ;lcd_utilities.c: 36: lcd_strobe();
  2835  001A6C  EC86  F00E         	call	_lcd_strobe	;wreg free
  2836                           
  2837                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2838  001A70  0E7D               	movlw	125
  2839  001A72  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2840  001A74  0EAC               	movlw	172
  2841  001A76                     u1587:
  2842  001A76  2EE8               	decfsz	wreg,f,c
  2843  001A78  D7FE               	goto	u1587
  2844  001A7A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2845  001A7C  D7FC               	goto	u1587
  2846  001A7E  0012               	return		;funcret
  2847  001A80                     __end_of_lcd_write_cmd:
  2848                           	opt stack 0
  2849                           tblptru	equ	0xFF8
  2850                           tblptrh	equ	0xFF7
  2851                           tblptrl	equ	0xFF6
  2852                           tablat	equ	0xFF5
  2853                           prodh	equ	0xFF4
  2854                           prodl	equ	0xFF3
  2855                           intcon	equ	0xFF2
  2856                           intcon2	equ	0xFF1
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postdec1	equ	0xFE5
  2860                           plusw1	equ	0xFE3
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           plusw2	equ	0xFDB
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _lcd_strobe *****************
  2869 ;; Defined at:
  2870 ;;		line 73 in file "lcd_utilities.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    3
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_lcd_write_cmd
  2895 ;;		_lcd_write_data
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text11
  2900  001D0C                     __ptext11:
  2901                           	opt stack 0
  2902  001D0C                     _lcd_strobe:
  2903                           	opt stack 25
  2904                           
  2905                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2906                           
  2907                           ;incstack = 0
  2908  001D0C  8883               	bsf	3971,4,c	;volatile
  2909                           
  2910                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2911  001D0E  0E7D               	movlw	125
  2912  001D10  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2913  001D12  0EAC               	movlw	172
  2914  001D14                     u1597:
  2915  001D14  2EE8               	decfsz	wreg,f,c
  2916  001D16  D7FE               	goto	u1597
  2917  001D18  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2918  001D1A  D7FC               	goto	u1597
  2919                           
  2920                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2921  001D1C  9883               	bcf	3971,4,c	;volatile
  2922                           
  2923                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2924  001D1E  0E7D               	movlw	125
  2925  001D20  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2926  001D22  0EAC               	movlw	172
  2927  001D24                     u1607:
  2928  001D24  2EE8               	decfsz	wreg,f,c
  2929  001D26  D7FE               	goto	u1607
  2930  001D28  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2931  001D2A  D7FC               	goto	u1607
  2932  001D2C  0012               	return		;funcret
  2933  001D2E                     __end_of_lcd_strobe:
  2934                           	opt stack 0
  2935                           tblptru	equ	0xFF8
  2936                           tblptrh	equ	0xFF7
  2937                           tblptrl	equ	0xFF6
  2938                           tablat	equ	0xFF5
  2939                           prodh	equ	0xFF4
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           intcon2	equ	0xFF1
  2943                           postinc0	equ	0xFEE
  2944                           wreg	equ	0xFE8
  2945                           postdec1	equ	0xFE5
  2946                           plusw1	equ	0xFE3
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           plusw2	equ	0xFDB
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _getkey *****************
  2955 ;; Defined at:
  2956 ;;		line 17 in file "keypad_utilities.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2961 ;;  keycode         1   18[BANK0 ] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      unsigned char 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0
  2972 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2974 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2975 ;;Total ram usage:       19 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    3
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_SetupTime
  2982 ;;		_SetupAlarmTimeA
  2983 ;;		_SetupAlarmTimeB
  2984 ;;		_SetupAlarmTimeC
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text12
  2989  001C90                     __ptext12:
  2990                           	opt stack 0
  2991  001C90                     _getkey:
  2992                           	opt stack 26
  2993                           
  2994                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2995                           
  2996                           ;incstack = 0
  2997  001C90  0E1B               	movlw	low getkey@F4270
  2998  001C92  6EF6               	movwf	tblptrl,c
  2999  001C94                     	if	1	;There is more than 1 active tblptr byte
  3000  001C94  0E10               	movlw	high getkey@F4270
  3001  001C96  6EF7               	movwf	tblptrh,c
  3002  001C98                     	endif
  3003  001C98                     	if	0	;There are less than 3 active tblptr bytes
  3004  001C98                     	endif
  3005  001C98  EE20  F0C9         	lfsr	2,getkey@lookup
  3006  001C9C  0E11               	movlw	17
  3007  001C9E                     u1050:
  3008  001C9E  0009               	tblrd		*+
  3009  001CA0  CFF5 FFDE          	movff	tablat,postinc2
  3010  001CA4  06E8               	decf	wreg,f,c
  3011  001CA6  E2FB               	bc	u1050
  3012  001CA8                     l33:
  3013  001CA8  AA81               	btfss	3969,5,c	;volatile
  3014  001CAA  D7FE               	goto	l33
  3015                           
  3016                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  3017  001CAC  5081               	movf	3969,w,c	;volatile
  3018  001CAE  0B0F               	andlw	15
  3019  001CB0  0100               	movlb	0	; () banked
  3020  001CB2  6FDB               	movwf	getkey@keycode& (0+255),b
  3021  001CB4                     l36:
  3022  001CB4  BA81               	btfsc	3969,5,c	;volatile
  3023  001CB6  D7FE               	goto	l36
  3024                           
  3025                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  3026  001CB8  0100               	movlb	0	; () banked
  3027  001CBA  51DB               	movf	getkey@keycode& (0+255),w,b
  3028  001CBC  0D01               	mullw	1
  3029  001CBE  0EC9               	movlw	low getkey@lookup
  3030  001CC0  24F3               	addwf	prodl,w,c
  3031  001CC2  6ED9               	movwf	fsr2l,c
  3032  001CC4  0E00               	movlw	high getkey@lookup
  3033  001CC6  20F4               	addwfc	prodh,w,c
  3034  001CC8  6EDA               	movwf	fsr2h,c
  3035  001CCA  50DF               	movf	indf2,w,c
  3036  001CCC  0012               	return	
  3037  001CCE                     __end_of_getkey:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon	equ	0xFF2
  3046                           intcon2	equ	0xFF1
  3047                           postinc0	equ	0xFEE
  3048                           wreg	equ	0xFE8
  3049                           postdec1	equ	0xFE5
  3050                           plusw1	equ	0xFE3
  3051                           fsr1l	equ	0xFE1
  3052                           indf2	equ	0xFDF
  3053                           postinc2	equ	0xFDE
  3054                           plusw2	equ	0xFDB
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _delay_ms *****************
  3060 ;; Defined at:
  3061 ;;		line 10 in file "delays_utilities.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  i               2   28[COMRAM] unsigned int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  j               2    1[BANK0 ] unsigned int 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         2       0       0       0       0       0       0       0       0
  3076 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3077 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3078 ;;      Totals:         2       3       0       0       0       0       0       0       0
  3079 ;;Total ram usage:        5 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    3
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_SetupTime
  3086 ;;		_SetupAlarmTimeA
  3087 ;;		_SetupAlarmTimeB
  3088 ;;		_SetupAlarmTimeC
  3089 ;;		_Startup
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text13
  3094  001CCE                     __ptext13:
  3095                           	opt stack 0
  3096  001CCE                     _delay_ms:
  3097                           	opt stack 26
  3098                           
  3099                           ;delays_utilities.c: 12: if(i!=0)
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;incstack = 0
  3103  001CCE  501D               	movf	delay_ms@i,w,c
  3104  001CD0  101E               	iorwf	delay_ms@i+1,w,c
  3105  001CD2  B4D8               	btfsc	status,2,c
  3106  001CD4  0012               	return	
  3107                           
  3108                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  3109  001CD6  0E00               	movlw	0
  3110  001CD8  0100               	movlb	0	; () banked
  3111  001CDA  6FCB               	movwf	(delay_ms@j+1)& (0+255),b
  3112  001CDC  0E00               	movlw	0
  3113  001CDE  6FCA               	movwf	delay_ms@j& (0+255),b
  3114  001CE0  D00C               	goto	l209
  3115  001CE2                     l2163:
  3116                           
  3117                           ; BSR set to: 0
  3118  001CE2  0E10               	movlw	16
  3119  001CE4  0100               	movlb	0	; () banked
  3120  001CE6  6FC9               	movwf	??_delay_ms& (0+255),b
  3121  001CE8  0E94               	movlw	148
  3122  001CEA                     u1617:
  3123  001CEA  2EE8               	decfsz	wreg,f,c
  3124  001CEC  D7FE               	goto	u1617
  3125  001CEE  2FC9               	decfsz	??_delay_ms& (0+255),f,b
  3126  001CF0  D7FC               	goto	u1617
  3127  001CF2  D000               	nop2	
  3128  001CF4  0100               	movlb	0	; () banked
  3129  001CF6  4BCA               	infsnz	delay_ms@j& (0+255),f,b
  3130  001CF8  2BCB               	incf	(delay_ms@j+1)& (0+255),f,b
  3131  001CFA                     l209:
  3132                           
  3133                           ; BSR set to: 0
  3134  001CFA  501D               	movf	delay_ms@i,w,c
  3135  001CFC  0100               	movlb	0	; () banked
  3136  001CFE  5DCA               	subwf	delay_ms@j& (0+255),w,b
  3137  001D00  501E               	movf	delay_ms@i+1,w,c
  3138  001D02  0100               	movlb	0	; () banked
  3139  001D04  59CB               	subwfb	(delay_ms@j+1)& (0+255),w,b
  3140  001D06  B0D8               	btfsc	status,0,c
  3141  001D08  0012               	return	
  3142  001D0A  D7EB               	goto	l2163
  3143  001D0C                     __end_of_delay_ms:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           intcon2	equ	0xFF1
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           plusw1	equ	0xFE3
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           postinc2	equ	0xFDE
  3160                           plusw2	equ	0xFDB
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _char_2_int *****************
  3166 ;; Defined at:
  3167 ;;		line 36 in file "Main.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  char1           1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  char1           1   28[COMRAM] unsigned char 
  3172 ;;  int1            1   29[COMRAM] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      unsigned char 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_SetupTime
  3193 ;;		_SetupAlarmTimeA
  3194 ;;		_SetupAlarmTimeB
  3195 ;;		_SetupAlarmTimeC
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text14
  3200  001AF6                     __ptext14:
  3201                           	opt stack 0
  3202  001AF6                     _char_2_int:
  3203                           	opt stack 26
  3204                           
  3205                           ;incstack = 0
  3206                           ;char_2_int@char1 stored from wreg
  3207  001AF6  6E1D               	movwf	char_2_int@char1,c
  3208                           
  3209                           ;Main.c: 38: unsigned char int1;
  3210                           ;Main.c: 39: switch (char1)
  3211  001AF8  D015               	goto	l1587
  3212  001AFA                     l1567:
  3213  001AFA  0E01               	movlw	1
  3214  001AFC  D011               	goto	L10
  3215  001AFE                     l1569:
  3216  001AFE  0E02               	movlw	2
  3217  001B00  D00F               	goto	L10
  3218  001B02                     l1571:
  3219  001B02  0E03               	movlw	3
  3220  001B04  D00D               	goto	L10
  3221  001B06                     l1573:
  3222  001B06  0E04               	movlw	4
  3223  001B08  D00B               	goto	L10
  3224  001B0A                     l1575:
  3225  001B0A  0E05               	movlw	5
  3226  001B0C  D009               	goto	L10
  3227  001B0E                     l1577:
  3228  001B0E  0E06               	movlw	6
  3229  001B10  D007               	goto	L10
  3230  001B12                     l1579:
  3231  001B12  0E07               	movlw	7
  3232  001B14  D005               	goto	L10
  3233  001B16                     l1581:
  3234  001B16  0E08               	movlw	8
  3235  001B18  D003               	goto	L10
  3236  001B1A                     l1583:
  3237  001B1A  0E09               	movlw	9
  3238  001B1C  D001               	goto	L10
  3239  001B1E                     l1585:
  3240  001B1E  0E00               	movlw	0
  3241  001B20                     L10:
  3242  001B20  6E1E               	movwf	char_2_int@int1,c
  3243                           
  3244                           ;Main.c: 52: }
  3245  001B22  D020               	goto	l122
  3246  001B24                     l1587:
  3247  001B24  501D               	movf	char_2_int@char1,w,c
  3248                           
  3249                           ; Switch size 1, requested type "space"
  3250                           ; Number of cases is 10, Range of values is 48 to 57
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte           31    16 (average)
  3254                           ;	Chosen strategy is simple_byte
  3255  001B26  0A30               	xorlw	48	; case 48
  3256  001B28  B4D8               	btfsc	status,2,c
  3257  001B2A  D7F9               	goto	l1585
  3258  001B2C  0A01               	xorlw	1	; case 49
  3259  001B2E  B4D8               	btfsc	status,2,c
  3260  001B30  D7E4               	goto	l1567
  3261  001B32  0A03               	xorlw	3	; case 50
  3262  001B34  B4D8               	btfsc	status,2,c
  3263  001B36  D7E3               	goto	l1569
  3264  001B38  0A01               	xorlw	1	; case 51
  3265  001B3A  B4D8               	btfsc	status,2,c
  3266  001B3C  D7E2               	goto	l1571
  3267  001B3E  0A07               	xorlw	7	; case 52
  3268  001B40  B4D8               	btfsc	status,2,c
  3269  001B42  D7E1               	goto	l1573
  3270  001B44  0A01               	xorlw	1	; case 53
  3271  001B46  B4D8               	btfsc	status,2,c
  3272  001B48  D7E0               	goto	l1575
  3273  001B4A  0A03               	xorlw	3	; case 54
  3274  001B4C  B4D8               	btfsc	status,2,c
  3275  001B4E  D7DF               	goto	l1577
  3276  001B50  0A01               	xorlw	1	; case 55
  3277  001B52  B4D8               	btfsc	status,2,c
  3278  001B54  D7DE               	goto	l1579
  3279  001B56  0A0F               	xorlw	15	; case 56
  3280  001B58  B4D8               	btfsc	status,2,c
  3281  001B5A  D7DD               	goto	l1581
  3282  001B5C  0A01               	xorlw	1	; case 57
  3283  001B5E  B4D8               	btfsc	status,2,c
  3284  001B60  D7DC               	goto	l1583
  3285  001B62  D7DD               	goto	l1585
  3286  001B64                     l122:
  3287                           
  3288                           ;Main.c: 53: return(int1);
  3289  001B64  501E               	movf	char_2_int@int1,w,c
  3290  001B66  0012               	return		;funcret
  3291  001B68                     __end_of_char_2_int:
  3292                           	opt stack 0
  3293                           tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           prodh	equ	0xFF4
  3298                           prodl	equ	0xFF3
  3299                           intcon	equ	0xFF2
  3300                           intcon2	equ	0xFF1
  3301                           postinc0	equ	0xFEE
  3302                           wreg	equ	0xFE8
  3303                           postdec1	equ	0xFE5
  3304                           plusw1	equ	0xFE3
  3305                           fsr1l	equ	0xFE1
  3306                           indf2	equ	0xFDF
  3307                           postinc2	equ	0xFDE
  3308                           plusw2	equ	0xFDB
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _ISR_Timer0_Int *****************
  3314 ;; Defined at:
  3315 ;;		line 56 in file "Main.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  second10        1   27[COMRAM] unsigned char 
  3320 ;;  minute10        1   26[COMRAM] unsigned char 
  3321 ;;  hour10          1   25[COMRAM] unsigned char 
  3322 ;;  second1         1   24[COMRAM] unsigned char 
  3323 ;;  minute1         1   23[COMRAM] unsigned char 
  3324 ;;  hour1           1   22[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3336 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3337 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:       20 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    2
  3341 ;; This function calls:
  3342 ;;		___awdiv
  3343 ;;		_int_2_char
  3344 ;;		i2_lcd_write_cmd
  3345 ;;		i2_lcd_write_data
  3346 ;; This function is called by:
  3347 ;;		Interrupt level 2
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	intcode
  3352  001008                     __pintcode:
  3353                           	opt stack 0
  3354  001008                     _ISR_Timer0_Int:
  3355                           	opt stack 25
  3356                           
  3357                           ;incstack = 0
  3358  001008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3359  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3360  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3361  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3362                           pclatu	equ	0xFFB
  3363                           pclath	equ	0xFFA
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodh	equ	0xFF4
  3369                           prodl	equ	0xFF3
  3370                           intcon	equ	0xFF2
  3371                           intcon2	equ	0xFF1
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           postdec1	equ	0xFE5
  3375                           plusw1	equ	0xFE3
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           postinc2	equ	0xFDE
  3379                           plusw2	equ	0xFDB
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384                           	psect	intcode_body
  3385  00102E                     __pintcode_body:
  3386                           	opt stack 25
  3387  00102E                     int_func:
  3388                           	opt stack 25
  3389  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3390  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3391  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3392  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3393  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3394  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3395  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3396  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3397  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3398  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3399  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3400  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3401  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3402                           
  3403                           ;Main.c: 58: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3404                           ;Main.c: 59: if (INTCONbits.TMR0IF == 1)
  3405  001060  A4F2               	btfss	intcon,2,c	;volatile
  3406  001062  D085               	goto	i2l140
  3407                           
  3408                           ;Main.c: 60: {
  3409                           ;Main.c: 64: second = second + 1;
  3410  001064  2842               	incf	_second,w,c
  3411  001066  6E42               	movwf	_second,c
  3412                           
  3413                           ;Main.c: 65: if ( second > 59 )
  3414  001068  0E3B               	movlw	59
  3415  00106A  6442               	cpfsgt	_second,c
  3416  00106C  D010               	goto	i2l1987
  3417                           
  3418                           ;Main.c: 66: {
  3419                           ;Main.c: 67: second = 0;
  3420  00106E  0E00               	movlw	0
  3421  001070  6E42               	movwf	_second,c
  3422                           
  3423                           ;Main.c: 68: minute = minute + 1;
  3424  001072  283E               	incf	_minute,w,c
  3425  001074  6E3E               	movwf	_minute,c
  3426                           
  3427                           ;Main.c: 69: if ( minute > 59 )
  3428  001076  0E3B               	movlw	59
  3429  001078  643E               	cpfsgt	_minute,c
  3430  00107A  D009               	goto	i2l1987
  3431                           
  3432                           ;Main.c: 70: {
  3433                           ;Main.c: 71: minute = 0;
  3434  00107C  0E00               	movlw	0
  3435  00107E  6E3E               	movwf	_minute,c
  3436                           
  3437                           ;Main.c: 72: hour = hour + 1;
  3438  001080  283A               	incf	_hour,w,c
  3439  001082  6E3A               	movwf	_hour,c
  3440                           
  3441                           ;Main.c: 73: if ( hour > 23 )
  3442  001084  0E17               	movlw	23
  3443  001086  643A               	cpfsgt	_hour,c
  3444  001088  D002               	goto	i2l1987
  3445                           
  3446                           ;Main.c: 74: hour = 0;
  3447  00108A  0E00               	movlw	0
  3448  00108C  6E3A               	movwf	_hour,c
  3449  00108E                     i2l1987:
  3450                           
  3451                           ;Main.c: 75: }
  3452                           ;Main.c: 76: }
  3453                           ;Main.c: 78: hour10 = hour / 10;
  3454  00108E  C03A  F001         	movff	_hour,___awdiv@dividend
  3455  001092  6A02               	clrf	___awdiv@dividend+1,c
  3456  001094  0E00               	movlw	0
  3457  001096  6E04               	movwf	___awdiv@divisor+1,c
  3458  001098  0E0A               	movlw	10
  3459  00109A  6E03               	movwf	___awdiv@divisor,c
  3460  00109C  EC41  F00C         	call	___awdiv	;wreg free
  3461  0010A0  5001               	movf	?___awdiv,w,c
  3462  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3463                           
  3464                           ;Main.c: 79: hour1 = hour - hour10 * 10;
  3465  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3466  0010A6  0D0A               	mullw	10
  3467  0010A8  50F3               	movf	prodl,w,c
  3468  0010AA  0800               	sublw	0
  3469  0010AC  243A               	addwf	_hour,w,c
  3470  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3471                           
  3472                           ;Main.c: 81: minute10 = minute / 10;
  3473  0010B0  C03E  F001         	movff	_minute,___awdiv@dividend
  3474  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3475  0010B6  0E00               	movlw	0
  3476  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3477  0010BA  0E0A               	movlw	10
  3478  0010BC  6E03               	movwf	___awdiv@divisor,c
  3479  0010BE  EC41  F00C         	call	___awdiv	;wreg free
  3480  0010C2  5001               	movf	?___awdiv,w,c
  3481  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3482                           
  3483                           ;Main.c: 82: minute1 = minute - minute10 * 10;
  3484  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3485  0010C8  0D0A               	mullw	10
  3486  0010CA  50F3               	movf	prodl,w,c
  3487  0010CC  0800               	sublw	0
  3488  0010CE  243E               	addwf	_minute,w,c
  3489  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3490                           
  3491                           ;Main.c: 84: second10 = second / 10;
  3492  0010D2  C042  F001         	movff	_second,___awdiv@dividend
  3493  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3494  0010D8  0E00               	movlw	0
  3495  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3496  0010DC  0E0A               	movlw	10
  3497  0010DE  6E03               	movwf	___awdiv@divisor,c
  3498  0010E0  EC41  F00C         	call	___awdiv	;wreg free
  3499  0010E4  5001               	movf	?___awdiv,w,c
  3500  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3501                           
  3502                           ;Main.c: 85: second1 = second - second10 * 10;
  3503  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3504  0010EA  0D0A               	mullw	10
  3505  0010EC  50F3               	movf	prodl,w,c
  3506  0010EE  0800               	sublw	0
  3507  0010F0  2442               	addwf	_second,w,c
  3508  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3509                           
  3510                           ;Main.c: 87: lcd_write_cmd(0x80);
  3511  0010F4  0E80               	movlw	128
  3512  0010F6  ECB4  F00D         	call	i2_lcd_write_cmd
  3513                           
  3514                           ;Main.c: 88: lcd_write_data('T');
  3515  0010FA  0E54               	movlw	84
  3516  0010FC  ECF7  F00B         	call	i2_lcd_write_data
  3517                           
  3518                           ;Main.c: 89: lcd_write_data('i');
  3519  001100  0E69               	movlw	105
  3520  001102  ECF7  F00B         	call	i2_lcd_write_data
  3521                           
  3522                           ;Main.c: 90: lcd_write_data('m');
  3523  001106  0E6D               	movlw	109
  3524  001108  ECF7  F00B         	call	i2_lcd_write_data
  3525                           
  3526                           ;Main.c: 91: lcd_write_data('e');
  3527  00110C  0E65               	movlw	101
  3528  00110E  ECF7  F00B         	call	i2_lcd_write_data
  3529                           
  3530                           ;Main.c: 92: lcd_write_data(' ');
  3531  001112  0E20               	movlw	32
  3532  001114  ECF7  F00B         	call	i2_lcd_write_data
  3533                           
  3534                           ;Main.c: 93: lcd_write_data('=');
  3535  001118  0E3D               	movlw	61
  3536  00111A  ECF7  F00B         	call	i2_lcd_write_data
  3537                           
  3538                           ;Main.c: 94: lcd_write_data(' ');
  3539  00111E  0E20               	movlw	32
  3540  001120  ECF7  F00B         	call	i2_lcd_write_data
  3541                           
  3542                           ;Main.c: 95: lcd_write_data(int_2_char (hour10));
  3543  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3544  001126  EC40  F00D         	call	_int_2_char
  3545  00112A  ECF7  F00B         	call	i2_lcd_write_data
  3546                           
  3547                           ;Main.c: 96: lcd_write_data(int_2_char (hour1));
  3548  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3549  001130  EC40  F00D         	call	_int_2_char
  3550  001134  ECF7  F00B         	call	i2_lcd_write_data
  3551                           
  3552                           ;Main.c: 97: lcd_write_data(':');
  3553  001138  0E3A               	movlw	58
  3554  00113A  ECF7  F00B         	call	i2_lcd_write_data
  3555                           
  3556                           ;Main.c: 98: lcd_write_data(int_2_char (minute10));
  3557  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3558  001140  EC40  F00D         	call	_int_2_char
  3559  001144  ECF7  F00B         	call	i2_lcd_write_data
  3560                           
  3561                           ;Main.c: 99: lcd_write_data(int_2_char (minute1));
  3562  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3563  00114A  EC40  F00D         	call	_int_2_char
  3564  00114E  ECF7  F00B         	call	i2_lcd_write_data
  3565                           
  3566                           ;Main.c: 100: lcd_write_data(':');
  3567  001152  0E3A               	movlw	58
  3568  001154  ECF7  F00B         	call	i2_lcd_write_data
  3569                           
  3570                           ;Main.c: 101: lcd_write_data(int_2_char (second10));
  3571  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3572  00115A  EC40  F00D         	call	_int_2_char
  3573  00115E  ECF7  F00B         	call	i2_lcd_write_data
  3574                           
  3575                           ;Main.c: 102: lcd_write_data(int_2_char (second1));
  3576  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3577  001164  EC40  F00D         	call	_int_2_char
  3578  001168  ECF7  F00B         	call	i2_lcd_write_data
  3579                           
  3580                           ;Main.c: 104: INTCONbits.TMR0IF = 0;
  3581  00116C  94F2               	bcf	intcon,2,c	;volatile
  3582  00116E                     i2l140:
  3583  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3584  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3585  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3586  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3587  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3588  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3589  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3590  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3591  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3592  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3593  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3594  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3595  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3596  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3597  0011A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3598  0011A8  0011               	retfie		f
  3599  0011AA                     __end_of_ISR_Timer0_Int:
  3600                           	opt stack 0
  3601                           pclatu	equ	0xFFB
  3602                           pclath	equ	0xFFA
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           intcon2	equ	0xFF1
  3611                           postinc0	equ	0xFEE
  3612                           fsr0h	equ	0xFEA
  3613                           fsr0l	equ	0xFE9
  3614                           wreg	equ	0xFE8
  3615                           postdec1	equ	0xFE5
  3616                           plusw1	equ	0xFE3
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           postinc2	equ	0xFDE
  3621                           plusw2	equ	0xFDB
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function i2_lcd_write_data *****************
  3627 ;; Defined at:
  3628 ;;		line 43 in file "lcd_utilities.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  data            1    wreg     unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  data            1    2[COMRAM] unsigned char 
  3633 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0
  3644 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3645 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3646 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3647 ;;Total ram usage:        3 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    1
  3650 ;; This function calls:
  3651 ;;		i2_lcd_strobe
  3652 ;; This function is called by:
  3653 ;;		_ISR_Timer0_Int
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text16
  3658  0017EE                     __ptext16:
  3659                           	opt stack 0
  3660  0017EE                     i2_lcd_write_data:
  3661                           	opt stack 25
  3662                           
  3663                           ;incstack = 0
  3664                           ;i2lcd_write_data@data stored from wreg
  3665  0017EE  6E03               	movwf	i2lcd_write_data@data,c
  3666                           
  3667                           ;lcd_utilities.c: 45: char temp1;
  3668                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3669  0017F0  8C83               	bsf	3971,6,c	;volatile
  3670                           
  3671                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3672  0017F2  0E3F               	movlw	63
  3673  0017F4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3674  0017F6  0E55               	movlw	85
  3675  0017F8                     i2u162_47:
  3676  0017F8  2EE8               	decfsz	wreg,f,c
  3677  0017FA  D7FE               	goto	i2u162_47
  3678  0017FC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3679  0017FE  D7FC               	goto	i2u162_47
  3680  001800  F000               	nop	
  3681                           
  3682                           ;lcd_utilities.c: 50: temp1 = data;
  3683  001802  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3684                           
  3685                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3686  001806  3804               	swapf	i2lcd_write_data@temp1,w,c
  3687  001808  0B0F               	andlw	15
  3688  00180A  6E04               	movwf	i2lcd_write_data@temp1,c
  3689                           
  3690                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3691  00180C  5004               	movf	i2lcd_write_data@temp1,w,c
  3692  00180E  0B0F               	andlw	15
  3693  001810  6E83               	movwf	3971,c	;volatile
  3694                           
  3695                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3696  001812  0E7D               	movlw	125
  3697  001814  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3698  001816  0EAC               	movlw	172
  3699  001818                     i2u163_47:
  3700  001818  2EE8               	decfsz	wreg,f,c
  3701  00181A  D7FE               	goto	i2u163_47
  3702  00181C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3703  00181E  D7FC               	goto	i2u163_47
  3704                           
  3705                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3706  001820  8C83               	bsf	3971,6,c	;volatile
  3707                           
  3708                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3709  001822  0E7D               	movlw	125
  3710  001824  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3711  001826  0EAC               	movlw	172
  3712  001828                     i2u164_47:
  3713  001828  2EE8               	decfsz	wreg,f,c
  3714  00182A  D7FE               	goto	i2u164_47
  3715  00182C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3716  00182E  D7FC               	goto	i2u164_47
  3717                           
  3718                           ;lcd_utilities.c: 57: lcd_strobe();
  3719  001830  EC97  F00E         	call	i2_lcd_strobe	;wreg free
  3720                           
  3721                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3722  001834  0E7D               	movlw	125
  3723  001836  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3724  001838  0EAC               	movlw	172
  3725  00183A                     i2u165_47:
  3726  00183A  2EE8               	decfsz	wreg,f,c
  3727  00183C  D7FE               	goto	i2u165_47
  3728  00183E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3729  001840  D7FC               	goto	i2u165_47
  3730                           
  3731                           ;lcd_utilities.c: 60: temp1 = data;
  3732  001842  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3733                           
  3734                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3735  001846  5004               	movf	i2lcd_write_data@temp1,w,c
  3736  001848  0B0F               	andlw	15
  3737  00184A  6E83               	movwf	3971,c	;volatile
  3738                           
  3739                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3740  00184C  0E7D               	movlw	125
  3741  00184E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3742  001850  0EAC               	movlw	172
  3743  001852                     i2u166_47:
  3744  001852  2EE8               	decfsz	wreg,f,c
  3745  001854  D7FE               	goto	i2u166_47
  3746  001856  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3747  001858  D7FC               	goto	i2u166_47
  3748                           
  3749                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3750  00185A  8C83               	bsf	3971,6,c	;volatile
  3751                           
  3752                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3753  00185C  0E9C               	movlw	156
  3754  00185E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3755  001860  0ED7               	movlw	215
  3756  001862                     i2u167_47:
  3757  001862  2EE8               	decfsz	wreg,f,c
  3758  001864  D7FE               	goto	i2u167_47
  3759  001866  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3760  001868  D7FC               	goto	i2u167_47
  3761  00186A  F000               	nop	
  3762                           
  3763                           ;lcd_utilities.c: 66: lcd_strobe();
  3764  00186C  EC97  F00E         	call	i2_lcd_strobe	;wreg free
  3765                           
  3766                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3767  001870  0E9C               	movlw	156
  3768  001872  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3769  001874  0ED7               	movlw	215
  3770  001876                     i2u168_47:
  3771  001876  2EE8               	decfsz	wreg,f,c
  3772  001878  D7FE               	goto	i2u168_47
  3773  00187A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3774  00187C  D7FC               	goto	i2u168_47
  3775  00187E  F000               	nop	
  3776  001880  0012               	return		;funcret
  3777  001882                     __end_ofi2_lcd_write_data:
  3778                           	opt stack 0
  3779                           pclatu	equ	0xFFB
  3780                           pclath	equ	0xFFA
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           prodh	equ	0xFF4
  3786                           prodl	equ	0xFF3
  3787                           intcon	equ	0xFF2
  3788                           intcon2	equ	0xFF1
  3789                           postinc0	equ	0xFEE
  3790                           fsr0h	equ	0xFEA
  3791                           fsr0l	equ	0xFE9
  3792                           wreg	equ	0xFE8
  3793                           postdec1	equ	0xFE5
  3794                           plusw1	equ	0xFE3
  3795                           fsr1h	equ	0xFE2
  3796                           fsr1l	equ	0xFE1
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           plusw2	equ	0xFDB
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804 ;; *************** function i2_lcd_write_cmd *****************
  3805 ;; Defined at:
  3806 ;;		line 18 in file "lcd_utilities.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  cmd             1    wreg     unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  cmd             1    2[COMRAM] unsigned char 
  3811 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0
  3822 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3824 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3825 ;;Total ram usage:        3 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		i2_lcd_strobe
  3830 ;; This function is called by:
  3831 ;;		_ISR_Timer0_Int
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text17
  3836  001B68                     __ptext17:
  3837                           	opt stack 0
  3838  001B68                     i2_lcd_write_cmd:
  3839                           	opt stack 25
  3840                           
  3841                           ;incstack = 0
  3842                           ;i2lcd_write_cmd@cmd stored from wreg
  3843  001B68  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3844                           
  3845                           ;lcd_utilities.c: 20: unsigned char temp2;
  3846                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3847  001B6A  9C83               	bcf	3971,6,c	;volatile
  3848                           
  3849                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3850  001B6C  0E3F               	movlw	63
  3851  001B6E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3852  001B70  0E55               	movlw	85
  3853  001B72                     i2u169_47:
  3854  001B72  2EE8               	decfsz	wreg,f,c
  3855  001B74  D7FE               	goto	i2u169_47
  3856  001B76  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3857  001B78  D7FC               	goto	i2u169_47
  3858  001B7A  F000               	nop	
  3859                           
  3860                           ;lcd_utilities.c: 23: temp2 = cmd;
  3861  001B7C  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3862                           
  3863                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3864  001B80  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3865  001B82  0B0F               	andlw	15
  3866  001B84  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3867                           
  3868                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3869  001B86  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3870  001B88  0B0F               	andlw	15
  3871  001B8A  6E83               	movwf	3971,c	;volatile
  3872                           
  3873                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3874  001B8C  0E7D               	movlw	125
  3875  001B8E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3876  001B90  0EAC               	movlw	172
  3877  001B92                     i2u170_47:
  3878  001B92  2EE8               	decfsz	wreg,f,c
  3879  001B94  D7FE               	goto	i2u170_47
  3880  001B96  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3881  001B98  D7FC               	goto	i2u170_47
  3882                           
  3883                           ;lcd_utilities.c: 28: lcd_strobe();
  3884  001B9A  EC97  F00E         	call	i2_lcd_strobe	;wreg free
  3885                           
  3886                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3887  001B9E  0E7D               	movlw	125
  3888  001BA0  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3889  001BA2  0EAC               	movlw	172
  3890  001BA4                     i2u171_47:
  3891  001BA4  2EE8               	decfsz	wreg,f,c
  3892  001BA6  D7FE               	goto	i2u171_47
  3893  001BA8  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3894  001BAA  D7FC               	goto	i2u171_47
  3895                           
  3896                           ;lcd_utilities.c: 32: temp2 = cmd;
  3897  001BAC  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3898                           
  3899                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3900  001BB0  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3901  001BB2  0B0F               	andlw	15
  3902  001BB4  6E83               	movwf	3971,c	;volatile
  3903                           
  3904                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3905  001BB6  0E7D               	movlw	125
  3906  001BB8  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3907  001BBA  0EAC               	movlw	172
  3908  001BBC                     i2u172_47:
  3909  001BBC  2EE8               	decfsz	wreg,f,c
  3910  001BBE  D7FE               	goto	i2u172_47
  3911  001BC0  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3912  001BC2  D7FC               	goto	i2u172_47
  3913                           
  3914                           ;lcd_utilities.c: 36: lcd_strobe();
  3915  001BC4  EC97  F00E         	call	i2_lcd_strobe	;wreg free
  3916                           
  3917                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3918  001BC8  0E7D               	movlw	125
  3919  001BCA  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3920  001BCC  0EAC               	movlw	172
  3921  001BCE                     i2u173_47:
  3922  001BCE  2EE8               	decfsz	wreg,f,c
  3923  001BD0  D7FE               	goto	i2u173_47
  3924  001BD2  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3925  001BD4  D7FC               	goto	i2u173_47
  3926  001BD6  0012               	return		;funcret
  3927  001BD8                     __end_ofi2_lcd_write_cmd:
  3928                           	opt stack 0
  3929                           pclatu	equ	0xFFB
  3930                           pclath	equ	0xFFA
  3931                           tblptru	equ	0xFF8
  3932                           tblptrh	equ	0xFF7
  3933                           tblptrl	equ	0xFF6
  3934                           tablat	equ	0xFF5
  3935                           prodh	equ	0xFF4
  3936                           prodl	equ	0xFF3
  3937                           intcon	equ	0xFF2
  3938                           intcon2	equ	0xFF1
  3939                           postinc0	equ	0xFEE
  3940                           fsr0h	equ	0xFEA
  3941                           fsr0l	equ	0xFE9
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           plusw1	equ	0xFE3
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           indf2	equ	0xFDF
  3948                           postinc2	equ	0xFDE
  3949                           plusw2	equ	0xFDB
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function i2_lcd_strobe *****************
  3955 ;; Defined at:
  3956 ;;		line 73 in file "lcd_utilities.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3972 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3973 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3974 ;;Total ram usage:        1 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		i2_lcd_write_cmd
  3980 ;;		i2_lcd_write_data
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text18
  3985  001D2E                     __ptext18:
  3986                           	opt stack 0
  3987  001D2E                     i2_lcd_strobe:
  3988                           	opt stack 25
  3989                           
  3990                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3991                           
  3992                           ;incstack = 0
  3993  001D2E  8883               	bsf	3971,4,c	;volatile
  3994                           
  3995                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3996  001D30  0E7D               	movlw	125
  3997  001D32  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3998  001D34  0EAC               	movlw	172
  3999  001D36                     i2u174_47:
  4000  001D36  2EE8               	decfsz	wreg,f,c
  4001  001D38  D7FE               	goto	i2u174_47
  4002  001D3A  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4003  001D3C  D7FC               	goto	i2u174_47
  4004                           
  4005                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  4006  001D3E  9883               	bcf	3971,4,c	;volatile
  4007                           
  4008                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  4009  001D40  0E7D               	movlw	125
  4010  001D42  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4011  001D44  0EAC               	movlw	172
  4012  001D46                     i2u175_47:
  4013  001D46  2EE8               	decfsz	wreg,f,c
  4014  001D48  D7FE               	goto	i2u175_47
  4015  001D4A  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4016  001D4C  D7FC               	goto	i2u175_47
  4017  001D4E  0012               	return		;funcret
  4018  001D50                     __end_ofi2_lcd_strobe:
  4019                           	opt stack 0
  4020                           pclatu	equ	0xFFB
  4021                           pclath	equ	0xFFA
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           postinc0	equ	0xFEE
  4031                           fsr0h	equ	0xFEA
  4032                           fsr0l	equ	0xFE9
  4033                           wreg	equ	0xFE8
  4034                           postdec1	equ	0xFE5
  4035                           plusw1	equ	0xFE3
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           indf2	equ	0xFDF
  4039                           postinc2	equ	0xFDE
  4040                           plusw2	equ	0xFDB
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8
  4044                           
  4045 ;; *************** function _int_2_char *****************
  4046 ;; Defined at:
  4047 ;;		line 16 in file "Main.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  int1            1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  int1            1    0[COMRAM] unsigned char 
  4052 ;;  char1           1    1[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_ISR_Timer0_Int
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text19
  4076  001A80                     __ptext19:
  4077                           	opt stack 0
  4078  001A80                     _int_2_char:
  4079                           	opt stack 26
  4080                           
  4081                           ;incstack = 0
  4082                           ;int_2_char@int1 stored from wreg
  4083  001A80  6E01               	movwf	int_2_char@int1,c
  4084                           
  4085                           ;Main.c: 18: char char1;
  4086                           ;Main.c: 19: switch (int1)
  4087  001A82  D017               	goto	i2l991
  4088  001A84                     i2l969:
  4089  001A84  0E30               	movlw	48
  4090  001A86  D013               	goto	L20
  4091  001A88                     i2l971:
  4092  001A88  0E31               	movlw	49
  4093  001A8A  D011               	goto	L20
  4094  001A8C                     i2l973:
  4095  001A8C  0E32               	movlw	50
  4096  001A8E  D00F               	goto	L20
  4097  001A90                     i2l975:
  4098  001A90  0E33               	movlw	51
  4099  001A92  D00D               	goto	L20
  4100  001A94                     i2l977:
  4101  001A94  0E34               	movlw	52
  4102  001A96  D00B               	goto	L20
  4103  001A98                     i2l979:
  4104  001A98  0E35               	movlw	53
  4105  001A9A  D009               	goto	L20
  4106  001A9C                     i2l981:
  4107  001A9C  0E36               	movlw	54
  4108  001A9E  D007               	goto	L20
  4109  001AA0                     i2l983:
  4110  001AA0  0E37               	movlw	55
  4111  001AA2  D005               	goto	L20
  4112  001AA4                     i2l985:
  4113  001AA4  0E38               	movlw	56
  4114  001AA6  D003               	goto	L20
  4115  001AA8                     i2l987:
  4116  001AA8  0E39               	movlw	57
  4117  001AAA  D001               	goto	L20
  4118  001AAC                     i2l989:
  4119  001AAC  0E3F               	movlw	63
  4120  001AAE                     L20:
  4121  001AAE  6E02               	movwf	int_2_char@char1,c
  4122                           
  4123                           ;Main.c: 32: }
  4124  001AB0  D020               	goto	i2l106
  4125  001AB2                     i2l991:
  4126  001AB2  5001               	movf	int_2_char@int1,w,c
  4127                           
  4128                           ; Switch size 1, requested type "space"
  4129                           ; Number of cases is 10, Range of values is 0 to 9
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte           31    16 (average)
  4133                           ;	Chosen strategy is simple_byte
  4134  001AB4  0A00               	xorlw	0	; case 0
  4135  001AB6  B4D8               	btfsc	status,2,c
  4136  001AB8  D7E5               	goto	i2l969
  4137  001ABA  0A01               	xorlw	1	; case 1
  4138  001ABC  B4D8               	btfsc	status,2,c
  4139  001ABE  D7E4               	goto	i2l971
  4140  001AC0  0A03               	xorlw	3	; case 2
  4141  001AC2  B4D8               	btfsc	status,2,c
  4142  001AC4  D7E3               	goto	i2l973
  4143  001AC6  0A01               	xorlw	1	; case 3
  4144  001AC8  B4D8               	btfsc	status,2,c
  4145  001ACA  D7E2               	goto	i2l975
  4146  001ACC  0A07               	xorlw	7	; case 4
  4147  001ACE  B4D8               	btfsc	status,2,c
  4148  001AD0  D7E1               	goto	i2l977
  4149  001AD2  0A01               	xorlw	1	; case 5
  4150  001AD4  B4D8               	btfsc	status,2,c
  4151  001AD6  D7E0               	goto	i2l979
  4152  001AD8  0A03               	xorlw	3	; case 6
  4153  001ADA  B4D8               	btfsc	status,2,c
  4154  001ADC  D7DF               	goto	i2l981
  4155  001ADE  0A01               	xorlw	1	; case 7
  4156  001AE0  B4D8               	btfsc	status,2,c
  4157  001AE2  D7DE               	goto	i2l983
  4158  001AE4  0A0F               	xorlw	15	; case 8
  4159  001AE6  B4D8               	btfsc	status,2,c
  4160  001AE8  D7DD               	goto	i2l985
  4161  001AEA  0A01               	xorlw	1	; case 9
  4162  001AEC  B4D8               	btfsc	status,2,c
  4163  001AEE  D7DC               	goto	i2l987
  4164  001AF0  D7DD               	goto	i2l989
  4165  001AF2                     i2l106:
  4166                           
  4167                           ;Main.c: 33: return(char1);
  4168  001AF2  5002               	movf	int_2_char@char1,w,c
  4169  001AF4  0012               	return		;funcret
  4170  001AF6                     __end_of_int_2_char:
  4171                           	opt stack 0
  4172                           pclatu	equ	0xFFB
  4173                           pclath	equ	0xFFA
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           prodh	equ	0xFF4
  4179                           prodl	equ	0xFF3
  4180                           intcon	equ	0xFF2
  4181                           intcon2	equ	0xFF1
  4182                           postinc0	equ	0xFEE
  4183                           fsr0h	equ	0xFEA
  4184                           fsr0l	equ	0xFE9
  4185                           wreg	equ	0xFE8
  4186                           postdec1	equ	0xFE5
  4187                           plusw1	equ	0xFE3
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           indf2	equ	0xFDF
  4191                           postinc2	equ	0xFDE
  4192                           plusw2	equ	0xFDB
  4193                           fsr2h	equ	0xFDA
  4194                           fsr2l	equ	0xFD9
  4195                           status	equ	0xFD8
  4196                           
  4197 ;; *************** function ___awdiv *****************
  4198 ;; Defined at:
  4199 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  dividend        2    0[COMRAM] int 
  4202 ;;  divisor         2    2[COMRAM] int 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  quotient        2    6[COMRAM] int 
  4205 ;;  sign            1    5[COMRAM] unsigned char 
  4206 ;;  counter         1    4[COMRAM] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    0[COMRAM] int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         4       0       0       0       0       0       0       0       0
  4217 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4219 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        8 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_ISR_Timer0_Int
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text20
  4230  001882                     __ptext20:
  4231                           	opt stack 0
  4232  001882                     ___awdiv:
  4233                           	opt stack 26
  4234                           
  4235                           ;incstack = 0
  4236  001882  0E00               	movlw	0
  4237  001884  6E06               	movwf	___awdiv@sign,c
  4238  001886  AE04               	btfss	___awdiv@divisor+1,7,c
  4239  001888  D006               	goto	i2l1873
  4240  00188A  6C03               	negf	___awdiv@divisor,c
  4241  00188C  1E04               	comf	___awdiv@divisor+1,f,c
  4242  00188E  B0D8               	btfsc	status,0,c
  4243  001890  2A04               	incf	___awdiv@divisor+1,f,c
  4244  001892  0E01               	movlw	1
  4245  001894  6E06               	movwf	___awdiv@sign,c
  4246  001896                     i2l1873:
  4247  001896  AE02               	btfss	___awdiv@dividend+1,7,c
  4248  001898  D006               	goto	i2l1879
  4249  00189A  6C01               	negf	___awdiv@dividend,c
  4250  00189C  1E02               	comf	___awdiv@dividend+1,f,c
  4251  00189E  B0D8               	btfsc	status,0,c
  4252  0018A0  2A02               	incf	___awdiv@dividend+1,f,c
  4253  0018A2  0E01               	movlw	1
  4254  0018A4  1A06               	xorwf	___awdiv@sign,f,c
  4255  0018A6                     i2l1879:
  4256  0018A6  0E00               	movlw	0
  4257  0018A8  6E08               	movwf	___awdiv@quotient+1,c
  4258  0018AA  0E00               	movlw	0
  4259  0018AC  6E07               	movwf	___awdiv@quotient,c
  4260  0018AE  5003               	movf	___awdiv@divisor,w,c
  4261  0018B0  1004               	iorwf	___awdiv@divisor+1,w,c
  4262  0018B2  B4D8               	btfsc	status,2,c
  4263  0018B4  D01C               	goto	i2l1901
  4264  0018B6  0E01               	movlw	1
  4265  0018B8  6E05               	movwf	___awdiv@counter,c
  4266  0018BA  D004               	goto	i2l1887
  4267  0018BC                     i2l1885:
  4268  0018BC  90D8               	bcf	status,0,c
  4269  0018BE  3603               	rlcf	___awdiv@divisor,f,c
  4270  0018C0  3604               	rlcf	___awdiv@divisor+1,f,c
  4271  0018C2  2A05               	incf	___awdiv@counter,f,c
  4272  0018C4                     i2l1887:
  4273  0018C4  AE04               	btfss	___awdiv@divisor+1,7,c
  4274  0018C6  D7FA               	goto	i2l1885
  4275  0018C8                     i2l1889:
  4276  0018C8  90D8               	bcf	status,0,c
  4277  0018CA  3607               	rlcf	___awdiv@quotient,f,c
  4278  0018CC  3608               	rlcf	___awdiv@quotient+1,f,c
  4279  0018CE  5003               	movf	___awdiv@divisor,w,c
  4280  0018D0  5C01               	subwf	___awdiv@dividend,w,c
  4281  0018D2  5004               	movf	___awdiv@divisor+1,w,c
  4282  0018D4  5802               	subwfb	___awdiv@dividend+1,w,c
  4283  0018D6  A0D8               	btfss	status,0,c
  4284  0018D8  D005               	goto	i2l1897
  4285  0018DA  5003               	movf	___awdiv@divisor,w,c
  4286  0018DC  5E01               	subwf	___awdiv@dividend,f,c
  4287  0018DE  5004               	movf	___awdiv@divisor+1,w,c
  4288  0018E0  5A02               	subwfb	___awdiv@dividend+1,f,c
  4289  0018E2  8007               	bsf	___awdiv@quotient,0,c
  4290  0018E4                     i2l1897:
  4291  0018E4  90D8               	bcf	status,0,c
  4292  0018E6  3204               	rrcf	___awdiv@divisor+1,f,c
  4293  0018E8  3203               	rrcf	___awdiv@divisor,f,c
  4294  0018EA  2E05               	decfsz	___awdiv@counter,f,c
  4295  0018EC  D7ED               	goto	i2l1889
  4296  0018EE                     i2l1901:
  4297  0018EE  5006               	movf	___awdiv@sign,w,c
  4298  0018F0  B4D8               	btfsc	status,2,c
  4299  0018F2  D004               	goto	i2l1905
  4300  0018F4  6C07               	negf	___awdiv@quotient,c
  4301  0018F6  1E08               	comf	___awdiv@quotient+1,f,c
  4302  0018F8  B0D8               	btfsc	status,0,c
  4303  0018FA  2A08               	incf	___awdiv@quotient+1,f,c
  4304  0018FC                     i2l1905:
  4305  0018FC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4306  001900  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4307  001904  0012               	return	
  4308  001906                     __end_of___awdiv:
  4309                           	opt stack 0
  4310                           pclatu	equ	0xFFB
  4311                           pclath	equ	0xFFA
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           intcon2	equ	0xFF1
  4320                           postinc0	equ	0xFEE
  4321                           fsr0h	equ	0xFEA
  4322                           fsr0l	equ	0xFE9
  4323                           wreg	equ	0xFE8
  4324                           postdec1	equ	0xFE5
  4325                           plusw1	equ	0xFE3
  4326                           fsr1h	equ	0xFE2
  4327                           fsr1l	equ	0xFE1
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           plusw2	equ	0xFDB
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           pclatu	equ	0xFFB
  4335                           pclath	equ	0xFFA
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           prodh	equ	0xFF4
  4341                           prodl	equ	0xFF3
  4342                           intcon	equ	0xFF2
  4343                           intcon2	equ	0xFF1
  4344                           postinc0	equ	0xFEE
  4345                           fsr0h	equ	0xFEA
  4346                           fsr0l	equ	0xFE9
  4347                           wreg	equ	0xFE8
  4348                           postdec1	equ	0xFE5
  4349                           plusw1	equ	0xFE3
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           plusw2	equ	0xFDB
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359                           	psect	rparam
  4360  0000                     pclatu	equ	0xFFB
  4361                           pclath	equ	0xFFA
  4362                           tblptru	equ	0xFF8
  4363                           tblptrh	equ	0xFF7
  4364                           tblptrl	equ	0xFF6
  4365                           tablat	equ	0xFF5
  4366                           prodh	equ	0xFF4
  4367                           prodl	equ	0xFF3
  4368                           intcon	equ	0xFF2
  4369                           intcon2	equ	0xFF1
  4370                           postinc0	equ	0xFEE
  4371                           fsr0h	equ	0xFEA
  4372                           fsr0l	equ	0xFE9
  4373                           wreg	equ	0xFE8
  4374                           postdec1	equ	0xFE5
  4375                           plusw1	equ	0xFE3
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           plusw2	equ	0xFDB
  4381                           fsr2h	equ	0xFDA
  4382                           fsr2l	equ	0xFD9
  4383                           status	equ	0xFD8
  4384                           
  4385                           	psect	temp
  4386  000043                     btemp:
  4387                           	opt stack 0
  4388  000043                     	ds	1
  4389  0000                     int$flags	set	btemp
  4390                           pclatu	equ	0xFFB
  4391                           pclath	equ	0xFFA
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           prodh	equ	0xFF4
  4397                           prodl	equ	0xFF3
  4398                           intcon	equ	0xFF2
  4399                           intcon2	equ	0xFF1
  4400                           postinc0	equ	0xFEE
  4401                           fsr0h	equ	0xFEA
  4402                           fsr0l	equ	0xFE9
  4403                           wreg	equ	0xFE8
  4404                           postdec1	equ	0xFE5
  4405                           plusw1	equ	0xFE3
  4406                           fsr1h	equ	0xFE2
  4407                           fsr1l	equ	0xFE1
  4408                           indf2	equ	0xFDF
  4409                           postinc2	equ	0xFDE
  4410                           plusw2	equ	0xFDB
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        147
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      66
    BANK0           160     49     156
    BANK1           256      0      21
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _Startup->_lcd_write_cmd
    _Startup->_lcd_write_data
    _SetupTime->_char_2_int
    _SetupTime->_delay_ms
    _SetupTime->_lcd_write_cmd
    _SetupTime->_lcd_write_data
    _SetupAlarmTimeC->_char_2_int
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeC->_lcd_write_cmd
    _SetupAlarmTimeC->_lcd_write_data
    _SetupAlarmTimeB->_char_2_int
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeB->_lcd_write_cmd
    _SetupAlarmTimeB->_lcd_write_data
    _SetupAlarmTimeA->_char_2_int
    _SetupAlarmTimeA->_delay_ms
    _SetupAlarmTimeA->_lcd_write_cmd
    _SetupAlarmTimeA->_lcd_write_data
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7533
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                            _Startup
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              2 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              2 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _Startup                                             44    44      0    1037
                                              3 BANK0     44    44      0
                           _delay_ms
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1590
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1392
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1392
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1392
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     369
                                             28 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _Startup
     _delay_ms
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      15       7        8.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      20        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 16 12:03:25 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1CA8  
                                   l36 1CB4                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l122 1B64  
                                  l209 1CFA                                    l192 1712  
                                  l187 16E8                                    l197 173C  
                                  prod 000FF3                                    wreg 000FE8  
                           _AlarmC2Off 0038                            getkey@F4270 101B  
                                 l2205 11F8                                   l2303 142E  
                                 l2401 1656                                   l2163 1CE2  
                                 l2261 1526                                   l2253 1500  
                                 l2333 1306                                   l2421 1C6A  
                                 l2183 19CE                                   l2175 199E  
                                 l2249 14F6                                   l2345 1336  
                                 l2337 1310                                   l2193 11C8  
                                 l2409 167C                                   l2417 1C60  
                                 l1571 1B02                                   l2291 13FE  
                                 l2179 19B4                                   l1581 1B16  
                                 l1573 1B06                                   l2197 11D2  
                                 l2373 15EA                                   l1583 1B1A  
                                 l1575 1B0A                                   l1567 1AFA  
                                 l2295 1408                                   l1585 1B1E  
                                 l1577 1B0E                                   l1569 1AFE  
                                 l2385 161A                                   l2377 15F4  
                                 l2449 16CC                                   l1579 1B12  
                                 l1587 1B24                                   l2459 16F6  
                                 l2397 164C                                   l2469 1720  
                                 l2479 174A                                   u1121 11B4  
                                 u1050 1C9E                                   u1211 12EE  
                                 u1301 1C4C                                   u1151 14DE  
                                 u1241 15D6                                   u1181 13E6  
                                 u1271 1638                                   u1507 17A4  
                                 u1517 17BE                                   u1607 1D24  
                                 u1527 17CE                                   u1617 1CEA  
                                 u1537 17E2                                   u1457 19BC  
                                 u1547 1A12                                   u1467 19FA  
                                 u1557 1A38                                   u1477 175C  
                                 u1567 1A4A                                   u1487 1782  
                                 u1577 1A64                                   u1497 1792  
                                 u1587 1A76                                   u1597 1D14  
               __end_of_lcd_write_data 17EE                                   _main 16A0  
                                 _hour 003A                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0043                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 1882                           ___param_bank 000010  
                         Startup@F4352 00B4                           Startup@F4354 001F  
                      __end_of_Startup 16A0                                  ?_main 0001  
                      __end_of___awdiv 1906                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l106 1AF2                                  i2l140 116E  
                                i2l971 1A88                        ___awdiv@counter 0005  
                                i2l981 1A9C                                  i2l973 1A8C  
                                i2l983 1AA0                                  i2l975 1A90  
                                i2l991 1AB2                                  i2l985 1AA4  
                                i2l977 1A94                                  i2l969 1A84  
                                i2l987 1AA8                                  i2l979 1A98  
                                i2l989 1AAC                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISD 000F95  
                     lcd_write_cmd@cmd 00C9                                  _hourA 003B  
                                _hourB 003C                                  _hourC 003D  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                      __end_of_version 1C90                                  status 000FD8  
                __size_ofi2_lcd_strobe 0022                           getkey@lookup 00C9  
                      __initialization 1906                           __end_of_main 1750  
                   Startup@StartupDone 00E1                                 ??_main 001F  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                           version@F4277 0100  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1D2E  
                               i2l1901 18EE                                 i2l1905 18FC  
                               i2l1873 1896                                 i2l1885 18BC  
                               i2l1887 18C4                                 i2l1879 18A6  
                               i2l1897 18E4                                 i2l1889 18C8  
                               i2l1987 108E                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1D0C                       __end_of_lcd_init 1A06  
                       char_2_int@int1 001E                              ??_Startup 001F  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1C90                                 clear_0 1972  
                     ___awdiv@quotient 0007                                 _minute 003E  
                               _second 0042                           __pdataCOMRAM 001F  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ??_version 001F  
                           __accesstop 0060                __end_of__initialization 1978  
                        getkey@keycode 00DB                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1BD8                           __pidataBANK1 1D81  
                           _char_2_int 1AF6                             __pbssBANK0 00FA  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1D0C               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 00C9  
                   lcd_write_cmd@temp2 00CA                         Startup@Startup 00CC  
                           _int_2_char 1A80                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              _Startup 15CC                                ___awdiv 1882  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1B68                                __pcinit 1906  
                       Startup@outchar 00F6                                __ramtop 0800  
                              __ptext0 16A0                                __ptext1 1C42  
                              __ptext2 1986                                __ptext3 15CC  
                              __ptext4 1D50                                __ptext5 11AA  
                              __ptext6 12E4                                __ptext7 13DC  
                              __ptext8 14D4                                __ptext9 1750  
                            _T0CONbits 000FD5                         SetupTime@F4316 009F  
                              _minuteA 003F                                _minuteB 0040  
                              _minuteC 0041                             ??_delay_ms 00C9  
                          ?_char_2_int 0001                                _version 1C42  
                           ??_lcd_init 00CB                         __pintcode_body 102E  
                 end_of_initialization 1978                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00F9  
                       SetupTime@hour1 00F3                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00F2                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00F2                  SetupAlarmTimeC@hour10 00F2  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                            _AlarmAOff 0034                              _AlarmBOff 0036  
                            _AlarmCOff 00FA                      ??_SetupAlarmTimeA 001F  
                    ??_SetupAlarmTimeB 001F                      ??_SetupAlarmTimeC 001F  
                __end_of_lcd_write_cmd 1A80                __end_ofi2_lcd_write_cmd 1BD8  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1D6C  
                       __end_of_getkey 1CCE                    start_initialization 1906  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00E1                              _SetupTime 11AA  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    SetupTime@minute10 00F4                      SetupTime@second10 00F6  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00F8  
                          __pbssCOMRAM 0034              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00C9                      __size_of_delay_ms 003E  
                    __size_of_lcd_init 0080                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?_Startup 0001  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4326 0060                   SetupAlarmTimeB@F4336 0075  
                            delay_ms@i 001D                              delay_ms@j 00CA  
                 SetupAlarmTimeC@F4346 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u170_47 1B92                               i2u162_47 17F8  
                             i2u171_47 1BA4                               i2u163_47 1818  
                             i2u172_47 1BBC                               i2u164_47 1828  
                             i2u173_47 1BCE                               i2u165_47 183A  
                             i2u174_47 1D36                               i2u166_47 1852  
                             i2u175_47 1D46                               i2u167_47 1862  
                             i2u168_47 1876                               i2u169_47 1B72  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00F7  
                 SetupAlarmTimeA@hour1 00F3                   SetupAlarmTimeB@ctemp 00F7  
                   __end_of_char_2_int 1B68                   SetupAlarmTimeB@hour1 00F3  
                 SetupAlarmTimeC@ctemp 00F7                   SetupAlarmTimeC@hour1 00F3  
                            lcd_init@i 00CC                    lcd_write_data@temp1 00CA  
                      _SetupAlarmTimeA 14D4                        _SetupAlarmTimeB 13DC  
                      _SetupAlarmTimeC 12E4                         ??i2_lcd_strobe 0001  
                       version@Version 00CB                           ??_lcd_strobe 001D  
                     SetupTime@Message 00DC                              copy_data0 191A  
                            copy_data1 193A                              copy_data2 195A  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1D6C  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1D50  
              __size_of_lcd_write_data 009E                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                       version@outchar 00E0                            ??_SetupTime 001F  
                     SetupTime@minute1 00F5                       SetupTime@second1 00F7  
                     __size_of_Startup 00D4                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1D2E                       SetupTime@outchar 00F1  
                      Startup@msgindex 00F7                     __end_of_int_2_char 1AF6  
                     i2_lcd_write_data 17EE                               _delay_ms 1CCE  
                             __ptext10 1A06                               __ptext11 1D0C  
                             __ptext20 1882                               __ptext12 1C90  
                             __ptext13 1CCE                               __ptext14 1AF6  
                             __ptext16 17EE                               __ptext17 1B68  
                             __ptext18 1D2E                               __ptext19 1A80  
                             _lcd_init 1986                       __size_of_version 004E  
                        __size_of_main 00B0          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0043                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 007A  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00F2  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1D50                 SetupAlarmTimeA@Message 00DC  
               SetupAlarmTimeB@Message 00DC                 SetupAlarmTimeC@Message 00DC  
              SetupAlarmTimeA@minute10 00F4                SetupAlarmTimeA@msgindex 00F6  
              SetupAlarmTimeB@minute10 00F4                SetupAlarmTimeB@msgindex 00F6  
              SetupAlarmTimeC@minute10 00F4                SetupAlarmTimeC@msgindex 00F6  
               SetupAlarmTimeA@minute1 00F5                 SetupAlarmTimeB@minute1 00F5  
               SetupAlarmTimeA@outchar 00F1                 SetupAlarmTimeC@minute1 00F5  
               SetupAlarmTimeB@outchar 00F1                         _lcd_write_data 1750  
               SetupAlarmTimeC@outchar 00F1                          _lcd_write_cmd 1A06  
