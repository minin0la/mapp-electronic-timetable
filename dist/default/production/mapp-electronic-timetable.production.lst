

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 16 11:02:02 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001D8C                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for Startup@F4353
    47  001D8C  44                 	db	68
    48  001D8D  6F                 	db	111
    49  001D8E  6E                 	db	110
    50  001D8F  65                 	db	101
    51  001D90  20                 	db	32
    52  001D91  20                 	db	32
    53  001D92  20                 	db	32
    54  001D93  20                 	db	32
    55  001D94  20                 	db	32
    56  001D95  20                 	db	32
    57  001D96  20                 	db	32
    58  001D97  20                 	db	32
    59  001D98  20                 	db	32
    60  001D99  20                 	db	32
    61  001D9A  20                 	db	32
    62  001D9B  20                 	db	32
    63  001D9C  20                 	db	32
    64  001D9D  20                 	db	32
    65  001D9E  20                 	db	32
    66  001D9F  20                 	db	32
    67  001DA0  00                 	db	0
    68                           
    69                           	psect	idataBANK0
    70  001BF8                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for SetupAlarmTimeA@F4325
    74  001BF8  53                 	db	83
    75  001BF9  75                 	db	117
    76  001BFA  62                 	db	98
    77  001BFB  6A                 	db	106
    78  001BFC  65                 	db	101
    79  001BFD  63                 	db	99
    80  001BFE  74                 	db	116
    81  001BFF  20                 	db	32
    82  001C00  41                 	db	65
    83  001C01  20                 	db	32
    84  001C02  54                 	db	84
    85  001C03  69                 	db	105
    86  001C04  6D                 	db	109
    87  001C05  65                 	db	101
    88  001C06  20                 	db	32
    89  001C07  68                 	db	104
    90  001C08  68                 	db	104
    91  001C09  6D                 	db	109
    92  001C0A  6D                 	db	109
    93  001C0B  3A                 	db	58
    94  001C0C  00                 	db	0
    95                           
    96                           ;initializer for SetupAlarmTimeB@F4335
    97  001C0D  53                 	db	83
    98  001C0E  75                 	db	117
    99  001C0F  62                 	db	98
   100  001C10  6A                 	db	106
   101  001C11  65                 	db	101
   102  001C12  63                 	db	99
   103  001C13  74                 	db	116
   104  001C14  20                 	db	32
   105  001C15  42                 	db	66
   106  001C16  20                 	db	32
   107  001C17  54                 	db	84
   108  001C18  69                 	db	105
   109  001C19  6D                 	db	109
   110  001C1A  65                 	db	101
   111  001C1B  20                 	db	32
   112  001C1C  68                 	db	104
   113  001C1D  68                 	db	104
   114  001C1E  6D                 	db	109
   115  001C1F  6D                 	db	109
   116  001C20  3A                 	db	58
   117  001C21  00                 	db	0
   118                           
   119                           ;initializer for SetupAlarmTimeC@F4345
   120  001C22  53                 	db	83
   121  001C23  75                 	db	117
   122  001C24  62                 	db	98
   123  001C25  6A                 	db	106
   124  001C26  65                 	db	101
   125  001C27  63                 	db	99
   126  001C28  74                 	db	116
   127  001C29  20                 	db	32
   128  001C2A  43                 	db	67
   129  001C2B  20                 	db	32
   130  001C2C  54                 	db	84
   131  001C2D  69                 	db	105
   132  001C2E  6D                 	db	109
   133  001C2F  65                 	db	101
   134  001C30  20                 	db	32
   135  001C31  68                 	db	104
   136  001C32  68                 	db	104
   137  001C33  6D                 	db	109
   138  001C34  6D                 	db	109
   139  001C35  3A                 	db	58
   140  001C36  00                 	db	0
   141                           
   142                           ;initializer for SetupTime@F4315
   143  001C37  53                 	db	83
   144  001C38  65                 	db	101
   145  001C39  74                 	db	116
   146  001C3A  20                 	db	32
   147  001C3B  74                 	db	116
   148  001C3C  69                 	db	105
   149  001C3D  6D                 	db	109
   150  001C3E  65                 	db	101
   151  001C3F  20                 	db	32
   152  001C40  68                 	db	104
   153  001C41  68                 	db	104
   154  001C42  6D                 	db	109
   155  001C43  6D                 	db	109
   156  001C44  73                 	db	115
   157  001C45  73                 	db	115
   158  001C46  3A                 	db	58
   159  001C47  20                 	db	32
   160  001C48  20                 	db	32
   161  001C49  20                 	db	32
   162  001C4A  20                 	db	32
   163  001C4B  00                 	db	0
   164                           
   165                           ;initializer for Startup@F4351
   166  001C4C  53                 	db	83
   167  001C4D  79                 	db	121
   168  001C4E  73                 	db	115
   169  001C4F  74                 	db	116
   170  001C50  65                 	db	101
   171  001C51  6D                 	db	109
   172  001C52  20                 	db	32
   173  001C53  43                 	db	67
   174  001C54  68                 	db	104
   175  001C55  65                 	db	101
   176  001C56  63                 	db	99
   177  001C57  6B                 	db	107
   178  001C58  20                 	db	32
   179  001C59  20                 	db	32
   180  001C5A  20                 	db	32
   181  001C5B  20                 	db	32
   182  001C5C  20                 	db	32
   183  001C5D  20                 	db	32
   184  001C5E  20                 	db	32
   185  001C5F  20                 	db	32
   186  001C60  00                 	db	0
   187                           
   188                           	psect	idataBANK1
   189  001DA1                     __pidataBANK1:
   190                           	opt stack 0
   191                           
   192                           ;initializer for version@F4277
   193  001DA1  45                 	db	69
   194  001DA2  54                 	db	84
   195  001DA3  54                 	db	84
   196  001DA4  20                 	db	32
   197  001DA5  56                 	db	86
   198  001DA6  65                 	db	101
   199  001DA7  72                 	db	114
   200  001DA8  73                 	db	115
   201  001DA9  69                 	db	105
   202  001DAA  6F                 	db	111
   203  001DAB  6E                 	db	110
   204  001DAC  20                 	db	32
   205  001DAD  31                 	db	49
   206  001DAE  2E                 	db	46
   207  001DAF  35                 	db	53
   208  001DB0  20                 	db	32
   209  001DB1  20                 	db	32
   210  001DB2  20                 	db	32
   211  001DB3  20                 	db	32
   212  001DB4  20                 	db	32
   213  001DB5  00                 	db	0
   214                           
   215                           	psect	smallconst
   216  00101A                     __psmallconst:
   217                           	opt stack 0
   218  00101A  00                 	db	0
   219  00101B                     getkey@F4270:
   220                           	opt stack 0
   221  00101B  31                 	db	49
   222  00101C  32                 	db	50
   223  00101D  33                 	db	51
   224  00101E  46                 	db	70
   225  00101F  34                 	db	52
   226  001020  35                 	db	53
   227  001021  36                 	db	54
   228  001022  45                 	db	69
   229  001023  37                 	db	55
   230  001024  38                 	db	56
   231  001025  39                 	db	57
   232  001026  44                 	db	68
   233  001027  41                 	db	65
   234  001028  30                 	db	48
   235  001029  42                 	db	66
   236  00102A  43                 	db	67
   237  00102B  20                 	db	32
   238  00102C  00                 	db	0
   239  00102D                     __end_ofgetkey@F4270:
   240                           	opt stack 0
   241  0000                     _ADCON1	set	4033
   242  0000                     _CMCON	set	4020
   243  0000                     _INTCON2	set	4081
   244  0000                     _INTCONbits	set	4082
   245  0000                     _PORTA	set	3968
   246  0000                     _PORTAbits	set	3968
   247  0000                     _PORTB	set	3969
   248  0000                     _PORTBbits	set	3969
   249  0000                     _PORTD	set	3971
   250  0000                     _PORTDbits	set	3971
   251  0000                     _RCONbits	set	4048
   252  0000                     _T0CON	set	4053
   253  0000                     _T0CONbits	set	4053
   254  0000                     _TMR0H	set	4055
   255  0000                     _TMR0L	set	4054
   256  0000                     _TRISA	set	3986
   257  0000                     _TRISD	set	3989
   258  00102D  00                 	db	0	; dummy byte at the end
   259  0000                     
   260                           ; #config settings
   261                           
   262                           	psect	cinit
   263  0019AC                     __pcinit:
   264                           	opt stack 0
   265  0019AC                     start_initialization:
   266                           	opt stack 0
   267  0019AC                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Initialize objects allocated to BANK1 (21 bytes)
   271                           ; load TBLPTR registers with __pidataBANK1
   272  0019AC  0EA1               	movlw	low __pidataBANK1
   273  0019AE  6EF6               	movwf	tblptrl,c
   274  0019B0  0E1D               	movlw	high __pidataBANK1
   275  0019B2  6EF7               	movwf	tblptrh,c
   276  0019B4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   277  0019B6  6EF8               	movwf	tblptru,c
   278  0019B8  EE01  F000         	lfsr	0,__pdataBANK1
   279  0019BC  EE10 F015          	lfsr	1,21
   280  0019C0                     copy_data0:
   281  0019C0  0009               	tblrd		*+
   282  0019C2  CFF5 FFEE          	movff	tablat,postinc0
   283  0019C6  50E5               	movf	postdec1,w,c
   284  0019C8  50E1               	movf	fsr1l,w,c
   285  0019CA  E1FA               	bnz	copy_data0
   286                           
   287                           ; Initialize objects allocated to BANK0 (105 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289  0019CC  0EF8               	movlw	low __pidataBANK0
   290  0019CE  6EF6               	movwf	tblptrl,c
   291  0019D0  0E1B               	movlw	high __pidataBANK0
   292  0019D2  6EF7               	movwf	tblptrh,c
   293  0019D4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294  0019D6  6EF8               	movwf	tblptru,c
   295  0019D8  EE00  F060         	lfsr	0,__pdataBANK0
   296  0019DC  EE10 F069          	lfsr	1,105
   297  0019E0                     copy_data1:
   298  0019E0  0009               	tblrd		*+
   299  0019E2  CFF5 FFEE          	movff	tablat,postinc0
   300  0019E6  50E5               	movf	postdec1,w,c
   301  0019E8  50E1               	movf	fsr1l,w,c
   302  0019EA  E1FA               	bnz	copy_data1
   303                           
   304                           ; Initialize objects allocated to COMRAM (21 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306  0019EC  0E8C               	movlw	low __pidataCOMRAM
   307  0019EE  6EF6               	movwf	tblptrl,c
   308  0019F0  0E1D               	movlw	high __pidataCOMRAM
   309  0019F2  6EF7               	movwf	tblptrh,c
   310  0019F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311  0019F6  6EF8               	movwf	tblptru,c
   312  0019F8  EE00  F01F         	lfsr	0,__pdataCOMRAM
   313  0019FC  EE10 F015          	lfsr	1,21
   314  001A00                     copy_data2:
   315  001A00  0009               	tblrd		*+
   316  001A02  CFF5 FFEE          	movff	tablat,postinc0
   317  001A06  50E5               	movf	postdec1,w,c
   318  001A08  50E1               	movf	fsr1l,w,c
   319  001A0A  E1FA               	bnz	copy_data2
   320                           
   321                           ; Clear objects allocated to COMRAM (15 bytes)
   322  001A0C  EE00  F034         	lfsr	0,__pbssCOMRAM
   323  001A10  0E0F               	movlw	15
   324  001A12                     clear_0:
   325  001A12  6AEE               	clrf	postinc0,c
   326  001A14  06E8               	decf	wreg,f,c
   327  001A16  E1FD               	bnz	clear_0
   328  001A18                     end_of_initialization:
   329                           	opt stack 0
   330  001A18                     __end_of__initialization:
   331                           	opt stack 0
   332  001A18  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333  001A1A  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334  001A1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   335  001A1E  6EF8               	movwf	tblptru,c
   336  001A20  0100               	movlb	0
   337  001A22  EF62  F00B         	goto	_main	;jump to C main() function
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssCOMRAM
   348  000034                     __pbssCOMRAM:
   349                           	opt stack 0
   350  000034                     _AlarmAOff:
   351                           	opt stack 0
   352  000034                     	ds	2
   353  000036                     _AlarmBOff:
   354                           	opt stack 0
   355  000036                     	ds	2
   356  000038                     _AlarmCOff:
   357                           	opt stack 0
   358  000038                     	ds	2
   359  00003A                     _hour:
   360                           	opt stack 0
   361  00003A                     	ds	1
   362  00003B                     _hourA:
   363                           	opt stack 0
   364  00003B                     	ds	1
   365  00003C                     _hourB:
   366                           	opt stack 0
   367  00003C                     	ds	1
   368  00003D                     _hourC:
   369                           	opt stack 0
   370  00003D                     	ds	1
   371  00003E                     _minute:
   372                           	opt stack 0
   373  00003E                     	ds	1
   374  00003F                     _minuteA:
   375                           	opt stack 0
   376  00003F                     	ds	1
   377  000040                     _minuteB:
   378                           	opt stack 0
   379  000040                     	ds	1
   380  000041                     _minuteC:
   381                           	opt stack 0
   382  000041                     	ds	1
   383  000042                     _second:
   384                           	opt stack 0
   385  000042                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  00001F                     __pdataCOMRAM:
   397                           	opt stack 0
   398  00001F                     Startup@F4353:
   399                           	opt stack 0
   400  00001F                     	ds	21
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	dataBANK0
   411  000060                     __pdataBANK0:
   412                           	opt stack 0
   413  000060                     SetupAlarmTimeA@F4325:
   414                           	opt stack 0
   415  000060                     	ds	21
   416  000075                     SetupAlarmTimeB@F4335:
   417                           	opt stack 0
   418  000075                     	ds	21
   419  00008A                     SetupAlarmTimeC@F4345:
   420                           	opt stack 0
   421  00008A                     	ds	21
   422  00009F                     SetupTime@F4315:
   423                           	opt stack 0
   424  00009F                     	ds	21
   425  0000B4                     Startup@F4351:
   426                           	opt stack 0
   427  0000B4                     	ds	21
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	dataBANK1
   438  000100                     __pdataBANK1:
   439                           	opt stack 0
   440  000100                     version@F4277:
   441                           	opt stack 0
   442  000100                     	ds	21
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	cstackBANK0
   453  0000C9                     __pcstackBANK0:
   454                           	opt stack 0
   455  0000C9                     ??_delay_ms:
   456  0000C9                     lcd_write_cmd@cmd:
   457                           	opt stack 0
   458  0000C9                     lcd_write_data@data:
   459                           	opt stack 0
   460  0000C9                     getkey@lookup:
   461                           	opt stack 0
   462                           
   463                           ; 18 bytes @ 0x0
   464  0000C9                     	ds	1
   465  0000CA                     lcd_write_cmd@temp2:
   466                           	opt stack 0
   467  0000CA                     lcd_write_data@temp1:
   468                           	opt stack 0
   469  0000CA                     delay_ms@j:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1
   473  0000CA                     	ds	1
   474  0000CB                     ??_lcd_init:
   475  0000CB                     version@Version:
   476                           	opt stack 0
   477                           
   478                           ; 21 bytes @ 0x2
   479  0000CB                     	ds	1
   480  0000CC                     lcd_init@i:
   481                           	opt stack 0
   482  0000CC                     Startup@Startup:
   483                           	opt stack 0
   484                           
   485                           ; 21 bytes @ 0x3
   486  0000CC                     	ds	15
   487  0000DB                     getkey@keycode:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x12
   491  0000DB                     	ds	1
   492  0000DC                     SetupTime@Message:
   493                           	opt stack 0
   494  0000DC                     SetupAlarmTimeA@Message:
   495                           	opt stack 0
   496  0000DC                     SetupAlarmTimeB@Message:
   497                           	opt stack 0
   498  0000DC                     SetupAlarmTimeC@Message:
   499                           	opt stack 0
   500                           
   501                           ; 21 bytes @ 0x13
   502  0000DC                     	ds	4
   503  0000E0                     version@outchar:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x17
   507  0000E0                     	ds	1
   508  0000E1                     version@msgindex:
   509                           	opt stack 0
   510  0000E1                     Startup@StartupDone:
   511                           	opt stack 0
   512                           
   513                           ; 21 bytes @ 0x18
   514  0000E1                     	ds	16
   515  0000F1                     SetupTime@outchar:
   516                           	opt stack 0
   517  0000F1                     SetupAlarmTimeA@outchar:
   518                           	opt stack 0
   519  0000F1                     SetupAlarmTimeB@outchar:
   520                           	opt stack 0
   521  0000F1                     SetupAlarmTimeC@outchar:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x28
   525  0000F1                     	ds	1
   526  0000F2                     SetupTime@hour10:
   527                           	opt stack 0
   528  0000F2                     SetupAlarmTimeA@hour10:
   529                           	opt stack 0
   530  0000F2                     SetupAlarmTimeB@hour10:
   531                           	opt stack 0
   532  0000F2                     SetupAlarmTimeC@hour10:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x29
   536  0000F2                     	ds	1
   537  0000F3                     SetupTime@hour1:
   538                           	opt stack 0
   539  0000F3                     SetupAlarmTimeA@hour1:
   540                           	opt stack 0
   541  0000F3                     SetupAlarmTimeB@hour1:
   542                           	opt stack 0
   543  0000F3                     SetupAlarmTimeC@hour1:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x2A
   547  0000F3                     	ds	1
   548  0000F4                     SetupTime@minute10:
   549                           	opt stack 0
   550  0000F4                     SetupAlarmTimeA@minute10:
   551                           	opt stack 0
   552  0000F4                     SetupAlarmTimeB@minute10:
   553                           	opt stack 0
   554  0000F4                     SetupAlarmTimeC@minute10:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x2B
   558  0000F4                     	ds	1
   559  0000F5                     SetupTime@minute1:
   560                           	opt stack 0
   561  0000F5                     SetupAlarmTimeA@minute1:
   562                           	opt stack 0
   563  0000F5                     SetupAlarmTimeB@minute1:
   564                           	opt stack 0
   565  0000F5                     SetupAlarmTimeC@minute1:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x2C
   569  0000F5                     	ds	1
   570  0000F6                     SetupTime@second10:
   571                           	opt stack 0
   572  0000F6                     SetupAlarmTimeA@msgindex:
   573                           	opt stack 0
   574  0000F6                     SetupAlarmTimeB@msgindex:
   575                           	opt stack 0
   576  0000F6                     SetupAlarmTimeC@msgindex:
   577                           	opt stack 0
   578  0000F6                     Startup@outchar:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x2D
   582  0000F6                     	ds	1
   583  0000F7                     SetupTime@second1:
   584                           	opt stack 0
   585  0000F7                     SetupAlarmTimeA@ctemp:
   586                           	opt stack 0
   587  0000F7                     SetupAlarmTimeB@ctemp:
   588                           	opt stack 0
   589  0000F7                     SetupAlarmTimeC@ctemp:
   590                           	opt stack 0
   591  0000F7                     Startup@msgindex:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x2E
   595  0000F7                     	ds	1
   596  0000F8                     SetupTime@msgindex:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x2F
   600  0000F8                     	ds	1
   601  0000F9                     SetupTime@ctemp:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x30
   605  0000F9                     	ds	1
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615                           	psect	cstackCOMRAM
   616  000001                     __pcstackCOMRAM:
   617                           	opt stack 0
   618  000001                     ??i2_lcd_strobe:
   619  000001                     ?___awdiv:
   620                           	opt stack 0
   621  000001                     int_2_char@int1:
   622                           	opt stack 0
   623  000001                     ___awdiv@dividend:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x0
   627  000001                     	ds	1
   628  000002                     ??i2_lcd_write_cmd:
   629  000002                     ??i2_lcd_write_data:
   630  000002                     int_2_char@char1:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x1
   634  000002                     	ds	1
   635  000003                     i2lcd_write_cmd@cmd:
   636                           	opt stack 0
   637  000003                     i2lcd_write_data@data:
   638                           	opt stack 0
   639  000003                     ___awdiv@divisor:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x2
   643  000003                     	ds	1
   644  000004                     i2lcd_write_cmd@temp2:
   645                           	opt stack 0
   646  000004                     i2lcd_write_data@temp1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x3
   650  000004                     	ds	1
   651  000005                     ___awdiv@counter:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x4
   655  000005                     	ds	1
   656  000006                     ___awdiv@sign:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x5
   660  000006                     	ds	1
   661  000007                     ___awdiv@quotient:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x6
   665  000007                     	ds	2
   666  000009                     ??_ISR_Timer0_Int:
   667                           
   668                           ; 1 bytes @ 0x8
   669  000009                     	ds	14
   670  000017                     ISR_Timer0_Int@hour1:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x16
   674  000017                     	ds	1
   675  000018                     ISR_Timer0_Int@minute1:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x17
   679  000018                     	ds	1
   680  000019                     ISR_Timer0_Int@second1:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x18
   684  000019                     	ds	1
   685  00001A                     ISR_Timer0_Int@hour10:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x19
   689  00001A                     	ds	1
   690  00001B                     ISR_Timer0_Int@minute10:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x1A
   694  00001B                     	ds	1
   695  00001C                     ISR_Timer0_Int@second10:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x1B
   699  00001C                     	ds	1
   700  00001D                     ??_lcd_strobe:
   701  00001D                     char_2_int@char1:
   702                           	opt stack 0
   703  00001D                     delay_ms@i:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x1C
   707  00001D                     	ds	1
   708  00001E                     ??_lcd_write_cmd:
   709  00001E                     ??_lcd_write_data:
   710  00001E                     char_2_int@int1:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x1D
   714  00001E                     	ds	1
   715  00001F                     tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           
   724                           ; 1 bytes @ 0x1E
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 347 in file "Main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         0       0       0       0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels required when called:    6
   750 ;; This function calls:
   751 ;;		_SetupAlarmTimeA
   752 ;;		_SetupAlarmTimeB
   753 ;;		_SetupAlarmTimeC
   754 ;;		_SetupTime
   755 ;;		_SetupTimerInterruptRegisters
   756 ;;		_Startup
   757 ;;		_lcd_init
   758 ;;		_version
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text0
   765  0016C4                     __ptext0:
   766                           	opt stack 0
   767  0016C4                     _main:
   768                           	opt stack 25
   769                           
   770                           ;Main.c: 349: ADCON1 = 0x0F;
   771                           
   772                           ;incstack = 0
   773  0016C4  0E0F               	movlw	15
   774  0016C6  6EC1               	movwf	4033,c	;volatile
   775                           
   776                           ;Main.c: 350: CMCON = 0x07;
   777  0016C8  0E07               	movlw	7
   778  0016CA  6EB4               	movwf	4020,c	;volatile
   779                           
   780                           ;Main.c: 352: lcd_init();
   781  0016CC  EC96  F00C         	call	_lcd_init	;wreg free
   782                           
   783                           ;Main.c: 353: TRISA = 0b00110000;
   784  0016D0  0E30               	movlw	48
   785  0016D2  6E92               	movwf	3986,c	;volatile
   786                           
   787                           ;Main.c: 355: version();
   788  0016D4  EC31  F00E         	call	_version	;wreg free
   789                           
   790                           ;Main.c: 356: Startup();
   791  0016D8  EC72  F009         	call	_Startup	;wreg free
   792                           
   793                           ;Main.c: 357: SetupTime();
   794  0016DC  ECD5  F008         	call	_SetupTime	;wreg free
   795                           
   796                           ;Main.c: 358: SetupAlarmTimeA();
   797  0016E0  ECE6  F00A         	call	_SetupAlarmTimeA	;wreg free
   798                           
   799                           ;Main.c: 359: SetupAlarmTimeB();
   800  0016E4  EC6A  F00A         	call	_SetupAlarmTimeB	;wreg free
   801                           
   802                           ;Main.c: 360: SetupAlarmTimeC();
   803  0016E8  ECEE  F009         	call	_SetupAlarmTimeC	;wreg free
   804                           
   805                           ;Main.c: 361: SetupTimerInterruptRegisters();
   806  0016EC  ECB8  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   807  0016F0                     l2487:
   808                           
   809                           ;Main.c: 364: {
   810                           ;Main.c: 365: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   811  0016F0  503B               	movf	_hourA,w,c
   812  0016F2  183A               	xorwf	_hour,w,c
   813  0016F4  A4D8               	btfss	status,2,c
   814  0016F6  D011               	goto	l2497
   815  0016F8  503F               	movf	_minuteA,w,c
   816  0016FA  183E               	xorwf	_minute,w,c
   817  0016FC  A4D8               	btfss	status,2,c
   818  0016FE  D00D               	goto	l2497
   819  001700  5034               	movf	_AlarmAOff,w,c
   820  001702  1035               	iorwf	_AlarmAOff+1,w,c
   821  001704  A4D8               	btfss	status,2,c
   822  001706  D009               	goto	l2497
   823                           
   824                           ;Main.c: 366: {
   825                           ;Main.c: 368: PORTAbits.RA0 = 1;
   826  001708  8080               	bsf	3968,0,c	;volatile
   827                           
   828                           ;Main.c: 369: PORTAbits.RA1 = 1;
   829  00170A  8280               	bsf	3968,1,c	;volatile
   830  00170C                     l185:
   831  00170C  BA80               	btfsc	3968,5,c	;volatile
   832  00170E  D7FE               	goto	l185
   833                           
   834                           ;Main.c: 371: AlarmAOff = 1;
   835  001710  0E00               	movlw	0
   836  001712  6E35               	movwf	_AlarmAOff+1,c
   837  001714  0E01               	movlw	1
   838  001716  6E34               	movwf	_AlarmAOff,c
   839                           
   840                           ;Main.c: 372: }
   841  001718  D7EB               	goto	l2487
   842  00171A                     l2497:
   843                           
   844                           ;Main.c: 373: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   845  00171A  503C               	movf	_hourB,w,c
   846  00171C  183A               	xorwf	_hour,w,c
   847  00171E  A4D8               	btfss	status,2,c
   848  001720  D012               	goto	l2509
   849  001722  5040               	movf	_minuteB,w,c
   850  001724  183E               	xorwf	_minute,w,c
   851  001726  A4D8               	btfss	status,2,c
   852  001728  D00E               	goto	l2509
   853  00172A  5036               	movf	_AlarmBOff,w,c
   854  00172C  1037               	iorwf	_AlarmBOff+1,w,c
   855  00172E  A4D8               	btfss	status,2,c
   856  001730  D00A               	goto	l2509
   857                           
   858                           ;Main.c: 374: {
   859                           ;Main.c: 376: PORTAbits.RA0 = 1;
   860  001732  8080               	bsf	3968,0,c	;volatile
   861                           
   862                           ;Main.c: 377: PORTAbits.RA2 = 1;
   863  001734  8480               	bsf	3968,2,c	;volatile
   864                           
   865                           ;Main.c: 378: while (PORTAbits.RA5 == 1)
   866  001736  D004               	goto	l2507
   867  001738                     l2505:
   868                           
   869                           ;Main.c: 379: AlarmBOff = 1;
   870  001738  0E00               	movlw	0
   871  00173A  6E37               	movwf	_AlarmBOff+1,c
   872  00173C  0E01               	movlw	1
   873  00173E  6E36               	movwf	_AlarmBOff,c
   874  001740                     l2507:
   875  001740  AA80               	btfss	3968,5,c	;volatile
   876  001742  D7D6               	goto	l2487
   877  001744  D7F9               	goto	l2505
   878  001746                     l2509:
   879                           
   880                           ;Main.c: 381: else if(hour==hourC && minute==minuteC && AlarmCOff== 0)
   881  001746  503D               	movf	_hourC,w,c
   882  001748  183A               	xorwf	_hour,w,c
   883  00174A  A4D8               	btfss	status,2,c
   884  00174C  D011               	goto	l2519
   885  00174E  5041               	movf	_minuteC,w,c
   886  001750  183E               	xorwf	_minute,w,c
   887  001752  A4D8               	btfss	status,2,c
   888  001754  D00D               	goto	l2519
   889  001756  5038               	movf	_AlarmCOff,w,c
   890  001758  1039               	iorwf	_AlarmCOff+1,w,c
   891  00175A  A4D8               	btfss	status,2,c
   892  00175C  D009               	goto	l2519
   893                           
   894                           ;Main.c: 382: {
   895                           ;Main.c: 384: PORTAbits.RA0 = 1;
   896  00175E  8080               	bsf	3968,0,c	;volatile
   897                           
   898                           ;Main.c: 385: PORTAbits.RA3 = 1;
   899  001760  8680               	bsf	3968,3,c	;volatile
   900  001762                     l195:
   901  001762  BA80               	btfsc	3968,5,c	;volatile
   902  001764  D7FE               	goto	l195
   903                           
   904                           ;Main.c: 387: AlarmCOff = 1;
   905  001766  0E00               	movlw	0
   906  001768  6E39               	movwf	_AlarmCOff+1,c
   907  00176A  0E01               	movlw	1
   908  00176C  6E38               	movwf	_AlarmCOff,c
   909                           
   910                           ;Main.c: 388: }
   911  00176E  D7C0               	goto	l2487
   912  001770                     l2519:
   913                           
   914                           ;Main.c: 389: else
   915                           ;Main.c: 390: {
   916                           ;Main.c: 391: PORTA = 0b00000000;
   917  001770  0E00               	movlw	0
   918  001772  6E80               	movwf	3968,c	;volatile
   919  001774  D7BD               	goto	l2487
   920  001776                     __end_of_main:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           postdec1	equ	0xFE5
   929                           fsr1l	equ	0xFE1
   930                           status	equ	0xFD8
   931                           
   932 ;; *************** function _version *****************
   933 ;; Defined at:
   934 ;;		line 12 in file "version.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  Version        21    2[BANK0 ] unsigned char [21]
   939 ;;  msgindex        1   24[BANK0 ] unsigned char 
   940 ;;  outchar         1   23[BANK0 ] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  2   73[None  ] int 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         0       0       0       0       0       0       0       0       0
   951 ;;      Locals:         0      23       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         0      23       0       0       0       0       0       0       0
   954 ;;Total ram usage:       23 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    5
   957 ;; This function calls:
   958 ;;		_lcd_write_cmd
   959 ;;		_lcd_write_data
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text1
   966  001C62                     __ptext1:
   967                           	opt stack 0
   968  001C62                     _version:
   969                           	opt stack 25
   970                           
   971                           ;version.c: 14: unsigned char msgindex, outchar;
   972                           ;version.c: 15: char Version[ ] = "ETT Version 1.5     ";
   973                           
   974                           ;incstack = 0
   975  001C62  EE21  F000         	lfsr	2,version@F4277
   976  001C66  EE10  F0CB         	lfsr	1,version@Version
   977  001C6A  0E14               	movlw	20
   978  001C6C                     u1301:
   979  001C6C  CFDB FFE3          	movff	plusw2,plusw1
   980  001C70  06E8               	decf	wreg,f,c
   981  001C72  E2FC               	bc	u1301
   982                           
   983                           ;version.c: 17: lcd_write_cmd(0x80);
   984  001C74  0E80               	movlw	128
   985  001C76  EC13  F00D         	call	_lcd_write_cmd
   986                           
   987                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   988  001C7A  0E00               	movlw	0
   989  001C7C  0100               	movlb	0	; () banked
   990  001C7E  6FE1               	movwf	version@msgindex& (0+255),b
   991  001C80                     l2455:
   992                           
   993                           ; BSR set to: 0
   994  001C80  0E13               	movlw	19
   995  001C82  0100               	movlb	0	; () banked
   996  001C84  65E1               	cpfsgt	version@msgindex& (0+255),b
   997  001C86  D001               	goto	l2459
   998  001C88  0012               	return	
   999  001C8A                     l2459:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;version.c: 20: {
  1003                           ;version.c: 21: outchar = Version[msgindex];
  1004  001C8A  0100               	movlb	0	; () banked
  1005  001C8C  51E1               	movf	version@msgindex& (0+255),w,b
  1006  001C8E  0D01               	mullw	1
  1007  001C90  0ECB               	movlw	low version@Version
  1008  001C92  24F3               	addwf	prodl,w,c
  1009  001C94  6ED9               	movwf	fsr2l,c
  1010  001C96  0E00               	movlw	high version@Version
  1011  001C98  20F4               	addwfc	prodh,w,c
  1012  001C9A  6EDA               	movwf	fsr2h,c
  1013  001C9C  50DF               	movf	indf2,w,c
  1014  001C9E  0100               	movlb	0	; () banked
  1015  001CA0  6FE0               	movwf	version@outchar& (0+255),b
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;version.c: 22: lcd_write_data(outchar);
  1019  001CA2  0100               	movlb	0	; () banked
  1020  001CA4  51E0               	movf	version@outchar& (0+255),w,b
  1021  001CA6  ECBB  F00B         	call	_lcd_write_data
  1022  001CAA  0100               	movlb	0	; () banked
  1023  001CAC  2BE1               	incf	version@msgindex& (0+255),f,b
  1024  001CAE  D7E8               	goto	l2455
  1025  001CB0                     __end_of_version:
  1026                           	opt stack 0
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           plusw1	equ	0xFE3
  1037                           fsr1l	equ	0xFE1
  1038                           indf2	equ	0xFDF
  1039                           plusw2	equ	0xFDB
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _lcd_init *****************
  1045 ;; Defined at:
  1046 ;;		line 83 in file "lcd_utilities.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  i               2    3[BANK0 ] int 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1063 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        3 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    5
  1067 ;; This function calls:
  1068 ;;		_lcd_write_cmd
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text2
  1075  00192C                     __ptext2:
  1076                           	opt stack 0
  1077  00192C                     _lcd_init:
  1078                           	opt stack 25
  1079                           
  1080                           ;lcd_utilities.c: 85: int i;
  1081                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;incstack = 0
  1085  00192C  0E00               	movlw	0
  1086  00192E  6E95               	movwf	3989,c	;volatile
  1087                           
  1088                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1089  001930  0E00               	movlw	0
  1090  001932  6E83               	movwf	3971,c	;volatile
  1091                           
  1092                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1093  001934  9883               	bcf	3971,4,c	;volatile
  1094                           
  1095                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1096  001936  9C83               	bcf	3971,6,c	;volatile
  1097                           
  1098                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1099  001938  9A83               	bcf	3971,5,c	;volatile
  1100                           
  1101                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1102  00193A  0E00               	movlw	0
  1103  00193C  0100               	movlb	0	; () banked
  1104  00193E  6FCD               	movwf	(lcd_init@i+1)& (0+255),b
  1105  001940  0E00               	movlw	0
  1106  001942  6FCC               	movwf	lcd_init@i& (0+255),b
  1107  001944                     l2201:
  1108                           
  1109                           ; BSR set to: 0
  1110  001944  0100               	movlb	0	; () banked
  1111  001946  BFCD               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1112  001948  D008               	goto	l2205
  1113  00194A  0100               	movlb	0	; () banked
  1114  00194C  51CD               	movf	(lcd_init@i+1)& (0+255),w,b
  1115  00194E  E112               	bnz	l2209
  1116  001950  0E64               	movlw	100
  1117  001952  0100               	movlb	0	; () banked
  1118  001954  5DCC               	subwf	lcd_init@i& (0+255),w,b
  1119  001956  B0D8               	btfsc	status,0,c
  1120  001958  D00D               	goto	l2209
  1121  00195A                     l2205:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1125  00195A  0E9C               	movlw	156
  1126  00195C  0100               	movlb	0	; () banked
  1127  00195E  6FCB               	movwf	??_lcd_init& (0+255),b
  1128  001960  0ED7               	movlw	215
  1129  001962                     u1457:
  1130  001962  2EE8               	decfsz	wreg,f,c
  1131  001964  D7FE               	goto	u1457
  1132  001966  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1133  001968  D7FC               	goto	u1457
  1134  00196A  F000               	nop	
  1135  00196C  0100               	movlb	0	; () banked
  1136  00196E  4BCC               	infsnz	lcd_init@i& (0+255),f,b
  1137  001970  2BCD               	incf	(lcd_init@i+1)& (0+255),f,b
  1138  001972  D7E8               	goto	l2201
  1139  001974                     l2209:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1143  001974  0E33               	movlw	51
  1144  001976  EC13  F00D         	call	_lcd_write_cmd
  1145                           
  1146                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1147  00197A  0E32               	movlw	50
  1148  00197C  EC13  F00D         	call	_lcd_write_cmd
  1149                           
  1150                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1151  001980  0E28               	movlw	40
  1152  001982  EC13  F00D         	call	_lcd_write_cmd
  1153                           
  1154                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1155  001986  0E0E               	movlw	14
  1156  001988  EC13  F00D         	call	_lcd_write_cmd
  1157                           
  1158                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1159  00198C  0E06               	movlw	6
  1160  00198E  EC13  F00D         	call	_lcd_write_cmd
  1161                           
  1162                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1163  001992  0E01               	movlw	1
  1164  001994  EC13  F00D         	call	_lcd_write_cmd
  1165                           
  1166                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1167  001998  0E9C               	movlw	156
  1168  00199A  0100               	movlb	0	; () banked
  1169  00199C  6FCB               	movwf	??_lcd_init& (0+255),b
  1170  00199E  0ED7               	movlw	215
  1171  0019A0                     u1467:
  1172  0019A0  2EE8               	decfsz	wreg,f,c
  1173  0019A2  D7FE               	goto	u1467
  1174  0019A4  2FCB               	decfsz	??_lcd_init& (0+255),f,b
  1175  0019A6  D7FC               	goto	u1467
  1176  0019A8  F000               	nop	
  1177  0019AA  0012               	return		;funcret
  1178  0019AC                     __end_of_lcd_init:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           prodh	equ	0xFF4
  1185                           prodl	equ	0xFF3
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           postdec1	equ	0xFE5
  1189                           plusw1	equ	0xFE3
  1190                           fsr1l	equ	0xFE1
  1191                           indf2	equ	0xFDF
  1192                           plusw2	equ	0xFDB
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _Startup *****************
  1198 ;; Defined at:
  1199 ;;		line 312 in file "Main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  StartupDone    21   24[BANK0 ] unsigned char [21]
  1204 ;;  Startup        21    3[BANK0 ] unsigned char [21]
  1205 ;;  msgindex        1   46[BANK0 ] unsigned char 
  1206 ;;  outchar         1   45[BANK0 ] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         0      44       0       0       0       0       0       0       0
  1220 ;;Total ram usage:       44 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    5
  1223 ;; This function calls:
  1224 ;;		_delay_ms
  1225 ;;		_lcd_write_cmd
  1226 ;;		_lcd_write_data
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233  0012E4                     __ptext3:
  1234                           	opt stack 0
  1235  0012E4                     _Startup:
  1236                           	opt stack 25
  1237                           
  1238                           ;Main.c: 314: unsigned char msgindex, outchar;
  1239                           ;Main.c: 315: char Startup[ ] = "System Check        ";
  1240                           
  1241                           ;incstack = 0
  1242  0012E4  EE20  F0B4         	lfsr	2,Startup@F4351
  1243  0012E8  EE10  F0CC         	lfsr	1,Startup@Startup
  1244  0012EC  0E14               	movlw	20
  1245  0012EE                     u1241:
  1246  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1247  0012F2  06E8               	decf	wreg,f,c
  1248  0012F4  E2FC               	bc	u1241
  1249                           
  1250                           ;Main.c: 317: lcd_write_cmd(0x80);
  1251  0012F6  0E80               	movlw	128
  1252  0012F8  EC13  F00D         	call	_lcd_write_cmd
  1253                           
  1254                           ;Main.c: 319: for (msgindex = 0; msgindex < 20; msgindex++)
  1255  0012FC  0E00               	movlw	0
  1256  0012FE  0100               	movlb	0	; () banked
  1257  001300  6FF7               	movwf	Startup@msgindex& (0+255),b
  1258  001302                     l2399:
  1259                           
  1260                           ; BSR set to: 0
  1261  001302  0E13               	movlw	19
  1262  001304  0100               	movlb	0	; () banked
  1263  001306  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1264  001308  D001               	goto	l2403
  1265  00130A  D013               	goto	l2411
  1266  00130C                     l2403:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;Main.c: 320: {
  1270                           ;Main.c: 321: outchar = Startup[msgindex];
  1271  00130C  0100               	movlb	0	; () banked
  1272  00130E  51F7               	movf	Startup@msgindex& (0+255),w,b
  1273  001310  0D01               	mullw	1
  1274  001312  0ECC               	movlw	low Startup@Startup
  1275  001314  24F3               	addwf	prodl,w,c
  1276  001316  6ED9               	movwf	fsr2l,c
  1277  001318  0E00               	movlw	high Startup@Startup
  1278  00131A  20F4               	addwfc	prodh,w,c
  1279  00131C  6EDA               	movwf	fsr2h,c
  1280  00131E  50DF               	movf	indf2,w,c
  1281  001320  0100               	movlb	0	; () banked
  1282  001322  6FF6               	movwf	Startup@outchar& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;Main.c: 322: lcd_write_data(outchar);
  1286  001324  0100               	movlb	0	; () banked
  1287  001326  51F6               	movf	Startup@outchar& (0+255),w,b
  1288  001328  ECBB  F00B         	call	_lcd_write_data
  1289  00132C  0100               	movlb	0	; () banked
  1290  00132E  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1291  001330  D7E8               	goto	l2399
  1292  001332                     l2411:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;Main.c: 323: }
  1296                           ;Main.c: 325: PORTA = 0b00000010;
  1297  001332  0E02               	movlw	2
  1298  001334  6E80               	movwf	3968,c	;volatile
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;Main.c: 326: delay_ms(1000);
  1302  001336  0E03               	movlw	3
  1303  001338  6E1E               	movwf	delay_ms@i+1,c
  1304  00133A  0EE8               	movlw	232
  1305  00133C  6E1D               	movwf	delay_ms@i,c
  1306  00133E  EC77  F00E         	call	_delay_ms	;wreg free
  1307                           
  1308                           ;Main.c: 327: PORTA = 0b00000100;
  1309  001342  0E04               	movlw	4
  1310  001344  6E80               	movwf	3968,c	;volatile
  1311                           
  1312                           ;Main.c: 328: delay_ms(1000);
  1313  001346  0E03               	movlw	3
  1314  001348  6E1E               	movwf	delay_ms@i+1,c
  1315  00134A  0EE8               	movlw	232
  1316  00134C  6E1D               	movwf	delay_ms@i,c
  1317  00134E  EC77  F00E         	call	_delay_ms	;wreg free
  1318                           
  1319                           ;Main.c: 329: PORTA = 0b00001000;
  1320  001352  0E08               	movlw	8
  1321  001354  6E80               	movwf	3968,c	;volatile
  1322                           
  1323                           ;Main.c: 330: delay_ms(1000);
  1324  001356  0E03               	movlw	3
  1325  001358  6E1E               	movwf	delay_ms@i+1,c
  1326  00135A  0EE8               	movlw	232
  1327  00135C  6E1D               	movwf	delay_ms@i,c
  1328  00135E  EC77  F00E         	call	_delay_ms	;wreg free
  1329                           
  1330                           ;Main.c: 331: PORTA = 0b00001111;
  1331  001362  0E0F               	movlw	15
  1332  001364  6E80               	movwf	3968,c	;volatile
  1333                           
  1334                           ;Main.c: 332: delay_ms(1000);
  1335  001366  0E03               	movlw	3
  1336  001368  6E1E               	movwf	delay_ms@i+1,c
  1337  00136A  0EE8               	movlw	232
  1338  00136C  6E1D               	movwf	delay_ms@i,c
  1339  00136E  EC77  F00E         	call	_delay_ms	;wreg free
  1340                           
  1341                           ;Main.c: 333: PORTA = 0b00000000;
  1342  001372  0E00               	movlw	0
  1343  001374  6E80               	movwf	3968,c	;volatile
  1344                           
  1345                           ;Main.c: 334: AlarmAOff = 0;
  1346  001376  0E00               	movlw	0
  1347  001378  6E35               	movwf	_AlarmAOff+1,c
  1348  00137A  0E00               	movlw	0
  1349  00137C  6E34               	movwf	_AlarmAOff,c
  1350                           
  1351                           ;Main.c: 335: AlarmBOff = 0;
  1352  00137E  0E00               	movlw	0
  1353  001380  6E37               	movwf	_AlarmBOff+1,c
  1354  001382  0E00               	movlw	0
  1355  001384  6E36               	movwf	_AlarmBOff,c
  1356                           
  1357                           ;Main.c: 336: AlarmCOff = 0;
  1358  001386  0E00               	movlw	0
  1359  001388  6E39               	movwf	_AlarmCOff+1,c
  1360  00138A  0E00               	movlw	0
  1361  00138C  6E38               	movwf	_AlarmCOff,c
  1362                           
  1363                           ;Main.c: 337: char StartupDone[ ] = "Done                ";
  1364  00138E  EE20  F01F         	lfsr	2,Startup@F4353
  1365  001392  EE10  F0E1         	lfsr	1,Startup@StartupDone
  1366  001396  0E14               	movlw	20
  1367  001398                     u1271:
  1368  001398  CFDB FFE3          	movff	plusw2,plusw1
  1369  00139C  06E8               	decf	wreg,f,c
  1370  00139E  E2FC               	bc	u1271
  1371                           
  1372                           ;Main.c: 339: lcd_write_cmd(0x80);
  1373  0013A0  0E80               	movlw	128
  1374  0013A2  EC13  F00D         	call	_lcd_write_cmd
  1375                           
  1376                           ;Main.c: 341: for (msgindex = 0; msgindex < 20; msgindex++)
  1377  0013A6  0E00               	movlw	0
  1378  0013A8  0100               	movlb	0	; () banked
  1379  0013AA  6FF7               	movwf	Startup@msgindex& (0+255),b
  1380  0013AC                     l2437:
  1381                           
  1382                           ; BSR set to: 0
  1383  0013AC  0E13               	movlw	19
  1384  0013AE  0100               	movlb	0	; () banked
  1385  0013B0  65F7               	cpfsgt	Startup@msgindex& (0+255),b
  1386  0013B2  D001               	goto	l2441
  1387  0013B4  0012               	return	
  1388  0013B6                     l2441:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;Main.c: 342: {
  1392                           ;Main.c: 343: outchar = StartupDone[msgindex];
  1393  0013B6  0100               	movlb	0	; () banked
  1394  0013B8  51F7               	movf	Startup@msgindex& (0+255),w,b
  1395  0013BA  0D01               	mullw	1
  1396  0013BC  0EE1               	movlw	low Startup@StartupDone
  1397  0013BE  24F3               	addwf	prodl,w,c
  1398  0013C0  6ED9               	movwf	fsr2l,c
  1399  0013C2  0E00               	movlw	high Startup@StartupDone
  1400  0013C4  20F4               	addwfc	prodh,w,c
  1401  0013C6  6EDA               	movwf	fsr2h,c
  1402  0013C8  50DF               	movf	indf2,w,c
  1403  0013CA  0100               	movlb	0	; () banked
  1404  0013CC  6FF6               	movwf	Startup@outchar& (0+255),b
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;Main.c: 344: lcd_write_data(outchar);
  1408  0013CE  0100               	movlb	0	; () banked
  1409  0013D0  51F6               	movf	Startup@outchar& (0+255),w,b
  1410  0013D2  ECBB  F00B         	call	_lcd_write_data
  1411  0013D6  0100               	movlb	0	; () banked
  1412  0013D8  2BF7               	incf	Startup@msgindex& (0+255),f,b
  1413  0013DA  D7E8               	goto	l2437
  1414  0013DC                     __end_of_Startup:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           postdec1	equ	0xFE5
  1425                           plusw1	equ	0xFE3
  1426                           fsr1l	equ	0xFE1
  1427                           indf2	equ	0xFDF
  1428                           plusw2	equ	0xFDB
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8
  1432                           
  1433 ;; *************** function _SetupTimerInterruptRegisters *****************
  1434 ;; Defined at:
  1435 ;;		line 276 in file "Main.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    3
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text4
  1464  001D70                     __ptext4:
  1465                           	opt stack 0
  1466  001D70                     _SetupTimerInterruptRegisters:
  1467                           	opt stack 27
  1468                           
  1469                           ;Main.c: 278: RCONbits.IPEN =1;
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;incstack = 0
  1473  001D70  8ED0               	bsf	4048,7,c	;volatile
  1474                           
  1475                           ;Main.c: 282: INTCONbits.GIEH =1;
  1476  001D72  8EF2               	bsf	intcon,7,c	;volatile
  1477                           
  1478                           ;Main.c: 287: T0CON = 0b00000111;
  1479  001D74  0E07               	movlw	7
  1480  001D76  6ED5               	movwf	4053,c	;volatile
  1481                           
  1482                           ;Main.c: 295: INTCON2 = 0b10000100;
  1483  001D78  0E84               	movlw	132
  1484  001D7A  6EF1               	movwf	intcon2,c	;volatile
  1485                           
  1486                           ;Main.c: 300: TMR0H = 0x48;
  1487  001D7C  0E48               	movlw	72
  1488  001D7E  6ED7               	movwf	4055,c	;volatile
  1489                           
  1490                           ;Main.c: 301: TMR0L = 0xE5;
  1491  001D80  0EE5               	movlw	229
  1492  001D82  6ED6               	movwf	4054,c	;volatile
  1493                           
  1494                           ;Main.c: 303: T0CONbits.TMR0ON = 1;
  1495  001D84  8ED5               	bsf	4053,7,c	;volatile
  1496                           
  1497                           ;Main.c: 304: INTCONbits.TMR0IE = 1;
  1498  001D86  8AF2               	bsf	intcon,5,c	;volatile
  1499                           
  1500                           ;Main.c: 307: INTCONbits.TMR0IF = 0;
  1501  001D88  94F2               	bcf	intcon,2,c	;volatile
  1502  001D8A  0012               	return		;funcret
  1503  001D8C                     __end_of_SetupTimerInterruptRegisters:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           prodh	equ	0xFF4
  1510                           prodl	equ	0xFF3
  1511                           intcon	equ	0xFF2
  1512                           intcon2	equ	0xFF1
  1513                           postinc0	equ	0xFEE
  1514                           wreg	equ	0xFE8
  1515                           postdec1	equ	0xFE5
  1516                           plusw1	equ	0xFE3
  1517                           fsr1l	equ	0xFE1
  1518                           indf2	equ	0xFDF
  1519                           plusw2	equ	0xFDB
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _SetupTime *****************
  1525 ;; Defined at:
  1526 ;;		line 108 in file "Main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1531 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1532 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1533 ;;  second1         1   46[BANK0 ] unsigned char 
  1534 ;;  second10        1   45[BANK0 ] unsigned char 
  1535 ;;  minute1         1   44[BANK0 ] unsigned char 
  1536 ;;  minute10        1   43[BANK0 ] unsigned char 
  1537 ;;  hour1           1   42[BANK0 ] unsigned char 
  1538 ;;  hour10          1   41[BANK0 ] unsigned char 
  1539 ;;  outchar         1   40[BANK0 ] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1553 ;;Total ram usage:       30 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    5
  1556 ;; This function calls:
  1557 ;;		_char_2_int
  1558 ;;		_delay_ms
  1559 ;;		_getkey
  1560 ;;		_lcd_write_cmd
  1561 ;;		_lcd_write_data
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text5
  1568  0011AA                     __ptext5:
  1569                           	opt stack 0
  1570  0011AA                     _SetupTime:
  1571                           	opt stack 25
  1572                           
  1573                           ;Main.c: 110: unsigned char msgindex, outchar, ctemp;
  1574                           ;Main.c: 111: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1575                           ;Main.c: 112: char Message[ ] = "Set time hhmmss:    ";
  1576                           
  1577                           ;incstack = 0
  1578  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4315
  1579  0011AE  EE10  F0DC         	lfsr	1,SetupTime@Message
  1580  0011B2  0E14               	movlw	20
  1581  0011B4                     u1121:
  1582  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1583  0011B8  06E8               	decf	wreg,f,c
  1584  0011BA  E2FC               	bc	u1121
  1585                           
  1586                           ;Main.c: 114: lcd_write_cmd(0x80);
  1587  0011BC  0E80               	movlw	128
  1588  0011BE  EC13  F00D         	call	_lcd_write_cmd
  1589                           
  1590                           ;Main.c: 116: for (msgindex = 0; msgindex < 20; msgindex++)
  1591  0011C2  0E00               	movlw	0
  1592  0011C4  0100               	movlb	0	; () banked
  1593  0011C6  6FF8               	movwf	SetupTime@msgindex& (0+255),b
  1594  0011C8                     l2219:
  1595                           
  1596                           ; BSR set to: 0
  1597  0011C8  0E13               	movlw	19
  1598  0011CA  0100               	movlb	0	; () banked
  1599  0011CC  65F8               	cpfsgt	SetupTime@msgindex& (0+255),b
  1600  0011CE  D001               	goto	l2223
  1601  0011D0  D013               	goto	l2231
  1602  0011D2                     l2223:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;Main.c: 117: {
  1606                           ;Main.c: 118: outchar = Message[msgindex];
  1607  0011D2  0100               	movlb	0	; () banked
  1608  0011D4  51F8               	movf	SetupTime@msgindex& (0+255),w,b
  1609  0011D6  0D01               	mullw	1
  1610  0011D8  0EDC               	movlw	low SetupTime@Message
  1611  0011DA  24F3               	addwf	prodl,w,c
  1612  0011DC  6ED9               	movwf	fsr2l,c
  1613  0011DE  0E00               	movlw	high SetupTime@Message
  1614  0011E0  20F4               	addwfc	prodh,w,c
  1615  0011E2  6EDA               	movwf	fsr2h,c
  1616  0011E4  50DF               	movf	indf2,w,c
  1617  0011E6  0100               	movlb	0	; () banked
  1618  0011E8  6FF1               	movwf	SetupTime@outchar& (0+255),b
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;Main.c: 119: lcd_write_data(outchar);
  1622  0011EA  0100               	movlb	0	; () banked
  1623  0011EC  51F1               	movf	SetupTime@outchar& (0+255),w,b
  1624  0011EE  ECBB  F00B         	call	_lcd_write_data
  1625  0011F2  0100               	movlb	0	; () banked
  1626  0011F4  2BF8               	incf	SetupTime@msgindex& (0+255),f,b
  1627  0011F6  D7E8               	goto	l2219
  1628  0011F8                     l2231:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;Main.c: 120: }
  1632                           ;Main.c: 122: lcd_write_cmd(0xC0);
  1633  0011F8  0EC0               	movlw	192
  1634  0011FA  EC13  F00D         	call	_lcd_write_cmd
  1635                           
  1636                           ;Main.c: 124: ctemp=getkey();
  1637  0011FE  EC58  F00E         	call	_getkey	;wreg free
  1638  001202  0100               	movlb	0	; () banked
  1639  001204  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;Main.c: 125: lcd_write_data(ctemp);
  1643  001206  0100               	movlb	0	; () banked
  1644  001208  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1645  00120A  ECBB  F00B         	call	_lcd_write_data
  1646                           
  1647                           ;Main.c: 126: hour10 = char_2_int (ctemp);
  1648  00120E  0100               	movlb	0	; () banked
  1649  001210  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1650  001212  EC8B  F00D         	call	_char_2_int
  1651  001216  0100               	movlb	0	; () banked
  1652  001218  6FF2               	movwf	SetupTime@hour10& (0+255),b
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;Main.c: 128: ctemp=getkey();
  1656  00121A  EC58  F00E         	call	_getkey	;wreg free
  1657  00121E  0100               	movlb	0	; () banked
  1658  001220  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1659                           
  1660                           ;Main.c: 129: lcd_write_data(ctemp);
  1661  001222  0100               	movlb	0	; () banked
  1662  001224  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1663  001226  ECBB  F00B         	call	_lcd_write_data
  1664                           
  1665                           ;Main.c: 130: hour1 = char_2_int (ctemp);
  1666  00122A  0100               	movlb	0	; () banked
  1667  00122C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1668  00122E  EC8B  F00D         	call	_char_2_int
  1669  001232  0100               	movlb	0	; () banked
  1670  001234  6FF3               	movwf	SetupTime@hour1& (0+255),b
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;Main.c: 132: ctemp=getkey();
  1674  001236  EC58  F00E         	call	_getkey	;wreg free
  1675  00123A  0100               	movlb	0	; () banked
  1676  00123C  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;Main.c: 133: lcd_write_data(ctemp);
  1680  00123E  0100               	movlb	0	; () banked
  1681  001240  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1682  001242  ECBB  F00B         	call	_lcd_write_data
  1683                           
  1684                           ;Main.c: 134: minute10 = char_2_int (ctemp);
  1685  001246  0100               	movlb	0	; () banked
  1686  001248  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1687  00124A  EC8B  F00D         	call	_char_2_int
  1688  00124E  0100               	movlb	0	; () banked
  1689  001250  6FF4               	movwf	SetupTime@minute10& (0+255),b
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;Main.c: 136: ctemp=getkey();
  1693  001252  EC58  F00E         	call	_getkey	;wreg free
  1694  001256  0100               	movlb	0	; () banked
  1695  001258  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1696                           
  1697                           ;Main.c: 137: lcd_write_data(ctemp);
  1698  00125A  0100               	movlb	0	; () banked
  1699  00125C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1700  00125E  ECBB  F00B         	call	_lcd_write_data
  1701                           
  1702                           ;Main.c: 138: minute1 = char_2_int (ctemp);
  1703  001262  0100               	movlb	0	; () banked
  1704  001264  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1705  001266  EC8B  F00D         	call	_char_2_int
  1706  00126A  0100               	movlb	0	; () banked
  1707  00126C  6FF5               	movwf	SetupTime@minute1& (0+255),b
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;Main.c: 140: ctemp=getkey();
  1711  00126E  EC58  F00E         	call	_getkey	;wreg free
  1712  001272  0100               	movlb	0	; () banked
  1713  001274  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;Main.c: 141: lcd_write_data(ctemp);
  1717  001276  0100               	movlb	0	; () banked
  1718  001278  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1719  00127A  ECBB  F00B         	call	_lcd_write_data
  1720                           
  1721                           ;Main.c: 142: second10 = char_2_int (ctemp);
  1722  00127E  0100               	movlb	0	; () banked
  1723  001280  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1724  001282  EC8B  F00D         	call	_char_2_int
  1725  001286  0100               	movlb	0	; () banked
  1726  001288  6FF6               	movwf	SetupTime@second10& (0+255),b
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;Main.c: 144: ctemp=getkey();
  1730  00128A  EC58  F00E         	call	_getkey	;wreg free
  1731  00128E  0100               	movlb	0	; () banked
  1732  001290  6FF9               	movwf	SetupTime@ctemp& (0+255),b
  1733                           
  1734                           ;Main.c: 145: lcd_write_data(ctemp);
  1735  001292  0100               	movlb	0	; () banked
  1736  001294  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1737  001296  ECBB  F00B         	call	_lcd_write_data
  1738                           
  1739                           ;Main.c: 146: second1 = char_2_int (ctemp);
  1740  00129A  0100               	movlb	0	; () banked
  1741  00129C  51F9               	movf	SetupTime@ctemp& (0+255),w,b
  1742  00129E  EC8B  F00D         	call	_char_2_int
  1743  0012A2  0100               	movlb	0	; () banked
  1744  0012A4  6FF7               	movwf	SetupTime@second1& (0+255),b
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;Main.c: 148: hour = hour10 * 10 + hour1;
  1748  0012A6  0100               	movlb	0	; () banked
  1749  0012A8  51F2               	movf	SetupTime@hour10& (0+255),w,b
  1750  0012AA  0D0A               	mullw	10
  1751  0012AC  50F3               	movf	prodl,w,c
  1752  0012AE  0100               	movlb	0	; () banked
  1753  0012B0  25F3               	addwf	SetupTime@hour1& (0+255),w,b
  1754  0012B2  6E3A               	movwf	_hour,c
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Main.c: 149: minute = minute10 * 10 + minute1;
  1758  0012B4  0100               	movlb	0	; () banked
  1759  0012B6  51F4               	movf	SetupTime@minute10& (0+255),w,b
  1760  0012B8  0D0A               	mullw	10
  1761  0012BA  50F3               	movf	prodl,w,c
  1762  0012BC  0100               	movlb	0	; () banked
  1763  0012BE  25F5               	addwf	SetupTime@minute1& (0+255),w,b
  1764  0012C0  6E3E               	movwf	_minute,c
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;Main.c: 150: second = second10 * 10 + second1;
  1768  0012C2  0100               	movlb	0	; () banked
  1769  0012C4  51F6               	movf	SetupTime@second10& (0+255),w,b
  1770  0012C6  0D0A               	mullw	10
  1771  0012C8  50F3               	movf	prodl,w,c
  1772  0012CA  0100               	movlb	0	; () banked
  1773  0012CC  25F7               	addwf	SetupTime@second1& (0+255),w,b
  1774  0012CE  6E42               	movwf	_second,c
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;Main.c: 152: delay_ms(500);
  1778  0012D0  0E01               	movlw	1
  1779  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1780  0012D4  0EF4               	movlw	244
  1781  0012D6  6E1D               	movwf	delay_ms@i,c
  1782  0012D8  EC77  F00E         	call	_delay_ms	;wreg free
  1783                           
  1784                           ;Main.c: 153: lcd_write_cmd(0x01);
  1785  0012DC  0E01               	movlw	1
  1786  0012DE  EC13  F00D         	call	_lcd_write_cmd
  1787  0012E2  0012               	return		;funcret
  1788  0012E4                     __end_of_SetupTime:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           prodh	equ	0xFF4
  1795                           prodl	equ	0xFF3
  1796                           intcon	equ	0xFF2
  1797                           intcon2	equ	0xFF1
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           plusw1	equ	0xFE3
  1802                           fsr1l	equ	0xFE1
  1803                           indf2	equ	0xFDF
  1804                           plusw2	equ	0xFDB
  1805                           fsr2h	equ	0xFDA
  1806                           fsr2l	equ	0xFD9
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function _SetupAlarmTimeC *****************
  1810 ;; Defined at:
  1811 ;;		line 236 in file "Main.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1816 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1817 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1818 ;;  minute1         1   44[BANK0 ] unsigned char 
  1819 ;;  minute10        1   43[BANK0 ] unsigned char 
  1820 ;;  hour1           1   42[BANK0 ] unsigned char 
  1821 ;;  hour10          1   41[BANK0 ] unsigned char 
  1822 ;;  outchar         1   40[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0
  1833 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1835 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1836 ;;Total ram usage:       28 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    5
  1839 ;; This function calls:
  1840 ;;		_char_2_int
  1841 ;;		_delay_ms
  1842 ;;		_getkey
  1843 ;;		_lcd_write_cmd
  1844 ;;		_lcd_write_data
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text6
  1851  0013DC                     __ptext6:
  1852                           	opt stack 0
  1853  0013DC                     _SetupAlarmTimeC:
  1854                           	opt stack 25
  1855                           
  1856                           ;Main.c: 238: unsigned char msgindex, outchar, ctemp;
  1857                           ;Main.c: 239: unsigned char hour10, hour1, minute10, minute1;
  1858                           ;Main.c: 240: char Message[ ] = "Subject C Time hhmm:";
  1859                           
  1860                           ;incstack = 0
  1861  0013DC  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4345
  1862  0013E0  EE10  F0DC         	lfsr	1,SetupAlarmTimeC@Message
  1863  0013E4  0E14               	movlw	20
  1864  0013E6                     u1211:
  1865  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1866  0013EA  06E8               	decf	wreg,f,c
  1867  0013EC  E2FC               	bc	u1211
  1868                           
  1869                           ;Main.c: 242: PORTA = 0b00001000;
  1870  0013EE  0E08               	movlw	8
  1871  0013F0  6E80               	movwf	3968,c	;volatile
  1872                           
  1873                           ;Main.c: 244: lcd_write_cmd(0x80);
  1874  0013F2  0E80               	movlw	128
  1875  0013F4  EC13  F00D         	call	_lcd_write_cmd
  1876                           
  1877                           ;Main.c: 246: for (msgindex = 0; msgindex < 20; msgindex++)
  1878  0013F8  0E00               	movlw	0
  1879  0013FA  0100               	movlb	0	; () banked
  1880  0013FC  6FF6               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1881  0013FE                     l2359:
  1882                           
  1883                           ; BSR set to: 0
  1884  0013FE  0E13               	movlw	19
  1885  001400  0100               	movlb	0	; () banked
  1886  001402  65F6               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1887  001404  D001               	goto	l2363
  1888  001406  D013               	goto	l2371
  1889  001408                     l2363:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;Main.c: 247: {
  1893                           ;Main.c: 248: outchar = Message[msgindex];
  1894  001408  0100               	movlb	0	; () banked
  1895  00140A  51F6               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1896  00140C  0D01               	mullw	1
  1897  00140E  0EDC               	movlw	low SetupAlarmTimeC@Message
  1898  001410  24F3               	addwf	prodl,w,c
  1899  001412  6ED9               	movwf	fsr2l,c
  1900  001414  0E00               	movlw	high SetupAlarmTimeC@Message
  1901  001416  20F4               	addwfc	prodh,w,c
  1902  001418  6EDA               	movwf	fsr2h,c
  1903  00141A  50DF               	movf	indf2,w,c
  1904  00141C  0100               	movlb	0	; () banked
  1905  00141E  6FF1               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;Main.c: 249: lcd_write_data(outchar);
  1909  001420  0100               	movlb	0	; () banked
  1910  001422  51F1               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1911  001424  ECBB  F00B         	call	_lcd_write_data
  1912  001428  0100               	movlb	0	; () banked
  1913  00142A  2BF6               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1914  00142C  D7E8               	goto	l2359
  1915  00142E                     l2371:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;Main.c: 250: }
  1919                           ;Main.c: 252: lcd_write_cmd(0xC0);
  1920  00142E  0EC0               	movlw	192
  1921  001430  EC13  F00D         	call	_lcd_write_cmd
  1922                           
  1923                           ;Main.c: 254: ctemp=getkey();
  1924  001434  EC58  F00E         	call	_getkey	;wreg free
  1925  001438  0100               	movlb	0	; () banked
  1926  00143A  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;Main.c: 255: lcd_write_data(ctemp);
  1930  00143C  0100               	movlb	0	; () banked
  1931  00143E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1932  001440  ECBB  F00B         	call	_lcd_write_data
  1933                           
  1934                           ;Main.c: 256: hour10 = char_2_int (ctemp);
  1935  001444  0100               	movlb	0	; () banked
  1936  001446  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1937  001448  EC8B  F00D         	call	_char_2_int
  1938  00144C  0100               	movlb	0	; () banked
  1939  00144E  6FF2               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;Main.c: 258: ctemp=getkey();
  1943  001450  EC58  F00E         	call	_getkey	;wreg free
  1944  001454  0100               	movlb	0	; () banked
  1945  001456  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1946                           
  1947                           ;Main.c: 259: lcd_write_data(ctemp);
  1948  001458  0100               	movlb	0	; () banked
  1949  00145A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1950  00145C  ECBB  F00B         	call	_lcd_write_data
  1951                           
  1952                           ;Main.c: 260: hour1 = char_2_int (ctemp);
  1953  001460  0100               	movlb	0	; () banked
  1954  001462  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1955  001464  EC8B  F00D         	call	_char_2_int
  1956  001468  0100               	movlb	0	; () banked
  1957  00146A  6FF3               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;Main.c: 262: ctemp=getkey();
  1961  00146C  EC58  F00E         	call	_getkey	;wreg free
  1962  001470  0100               	movlb	0	; () banked
  1963  001472  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;Main.c: 263: lcd_write_data(ctemp);
  1967  001474  0100               	movlb	0	; () banked
  1968  001476  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1969  001478  ECBB  F00B         	call	_lcd_write_data
  1970                           
  1971                           ;Main.c: 264: minute10 = char_2_int (ctemp);
  1972  00147C  0100               	movlb	0	; () banked
  1973  00147E  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1974  001480  EC8B  F00D         	call	_char_2_int
  1975  001484  0100               	movlb	0	; () banked
  1976  001486  6FF4               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;Main.c: 266: ctemp=getkey();
  1980  001488  EC58  F00E         	call	_getkey	;wreg free
  1981  00148C  0100               	movlb	0	; () banked
  1982  00148E  6FF7               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1983                           
  1984                           ;Main.c: 267: lcd_write_data(ctemp);
  1985  001490  0100               	movlb	0	; () banked
  1986  001492  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1987  001494  ECBB  F00B         	call	_lcd_write_data
  1988                           
  1989                           ;Main.c: 268: minute1 = char_2_int (ctemp);
  1990  001498  0100               	movlb	0	; () banked
  1991  00149A  51F7               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1992  00149C  EC8B  F00D         	call	_char_2_int
  1993  0014A0  0100               	movlb	0	; () banked
  1994  0014A2  6FF5               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;Main.c: 270: hourC = hour10 * 10 + hour1;
  1998  0014A4  0100               	movlb	0	; () banked
  1999  0014A6  51F2               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  2000  0014A8  0D0A               	mullw	10
  2001  0014AA  50F3               	movf	prodl,w,c
  2002  0014AC  0100               	movlb	0	; () banked
  2003  0014AE  25F3               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  2004  0014B0  6E3D               	movwf	_hourC,c
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;Main.c: 271: minuteC = minute10 * 10 + minute1;
  2008  0014B2  0100               	movlb	0	; () banked
  2009  0014B4  51F4               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  2010  0014B6  0D0A               	mullw	10
  2011  0014B8  50F3               	movf	prodl,w,c
  2012  0014BA  0100               	movlb	0	; () banked
  2013  0014BC  25F5               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  2014  0014BE  6E41               	movwf	_minuteC,c
  2015                           
  2016                           ;Main.c: 273: delay_ms(500);
  2017  0014C0  0E01               	movlw	1
  2018  0014C2  6E1E               	movwf	delay_ms@i+1,c
  2019  0014C4  0EF4               	movlw	244
  2020  0014C6  6E1D               	movwf	delay_ms@i,c
  2021  0014C8  EC77  F00E         	call	_delay_ms	;wreg free
  2022                           
  2023                           ;Main.c: 274: lcd_write_cmd(0x01);
  2024  0014CC  0E01               	movlw	1
  2025  0014CE  EC13  F00D         	call	_lcd_write_cmd
  2026  0014D2  0012               	return		;funcret
  2027  0014D4                     __end_of_SetupAlarmTimeC:
  2028                           	opt stack 0
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           intcon	equ	0xFF2
  2036                           intcon2	equ	0xFF1
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           plusw1	equ	0xFE3
  2041                           fsr1l	equ	0xFE1
  2042                           indf2	equ	0xFDF
  2043                           plusw2	equ	0xFDB
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _SetupAlarmTimeB *****************
  2049 ;; Defined at:
  2050 ;;		line 196 in file "Main.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2055 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2056 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2057 ;;  minute1         1   44[BANK0 ] unsigned char 
  2058 ;;  minute10        1   43[BANK0 ] unsigned char 
  2059 ;;  hour1           1   42[BANK0 ] unsigned char 
  2060 ;;  hour10          1   41[BANK0 ] unsigned char 
  2061 ;;  outchar         1   40[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0
  2072 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2074 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2075 ;;Total ram usage:       28 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    5
  2078 ;; This function calls:
  2079 ;;		_char_2_int
  2080 ;;		_delay_ms
  2081 ;;		_getkey
  2082 ;;		_lcd_write_cmd
  2083 ;;		_lcd_write_data
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text7
  2090  0014D4                     __ptext7:
  2091                           	opt stack 0
  2092  0014D4                     _SetupAlarmTimeB:
  2093                           	opt stack 25
  2094                           
  2095                           ;Main.c: 198: unsigned char msgindex, outchar, ctemp;
  2096                           ;Main.c: 199: unsigned char hour10, hour1, minute10, minute1;
  2097                           ;Main.c: 200: char Message[ ] = "Subject B Time hhmm:";
  2098                           
  2099                           ;incstack = 0
  2100  0014D4  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4335
  2101  0014D8  EE10  F0DC         	lfsr	1,SetupAlarmTimeB@Message
  2102  0014DC  0E14               	movlw	20
  2103  0014DE                     u1181:
  2104  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  2105  0014E2  06E8               	decf	wreg,f,c
  2106  0014E4  E2FC               	bc	u1181
  2107                           
  2108                           ;Main.c: 202: PORTA = 0b00000100;
  2109  0014E6  0E04               	movlw	4
  2110  0014E8  6E80               	movwf	3968,c	;volatile
  2111                           
  2112                           ;Main.c: 204: lcd_write_cmd(0x80);
  2113  0014EA  0E80               	movlw	128
  2114  0014EC  EC13  F00D         	call	_lcd_write_cmd
  2115                           
  2116                           ;Main.c: 206: for (msgindex = 0; msgindex < 20; msgindex++)
  2117  0014F0  0E00               	movlw	0
  2118  0014F2  0100               	movlb	0	; () banked
  2119  0014F4  6FF6               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  2120  0014F6                     l2317:
  2121                           
  2122                           ; BSR set to: 0
  2123  0014F6  0E13               	movlw	19
  2124  0014F8  0100               	movlb	0	; () banked
  2125  0014FA  65F6               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  2126  0014FC  D001               	goto	l2321
  2127  0014FE  D013               	goto	l2329
  2128  001500                     l2321:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;Main.c: 207: {
  2132                           ;Main.c: 208: outchar = Message[msgindex];
  2133  001500  0100               	movlb	0	; () banked
  2134  001502  51F6               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  2135  001504  0D01               	mullw	1
  2136  001506  0EDC               	movlw	low SetupAlarmTimeB@Message
  2137  001508  24F3               	addwf	prodl,w,c
  2138  00150A  6ED9               	movwf	fsr2l,c
  2139  00150C  0E00               	movlw	high SetupAlarmTimeB@Message
  2140  00150E  20F4               	addwfc	prodh,w,c
  2141  001510  6EDA               	movwf	fsr2h,c
  2142  001512  50DF               	movf	indf2,w,c
  2143  001514  0100               	movlb	0	; () banked
  2144  001516  6FF1               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;Main.c: 209: lcd_write_data(outchar);
  2148  001518  0100               	movlb	0	; () banked
  2149  00151A  51F1               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  2150  00151C  ECBB  F00B         	call	_lcd_write_data
  2151  001520  0100               	movlb	0	; () banked
  2152  001522  2BF6               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  2153  001524  D7E8               	goto	l2317
  2154  001526                     l2329:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;Main.c: 210: }
  2158                           ;Main.c: 212: lcd_write_cmd(0xC0);
  2159  001526  0EC0               	movlw	192
  2160  001528  EC13  F00D         	call	_lcd_write_cmd
  2161                           
  2162                           ;Main.c: 214: ctemp=getkey();
  2163  00152C  EC58  F00E         	call	_getkey	;wreg free
  2164  001530  0100               	movlb	0	; () banked
  2165  001532  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;Main.c: 215: lcd_write_data(ctemp);
  2169  001534  0100               	movlb	0	; () banked
  2170  001536  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2171  001538  ECBB  F00B         	call	_lcd_write_data
  2172                           
  2173                           ;Main.c: 216: hour10 = char_2_int (ctemp);
  2174  00153C  0100               	movlb	0	; () banked
  2175  00153E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2176  001540  EC8B  F00D         	call	_char_2_int
  2177  001544  0100               	movlb	0	; () banked
  2178  001546  6FF2               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Main.c: 218: ctemp=getkey();
  2182  001548  EC58  F00E         	call	_getkey	;wreg free
  2183  00154C  0100               	movlb	0	; () banked
  2184  00154E  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2185                           
  2186                           ;Main.c: 219: lcd_write_data(ctemp);
  2187  001550  0100               	movlb	0	; () banked
  2188  001552  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2189  001554  ECBB  F00B         	call	_lcd_write_data
  2190                           
  2191                           ;Main.c: 220: hour1 = char_2_int (ctemp);
  2192  001558  0100               	movlb	0	; () banked
  2193  00155A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2194  00155C  EC8B  F00D         	call	_char_2_int
  2195  001560  0100               	movlb	0	; () banked
  2196  001562  6FF3               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;Main.c: 222: ctemp=getkey();
  2200  001564  EC58  F00E         	call	_getkey	;wreg free
  2201  001568  0100               	movlb	0	; () banked
  2202  00156A  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;Main.c: 223: lcd_write_data(ctemp);
  2206  00156C  0100               	movlb	0	; () banked
  2207  00156E  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2208  001570  ECBB  F00B         	call	_lcd_write_data
  2209                           
  2210                           ;Main.c: 224: minute10 = char_2_int (ctemp);
  2211  001574  0100               	movlb	0	; () banked
  2212  001576  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2213  001578  EC8B  F00D         	call	_char_2_int
  2214  00157C  0100               	movlb	0	; () banked
  2215  00157E  6FF4               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;Main.c: 226: ctemp=getkey();
  2219  001580  EC58  F00E         	call	_getkey	;wreg free
  2220  001584  0100               	movlb	0	; () banked
  2221  001586  6FF7               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2222                           
  2223                           ;Main.c: 227: lcd_write_data(ctemp);
  2224  001588  0100               	movlb	0	; () banked
  2225  00158A  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2226  00158C  ECBB  F00B         	call	_lcd_write_data
  2227                           
  2228                           ;Main.c: 228: minute1 = char_2_int (ctemp);
  2229  001590  0100               	movlb	0	; () banked
  2230  001592  51F7               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2231  001594  EC8B  F00D         	call	_char_2_int
  2232  001598  0100               	movlb	0	; () banked
  2233  00159A  6FF5               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;Main.c: 230: hourB = hour10 * 10 + hour1;
  2237  00159C  0100               	movlb	0	; () banked
  2238  00159E  51F2               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  2239  0015A0  0D0A               	mullw	10
  2240  0015A2  50F3               	movf	prodl,w,c
  2241  0015A4  0100               	movlb	0	; () banked
  2242  0015A6  25F3               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  2243  0015A8  6E3C               	movwf	_hourB,c
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;Main.c: 231: minuteB = minute10 * 10 + minute1;
  2247  0015AA  0100               	movlb	0	; () banked
  2248  0015AC  51F4               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  2249  0015AE  0D0A               	mullw	10
  2250  0015B0  50F3               	movf	prodl,w,c
  2251  0015B2  0100               	movlb	0	; () banked
  2252  0015B4  25F5               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  2253  0015B6  6E40               	movwf	_minuteB,c
  2254                           
  2255                           ;Main.c: 233: delay_ms(500);
  2256  0015B8  0E01               	movlw	1
  2257  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2258  0015BC  0EF4               	movlw	244
  2259  0015BE  6E1D               	movwf	delay_ms@i,c
  2260  0015C0  EC77  F00E         	call	_delay_ms	;wreg free
  2261                           
  2262                           ;Main.c: 234: lcd_write_cmd(0x01);
  2263  0015C4  0E01               	movlw	1
  2264  0015C6  EC13  F00D         	call	_lcd_write_cmd
  2265  0015CA  0012               	return		;funcret
  2266  0015CC                     __end_of_SetupAlarmTimeB:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           prodh	equ	0xFF4
  2273                           prodl	equ	0xFF3
  2274                           intcon	equ	0xFF2
  2275                           intcon2	equ	0xFF1
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           postdec1	equ	0xFE5
  2279                           plusw1	equ	0xFE3
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           plusw2	equ	0xFDB
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _SetupAlarmTimeA *****************
  2288 ;; Defined at:
  2289 ;;		line 156 in file "Main.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2294 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2295 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2296 ;;  minute1         1   44[BANK0 ] unsigned char 
  2297 ;;  minute10        1   43[BANK0 ] unsigned char 
  2298 ;;  hour1           1   42[BANK0 ] unsigned char 
  2299 ;;  hour10          1   41[BANK0 ] unsigned char 
  2300 ;;  outchar         1   40[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2310 ;;      Params:         0       0       0       0       0       0       0       0       0
  2311 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2313 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2314 ;;Total ram usage:       28 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    5
  2317 ;; This function calls:
  2318 ;;		_char_2_int
  2319 ;;		_delay_ms
  2320 ;;		_getkey
  2321 ;;		_lcd_write_cmd
  2322 ;;		_lcd_write_data
  2323 ;; This function is called by:
  2324 ;;		_main
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text8
  2329  0015CC                     __ptext8:
  2330                           	opt stack 0
  2331  0015CC                     _SetupAlarmTimeA:
  2332                           	opt stack 25
  2333                           
  2334                           ;Main.c: 158: unsigned char msgindex, outchar, ctemp;
  2335                           ;Main.c: 159: unsigned char hour10, hour1, minute10, minute1;
  2336                           ;Main.c: 160: char Message[ ] = "Subject A Time hhmm:";
  2337                           
  2338                           ;incstack = 0
  2339  0015CC  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4325
  2340  0015D0  EE10  F0DC         	lfsr	1,SetupAlarmTimeA@Message
  2341  0015D4  0E14               	movlw	20
  2342  0015D6                     u1151:
  2343  0015D6  CFDB FFE3          	movff	plusw2,plusw1
  2344  0015DA  06E8               	decf	wreg,f,c
  2345  0015DC  E2FC               	bc	u1151
  2346                           
  2347                           ;Main.c: 162: PORTA = 0b00000010;
  2348  0015DE  0E02               	movlw	2
  2349  0015E0  6E80               	movwf	3968,c	;volatile
  2350                           
  2351                           ;Main.c: 164: lcd_write_cmd(0x80);
  2352  0015E2  0E80               	movlw	128
  2353  0015E4  EC13  F00D         	call	_lcd_write_cmd
  2354                           
  2355                           ;Main.c: 166: for (msgindex = 0; msgindex < 20; msgindex++)
  2356  0015E8  0E00               	movlw	0
  2357  0015EA  0100               	movlb	0	; () banked
  2358  0015EC  6FF6               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2359  0015EE                     l2275:
  2360                           
  2361                           ; BSR set to: 0
  2362  0015EE  0E13               	movlw	19
  2363  0015F0  0100               	movlb	0	; () banked
  2364  0015F2  65F6               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2365  0015F4  D001               	goto	l2279
  2366  0015F6  D013               	goto	l2287
  2367  0015F8                     l2279:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;Main.c: 167: {
  2371                           ;Main.c: 168: outchar = Message[msgindex];
  2372  0015F8  0100               	movlb	0	; () banked
  2373  0015FA  51F6               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2374  0015FC  0D01               	mullw	1
  2375  0015FE  0EDC               	movlw	low SetupAlarmTimeA@Message
  2376  001600  24F3               	addwf	prodl,w,c
  2377  001602  6ED9               	movwf	fsr2l,c
  2378  001604  0E00               	movlw	high SetupAlarmTimeA@Message
  2379  001606  20F4               	addwfc	prodh,w,c
  2380  001608  6EDA               	movwf	fsr2h,c
  2381  00160A  50DF               	movf	indf2,w,c
  2382  00160C  0100               	movlb	0	; () banked
  2383  00160E  6FF1               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;Main.c: 169: lcd_write_data(outchar);
  2387  001610  0100               	movlb	0	; () banked
  2388  001612  51F1               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2389  001614  ECBB  F00B         	call	_lcd_write_data
  2390  001618  0100               	movlb	0	; () banked
  2391  00161A  2BF6               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2392  00161C  D7E8               	goto	l2275
  2393  00161E                     l2287:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;Main.c: 170: }
  2397                           ;Main.c: 172: lcd_write_cmd(0xC0);
  2398  00161E  0EC0               	movlw	192
  2399  001620  EC13  F00D         	call	_lcd_write_cmd
  2400                           
  2401                           ;Main.c: 174: ctemp=getkey();
  2402  001624  EC58  F00E         	call	_getkey	;wreg free
  2403  001628  0100               	movlb	0	; () banked
  2404  00162A  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;Main.c: 175: lcd_write_data(ctemp);
  2408  00162C  0100               	movlb	0	; () banked
  2409  00162E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2410  001630  ECBB  F00B         	call	_lcd_write_data
  2411                           
  2412                           ;Main.c: 176: hour10 = char_2_int (ctemp);
  2413  001634  0100               	movlb	0	; () banked
  2414  001636  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2415  001638  EC8B  F00D         	call	_char_2_int
  2416  00163C  0100               	movlb	0	; () banked
  2417  00163E  6FF2               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;Main.c: 178: ctemp=getkey();
  2421  001640  EC58  F00E         	call	_getkey	;wreg free
  2422  001644  0100               	movlb	0	; () banked
  2423  001646  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2424                           
  2425                           ;Main.c: 179: lcd_write_data(ctemp);
  2426  001648  0100               	movlb	0	; () banked
  2427  00164A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2428  00164C  ECBB  F00B         	call	_lcd_write_data
  2429                           
  2430                           ;Main.c: 180: hour1 = char_2_int (ctemp);
  2431  001650  0100               	movlb	0	; () banked
  2432  001652  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2433  001654  EC8B  F00D         	call	_char_2_int
  2434  001658  0100               	movlb	0	; () banked
  2435  00165A  6FF3               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;Main.c: 182: ctemp=getkey();
  2439  00165C  EC58  F00E         	call	_getkey	;wreg free
  2440  001660  0100               	movlb	0	; () banked
  2441  001662  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;Main.c: 183: lcd_write_data(ctemp);
  2445  001664  0100               	movlb	0	; () banked
  2446  001666  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2447  001668  ECBB  F00B         	call	_lcd_write_data
  2448                           
  2449                           ;Main.c: 184: minute10 = char_2_int (ctemp);
  2450  00166C  0100               	movlb	0	; () banked
  2451  00166E  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2452  001670  EC8B  F00D         	call	_char_2_int
  2453  001674  0100               	movlb	0	; () banked
  2454  001676  6FF4               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;Main.c: 186: ctemp=getkey();
  2458  001678  EC58  F00E         	call	_getkey	;wreg free
  2459  00167C  0100               	movlb	0	; () banked
  2460  00167E  6FF7               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2461                           
  2462                           ;Main.c: 187: lcd_write_data(ctemp);
  2463  001680  0100               	movlb	0	; () banked
  2464  001682  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2465  001684  ECBB  F00B         	call	_lcd_write_data
  2466                           
  2467                           ;Main.c: 188: minute1 = char_2_int (ctemp);
  2468  001688  0100               	movlb	0	; () banked
  2469  00168A  51F7               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2470  00168C  EC8B  F00D         	call	_char_2_int
  2471  001690  0100               	movlb	0	; () banked
  2472  001692  6FF5               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;Main.c: 190: hourA = hour10 * 10 + hour1;
  2476  001694  0100               	movlb	0	; () banked
  2477  001696  51F2               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2478  001698  0D0A               	mullw	10
  2479  00169A  50F3               	movf	prodl,w,c
  2480  00169C  0100               	movlb	0	; () banked
  2481  00169E  25F3               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2482  0016A0  6E3B               	movwf	_hourA,c
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;Main.c: 191: minuteA = minute10 * 10 + minute1;
  2486  0016A2  0100               	movlb	0	; () banked
  2487  0016A4  51F4               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2488  0016A6  0D0A               	mullw	10
  2489  0016A8  50F3               	movf	prodl,w,c
  2490  0016AA  0100               	movlb	0	; () banked
  2491  0016AC  25F5               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2492  0016AE  6E3F               	movwf	_minuteA,c
  2493                           
  2494                           ;Main.c: 193: delay_ms(500);
  2495  0016B0  0E01               	movlw	1
  2496  0016B2  6E1E               	movwf	delay_ms@i+1,c
  2497  0016B4  0EF4               	movlw	244
  2498  0016B6  6E1D               	movwf	delay_ms@i,c
  2499  0016B8  EC77  F00E         	call	_delay_ms	;wreg free
  2500                           
  2501                           ;Main.c: 194: lcd_write_cmd(0x01);
  2502  0016BC  0E01               	movlw	1
  2503  0016BE  EC13  F00D         	call	_lcd_write_cmd
  2504  0016C2  0012               	return		;funcret
  2505  0016C4                     __end_of_SetupAlarmTimeA:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           intcon	equ	0xFF2
  2514                           intcon2	equ	0xFF1
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           plusw1	equ	0xFE3
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           plusw2	equ	0xFDB
  2522                           fsr2h	equ	0xFDA
  2523                           fsr2l	equ	0xFD9
  2524                           status	equ	0xFD8
  2525                           
  2526 ;; *************** function _lcd_write_data *****************
  2527 ;; Defined at:
  2528 ;;		line 43 in file "lcd_utilities.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  data            1    wreg     unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  data            1    0[BANK0 ] unsigned char 
  2533 ;;  temp1           1    1[BANK0 ] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2546 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2547 ;;Total ram usage:        3 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    4
  2550 ;; This function calls:
  2551 ;;		_lcd_strobe
  2552 ;; This function is called by:
  2553 ;;		_SetupTime
  2554 ;;		_SetupAlarmTimeA
  2555 ;;		_SetupAlarmTimeB
  2556 ;;		_SetupAlarmTimeC
  2557 ;;		_Startup
  2558 ;;		_version
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text9
  2563  001776                     __ptext9:
  2564                           	opt stack 0
  2565  001776                     _lcd_write_data:
  2566                           	opt stack 25
  2567                           
  2568                           ;incstack = 0
  2569                           ;lcd_write_data@data stored from wreg
  2570  001776  0100               	movlb	0	; () banked
  2571  001778  6FC9               	movwf	lcd_write_data@data& (0+255),b
  2572                           
  2573                           ;lcd_utilities.c: 45: char temp1;
  2574                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2575  00177A  8C83               	bsf	3971,6,c	;volatile
  2576                           
  2577                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2578  00177C  0E3F               	movlw	63
  2579  00177E  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2580  001780  0E55               	movlw	85
  2581  001782                     u1477:
  2582  001782  2EE8               	decfsz	wreg,f,c
  2583  001784  D7FE               	goto	u1477
  2584  001786  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2585  001788  D7FC               	goto	u1477
  2586  00178A  F000               	nop	
  2587                           
  2588                           ;lcd_utilities.c: 50: temp1 = data;
  2589  00178C  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2590                           
  2591                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2592  001790  0100               	movlb	0	; () banked
  2593  001792  39CA               	swapf	lcd_write_data@temp1& (0+255),w,b
  2594  001794  0B0F               	andlw	15
  2595  001796  0100               	movlb	0	; () banked
  2596  001798  6FCA               	movwf	lcd_write_data@temp1& (0+255),b
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2600  00179A  0100               	movlb	0	; () banked
  2601  00179C  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2602  00179E  0B0F               	andlw	15
  2603  0017A0  6E83               	movwf	3971,c	;volatile
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2607  0017A2  0E7D               	movlw	125
  2608  0017A4  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2609  0017A6  0EAC               	movlw	172
  2610  0017A8                     u1487:
  2611  0017A8  2EE8               	decfsz	wreg,f,c
  2612  0017AA  D7FE               	goto	u1487
  2613  0017AC  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2614  0017AE  D7FC               	goto	u1487
  2615                           
  2616                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2617  0017B0  8C83               	bsf	3971,6,c	;volatile
  2618                           
  2619                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2620  0017B2  0E7D               	movlw	125
  2621  0017B4  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2622  0017B6  0EAC               	movlw	172
  2623  0017B8                     u1497:
  2624  0017B8  2EE8               	decfsz	wreg,f,c
  2625  0017BA  D7FE               	goto	u1497
  2626  0017BC  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2627  0017BE  D7FC               	goto	u1497
  2628                           
  2629                           ;lcd_utilities.c: 57: lcd_strobe();
  2630  0017C0  EC96  F00E         	call	_lcd_strobe	;wreg free
  2631                           
  2632                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2633  0017C4  0E7D               	movlw	125
  2634  0017C6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2635  0017C8  0EAC               	movlw	172
  2636  0017CA                     u1507:
  2637  0017CA  2EE8               	decfsz	wreg,f,c
  2638  0017CC  D7FE               	goto	u1507
  2639  0017CE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2640  0017D0  D7FC               	goto	u1507
  2641                           
  2642                           ;lcd_utilities.c: 60: temp1 = data;
  2643  0017D2  C0C9  F0CA         	movff	lcd_write_data@data,lcd_write_data@temp1
  2644                           
  2645                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2646  0017D6  0100               	movlb	0	; () banked
  2647  0017D8  51CA               	movf	lcd_write_data@temp1& (0+255),w,b
  2648  0017DA  0B0F               	andlw	15
  2649  0017DC  6E83               	movwf	3971,c	;volatile
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2653  0017DE  0E7D               	movlw	125
  2654  0017E0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2655  0017E2  0EAC               	movlw	172
  2656  0017E4                     u1517:
  2657  0017E4  2EE8               	decfsz	wreg,f,c
  2658  0017E6  D7FE               	goto	u1517
  2659  0017E8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2660  0017EA  D7FC               	goto	u1517
  2661                           
  2662                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2663  0017EC  8C83               	bsf	3971,6,c	;volatile
  2664                           
  2665                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2666  0017EE  0E9C               	movlw	156
  2667  0017F0  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2668  0017F2  0ED7               	movlw	215
  2669  0017F4                     u1527:
  2670  0017F4  2EE8               	decfsz	wreg,f,c
  2671  0017F6  D7FE               	goto	u1527
  2672  0017F8  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2673  0017FA  D7FC               	goto	u1527
  2674  0017FC  F000               	nop	
  2675                           
  2676                           ;lcd_utilities.c: 66: lcd_strobe();
  2677  0017FE  EC96  F00E         	call	_lcd_strobe	;wreg free
  2678                           
  2679                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2680  001802  0E9C               	movlw	156
  2681  001804  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2682  001806  0ED7               	movlw	215
  2683  001808                     u1537:
  2684  001808  2EE8               	decfsz	wreg,f,c
  2685  00180A  D7FE               	goto	u1537
  2686  00180C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2687  00180E  D7FC               	goto	u1537
  2688  001810  F000               	nop	
  2689  001812  0012               	return		;funcret
  2690  001814                     __end_of_lcd_write_data:
  2691                           	opt stack 0
  2692                           tblptru	equ	0xFF8
  2693                           tblptrh	equ	0xFF7
  2694                           tblptrl	equ	0xFF6
  2695                           tablat	equ	0xFF5
  2696                           prodh	equ	0xFF4
  2697                           prodl	equ	0xFF3
  2698                           intcon	equ	0xFF2
  2699                           intcon2	equ	0xFF1
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           plusw1	equ	0xFE3
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           plusw2	equ	0xFDB
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _lcd_write_cmd *****************
  2712 ;; Defined at:
  2713 ;;		line 18 in file "lcd_utilities.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  cmd             1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  cmd             1    0[BANK0 ] unsigned char 
  2718 ;;  temp2           1    1[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0
  2729 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2730 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2731 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2732 ;;Total ram usage:        3 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    4
  2735 ;; This function calls:
  2736 ;;		_lcd_strobe
  2737 ;; This function is called by:
  2738 ;;		_lcd_init
  2739 ;;		_SetupTime
  2740 ;;		_SetupAlarmTimeA
  2741 ;;		_SetupAlarmTimeB
  2742 ;;		_SetupAlarmTimeC
  2743 ;;		_Startup
  2744 ;;		_version
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text10
  2749  001A26                     __ptext10:
  2750                           	opt stack 0
  2751  001A26                     _lcd_write_cmd:
  2752                           	opt stack 25
  2753                           
  2754                           ;incstack = 0
  2755                           ;lcd_write_cmd@cmd stored from wreg
  2756  001A26  0100               	movlb	0	; () banked
  2757  001A28  6FC9               	movwf	lcd_write_cmd@cmd& (0+255),b
  2758                           
  2759                           ;lcd_utilities.c: 20: unsigned char temp2;
  2760                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2761  001A2A  9C83               	bcf	3971,6,c	;volatile
  2762                           
  2763                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2764  001A2C  0E3F               	movlw	63
  2765  001A2E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2766  001A30  0E55               	movlw	85
  2767  001A32                     u1547:
  2768  001A32  2EE8               	decfsz	wreg,f,c
  2769  001A34  D7FE               	goto	u1547
  2770  001A36  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2771  001A38  D7FC               	goto	u1547
  2772  001A3A  F000               	nop	
  2773                           
  2774                           ;lcd_utilities.c: 23: temp2 = cmd;
  2775  001A3C  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2776                           
  2777                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2778  001A40  0100               	movlb	0	; () banked
  2779  001A42  39CA               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  2780  001A44  0B0F               	andlw	15
  2781  001A46  0100               	movlb	0	; () banked
  2782  001A48  6FCA               	movwf	lcd_write_cmd@temp2& (0+255),b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2786  001A4A  0100               	movlb	0	; () banked
  2787  001A4C  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2788  001A4E  0B0F               	andlw	15
  2789  001A50  6E83               	movwf	3971,c	;volatile
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2793  001A52  0E7D               	movlw	125
  2794  001A54  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2795  001A56  0EAC               	movlw	172
  2796  001A58                     u1557:
  2797  001A58  2EE8               	decfsz	wreg,f,c
  2798  001A5A  D7FE               	goto	u1557
  2799  001A5C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2800  001A5E  D7FC               	goto	u1557
  2801                           
  2802                           ;lcd_utilities.c: 28: lcd_strobe();
  2803  001A60  EC96  F00E         	call	_lcd_strobe	;wreg free
  2804                           
  2805                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2806  001A64  0E7D               	movlw	125
  2807  001A66  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2808  001A68  0EAC               	movlw	172
  2809  001A6A                     u1567:
  2810  001A6A  2EE8               	decfsz	wreg,f,c
  2811  001A6C  D7FE               	goto	u1567
  2812  001A6E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2813  001A70  D7FC               	goto	u1567
  2814                           
  2815                           ;lcd_utilities.c: 32: temp2 = cmd;
  2816  001A72  C0C9  F0CA         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2817                           
  2818                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2819  001A76  0100               	movlb	0	; () banked
  2820  001A78  51CA               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2821  001A7A  0B0F               	andlw	15
  2822  001A7C  6E83               	movwf	3971,c	;volatile
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2826  001A7E  0E7D               	movlw	125
  2827  001A80  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2828  001A82  0EAC               	movlw	172
  2829  001A84                     u1577:
  2830  001A84  2EE8               	decfsz	wreg,f,c
  2831  001A86  D7FE               	goto	u1577
  2832  001A88  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2833  001A8A  D7FC               	goto	u1577
  2834                           
  2835                           ;lcd_utilities.c: 36: lcd_strobe();
  2836  001A8C  EC96  F00E         	call	_lcd_strobe	;wreg free
  2837                           
  2838                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2839  001A90  0E7D               	movlw	125
  2840  001A92  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2841  001A94  0EAC               	movlw	172
  2842  001A96                     u1587:
  2843  001A96  2EE8               	decfsz	wreg,f,c
  2844  001A98  D7FE               	goto	u1587
  2845  001A9A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2846  001A9C  D7FC               	goto	u1587
  2847  001A9E  0012               	return		;funcret
  2848  001AA0                     __end_of_lcd_write_cmd:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           intcon2	equ	0xFF1
  2858                           postinc0	equ	0xFEE
  2859                           wreg	equ	0xFE8
  2860                           postdec1	equ	0xFE5
  2861                           plusw1	equ	0xFE3
  2862                           fsr1l	equ	0xFE1
  2863                           indf2	equ	0xFDF
  2864                           plusw2	equ	0xFDB
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _lcd_strobe *****************
  2870 ;; Defined at:
  2871 ;;		line 73 in file "lcd_utilities.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2887 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2888 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    3
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_lcd_write_cmd
  2896 ;;		_lcd_write_data
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text11
  2901  001D2C                     __ptext11:
  2902                           	opt stack 0
  2903  001D2C                     _lcd_strobe:
  2904                           	opt stack 25
  2905                           
  2906                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2907                           
  2908                           ;incstack = 0
  2909  001D2C  8883               	bsf	3971,4,c	;volatile
  2910                           
  2911                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2912  001D2E  0E7D               	movlw	125
  2913  001D30  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2914  001D32  0EAC               	movlw	172
  2915  001D34                     u1597:
  2916  001D34  2EE8               	decfsz	wreg,f,c
  2917  001D36  D7FE               	goto	u1597
  2918  001D38  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2919  001D3A  D7FC               	goto	u1597
  2920                           
  2921                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2922  001D3C  9883               	bcf	3971,4,c	;volatile
  2923                           
  2924                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2925  001D3E  0E7D               	movlw	125
  2926  001D40  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2927  001D42  0EAC               	movlw	172
  2928  001D44                     u1607:
  2929  001D44  2EE8               	decfsz	wreg,f,c
  2930  001D46  D7FE               	goto	u1607
  2931  001D48  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2932  001D4A  D7FC               	goto	u1607
  2933  001D4C  0012               	return		;funcret
  2934  001D4E                     __end_of_lcd_strobe:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           intcon	equ	0xFF2
  2943                           intcon2	equ	0xFF1
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postdec1	equ	0xFE5
  2947                           plusw1	equ	0xFE3
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           plusw2	equ	0xFDB
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _getkey *****************
  2956 ;; Defined at:
  2957 ;;		line 17 in file "keypad_utilities.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2962 ;;  keycode         1   18[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0
  2973 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2975 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2976 ;;Total ram usage:       19 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    3
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_SetupTime
  2983 ;;		_SetupAlarmTimeA
  2984 ;;		_SetupAlarmTimeB
  2985 ;;		_SetupAlarmTimeC
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text12
  2990  001CB0                     __ptext12:
  2991                           	opt stack 0
  2992  001CB0                     _getkey:
  2993                           	opt stack 26
  2994                           
  2995                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2996                           
  2997                           ;incstack = 0
  2998  001CB0  0E1B               	movlw	low getkey@F4270
  2999  001CB2  6EF6               	movwf	tblptrl,c
  3000  001CB4                     	if	1	;There is more than 1 active tblptr byte
  3001  001CB4  0E10               	movlw	high getkey@F4270
  3002  001CB6  6EF7               	movwf	tblptrh,c
  3003  001CB8                     	endif
  3004  001CB8                     	if	0	;There are less than 3 active tblptr bytes
  3005  001CB8                     	endif
  3006  001CB8  EE20  F0C9         	lfsr	2,getkey@lookup
  3007  001CBC  0E11               	movlw	17
  3008  001CBE                     u1050:
  3009  001CBE  0009               	tblrd		*+
  3010  001CC0  CFF5 FFDE          	movff	tablat,postinc2
  3011  001CC4  06E8               	decf	wreg,f,c
  3012  001CC6  E2FB               	bc	u1050
  3013  001CC8                     l33:
  3014  001CC8  AA81               	btfss	3969,5,c	;volatile
  3015  001CCA  D7FE               	goto	l33
  3016                           
  3017                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  3018  001CCC  5081               	movf	3969,w,c	;volatile
  3019  001CCE  0B0F               	andlw	15
  3020  001CD0  0100               	movlb	0	; () banked
  3021  001CD2  6FDB               	movwf	getkey@keycode& (0+255),b
  3022  001CD4                     l36:
  3023  001CD4  BA81               	btfsc	3969,5,c	;volatile
  3024  001CD6  D7FE               	goto	l36
  3025                           
  3026                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  3027  001CD8  0100               	movlb	0	; () banked
  3028  001CDA  51DB               	movf	getkey@keycode& (0+255),w,b
  3029  001CDC  0D01               	mullw	1
  3030  001CDE  0EC9               	movlw	low getkey@lookup
  3031  001CE0  24F3               	addwf	prodl,w,c
  3032  001CE2  6ED9               	movwf	fsr2l,c
  3033  001CE4  0E00               	movlw	high getkey@lookup
  3034  001CE6  20F4               	addwfc	prodh,w,c
  3035  001CE8  6EDA               	movwf	fsr2h,c
  3036  001CEA  50DF               	movf	indf2,w,c
  3037  001CEC  0012               	return	
  3038  001CEE                     __end_of_getkey:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           intcon	equ	0xFF2
  3047                           intcon2	equ	0xFF1
  3048                           postinc0	equ	0xFEE
  3049                           wreg	equ	0xFE8
  3050                           postdec1	equ	0xFE5
  3051                           plusw1	equ	0xFE3
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           postinc2	equ	0xFDE
  3055                           plusw2	equ	0xFDB
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _delay_ms *****************
  3061 ;; Defined at:
  3062 ;;		line 10 in file "delays_utilities.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  i               2   28[COMRAM] unsigned int 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  j               2    1[BANK0 ] unsigned int 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         2       0       0       0       0       0       0       0       0
  3077 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3078 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3079 ;;      Totals:         2       3       0       0       0       0       0       0       0
  3080 ;;Total ram usage:        5 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_SetupTime
  3087 ;;		_SetupAlarmTimeA
  3088 ;;		_SetupAlarmTimeB
  3089 ;;		_SetupAlarmTimeC
  3090 ;;		_Startup
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text13
  3095  001CEE                     __ptext13:
  3096                           	opt stack 0
  3097  001CEE                     _delay_ms:
  3098                           	opt stack 26
  3099                           
  3100                           ;delays_utilities.c: 12: if(i!=0)
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;incstack = 0
  3104  001CEE  501D               	movf	delay_ms@i,w,c
  3105  001CF0  101E               	iorwf	delay_ms@i+1,w,c
  3106  001CF2  B4D8               	btfsc	status,2,c
  3107  001CF4  0012               	return	
  3108                           
  3109                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  3110  001CF6  0E00               	movlw	0
  3111  001CF8  0100               	movlb	0	; () banked
  3112  001CFA  6FCB               	movwf	(delay_ms@j+1)& (0+255),b
  3113  001CFC  0E00               	movlw	0
  3114  001CFE  6FCA               	movwf	delay_ms@j& (0+255),b
  3115  001D00  D00C               	goto	l207
  3116  001D02                     l2189:
  3117                           
  3118                           ; BSR set to: 0
  3119  001D02  0E10               	movlw	16
  3120  001D04  0100               	movlb	0	; () banked
  3121  001D06  6FC9               	movwf	??_delay_ms& (0+255),b
  3122  001D08  0E94               	movlw	148
  3123  001D0A                     u1617:
  3124  001D0A  2EE8               	decfsz	wreg,f,c
  3125  001D0C  D7FE               	goto	u1617
  3126  001D0E  2FC9               	decfsz	??_delay_ms& (0+255),f,b
  3127  001D10  D7FC               	goto	u1617
  3128  001D12  D000               	nop2	
  3129  001D14  0100               	movlb	0	; () banked
  3130  001D16  4BCA               	infsnz	delay_ms@j& (0+255),f,b
  3131  001D18  2BCB               	incf	(delay_ms@j+1)& (0+255),f,b
  3132  001D1A                     l207:
  3133                           
  3134                           ; BSR set to: 0
  3135  001D1A  501D               	movf	delay_ms@i,w,c
  3136  001D1C  0100               	movlb	0	; () banked
  3137  001D1E  5DCA               	subwf	delay_ms@j& (0+255),w,b
  3138  001D20  501E               	movf	delay_ms@i+1,w,c
  3139  001D22  0100               	movlb	0	; () banked
  3140  001D24  59CB               	subwfb	(delay_ms@j+1)& (0+255),w,b
  3141  001D26  B0D8               	btfsc	status,0,c
  3142  001D28  0012               	return	
  3143  001D2A  D7EB               	goto	l2189
  3144  001D2C                     __end_of_delay_ms:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           intcon2	equ	0xFF1
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           postdec1	equ	0xFE5
  3157                           plusw1	equ	0xFE3
  3158                           fsr1l	equ	0xFE1
  3159                           indf2	equ	0xFDF
  3160                           postinc2	equ	0xFDE
  3161                           plusw2	equ	0xFDB
  3162                           fsr2h	equ	0xFDA
  3163                           fsr2l	equ	0xFD9
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _char_2_int *****************
  3167 ;; Defined at:
  3168 ;;		line 36 in file "Main.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  char1           1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  char1           1   28[COMRAM] unsigned char 
  3173 ;;  int1            1   29[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      unsigned char 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    3
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_SetupTime
  3194 ;;		_SetupAlarmTimeA
  3195 ;;		_SetupAlarmTimeB
  3196 ;;		_SetupAlarmTimeC
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text14
  3201  001B16                     __ptext14:
  3202                           	opt stack 0
  3203  001B16                     _char_2_int:
  3204                           	opt stack 26
  3205                           
  3206                           ;incstack = 0
  3207                           ;char_2_int@char1 stored from wreg
  3208  001B16  6E1D               	movwf	char_2_int@char1,c
  3209                           
  3210                           ;Main.c: 38: unsigned char int1;
  3211                           ;Main.c: 39: switch (char1)
  3212  001B18  D015               	goto	l1599
  3213  001B1A                     l1579:
  3214  001B1A  0E01               	movlw	1
  3215  001B1C  D011               	goto	L10
  3216  001B1E                     l1581:
  3217  001B1E  0E02               	movlw	2
  3218  001B20  D00F               	goto	L10
  3219  001B22                     l1583:
  3220  001B22  0E03               	movlw	3
  3221  001B24  D00D               	goto	L10
  3222  001B26                     l1585:
  3223  001B26  0E04               	movlw	4
  3224  001B28  D00B               	goto	L10
  3225  001B2A                     l1587:
  3226  001B2A  0E05               	movlw	5
  3227  001B2C  D009               	goto	L10
  3228  001B2E                     l1589:
  3229  001B2E  0E06               	movlw	6
  3230  001B30  D007               	goto	L10
  3231  001B32                     l1591:
  3232  001B32  0E07               	movlw	7
  3233  001B34  D005               	goto	L10
  3234  001B36                     l1593:
  3235  001B36  0E08               	movlw	8
  3236  001B38  D003               	goto	L10
  3237  001B3A                     l1595:
  3238  001B3A  0E09               	movlw	9
  3239  001B3C  D001               	goto	L10
  3240  001B3E                     l1597:
  3241  001B3E  0E00               	movlw	0
  3242  001B40                     L10:
  3243  001B40  6E1E               	movwf	char_2_int@int1,c
  3244                           
  3245                           ;Main.c: 52: }
  3246  001B42  D020               	goto	l120
  3247  001B44                     l1599:
  3248  001B44  501D               	movf	char_2_int@char1,w,c
  3249                           
  3250                           ; Switch size 1, requested type "space"
  3251                           ; Number of cases is 10, Range of values is 48 to 57
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte           31    16 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256  001B46  0A30               	xorlw	48	; case 48
  3257  001B48  B4D8               	btfsc	status,2,c
  3258  001B4A  D7F9               	goto	l1597
  3259  001B4C  0A01               	xorlw	1	; case 49
  3260  001B4E  B4D8               	btfsc	status,2,c
  3261  001B50  D7E4               	goto	l1579
  3262  001B52  0A03               	xorlw	3	; case 50
  3263  001B54  B4D8               	btfsc	status,2,c
  3264  001B56  D7E3               	goto	l1581
  3265  001B58  0A01               	xorlw	1	; case 51
  3266  001B5A  B4D8               	btfsc	status,2,c
  3267  001B5C  D7E2               	goto	l1583
  3268  001B5E  0A07               	xorlw	7	; case 52
  3269  001B60  B4D8               	btfsc	status,2,c
  3270  001B62  D7E1               	goto	l1585
  3271  001B64  0A01               	xorlw	1	; case 53
  3272  001B66  B4D8               	btfsc	status,2,c
  3273  001B68  D7E0               	goto	l1587
  3274  001B6A  0A03               	xorlw	3	; case 54
  3275  001B6C  B4D8               	btfsc	status,2,c
  3276  001B6E  D7DF               	goto	l1589
  3277  001B70  0A01               	xorlw	1	; case 55
  3278  001B72  B4D8               	btfsc	status,2,c
  3279  001B74  D7DE               	goto	l1591
  3280  001B76  0A0F               	xorlw	15	; case 56
  3281  001B78  B4D8               	btfsc	status,2,c
  3282  001B7A  D7DD               	goto	l1593
  3283  001B7C  0A01               	xorlw	1	; case 57
  3284  001B7E  B4D8               	btfsc	status,2,c
  3285  001B80  D7DC               	goto	l1595
  3286  001B82  D7DD               	goto	l1597
  3287  001B84                     l120:
  3288                           
  3289                           ;Main.c: 53: return(int1);
  3290  001B84  501E               	movf	char_2_int@int1,w,c
  3291  001B86  0012               	return		;funcret
  3292  001B88                     __end_of_char_2_int:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           intcon	equ	0xFF2
  3301                           intcon2	equ	0xFF1
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           postdec1	equ	0xFE5
  3305                           plusw1	equ	0xFE3
  3306                           fsr1l	equ	0xFE1
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           plusw2	equ	0xFDB
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _ISR_Timer0_Int *****************
  3315 ;; Defined at:
  3316 ;;		line 56 in file "Main.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  second10        1   27[COMRAM] unsigned char 
  3321 ;;  minute10        1   26[COMRAM] unsigned char 
  3322 ;;  hour10          1   25[COMRAM] unsigned char 
  3323 ;;  second1         1   24[COMRAM] unsigned char 
  3324 ;;  minute1         1   23[COMRAM] unsigned char 
  3325 ;;  hour1           1   22[COMRAM] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3337 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3338 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:       20 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		___awdiv
  3344 ;;		_int_2_char
  3345 ;;		i2_lcd_write_cmd
  3346 ;;		i2_lcd_write_data
  3347 ;; This function is called by:
  3348 ;;		Interrupt level 2
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	intcode
  3353  001008                     __pintcode:
  3354                           	opt stack 0
  3355  001008                     _ISR_Timer0_Int:
  3356                           	opt stack 25
  3357                           
  3358                           ;incstack = 0
  3359  001008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3360  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3361  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3362  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3363                           pclatu	equ	0xFFB
  3364                           pclath	equ	0xFFA
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           prodh	equ	0xFF4
  3370                           prodl	equ	0xFF3
  3371                           intcon	equ	0xFF2
  3372                           intcon2	equ	0xFF1
  3373                           postinc0	equ	0xFEE
  3374                           wreg	equ	0xFE8
  3375                           postdec1	equ	0xFE5
  3376                           plusw1	equ	0xFE3
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           postinc2	equ	0xFDE
  3380                           plusw2	equ	0xFDB
  3381                           fsr2h	equ	0xFDA
  3382                           fsr2l	equ	0xFD9
  3383                           status	equ	0xFD8
  3384                           
  3385                           	psect	intcode_body
  3386  00102E                     __pintcode_body:
  3387                           	opt stack 25
  3388  00102E                     int_func:
  3389                           	opt stack 25
  3390  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3391  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3392  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3393  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3394  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3395  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3396  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3397  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3398  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3399  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3400  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3401  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3402  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3403                           
  3404                           ;Main.c: 58: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3405                           ;Main.c: 59: if (INTCONbits.TMR0IF == 1)
  3406  001060  A4F2               	btfss	intcon,2,c	;volatile
  3407  001062  D085               	goto	i2l138
  3408                           
  3409                           ;Main.c: 60: {
  3410                           ;Main.c: 64: second = second + 1;
  3411  001064  2842               	incf	_second,w,c
  3412  001066  6E42               	movwf	_second,c
  3413                           
  3414                           ;Main.c: 65: if ( second > 59 )
  3415  001068  0E3B               	movlw	59
  3416  00106A  6442               	cpfsgt	_second,c
  3417  00106C  D010               	goto	i2l2011
  3418                           
  3419                           ;Main.c: 66: {
  3420                           ;Main.c: 67: second = 0;
  3421  00106E  0E00               	movlw	0
  3422  001070  6E42               	movwf	_second,c
  3423                           
  3424                           ;Main.c: 68: minute = minute + 1;
  3425  001072  283E               	incf	_minute,w,c
  3426  001074  6E3E               	movwf	_minute,c
  3427                           
  3428                           ;Main.c: 69: if ( minute > 59 )
  3429  001076  0E3B               	movlw	59
  3430  001078  643E               	cpfsgt	_minute,c
  3431  00107A  D009               	goto	i2l2011
  3432                           
  3433                           ;Main.c: 70: {
  3434                           ;Main.c: 71: minute = 0;
  3435  00107C  0E00               	movlw	0
  3436  00107E  6E3E               	movwf	_minute,c
  3437                           
  3438                           ;Main.c: 72: hour = hour + 1;
  3439  001080  283A               	incf	_hour,w,c
  3440  001082  6E3A               	movwf	_hour,c
  3441                           
  3442                           ;Main.c: 73: if ( hour > 23 )
  3443  001084  0E17               	movlw	23
  3444  001086  643A               	cpfsgt	_hour,c
  3445  001088  D002               	goto	i2l2011
  3446                           
  3447                           ;Main.c: 74: hour = 0;
  3448  00108A  0E00               	movlw	0
  3449  00108C  6E3A               	movwf	_hour,c
  3450  00108E                     i2l2011:
  3451                           
  3452                           ;Main.c: 75: }
  3453                           ;Main.c: 76: }
  3454                           ;Main.c: 78: hour10 = hour / 10;
  3455  00108E  C03A  F001         	movff	_hour,___awdiv@dividend
  3456  001092  6A02               	clrf	___awdiv@dividend+1,c
  3457  001094  0E00               	movlw	0
  3458  001096  6E04               	movwf	___awdiv@divisor+1,c
  3459  001098  0E0A               	movlw	10
  3460  00109A  6E03               	movwf	___awdiv@divisor,c
  3461  00109C  EC54  F00C         	call	___awdiv	;wreg free
  3462  0010A0  5001               	movf	?___awdiv,w,c
  3463  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3464                           
  3465                           ;Main.c: 79: hour1 = hour - hour10 * 10;
  3466  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3467  0010A6  0D0A               	mullw	10
  3468  0010A8  50F3               	movf	prodl,w,c
  3469  0010AA  0800               	sublw	0
  3470  0010AC  243A               	addwf	_hour,w,c
  3471  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3472                           
  3473                           ;Main.c: 81: minute10 = minute / 10;
  3474  0010B0  C03E  F001         	movff	_minute,___awdiv@dividend
  3475  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3476  0010B6  0E00               	movlw	0
  3477  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3478  0010BA  0E0A               	movlw	10
  3479  0010BC  6E03               	movwf	___awdiv@divisor,c
  3480  0010BE  EC54  F00C         	call	___awdiv	;wreg free
  3481  0010C2  5001               	movf	?___awdiv,w,c
  3482  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3483                           
  3484                           ;Main.c: 82: minute1 = minute - minute10 * 10;
  3485  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3486  0010C8  0D0A               	mullw	10
  3487  0010CA  50F3               	movf	prodl,w,c
  3488  0010CC  0800               	sublw	0
  3489  0010CE  243E               	addwf	_minute,w,c
  3490  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3491                           
  3492                           ;Main.c: 84: second10 = second / 10;
  3493  0010D2  C042  F001         	movff	_second,___awdiv@dividend
  3494  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3495  0010D8  0E00               	movlw	0
  3496  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3497  0010DC  0E0A               	movlw	10
  3498  0010DE  6E03               	movwf	___awdiv@divisor,c
  3499  0010E0  EC54  F00C         	call	___awdiv	;wreg free
  3500  0010E4  5001               	movf	?___awdiv,w,c
  3501  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3502                           
  3503                           ;Main.c: 85: second1 = second - second10 * 10;
  3504  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3505  0010EA  0D0A               	mullw	10
  3506  0010EC  50F3               	movf	prodl,w,c
  3507  0010EE  0800               	sublw	0
  3508  0010F0  2442               	addwf	_second,w,c
  3509  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3510                           
  3511                           ;Main.c: 87: lcd_write_cmd(0x80);
  3512  0010F4  0E80               	movlw	128
  3513  0010F6  ECC4  F00D         	call	i2_lcd_write_cmd
  3514                           
  3515                           ;Main.c: 88: lcd_write_data('T');
  3516  0010FA  0E54               	movlw	84
  3517  0010FC  EC0A  F00C         	call	i2_lcd_write_data
  3518                           
  3519                           ;Main.c: 89: lcd_write_data('i');
  3520  001100  0E69               	movlw	105
  3521  001102  EC0A  F00C         	call	i2_lcd_write_data
  3522                           
  3523                           ;Main.c: 90: lcd_write_data('m');
  3524  001106  0E6D               	movlw	109
  3525  001108  EC0A  F00C         	call	i2_lcd_write_data
  3526                           
  3527                           ;Main.c: 91: lcd_write_data('e');
  3528  00110C  0E65               	movlw	101
  3529  00110E  EC0A  F00C         	call	i2_lcd_write_data
  3530                           
  3531                           ;Main.c: 92: lcd_write_data(' ');
  3532  001112  0E20               	movlw	32
  3533  001114  EC0A  F00C         	call	i2_lcd_write_data
  3534                           
  3535                           ;Main.c: 93: lcd_write_data('=');
  3536  001118  0E3D               	movlw	61
  3537  00111A  EC0A  F00C         	call	i2_lcd_write_data
  3538                           
  3539                           ;Main.c: 94: lcd_write_data(' ');
  3540  00111E  0E20               	movlw	32
  3541  001120  EC0A  F00C         	call	i2_lcd_write_data
  3542                           
  3543                           ;Main.c: 95: lcd_write_data(int_2_char (hour10));
  3544  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3545  001126  EC50  F00D         	call	_int_2_char
  3546  00112A  EC0A  F00C         	call	i2_lcd_write_data
  3547                           
  3548                           ;Main.c: 96: lcd_write_data(int_2_char (hour1));
  3549  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3550  001130  EC50  F00D         	call	_int_2_char
  3551  001134  EC0A  F00C         	call	i2_lcd_write_data
  3552                           
  3553                           ;Main.c: 97: lcd_write_data(':');
  3554  001138  0E3A               	movlw	58
  3555  00113A  EC0A  F00C         	call	i2_lcd_write_data
  3556                           
  3557                           ;Main.c: 98: lcd_write_data(int_2_char (minute10));
  3558  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3559  001140  EC50  F00D         	call	_int_2_char
  3560  001144  EC0A  F00C         	call	i2_lcd_write_data
  3561                           
  3562                           ;Main.c: 99: lcd_write_data(int_2_char (minute1));
  3563  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3564  00114A  EC50  F00D         	call	_int_2_char
  3565  00114E  EC0A  F00C         	call	i2_lcd_write_data
  3566                           
  3567                           ;Main.c: 100: lcd_write_data(':');
  3568  001152  0E3A               	movlw	58
  3569  001154  EC0A  F00C         	call	i2_lcd_write_data
  3570                           
  3571                           ;Main.c: 101: lcd_write_data(int_2_char (second10));
  3572  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3573  00115A  EC50  F00D         	call	_int_2_char
  3574  00115E  EC0A  F00C         	call	i2_lcd_write_data
  3575                           
  3576                           ;Main.c: 102: lcd_write_data(int_2_char (second1));
  3577  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3578  001164  EC50  F00D         	call	_int_2_char
  3579  001168  EC0A  F00C         	call	i2_lcd_write_data
  3580                           
  3581                           ;Main.c: 104: INTCONbits.TMR0IF = 0;
  3582  00116C  94F2               	bcf	intcon,2,c	;volatile
  3583  00116E                     i2l138:
  3584  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3585  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3586  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3587  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3588  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3589  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3590  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3591  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3592  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3593  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3594  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3595  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3596  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3597  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3598  0011A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3599  0011A8  0011               	retfie		f
  3600  0011AA                     __end_of_ISR_Timer0_Int:
  3601                           	opt stack 0
  3602                           pclatu	equ	0xFFB
  3603                           pclath	equ	0xFFA
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           intcon2	equ	0xFF1
  3612                           postinc0	equ	0xFEE
  3613                           fsr0h	equ	0xFEA
  3614                           fsr0l	equ	0xFE9
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           plusw1	equ	0xFE3
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           plusw2	equ	0xFDB
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8
  3626                           
  3627 ;; *************** function i2_lcd_write_data *****************
  3628 ;; Defined at:
  3629 ;;		line 43 in file "lcd_utilities.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  data            1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  data            1    2[COMRAM] unsigned char 
  3634 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0
  3645 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3647 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3648 ;;Total ram usage:        3 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		i2_lcd_strobe
  3653 ;; This function is called by:
  3654 ;;		_ISR_Timer0_Int
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text16
  3659  001814                     __ptext16:
  3660                           	opt stack 0
  3661  001814                     i2_lcd_write_data:
  3662                           	opt stack 25
  3663                           
  3664                           ;incstack = 0
  3665                           ;i2lcd_write_data@data stored from wreg
  3666  001814  6E03               	movwf	i2lcd_write_data@data,c
  3667                           
  3668                           ;lcd_utilities.c: 45: char temp1;
  3669                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3670  001816  8C83               	bsf	3971,6,c	;volatile
  3671                           
  3672                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3673  001818  0E3F               	movlw	63
  3674  00181A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3675  00181C  0E55               	movlw	85
  3676  00181E                     i2u162_47:
  3677  00181E  2EE8               	decfsz	wreg,f,c
  3678  001820  D7FE               	goto	i2u162_47
  3679  001822  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3680  001824  D7FC               	goto	i2u162_47
  3681  001826  F000               	nop	
  3682                           
  3683                           ;lcd_utilities.c: 50: temp1 = data;
  3684  001828  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3685                           
  3686                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3687  00182C  3804               	swapf	i2lcd_write_data@temp1,w,c
  3688  00182E  0B0F               	andlw	15
  3689  001830  6E04               	movwf	i2lcd_write_data@temp1,c
  3690                           
  3691                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3692  001832  5004               	movf	i2lcd_write_data@temp1,w,c
  3693  001834  0B0F               	andlw	15
  3694  001836  6E83               	movwf	3971,c	;volatile
  3695                           
  3696                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3697  001838  0E7D               	movlw	125
  3698  00183A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3699  00183C  0EAC               	movlw	172
  3700  00183E                     i2u163_47:
  3701  00183E  2EE8               	decfsz	wreg,f,c
  3702  001840  D7FE               	goto	i2u163_47
  3703  001842  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3704  001844  D7FC               	goto	i2u163_47
  3705                           
  3706                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3707  001846  8C83               	bsf	3971,6,c	;volatile
  3708                           
  3709                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3710  001848  0E7D               	movlw	125
  3711  00184A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3712  00184C  0EAC               	movlw	172
  3713  00184E                     i2u164_47:
  3714  00184E  2EE8               	decfsz	wreg,f,c
  3715  001850  D7FE               	goto	i2u164_47
  3716  001852  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3717  001854  D7FC               	goto	i2u164_47
  3718                           
  3719                           ;lcd_utilities.c: 57: lcd_strobe();
  3720  001856  ECA7  F00E         	call	i2_lcd_strobe	;wreg free
  3721                           
  3722                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3723  00185A  0E7D               	movlw	125
  3724  00185C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3725  00185E  0EAC               	movlw	172
  3726  001860                     i2u165_47:
  3727  001860  2EE8               	decfsz	wreg,f,c
  3728  001862  D7FE               	goto	i2u165_47
  3729  001864  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3730  001866  D7FC               	goto	i2u165_47
  3731                           
  3732                           ;lcd_utilities.c: 60: temp1 = data;
  3733  001868  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3734                           
  3735                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3736  00186C  5004               	movf	i2lcd_write_data@temp1,w,c
  3737  00186E  0B0F               	andlw	15
  3738  001870  6E83               	movwf	3971,c	;volatile
  3739                           
  3740                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3741  001872  0E7D               	movlw	125
  3742  001874  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3743  001876  0EAC               	movlw	172
  3744  001878                     i2u166_47:
  3745  001878  2EE8               	decfsz	wreg,f,c
  3746  00187A  D7FE               	goto	i2u166_47
  3747  00187C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3748  00187E  D7FC               	goto	i2u166_47
  3749                           
  3750                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3751  001880  8C83               	bsf	3971,6,c	;volatile
  3752                           
  3753                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3754  001882  0E9C               	movlw	156
  3755  001884  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3756  001886  0ED7               	movlw	215
  3757  001888                     i2u167_47:
  3758  001888  2EE8               	decfsz	wreg,f,c
  3759  00188A  D7FE               	goto	i2u167_47
  3760  00188C  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3761  00188E  D7FC               	goto	i2u167_47
  3762  001890  F000               	nop	
  3763                           
  3764                           ;lcd_utilities.c: 66: lcd_strobe();
  3765  001892  ECA7  F00E         	call	i2_lcd_strobe	;wreg free
  3766                           
  3767                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3768  001896  0E9C               	movlw	156
  3769  001898  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3770  00189A  0ED7               	movlw	215
  3771  00189C                     i2u168_47:
  3772  00189C  2EE8               	decfsz	wreg,f,c
  3773  00189E  D7FE               	goto	i2u168_47
  3774  0018A0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3775  0018A2  D7FC               	goto	i2u168_47
  3776  0018A4  F000               	nop	
  3777  0018A6  0012               	return		;funcret
  3778  0018A8                     __end_ofi2_lcd_write_data:
  3779                           	opt stack 0
  3780                           pclatu	equ	0xFFB
  3781                           pclath	equ	0xFFA
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           prodh	equ	0xFF4
  3787                           prodl	equ	0xFF3
  3788                           intcon	equ	0xFF2
  3789                           intcon2	equ	0xFF1
  3790                           postinc0	equ	0xFEE
  3791                           fsr0h	equ	0xFEA
  3792                           fsr0l	equ	0xFE9
  3793                           wreg	equ	0xFE8
  3794                           postdec1	equ	0xFE5
  3795                           plusw1	equ	0xFE3
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           plusw2	equ	0xFDB
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function i2_lcd_write_cmd *****************
  3806 ;; Defined at:
  3807 ;;		line 18 in file "lcd_utilities.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  cmd             1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  cmd             1    2[COMRAM] unsigned char 
  3812 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3825 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:        3 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    1
  3829 ;; This function calls:
  3830 ;;		i2_lcd_strobe
  3831 ;; This function is called by:
  3832 ;;		_ISR_Timer0_Int
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text17
  3837  001B88                     __ptext17:
  3838                           	opt stack 0
  3839  001B88                     i2_lcd_write_cmd:
  3840                           	opt stack 25
  3841                           
  3842                           ;incstack = 0
  3843                           ;i2lcd_write_cmd@cmd stored from wreg
  3844  001B88  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3845                           
  3846                           ;lcd_utilities.c: 20: unsigned char temp2;
  3847                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3848  001B8A  9C83               	bcf	3971,6,c	;volatile
  3849                           
  3850                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3851  001B8C  0E3F               	movlw	63
  3852  001B8E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3853  001B90  0E55               	movlw	85
  3854  001B92                     i2u169_47:
  3855  001B92  2EE8               	decfsz	wreg,f,c
  3856  001B94  D7FE               	goto	i2u169_47
  3857  001B96  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3858  001B98  D7FC               	goto	i2u169_47
  3859  001B9A  F000               	nop	
  3860                           
  3861                           ;lcd_utilities.c: 23: temp2 = cmd;
  3862  001B9C  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3863                           
  3864                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3865  001BA0  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3866  001BA2  0B0F               	andlw	15
  3867  001BA4  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3868                           
  3869                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3870  001BA6  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3871  001BA8  0B0F               	andlw	15
  3872  001BAA  6E83               	movwf	3971,c	;volatile
  3873                           
  3874                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3875  001BAC  0E7D               	movlw	125
  3876  001BAE  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3877  001BB0  0EAC               	movlw	172
  3878  001BB2                     i2u170_47:
  3879  001BB2  2EE8               	decfsz	wreg,f,c
  3880  001BB4  D7FE               	goto	i2u170_47
  3881  001BB6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3882  001BB8  D7FC               	goto	i2u170_47
  3883                           
  3884                           ;lcd_utilities.c: 28: lcd_strobe();
  3885  001BBA  ECA7  F00E         	call	i2_lcd_strobe	;wreg free
  3886                           
  3887                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3888  001BBE  0E7D               	movlw	125
  3889  001BC0  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3890  001BC2  0EAC               	movlw	172
  3891  001BC4                     i2u171_47:
  3892  001BC4  2EE8               	decfsz	wreg,f,c
  3893  001BC6  D7FE               	goto	i2u171_47
  3894  001BC8  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3895  001BCA  D7FC               	goto	i2u171_47
  3896                           
  3897                           ;lcd_utilities.c: 32: temp2 = cmd;
  3898  001BCC  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3899                           
  3900                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3901  001BD0  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3902  001BD2  0B0F               	andlw	15
  3903  001BD4  6E83               	movwf	3971,c	;volatile
  3904                           
  3905                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3906  001BD6  0E7D               	movlw	125
  3907  001BD8  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3908  001BDA  0EAC               	movlw	172
  3909  001BDC                     i2u172_47:
  3910  001BDC  2EE8               	decfsz	wreg,f,c
  3911  001BDE  D7FE               	goto	i2u172_47
  3912  001BE0  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3913  001BE2  D7FC               	goto	i2u172_47
  3914                           
  3915                           ;lcd_utilities.c: 36: lcd_strobe();
  3916  001BE4  ECA7  F00E         	call	i2_lcd_strobe	;wreg free
  3917                           
  3918                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3919  001BE8  0E7D               	movlw	125
  3920  001BEA  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3921  001BEC  0EAC               	movlw	172
  3922  001BEE                     i2u173_47:
  3923  001BEE  2EE8               	decfsz	wreg,f,c
  3924  001BF0  D7FE               	goto	i2u173_47
  3925  001BF2  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3926  001BF4  D7FC               	goto	i2u173_47
  3927  001BF6  0012               	return		;funcret
  3928  001BF8                     __end_ofi2_lcd_write_cmd:
  3929                           	opt stack 0
  3930                           pclatu	equ	0xFFB
  3931                           pclath	equ	0xFFA
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           postinc0	equ	0xFEE
  3941                           fsr0h	equ	0xFEA
  3942                           fsr0l	equ	0xFE9
  3943                           wreg	equ	0xFE8
  3944                           postdec1	equ	0xFE5
  3945                           plusw1	equ	0xFE3
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           plusw2	equ	0xFDB
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function i2_lcd_strobe *****************
  3956 ;; Defined at:
  3957 ;;		line 73 in file "lcd_utilities.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		i2_lcd_write_cmd
  3981 ;;		i2_lcd_write_data
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text18
  3986  001D4E                     __ptext18:
  3987                           	opt stack 0
  3988  001D4E                     i2_lcd_strobe:
  3989                           	opt stack 25
  3990                           
  3991                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3992                           
  3993                           ;incstack = 0
  3994  001D4E  8883               	bsf	3971,4,c	;volatile
  3995                           
  3996                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3997  001D50  0E7D               	movlw	125
  3998  001D52  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3999  001D54  0EAC               	movlw	172
  4000  001D56                     i2u174_47:
  4001  001D56  2EE8               	decfsz	wreg,f,c
  4002  001D58  D7FE               	goto	i2u174_47
  4003  001D5A  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4004  001D5C  D7FC               	goto	i2u174_47
  4005                           
  4006                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  4007  001D5E  9883               	bcf	3971,4,c	;volatile
  4008                           
  4009                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  4010  001D60  0E7D               	movlw	125
  4011  001D62  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4012  001D64  0EAC               	movlw	172
  4013  001D66                     i2u175_47:
  4014  001D66  2EE8               	decfsz	wreg,f,c
  4015  001D68  D7FE               	goto	i2u175_47
  4016  001D6A  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4017  001D6C  D7FC               	goto	i2u175_47
  4018  001D6E  0012               	return		;funcret
  4019  001D70                     __end_ofi2_lcd_strobe:
  4020                           	opt stack 0
  4021                           pclatu	equ	0xFFB
  4022                           pclath	equ	0xFFA
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           prodh	equ	0xFF4
  4028                           prodl	equ	0xFF3
  4029                           intcon	equ	0xFF2
  4030                           intcon2	equ	0xFF1
  4031                           postinc0	equ	0xFEE
  4032                           fsr0h	equ	0xFEA
  4033                           fsr0l	equ	0xFE9
  4034                           wreg	equ	0xFE8
  4035                           postdec1	equ	0xFE5
  4036                           plusw1	equ	0xFE3
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           postinc2	equ	0xFDE
  4041                           plusw2	equ	0xFDB
  4042                           fsr2h	equ	0xFDA
  4043                           fsr2l	equ	0xFD9
  4044                           status	equ	0xFD8
  4045                           
  4046 ;; *************** function _int_2_char *****************
  4047 ;; Defined at:
  4048 ;;		line 16 in file "Main.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  int1            1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  int1            1    0[COMRAM] unsigned char 
  4053 ;;  char1           1    1[COMRAM] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0
  4064 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_ISR_Timer0_Int
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text19
  4077  001AA0                     __ptext19:
  4078                           	opt stack 0
  4079  001AA0                     _int_2_char:
  4080                           	opt stack 26
  4081                           
  4082                           ;incstack = 0
  4083                           ;int_2_char@int1 stored from wreg
  4084  001AA0  6E01               	movwf	int_2_char@int1,c
  4085                           
  4086                           ;Main.c: 18: char char1;
  4087                           ;Main.c: 19: switch (int1)
  4088  001AA2  D017               	goto	i2l989
  4089  001AA4                     i2l967:
  4090  001AA4  0E30               	movlw	48
  4091  001AA6  D013               	goto	L20
  4092  001AA8                     i2l969:
  4093  001AA8  0E31               	movlw	49
  4094  001AAA  D011               	goto	L20
  4095  001AAC                     i2l971:
  4096  001AAC  0E32               	movlw	50
  4097  001AAE  D00F               	goto	L20
  4098  001AB0                     i2l973:
  4099  001AB0  0E33               	movlw	51
  4100  001AB2  D00D               	goto	L20
  4101  001AB4                     i2l975:
  4102  001AB4  0E34               	movlw	52
  4103  001AB6  D00B               	goto	L20
  4104  001AB8                     i2l977:
  4105  001AB8  0E35               	movlw	53
  4106  001ABA  D009               	goto	L20
  4107  001ABC                     i2l979:
  4108  001ABC  0E36               	movlw	54
  4109  001ABE  D007               	goto	L20
  4110  001AC0                     i2l981:
  4111  001AC0  0E37               	movlw	55
  4112  001AC2  D005               	goto	L20
  4113  001AC4                     i2l983:
  4114  001AC4  0E38               	movlw	56
  4115  001AC6  D003               	goto	L20
  4116  001AC8                     i2l985:
  4117  001AC8  0E39               	movlw	57
  4118  001ACA  D001               	goto	L20
  4119  001ACC                     i2l987:
  4120  001ACC  0E3F               	movlw	63
  4121  001ACE                     L20:
  4122  001ACE  6E02               	movwf	int_2_char@char1,c
  4123                           
  4124                           ;Main.c: 32: }
  4125  001AD0  D020               	goto	i2l104
  4126  001AD2                     i2l989:
  4127  001AD2  5001               	movf	int_2_char@int1,w,c
  4128                           
  4129                           ; Switch size 1, requested type "space"
  4130                           ; Number of cases is 10, Range of values is 0 to 9
  4131                           ; switch strategies available:
  4132                           ; Name         Instructions Cycles
  4133                           ; simple_byte           31    16 (average)
  4134                           ;	Chosen strategy is simple_byte
  4135  001AD4  0A00               	xorlw	0	; case 0
  4136  001AD6  B4D8               	btfsc	status,2,c
  4137  001AD8  D7E5               	goto	i2l967
  4138  001ADA  0A01               	xorlw	1	; case 1
  4139  001ADC  B4D8               	btfsc	status,2,c
  4140  001ADE  D7E4               	goto	i2l969
  4141  001AE0  0A03               	xorlw	3	; case 2
  4142  001AE2  B4D8               	btfsc	status,2,c
  4143  001AE4  D7E3               	goto	i2l971
  4144  001AE6  0A01               	xorlw	1	; case 3
  4145  001AE8  B4D8               	btfsc	status,2,c
  4146  001AEA  D7E2               	goto	i2l973
  4147  001AEC  0A07               	xorlw	7	; case 4
  4148  001AEE  B4D8               	btfsc	status,2,c
  4149  001AF0  D7E1               	goto	i2l975
  4150  001AF2  0A01               	xorlw	1	; case 5
  4151  001AF4  B4D8               	btfsc	status,2,c
  4152  001AF6  D7E0               	goto	i2l977
  4153  001AF8  0A03               	xorlw	3	; case 6
  4154  001AFA  B4D8               	btfsc	status,2,c
  4155  001AFC  D7DF               	goto	i2l979
  4156  001AFE  0A01               	xorlw	1	; case 7
  4157  001B00  B4D8               	btfsc	status,2,c
  4158  001B02  D7DE               	goto	i2l981
  4159  001B04  0A0F               	xorlw	15	; case 8
  4160  001B06  B4D8               	btfsc	status,2,c
  4161  001B08  D7DD               	goto	i2l983
  4162  001B0A  0A01               	xorlw	1	; case 9
  4163  001B0C  B4D8               	btfsc	status,2,c
  4164  001B0E  D7DC               	goto	i2l985
  4165  001B10  D7DD               	goto	i2l987
  4166  001B12                     i2l104:
  4167                           
  4168                           ;Main.c: 33: return(char1);
  4169  001B12  5002               	movf	int_2_char@char1,w,c
  4170  001B14  0012               	return		;funcret
  4171  001B16                     __end_of_int_2_char:
  4172                           	opt stack 0
  4173                           pclatu	equ	0xFFB
  4174                           pclath	equ	0xFFA
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           intcon2	equ	0xFF1
  4183                           postinc0	equ	0xFEE
  4184                           fsr0h	equ	0xFEA
  4185                           fsr0l	equ	0xFE9
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           plusw1	equ	0xFE3
  4189                           fsr1h	equ	0xFE2
  4190                           fsr1l	equ	0xFE1
  4191                           indf2	equ	0xFDF
  4192                           postinc2	equ	0xFDE
  4193                           plusw2	equ	0xFDB
  4194                           fsr2h	equ	0xFDA
  4195                           fsr2l	equ	0xFD9
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function ___awdiv *****************
  4199 ;; Defined at:
  4200 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  dividend        2    0[COMRAM] int 
  4203 ;;  divisor         2    2[COMRAM] int 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  quotient        2    6[COMRAM] int 
  4206 ;;  sign            1    5[COMRAM] unsigned char 
  4207 ;;  counter         1    4[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  2    0[COMRAM] int 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        8 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_ISR_Timer0_Int
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text20
  4231  0018A8                     __ptext20:
  4232                           	opt stack 0
  4233  0018A8                     ___awdiv:
  4234                           	opt stack 26
  4235                           
  4236                           ;incstack = 0
  4237  0018A8  0E00               	movlw	0
  4238  0018AA  6E06               	movwf	___awdiv@sign,c
  4239  0018AC  AE04               	btfss	___awdiv@divisor+1,7,c
  4240  0018AE  D006               	goto	i2l1897
  4241  0018B0  6C03               	negf	___awdiv@divisor,c
  4242  0018B2  1E04               	comf	___awdiv@divisor+1,f,c
  4243  0018B4  B0D8               	btfsc	status,0,c
  4244  0018B6  2A04               	incf	___awdiv@divisor+1,f,c
  4245  0018B8  0E01               	movlw	1
  4246  0018BA  6E06               	movwf	___awdiv@sign,c
  4247  0018BC                     i2l1897:
  4248  0018BC  AE02               	btfss	___awdiv@dividend+1,7,c
  4249  0018BE  D006               	goto	i2l1903
  4250  0018C0  6C01               	negf	___awdiv@dividend,c
  4251  0018C2  1E02               	comf	___awdiv@dividend+1,f,c
  4252  0018C4  B0D8               	btfsc	status,0,c
  4253  0018C6  2A02               	incf	___awdiv@dividend+1,f,c
  4254  0018C8  0E01               	movlw	1
  4255  0018CA  1A06               	xorwf	___awdiv@sign,f,c
  4256  0018CC                     i2l1903:
  4257  0018CC  0E00               	movlw	0
  4258  0018CE  6E08               	movwf	___awdiv@quotient+1,c
  4259  0018D0  0E00               	movlw	0
  4260  0018D2  6E07               	movwf	___awdiv@quotient,c
  4261  0018D4  5003               	movf	___awdiv@divisor,w,c
  4262  0018D6  1004               	iorwf	___awdiv@divisor+1,w,c
  4263  0018D8  B4D8               	btfsc	status,2,c
  4264  0018DA  D01C               	goto	i2l1925
  4265  0018DC  0E01               	movlw	1
  4266  0018DE  6E05               	movwf	___awdiv@counter,c
  4267  0018E0  D004               	goto	i2l1911
  4268  0018E2                     i2l1909:
  4269  0018E2  90D8               	bcf	status,0,c
  4270  0018E4  3603               	rlcf	___awdiv@divisor,f,c
  4271  0018E6  3604               	rlcf	___awdiv@divisor+1,f,c
  4272  0018E8  2A05               	incf	___awdiv@counter,f,c
  4273  0018EA                     i2l1911:
  4274  0018EA  AE04               	btfss	___awdiv@divisor+1,7,c
  4275  0018EC  D7FA               	goto	i2l1909
  4276  0018EE                     i2l1913:
  4277  0018EE  90D8               	bcf	status,0,c
  4278  0018F0  3607               	rlcf	___awdiv@quotient,f,c
  4279  0018F2  3608               	rlcf	___awdiv@quotient+1,f,c
  4280  0018F4  5003               	movf	___awdiv@divisor,w,c
  4281  0018F6  5C01               	subwf	___awdiv@dividend,w,c
  4282  0018F8  5004               	movf	___awdiv@divisor+1,w,c
  4283  0018FA  5802               	subwfb	___awdiv@dividend+1,w,c
  4284  0018FC  A0D8               	btfss	status,0,c
  4285  0018FE  D005               	goto	i2l1921
  4286  001900  5003               	movf	___awdiv@divisor,w,c
  4287  001902  5E01               	subwf	___awdiv@dividend,f,c
  4288  001904  5004               	movf	___awdiv@divisor+1,w,c
  4289  001906  5A02               	subwfb	___awdiv@dividend+1,f,c
  4290  001908  8007               	bsf	___awdiv@quotient,0,c
  4291  00190A                     i2l1921:
  4292  00190A  90D8               	bcf	status,0,c
  4293  00190C  3204               	rrcf	___awdiv@divisor+1,f,c
  4294  00190E  3203               	rrcf	___awdiv@divisor,f,c
  4295  001910  2E05               	decfsz	___awdiv@counter,f,c
  4296  001912  D7ED               	goto	i2l1913
  4297  001914                     i2l1925:
  4298  001914  5006               	movf	___awdiv@sign,w,c
  4299  001916  B4D8               	btfsc	status,2,c
  4300  001918  D004               	goto	i2l1929
  4301  00191A  6C07               	negf	___awdiv@quotient,c
  4302  00191C  1E08               	comf	___awdiv@quotient+1,f,c
  4303  00191E  B0D8               	btfsc	status,0,c
  4304  001920  2A08               	incf	___awdiv@quotient+1,f,c
  4305  001922                     i2l1929:
  4306  001922  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4307  001926  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4308  00192A  0012               	return	
  4309  00192C                     __end_of___awdiv:
  4310                           	opt stack 0
  4311                           pclatu	equ	0xFFB
  4312                           pclath	equ	0xFFA
  4313                           tblptru	equ	0xFF8
  4314                           tblptrh	equ	0xFF7
  4315                           tblptrl	equ	0xFF6
  4316                           tablat	equ	0xFF5
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           intcon2	equ	0xFF1
  4321                           postinc0	equ	0xFEE
  4322                           fsr0h	equ	0xFEA
  4323                           fsr0l	equ	0xFE9
  4324                           wreg	equ	0xFE8
  4325                           postdec1	equ	0xFE5
  4326                           plusw1	equ	0xFE3
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           postinc2	equ	0xFDE
  4331                           plusw2	equ	0xFDB
  4332                           fsr2h	equ	0xFDA
  4333                           fsr2l	equ	0xFD9
  4334                           status	equ	0xFD8
  4335                           pclatu	equ	0xFFB
  4336                           pclath	equ	0xFFA
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           intcon	equ	0xFF2
  4344                           intcon2	equ	0xFF1
  4345                           postinc0	equ	0xFEE
  4346                           fsr0h	equ	0xFEA
  4347                           fsr0l	equ	0xFE9
  4348                           wreg	equ	0xFE8
  4349                           postdec1	equ	0xFE5
  4350                           plusw1	equ	0xFE3
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           plusw2	equ	0xFDB
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360                           	psect	rparam
  4361  0000                     pclatu	equ	0xFFB
  4362                           pclath	equ	0xFFA
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           intcon	equ	0xFF2
  4370                           intcon2	equ	0xFF1
  4371                           postinc0	equ	0xFEE
  4372                           fsr0h	equ	0xFEA
  4373                           fsr0l	equ	0xFE9
  4374                           wreg	equ	0xFE8
  4375                           postdec1	equ	0xFE5
  4376                           plusw1	equ	0xFE3
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           indf2	equ	0xFDF
  4380                           postinc2	equ	0xFDE
  4381                           plusw2	equ	0xFDB
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386                           	psect	temp
  4387  000043                     btemp:
  4388                           	opt stack 0
  4389  000043                     	ds	1
  4390  0000                     int$flags	set	btemp
  4391                           pclatu	equ	0xFFB
  4392                           pclath	equ	0xFFA
  4393                           tblptru	equ	0xFF8
  4394                           tblptrh	equ	0xFF7
  4395                           tblptrl	equ	0xFF6
  4396                           tablat	equ	0xFF5
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           intcon2	equ	0xFF1
  4401                           postinc0	equ	0xFEE
  4402                           fsr0h	equ	0xFEA
  4403                           fsr0l	equ	0xFE9
  4404                           wreg	equ	0xFE8
  4405                           postdec1	equ	0xFE5
  4406                           plusw1	equ	0xFE3
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           indf2	equ	0xFDF
  4410                           postinc2	equ	0xFDE
  4411                           plusw2	equ	0xFDB
  4412                           fsr2h	equ	0xFDA
  4413                           fsr2l	equ	0xFD9
  4414                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        147
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      66
    BANK0           160     49     154
    BANK1           256      0      21
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _Startup->_lcd_write_cmd
    _Startup->_lcd_write_data
    _SetupTime->_char_2_int
    _SetupTime->_delay_ms
    _SetupTime->_lcd_write_cmd
    _SetupTime->_lcd_write_data
    _SetupAlarmTimeC->_char_2_int
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeC->_lcd_write_cmd
    _SetupAlarmTimeC->_lcd_write_data
    _SetupAlarmTimeB->_char_2_int
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeB->_lcd_write_cmd
    _SetupAlarmTimeB->_lcd_write_data
    _SetupAlarmTimeA->_char_2_int
    _SetupAlarmTimeA->_delay_ms
    _SetupAlarmTimeA->_lcd_write_cmd
    _SetupAlarmTimeA->_lcd_write_data
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8343
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                            _Startup
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              2 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              2 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _Startup                                             44    44      0    1199
                                              3 BANK0     44    44      0
                           _delay_ms
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1752
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1554
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     531
                                             28 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _Startup
     _delay_ms
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      15       7        8.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 16 11:02:02 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1CC8  
                                   l36 1CD4                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l120 1B84  
                                  l207 1D1A                                    l185 170C  
                                  l195 1762                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4270 101B  
                                 l2201 1944                                   l2205 195A  
                                 l2231 11F8                                   l2223 11D2  
                                 l2321 1500                                   l2209 1974  
                                 l2219 11C8                                   l2411 1332  
                                 l2403 130C                                   l2317 14F6  
                                 l2329 1526                                   l2441 13B6  
                                 l2505 1738                                   l2275 15EE  
                                 l2371 142E                                   l2363 1408  
                                 l2507 1740                                   l1581 1B1E  
                                 l2189 1D02                                   l2437 13AC  
                                 l2509 1746                                   l1591 1B32  
                                 l1583 1B22                                   l2287 161E  
                                 l2279 15F8                                   l2359 13FE  
                                 l2455 1C80                                   l2519 1770  
                                 l1593 1B36                                   l1585 1B26  
                                 l1595 1B3A                                   l1587 1B2A  
                                 l1579 1B1A                                   l2459 1C8A  
                                 l1597 1B3E                                   l1589 1B2E  
                                 l1599 1B44                                   l2399 1302  
                                 l2487 16F0                                   l2497 171A  
                                 u1121 11B4                                   u1050 1CBE  
                                 u1211 13E6                                   u1301 1C6C  
                                 u1151 15D6                                   u1241 12EE  
                                 u1181 14DE                                   u1271 1398  
                                 u1507 17CA                                   u1517 17E4  
                                 u1607 1D44                                   u1527 17F4  
                                 u1617 1D0A                                   u1537 1808  
                                 u1457 1962                                   u1547 1A32  
                                 u1467 19A0                                   u1557 1A58  
                                 u1477 1782                                   u1567 1A6A  
                                 u1487 17A8                                   u1577 1A84  
                                 u1497 17B8                                   u1587 1A96  
                                 u1597 1D34                 __end_of_lcd_write_data 1814  
                                 _main 16C4                                   _hour 003A  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0043  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 18A8  
                         ___param_bank 000010                           Startup@F4351 00B4  
                         Startup@F4353 001F                        __end_of_Startup 13DC  
                                ?_main 0001                        __end_of___awdiv 192C  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l104 1B12  
                                i2l138 116E                                  i2l971 1AAC  
                      ___awdiv@counter 0005                                  i2l981 1AC0  
                                i2l973 1AB0                                  i2l983 1AC4  
                                i2l975 1AB4                                  i2l967 1AA4  
                                i2l985 1AC8                                  i2l977 1AB8  
                                i2l969 1AA8                                  i2l987 1ACC  
                                i2l979 1ABC                                  i2l989 1AD2  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 00C9  
                                _hourA 003B                                  _hourB 003C  
                                _hourC 003D                                  tablat 000FF5  
                                plusw1 000FE3                                  plusw2 000FDB  
                      ?_lcd_write_data 0001                        __end_of_version 1CB0  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00C9                        __initialization 19AC  
                         __end_of_main 1776                     Startup@StartupDone 00E1  
                               ??_main 001F                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                         version@F4277 0100                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1D4E                                 i2l2011 108E  
                               i2l1911 18EA                                 i2l1903 18CC  
                               i2l1921 190A                                 i2l1913 18EE  
                               i2l1909 18E2                                 i2l1925 1914  
                               i2l1929 1922                                 i2l1897 18BC  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1D2C  
                     __end_of_lcd_init 19AC                         char_2_int@int1 001E  
                            ??_Startup 001F                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1CB0  
                               clear_0 1A12                       ___awdiv@quotient 0007  
                               _minute 003E                                 _second 0042  
                         __pdataCOMRAM 001F                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 001F                             __accesstop 0060  
              __end_of__initialization 1A18                          getkey@keycode 00DB  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1BF8  
                         __pidataBANK1 1DA1                             _char_2_int 1B16  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1D2C               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 00C9  
                   lcd_write_cmd@temp2 00CA                         Startup@Startup 00CC  
                           _int_2_char 1AA0                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              _Startup 12E4                                ___awdiv 18A8  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1B88                                __pcinit 19AC  
                       Startup@outchar 00F6                                __ramtop 0800  
                              __ptext0 16C4                                __ptext1 1C62  
                              __ptext2 192C                                __ptext3 12E4  
                              __ptext4 1D70                                __ptext5 11AA  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 15CC                                __ptext9 1776  
                            _T0CONbits 000FD5                         SetupTime@F4315 009F  
                              _minuteA 003F                                _minuteB 0040  
                              _minuteC 0041                             ??_delay_ms 00C9  
                          ?_char_2_int 0001                                _version 1C62  
                           ??_lcd_init 00CB                         __pintcode_body 102E  
                 end_of_initialization 1A18                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00F9  
                       SetupTime@hour1 00F3                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00F2                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00F2                  SetupAlarmTimeC@hour10 00F2  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                            _AlarmAOff 0034                              _AlarmBOff 0036  
                            _AlarmCOff 0038                      ??_SetupAlarmTimeA 001F  
                    ??_SetupAlarmTimeB 001F                      ??_SetupAlarmTimeC 001F  
                __end_of_lcd_write_cmd 1AA0                __end_ofi2_lcd_write_cmd 1BF8  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1D8C  
                       __end_of_getkey 1CEE                    start_initialization 19AC  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00E1                              _SetupTime 11AA  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    SetupTime@minute10 00F4                      SetupTime@second10 00F6  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00F8  
                          __pbssCOMRAM 0034              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00C9                      __size_of_delay_ms 003E  
                    __size_of_lcd_init 0080                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?_Startup 0001  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4325 0060                   SetupAlarmTimeB@F4335 0075  
                            delay_ms@i 001D                              delay_ms@j 00CA  
                 SetupAlarmTimeC@F4345 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u170_47 1BB2                               i2u162_47 181E  
                             i2u171_47 1BC4                               i2u163_47 183E  
                             i2u172_47 1BDC                               i2u164_47 184E  
                             i2u173_47 1BEE                               i2u165_47 1860  
                             i2u174_47 1D56                               i2u166_47 1878  
                             i2u175_47 1D66                               i2u167_47 1888  
                             i2u168_47 189C                               i2u169_47 1B92  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00F7  
                 SetupAlarmTimeA@hour1 00F3                   SetupAlarmTimeB@ctemp 00F7  
                   __end_of_char_2_int 1B88                   SetupAlarmTimeB@hour1 00F3  
                 SetupAlarmTimeC@ctemp 00F7                   SetupAlarmTimeC@hour1 00F3  
                            lcd_init@i 00CC                    lcd_write_data@temp1 00CA  
                      _SetupAlarmTimeA 15CC                        _SetupAlarmTimeB 14D4  
                      _SetupAlarmTimeC 13DC                         ??i2_lcd_strobe 0001  
                       version@Version 00CB                           ??_lcd_strobe 001D  
                     SetupTime@Message 00DC                              copy_data0 19C0  
                            copy_data1 19E0                              copy_data2 1A00  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1D8C  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1D70  
              __size_of_lcd_write_data 009E                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                       version@outchar 00E0                            ??_SetupTime 001F  
                     SetupTime@minute1 00F5                       SetupTime@second1 00F7  
                     __size_of_Startup 00F8                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1D4E                       SetupTime@outchar 00F1  
                      Startup@msgindex 00F7                     __end_of_int_2_char 1B16  
                     i2_lcd_write_data 1814                               _delay_ms 1CEE  
                             __ptext10 1A26                               __ptext11 1D2C  
                             __ptext20 18A8                               __ptext12 1CB0  
                             __ptext13 1CEE                               __ptext14 1B16  
                             __ptext16 1814                               __ptext17 1B88  
                             __ptext18 1D4E                               __ptext19 1AA0  
                             _lcd_init 192C                       __size_of_version 004E  
                        __size_of_main 00B2          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0043                __end_of_SetupAlarmTimeA 16C4  
              __end_of_SetupAlarmTimeB 15CC                __end_of_SetupAlarmTimeC 14D4  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 007A  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00F2  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1D70                 SetupAlarmTimeA@Message 00DC  
               SetupAlarmTimeB@Message 00DC                 SetupAlarmTimeC@Message 00DC  
              SetupAlarmTimeA@minute10 00F4                SetupAlarmTimeA@msgindex 00F6  
              SetupAlarmTimeB@minute10 00F4                SetupAlarmTimeB@msgindex 00F6  
              SetupAlarmTimeC@minute10 00F4                SetupAlarmTimeC@msgindex 00F6  
               SetupAlarmTimeA@minute1 00F5                 SetupAlarmTimeB@minute1 00F5  
               SetupAlarmTimeA@outchar 00F1                 SetupAlarmTimeC@minute1 00F5  
               SetupAlarmTimeB@outchar 00F1                         _lcd_write_data 1776  
               SetupAlarmTimeC@outchar 00F1                          _lcd_write_cmd 1A26  
