

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 03 11:13:25 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataBANK0
    37  001A16                     __pidataBANK0:
    38                           	opt stack 0
    39                           
    40                           ;initializer for SetupAlarmTimeA@F4496
    41  001A16  53                 	db	83
    42  001A17  75                 	db	117
    43  001A18  62                 	db	98
    44  001A19  6A                 	db	106
    45  001A1A  65                 	db	101
    46  001A1B  63                 	db	99
    47  001A1C  74                 	db	116
    48  001A1D  20                 	db	32
    49  001A1E  41                 	db	65
    50  001A1F  20                 	db	32
    51  001A20  54                 	db	84
    52  001A21  69                 	db	105
    53  001A22  6D                 	db	109
    54  001A23  65                 	db	101
    55  001A24  20                 	db	32
    56  001A25  68                 	db	104
    57  001A26  68                 	db	104
    58  001A27  6D                 	db	109
    59  001A28  6D                 	db	109
    60  001A29  3A                 	db	58
    61  001A2A  00                 	db	0
    62                           
    63                           ;initializer for SetupAlarmTimeB@F4506
    64  001A2B  53                 	db	83
    65  001A2C  75                 	db	117
    66  001A2D  62                 	db	98
    67  001A2E  6A                 	db	106
    68  001A2F  65                 	db	101
    69  001A30  63                 	db	99
    70  001A31  74                 	db	116
    71  001A32  20                 	db	32
    72  001A33  42                 	db	66
    73  001A34  20                 	db	32
    74  001A35  54                 	db	84
    75  001A36  69                 	db	105
    76  001A37  6D                 	db	109
    77  001A38  65                 	db	101
    78  001A39  20                 	db	32
    79  001A3A  68                 	db	104
    80  001A3B  68                 	db	104
    81  001A3C  6D                 	db	109
    82  001A3D  6D                 	db	109
    83  001A3E  3A                 	db	58
    84  001A3F  00                 	db	0
    85                           
    86                           ;initializer for SetupAlarmTimeC@F4516
    87  001A40  53                 	db	83
    88  001A41  75                 	db	117
    89  001A42  62                 	db	98
    90  001A43  6A                 	db	106
    91  001A44  65                 	db	101
    92  001A45  63                 	db	99
    93  001A46  74                 	db	116
    94  001A47  20                 	db	32
    95  001A48  43                 	db	67
    96  001A49  20                 	db	32
    97  001A4A  54                 	db	84
    98  001A4B  69                 	db	105
    99  001A4C  6D                 	db	109
   100  001A4D  65                 	db	101
   101  001A4E  20                 	db	32
   102  001A4F  68                 	db	104
   103  001A50  68                 	db	104
   104  001A51  6D                 	db	109
   105  001A52  6D                 	db	109
   106  001A53  3A                 	db	58
   107  001A54  00                 	db	0
   108                           
   109                           ;initializer for SetupTime@F4486
   110  001A55  53                 	db	83
   111  001A56  65                 	db	101
   112  001A57  74                 	db	116
   113  001A58  20                 	db	32
   114  001A59  74                 	db	116
   115  001A5A  69                 	db	105
   116  001A5B  6D                 	db	109
   117  001A5C  65                 	db	101
   118  001A5D  20                 	db	32
   119  001A5E  68                 	db	104
   120  001A5F  68                 	db	104
   121  001A60  6D                 	db	109
   122  001A61  6D                 	db	109
   123  001A62  73                 	db	115
   124  001A63  73                 	db	115
   125  001A64  3A                 	db	58
   126  001A65  20                 	db	32
   127  001A66  20                 	db	32
   128  001A67  20                 	db	32
   129  001A68  20                 	db	32
   130  001A69  00                 	db	0
   131                           
   132                           	psect	smallconst
   133  00101A                     __psmallconst:
   134                           	opt stack 0
   135  00101A  00                 	db	0
   136  00101B                     getkey@F4444:
   137                           	opt stack 0
   138  00101B  31                 	db	49
   139  00101C  32                 	db	50
   140  00101D  33                 	db	51
   141  00101E  46                 	db	70
   142  00101F  34                 	db	52
   143  001020  35                 	db	53
   144  001021  36                 	db	54
   145  001022  45                 	db	69
   146  001023  37                 	db	55
   147  001024  38                 	db	56
   148  001025  39                 	db	57
   149  001026  44                 	db	68
   150  001027  41                 	db	65
   151  001028  30                 	db	48
   152  001029  42                 	db	66
   153  00102A  43                 	db	67
   154  00102B  20                 	db	32
   155  00102C  00                 	db	0
   156  00102D                     __end_ofgetkey@F4444:
   157                           	opt stack 0
   158  0000                     _ADCON1	set	4033
   159  0000                     _CMCON	set	4020
   160  0000                     _INTCON2	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _PORTA	set	3968
   163  0000                     _PORTAbits	set	3968
   164  0000                     _PORTB	set	3969
   165  0000                     _PORTBbits	set	3969
   166  0000                     _PORTD	set	3971
   167  0000                     _PORTDbits	set	3971
   168  0000                     _RCONbits	set	4048
   169  0000                     _T0CON	set	4053
   170  0000                     _T0CONbits	set	4053
   171  0000                     _TMR0H	set	4055
   172  0000                     _TMR0L	set	4054
   173  0000                     _TRISA	set	3986
   174  0000                     _TRISD	set	3989
   175  00102D  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  001A6A                     __pcinit:
   181                           	opt stack 0
   182  001A6A                     start_initialization:
   183                           	opt stack 0
   184  001A6A                     __initialization:
   185                           	opt stack 0
   186                           
   187                           ; Clear objects allocated to COMRAM (9 bytes)
   188  001A6A  EE00  F031         	lfsr	0,__pbssCOMRAM
   189  001A6E  0E09               	movlw	9
   190  001A70                     clear_0:
   191  001A70  6AEE               	clrf	postinc0,c
   192  001A72  06E8               	decf	wreg,f,c
   193  001A74  E1FD               	bnz	clear_0
   194                           
   195                           ; Initialize objects allocated to BANK0 (84 bytes)
   196                           ; load TBLPTR registers with __pidataBANK0
   197  001A76  0E16               	movlw	low __pidataBANK0
   198  001A78  6EF6               	movwf	tblptrl,c
   199  001A7A  0E1A               	movlw	high __pidataBANK0
   200  001A7C  6EF7               	movwf	tblptrh,c
   201  001A7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   202  001A80  6EF8               	movwf	tblptru,c
   203  001A82  EE00  F060         	lfsr	0,__pdataBANK0
   204  001A86  EE10 F054          	lfsr	1,84
   205  001A8A                     copy_data0:
   206  001A8A  0009               	tblrd		*+
   207  001A8C  CFF5 FFEE          	movff	tablat,postinc0
   208  001A90  50E5               	movf	postdec1,w,c
   209  001A92  50E1               	movf	fsr1l,w,c
   210  001A94  E1FA               	bnz	copy_data0
   211  001A96                     end_of_initialization:
   212                           	opt stack 0
   213  001A96                     __end_of__initialization:
   214                           	opt stack 0
   215  001A96  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216  001A98  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   217  001A9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218  001A9C  6EF8               	movwf	tblptru,c
   219  001A9E  0100               	movlb	0
   220  001AA0  EF63  F00C         	goto	_main	;jump to C main() function
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	bssCOMRAM
   231  000031                     __pbssCOMRAM:
   232                           	opt stack 0
   233  000031                     _hour:
   234                           	opt stack 0
   235  000031                     	ds	1
   236  000032                     _hourA:
   237                           	opt stack 0
   238  000032                     	ds	1
   239  000033                     _hourB:
   240                           	opt stack 0
   241  000033                     	ds	1
   242  000034                     _hourC:
   243                           	opt stack 0
   244  000034                     	ds	1
   245  000035                     _minute:
   246                           	opt stack 0
   247  000035                     	ds	1
   248  000036                     _minuteA:
   249                           	opt stack 0
   250  000036                     	ds	1
   251  000037                     _minuteB:
   252                           	opt stack 0
   253  000037                     	ds	1
   254  000038                     _minuteC:
   255                           	opt stack 0
   256  000038                     	ds	1
   257  000039                     _second:
   258                           	opt stack 0
   259  000039                     	ds	1
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	dataBANK0
   270  000060                     __pdataBANK0:
   271                           	opt stack 0
   272  000060                     SetupAlarmTimeA@F4496:
   273                           	opt stack 0
   274  000060                     	ds	21
   275  000075                     SetupAlarmTimeB@F4506:
   276                           	opt stack 0
   277  000075                     	ds	21
   278  00008A                     SetupAlarmTimeC@F4516:
   279                           	opt stack 0
   280  00008A                     	ds	21
   281  00009F                     SetupTime@F4486:
   282                           	opt stack 0
   283  00009F                     	ds	21
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	cstackBANK0
   294  0000B4                     __pcstackBANK0:
   295                           	opt stack 0
   296  0000B4                     SetupTime@Message:
   297                           	opt stack 0
   298  0000B4                     SetupAlarmTimeA@Message:
   299                           	opt stack 0
   300  0000B4                     SetupAlarmTimeB@Message:
   301                           	opt stack 0
   302  0000B4                     SetupAlarmTimeC@Message:
   303                           	opt stack 0
   304                           
   305                           ; 21 bytes @ 0x0
   306  0000B4                     	ds	21
   307  0000C9                     SetupTime@outchar:
   308                           	opt stack 0
   309  0000C9                     SetupAlarmTimeA@outchar:
   310                           	opt stack 0
   311  0000C9                     SetupAlarmTimeB@outchar:
   312                           	opt stack 0
   313  0000C9                     SetupAlarmTimeC@outchar:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x15
   317  0000C9                     	ds	1
   318  0000CA                     SetupTime@hour10:
   319                           	opt stack 0
   320  0000CA                     SetupAlarmTimeA@hour10:
   321                           	opt stack 0
   322  0000CA                     SetupAlarmTimeB@hour10:
   323                           	opt stack 0
   324  0000CA                     SetupAlarmTimeC@hour10:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x16
   328  0000CA                     	ds	1
   329  0000CB                     SetupTime@hour1:
   330                           	opt stack 0
   331  0000CB                     SetupAlarmTimeA@hour1:
   332                           	opt stack 0
   333  0000CB                     SetupAlarmTimeB@hour1:
   334                           	opt stack 0
   335  0000CB                     SetupAlarmTimeC@hour1:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x17
   339  0000CB                     	ds	1
   340  0000CC                     SetupTime@minute10:
   341                           	opt stack 0
   342  0000CC                     SetupAlarmTimeA@minute10:
   343                           	opt stack 0
   344  0000CC                     SetupAlarmTimeB@minute10:
   345                           	opt stack 0
   346  0000CC                     SetupAlarmTimeC@minute10:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x18
   350  0000CC                     	ds	1
   351  0000CD                     SetupTime@minute1:
   352                           	opt stack 0
   353  0000CD                     SetupAlarmTimeA@minute1:
   354                           	opt stack 0
   355  0000CD                     SetupAlarmTimeB@minute1:
   356                           	opt stack 0
   357  0000CD                     SetupAlarmTimeC@minute1:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x19
   361  0000CD                     	ds	1
   362  0000CE                     SetupTime@second10:
   363                           	opt stack 0
   364  0000CE                     SetupAlarmTimeA@msgindex:
   365                           	opt stack 0
   366  0000CE                     SetupAlarmTimeB@msgindex:
   367                           	opt stack 0
   368  0000CE                     SetupAlarmTimeC@msgindex:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x1A
   372  0000CE                     	ds	1
   373  0000CF                     SetupTime@second1:
   374                           	opt stack 0
   375  0000CF                     SetupAlarmTimeA@ctemp:
   376                           	opt stack 0
   377  0000CF                     SetupAlarmTimeB@ctemp:
   378                           	opt stack 0
   379  0000CF                     SetupAlarmTimeC@ctemp:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x1B
   383  0000CF                     	ds	1
   384  0000D0                     SetupTime@msgindex:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x1C
   388  0000D0                     	ds	1
   389  0000D1                     SetupTime@ctemp:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1D
   393  0000D1                     	ds	1
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403                           	psect	cstackCOMRAM
   404  000001                     __pcstackCOMRAM:
   405                           	opt stack 0
   406  000001                     ??i2_lcd_strobe:
   407  000001                     ?___awdiv:
   408                           	opt stack 0
   409  000001                     int_2_char@int1:
   410                           	opt stack 0
   411  000001                     ___awdiv@dividend:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x0
   415  000001                     	ds	1
   416  000002                     ??i2_lcd_write_cmd:
   417  000002                     ??i2_lcd_write_data:
   418  000002                     int_2_char@char1:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422  000002                     	ds	1
   423  000003                     i2lcd_write_cmd@cmd:
   424                           	opt stack 0
   425  000003                     i2lcd_write_data@data:
   426                           	opt stack 0
   427  000003                     ___awdiv@divisor:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431  000003                     	ds	1
   432  000004                     i2lcd_write_cmd@temp2:
   433                           	opt stack 0
   434  000004                     i2lcd_write_data@temp1:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x3
   438  000004                     	ds	1
   439  000005                     ___awdiv@counter:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x4
   443  000005                     	ds	1
   444  000006                     ___awdiv@sign:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x5
   448  000006                     	ds	1
   449  000007                     ___awdiv@quotient:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x6
   453  000007                     	ds	2
   454  000009                     ??_ISR_Timer0_Int:
   455                           
   456                           ; 0 bytes @ 0x8
   457  000009                     	ds	14
   458  000017                     ISR_Timer0_Int@hour1:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x16
   462  000017                     	ds	1
   463  000018                     ISR_Timer0_Int@minute1:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x17
   467  000018                     	ds	1
   468  000019                     ISR_Timer0_Int@second1:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x18
   472  000019                     	ds	1
   473  00001A                     ISR_Timer0_Int@hour10:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x19
   477  00001A                     	ds	1
   478  00001B                     ISR_Timer0_Int@minute10:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x1A
   482  00001B                     	ds	1
   483  00001C                     ISR_Timer0_Int@second10:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x1B
   487  00001C                     	ds	1
   488  00001D                     ??_lcd_strobe:
   489  00001D                     char_2_int@char1:
   490                           	opt stack 0
   491  00001D                     delay_ms@i:
   492                           	opt stack 0
   493  00001D                     getkey@lookup:
   494                           	opt stack 0
   495                           
   496                           ; 18 bytes @ 0x1C
   497  00001D                     	ds	1
   498  00001E                     ??_lcd_write_cmd:
   499  00001E                     ??_lcd_write_data:
   500  00001E                     char_2_int@int1:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1D
   504  00001E                     	ds	1
   505  00001F                     ??_delay_ms:
   506  00001F                     lcd_write_cmd@cmd:
   507                           	opt stack 0
   508  00001F                     lcd_write_data@data:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x1E
   512  00001F                     	ds	1
   513  000020                     lcd_write_cmd@temp2:
   514                           	opt stack 0
   515  000020                     lcd_write_data@temp1:
   516                           	opt stack 0
   517  000020                     delay_ms@j:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x1F
   521  000020                     	ds	1
   522  000021                     ??_lcd_init:
   523                           
   524                           ; 0 bytes @ 0x20
   525  000021                     	ds	1
   526  000022                     lcd_init@i:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x21
   530  000022                     	ds	13
   531  00002F                     getkey@keycode:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x2E
   535  00002F                     	ds	1
   536  000030                     main@displayUpdated:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x2F
   540  000030                     	ds	1
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 339 in file "Main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  displayUpdat    1   47[COMRAM] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;		None               void
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   569 ;;      Params:         0       0       0       0       0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels required when called:    6
   575 ;; This function calls:
   576 ;;		_SetupAlarmTimeA
   577 ;;		_SetupAlarmTimeB
   578 ;;		_SetupAlarmTimeC
   579 ;;		_SetupTime
   580 ;;		_SetupTimerInterruptRegisters
   581 ;;		_lcd_init
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text0
   588  0018C6                     __ptext0:
   589                           	opt stack 0
   590  0018C6                     _main:
   591                           	opt stack 25
   592                           
   593                           ;Main.c: 341: unsigned char displayUpdated;
   594                           ;Main.c: 342: displayUpdated = 1;
   595                           
   596                           ;incstack = 0
   597  0018C6  0E01               	movlw	1
   598  0018C8  6E30               	movwf	main@displayUpdated,c
   599                           
   600                           ;Main.c: 344: ADCON1 = 0x0F;
   601  0018CA  0E0F               	movlw	15
   602  0018CC  6EC1               	movwf	4033,c	;volatile
   603                           
   604                           ;Main.c: 345: CMCON = 0x07;
   605  0018CE  0E07               	movlw	7
   606  0018D0  6EB4               	movwf	4020,c	;volatile
   607                           
   608                           ;Main.c: 347: lcd_init();
   609  0018D2  ECF1  F00B         	call	_lcd_init	;wreg free
   610                           
   611                           ;Main.c: 349: SetupTime();
   612  0018D6  ECD5  F008         	call	_SetupTime	;wreg free
   613                           
   614                           ;Main.c: 350: SetupAlarmTimeA();
   615  0018DA  EC66  F00A         	call	_SetupAlarmTimeA	;wreg free
   616                           
   617                           ;Main.c: 351: SetupAlarmTimeB();
   618  0018DE  ECEC  F009         	call	_SetupAlarmTimeB	;wreg free
   619                           
   620                           ;Main.c: 352: SetupAlarmTimeC();
   621  0018E2  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   622                           
   623                           ;Main.c: 353: SetupTimerInterruptRegisters();
   624  0018E6  ECAB  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   625                           
   626                           ;Main.c: 354: TRISA = 0b00000000;
   627  0018EA  0E00               	movlw	0
   628  0018EC  6E92               	movwf	3986,c	;volatile
   629  0018EE                     l1854:
   630                           
   631                           ;Main.c: 357: {
   632                           ;Main.c: 358: if(hour==hourA && minute==minuteA)
   633  0018EE  5032               	movf	_hourA,w,c
   634  0018F0  1831               	xorwf	_hour,w,c
   635  0018F2  A4D8               	btfss	status,2,c
   636  0018F4  D006               	goto	l1860
   637  0018F6  5036               	movf	_minuteA,w,c
   638  0018F8  1835               	xorwf	_minute,w,c
   639  0018FA  A4D8               	btfss	status,2,c
   640  0018FC  D002               	goto	l1860
   641                           
   642                           ;Main.c: 359: {
   643                           ;Main.c: 360: PORTA = 0b00000011;
   644  0018FE  0E03               	movlw	3
   645  001900  D013               	goto	L2
   646  001902                     l1860:
   647                           
   648                           ;Main.c: 362: else if(hour==hourB && minute==minuteB)
   649  001902  5033               	movf	_hourB,w,c
   650  001904  1831               	xorwf	_hour,w,c
   651  001906  A4D8               	btfss	status,2,c
   652  001908  D006               	goto	l1866
   653  00190A  5037               	movf	_minuteB,w,c
   654  00190C  1835               	xorwf	_minute,w,c
   655  00190E  A4D8               	btfss	status,2,c
   656  001910  D002               	goto	l1866
   657                           
   658                           ;Main.c: 363: {
   659                           ;Main.c: 364: PORTA = 0b00000101;
   660  001912  0E05               	movlw	5
   661  001914  D009               	goto	L2
   662  001916                     l1866:
   663                           
   664                           ;Main.c: 366: else if(hour==hourC && minute==minuteC)
   665  001916  5034               	movf	_hourC,w,c
   666  001918  1831               	xorwf	_hour,w,c
   667  00191A  A4D8               	btfss	status,2,c
   668  00191C  D007               	goto	l169
   669  00191E  5038               	movf	_minuteC,w,c
   670  001920  1835               	xorwf	_minute,w,c
   671  001922  A4D8               	btfss	status,2,c
   672  001924  D003               	goto	l169
   673                           
   674                           ;Main.c: 367: {
   675                           ;Main.c: 368: PORTA = 0b00001001;
   676  001926  0E09               	movlw	9
   677  001928                     L2:
   678  001928  6E80               	movwf	3968,c	;volatile
   679                           
   680                           ;Main.c: 369: } else
   681  00192A  D7E1               	goto	l1854
   682  00192C                     l169:
   683                           
   684                           ;Main.c: 370: {
   685                           ;Main.c: 371: PORTAbits.RA0 = 1;
   686  00192C  8080               	bsf	3968,0,c	;volatile
   687                           
   688                           ;Main.c: 372: PORTAbits.RA1 = 1;
   689  00192E  8280               	bsf	3968,1,c	;volatile
   690                           
   691                           ;Main.c: 373: PORTAbits.RA2 = 1;
   692  001930  8480               	bsf	3968,2,c	;volatile
   693                           
   694                           ;Main.c: 374: PORTAbits.RA3 = 1;
   695  001932  8680               	bsf	3968,3,c	;volatile
   696  001934  D7DC               	goto	l1854
   697  001936                     __end_of_main:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _lcd_init *****************
   710 ;; Defined at:
   711 ;;		line 83 in file "lcd_utilities.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  i               2   33[COMRAM] int 
   716 ;; Return value:  Size  Location     Type
   717 ;;		None               void
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         0       0       0       0       0       0       0       0       0
   726 ;;      Locals:         2       0       0       0       0       0       0       0       0
   727 ;;      Temps:          1       0       0       0       0       0       0       0       0
   728 ;;      Totals:         3       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    5
   732 ;; This function calls:
   733 ;;		_lcd_write_cmd
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text1
   740  0017E2                     __ptext1:
   741                           	opt stack 0
   742  0017E2                     _lcd_init:
   743                           	opt stack 25
   744                           
   745                           ;lcd_utilities.c: 85: int i;
   746                           ;lcd_utilities.c: 86: TRISD = 0x00;
   747                           
   748                           ;incstack = 0
   749  0017E2  0E00               	movlw	0
   750  0017E4  6E95               	movwf	3989,c	;volatile
   751                           
   752                           ;lcd_utilities.c: 87: PORTD = 0x00;
   753  0017E6  0E00               	movlw	0
   754  0017E8  6E83               	movwf	3971,c	;volatile
   755                           
   756                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   757  0017EA  9883               	bcf	3971,4,c	;volatile
   758                           
   759                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   760  0017EC  9C83               	bcf	3971,6,c	;volatile
   761                           
   762                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   763  0017EE  9A83               	bcf	3971,5,c	;volatile
   764                           
   765                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   766  0017F0  0E00               	movlw	0
   767  0017F2  6E23               	movwf	lcd_init@i+1,c
   768  0017F4  0E00               	movlw	0
   769  0017F6  6E22               	movwf	lcd_init@i,c
   770  0017F8                     l1484:
   771  0017F8  BE23               	btfsc	lcd_init@i+1,7,c
   772  0017FA  D006               	goto	l1488
   773  0017FC  5023               	movf	lcd_init@i+1,w,c
   774  0017FE  E10F               	bnz	l1492
   775  001800  0E64               	movlw	100
   776  001802  5C22               	subwf	lcd_init@i,w,c
   777  001804  B0D8               	btfsc	status,0,c
   778  001806  D00B               	goto	l1492
   779  001808                     l1488:
   780                           
   781                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   782  001808  0E9C               	movlw	156
   783  00180A  6E21               	movwf	??_lcd_init& (0+255),c
   784  00180C  0ED7               	movlw	215
   785  00180E                     u757:
   786  00180E  2EE8               	decfsz	wreg,f,c
   787  001810  D7FE               	goto	u757
   788  001812  2E21               	decfsz	??_lcd_init& (0+255),f,c
   789  001814  D7FC               	goto	u757
   790  001816  F000               	nop	
   791  001818  4A22               	infsnz	lcd_init@i,f,c
   792  00181A  2A23               	incf	lcd_init@i+1,f,c
   793  00181C  D7ED               	goto	l1484
   794  00181E                     l1492:
   795                           
   796                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   797  00181E  0E33               	movlw	51
   798  001820  EC9B  F00C         	call	_lcd_write_cmd
   799                           
   800                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   801  001824  0E32               	movlw	50
   802  001826  EC9B  F00C         	call	_lcd_write_cmd
   803                           
   804                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   805  00182A  0E28               	movlw	40
   806  00182C  EC9B  F00C         	call	_lcd_write_cmd
   807                           
   808                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   809  001830  0E0E               	movlw	14
   810  001832  EC9B  F00C         	call	_lcd_write_cmd
   811                           
   812                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   813  001836  0E06               	movlw	6
   814  001838  EC9B  F00C         	call	_lcd_write_cmd
   815                           
   816                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   817  00183C  0E01               	movlw	1
   818  00183E  EC9B  F00C         	call	_lcd_write_cmd
   819                           
   820                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   821  001842  0E9C               	movlw	156
   822  001844  6E21               	movwf	??_lcd_init& (0+255),c
   823  001846  0ED7               	movlw	215
   824  001848                     u767:
   825  001848  2EE8               	decfsz	wreg,f,c
   826  00184A  D7FE               	goto	u767
   827  00184C  2E21               	decfsz	??_lcd_init& (0+255),f,c
   828  00184E  D7FC               	goto	u767
   829  001850  F000               	nop	
   830  001852  0012               	return		;funcret
   831  001854                     __end_of_lcd_init:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1l	equ	0xFE1
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _SetupTimerInterruptRegisters *****************
   844 ;; Defined at:
   845 ;;		line 271 in file "Main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    3
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text2
   874  001B56                     __ptext2:
   875                           	opt stack 0
   876  001B56                     _SetupTimerInterruptRegisters:
   877                           	opt stack 27
   878                           
   879                           ;Main.c: 273: RCONbits.IPEN =1;
   880                           
   881                           ;incstack = 0
   882  001B56  8ED0               	bsf	4048,7,c	;volatile
   883                           
   884                           ;Main.c: 277: INTCONbits.GIEH =1;
   885  001B58  8EF2               	bsf	intcon,7,c	;volatile
   886                           
   887                           ;Main.c: 282: T0CON = 0b00000111;
   888  001B5A  0E07               	movlw	7
   889  001B5C  6ED5               	movwf	4053,c	;volatile
   890                           
   891                           ;Main.c: 290: INTCON2 = 0b10000100;
   892  001B5E  0E84               	movlw	132
   893  001B60  6EF1               	movwf	intcon2,c	;volatile
   894                           
   895                           ;Main.c: 295: TMR0H = 0x48;
   896  001B62  0E48               	movlw	72
   897  001B64  6ED7               	movwf	4055,c	;volatile
   898                           
   899                           ;Main.c: 296: TMR0L = 0xE5;
   900  001B66  0EE5               	movlw	229
   901  001B68  6ED6               	movwf	4054,c	;volatile
   902                           
   903                           ;Main.c: 298: T0CONbits.TMR0ON = 1;
   904  001B6A  8ED5               	bsf	4053,7,c	;volatile
   905                           
   906                           ;Main.c: 299: INTCONbits.TMR0IE = 1;
   907  001B6C  8AF2               	bsf	intcon,5,c	;volatile
   908                           
   909                           ;Main.c: 302: INTCONbits.TMR0IF = 0;
   910  001B6E  94F2               	bcf	intcon,2,c	;volatile
   911  001B70  0012               	return		;funcret
   912  001B72                     __end_of_SetupTimerInterruptRegisters:
   913                           	opt stack 0
   914                           tblptru	equ	0xFF8
   915                           tblptrh	equ	0xFF7
   916                           tblptrl	equ	0xFF6
   917                           tablat	equ	0xFF5
   918                           intcon	equ	0xFF2
   919                           intcon2	equ	0xFF1
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           postdec1	equ	0xFE5
   923                           fsr1l	equ	0xFE1
   924                           status	equ	0xFD8
   925                           
   926 ;; *************** function _SetupTime *****************
   927 ;; Defined at:
   928 ;;		line 109 in file "Main.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  Message        21    0[BANK0 ] unsigned char [21]
   933 ;;  ctemp           1   29[BANK0 ] unsigned char 
   934 ;;  msgindex        1   28[BANK0 ] unsigned char 
   935 ;;  second1         1   27[BANK0 ] unsigned char 
   936 ;;  second10        1   26[BANK0 ] unsigned char 
   937 ;;  minute1         1   25[BANK0 ] unsigned char 
   938 ;;  minute10        1   24[BANK0 ] unsigned char 
   939 ;;  hour1           1   23[BANK0 ] unsigned char 
   940 ;;  hour10          1   22[BANK0 ] unsigned char 
   941 ;;  outchar         1   21[BANK0 ] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         0       0       0       0       0       0       0       0       0
   952 ;;      Locals:         0      30       0       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0
   954 ;;      Totals:         0      30       0       0       0       0       0       0       0
   955 ;;Total ram usage:       30 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    5
   958 ;; This function calls:
   959 ;;		_char_2_int
   960 ;;		_delay_ms
   961 ;;		_getkey
   962 ;;		_lcd_write_cmd
   963 ;;		_lcd_write_data
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text3
   970  0011AA                     __ptext3:
   971                           	opt stack 0
   972  0011AA                     _SetupTime:
   973                           	opt stack 25
   974                           
   975                           ;Main.c: 111: unsigned char msgindex, outchar, ctemp;
   976                           ;Main.c: 112: unsigned char hour10, hour1, minute10, minute1, second10, second1;
   977                           ;Main.c: 113: char Message[ ] = "Set time hhmmss:    ";
   978                           
   979                           ;incstack = 0
   980  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4486
   981  0011AE  EE10  F0B4         	lfsr	1,SetupTime@Message
   982  0011B2  0E14               	movlw	20
   983  0011B4                     u471:
   984  0011B4  CFDB FFE3          	movff	plusw2,plusw1
   985  0011B8  06E8               	decf	wreg,f,c
   986  0011BA  E2FC               	bc	u471
   987                           
   988                           ;Main.c: 115: lcd_write_cmd(0x80);
   989  0011BC  0E80               	movlw	128
   990  0011BE  EC9B  F00C         	call	_lcd_write_cmd
   991                           
   992                           ;Main.c: 117: for (msgindex = 0; msgindex < 20; msgindex++)
   993  0011C2  0E00               	movlw	0
   994  0011C4  0100               	movlb	0	; () banked
   995  0011C6  6FD0               	movwf	SetupTime@msgindex& (0+255),b
   996  0011C8                     l1502:
   997                           
   998                           ; BSR set to: 0
   999  0011C8  0E13               	movlw	19
  1000  0011CA  0100               	movlb	0	; () banked
  1001  0011CC  65D0               	cpfsgt	SetupTime@msgindex& (0+255),b
  1002  0011CE  D001               	goto	l1506
  1003  0011D0  D013               	goto	l1514
  1004  0011D2                     l1506:
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;Main.c: 118: {
  1008                           ;Main.c: 119: outchar = Message[msgindex];
  1009  0011D2  0100               	movlb	0	; () banked
  1010  0011D4  51D0               	movf	SetupTime@msgindex& (0+255),w,b
  1011  0011D6  0D01               	mullw	1
  1012  0011D8  0EB4               	movlw	low SetupTime@Message
  1013  0011DA  24F3               	addwf	prodl,w,c
  1014  0011DC  6ED9               	movwf	fsr2l,c
  1015  0011DE  0E00               	movlw	high SetupTime@Message
  1016  0011E0  20F4               	addwfc	prodh,w,c
  1017  0011E2  6EDA               	movwf	fsr2h,c
  1018  0011E4  50DF               	movf	indf2,w,c
  1019  0011E6  0100               	movlb	0	; () banked
  1020  0011E8  6FC9               	movwf	SetupTime@outchar& (0+255),b
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;Main.c: 120: lcd_write_data(outchar);
  1024  0011EA  0100               	movlb	0	; () banked
  1025  0011EC  51C9               	movf	SetupTime@outchar& (0+255),w,b
  1026  0011EE  ECE0  F00A         	call	_lcd_write_data
  1027  0011F2  0100               	movlb	0	; () banked
  1028  0011F4  2BD0               	incf	SetupTime@msgindex& (0+255),f,b
  1029  0011F6  D7E8               	goto	l1502
  1030  0011F8                     l1514:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;Main.c: 121: }
  1034                           ;Main.c: 123: lcd_write_cmd(0xC0);
  1035  0011F8  0EC0               	movlw	192
  1036  0011FA  EC9B  F00C         	call	_lcd_write_cmd
  1037                           
  1038                           ;Main.c: 125: ctemp=getkey();
  1039  0011FE  EC52  F00D         	call	_getkey	;wreg free
  1040  001202  0100               	movlb	0	; () banked
  1041  001204  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;Main.c: 126: lcd_write_data(ctemp);
  1045  001206  0100               	movlb	0	; () banked
  1046  001208  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1047  00120A  ECE0  F00A         	call	_lcd_write_data
  1048                           
  1049                           ;Main.c: 127: hour10 = char_2_int (ctemp);
  1050  00120E  0100               	movlb	0	; () banked
  1051  001210  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1052  001212  EC2A  F00C         	call	_char_2_int
  1053  001216  0100               	movlb	0	; () banked
  1054  001218  6FCA               	movwf	SetupTime@hour10& (0+255),b
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;Main.c: 129: ctemp=getkey();
  1058  00121A  EC52  F00D         	call	_getkey	;wreg free
  1059  00121E  0100               	movlb	0	; () banked
  1060  001220  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1061                           
  1062                           ;Main.c: 130: lcd_write_data(ctemp);
  1063  001222  0100               	movlb	0	; () banked
  1064  001224  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1065  001226  ECE0  F00A         	call	_lcd_write_data
  1066                           
  1067                           ;Main.c: 131: hour1 = char_2_int (ctemp);
  1068  00122A  0100               	movlb	0	; () banked
  1069  00122C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1070  00122E  EC2A  F00C         	call	_char_2_int
  1071  001232  0100               	movlb	0	; () banked
  1072  001234  6FCB               	movwf	SetupTime@hour1& (0+255),b
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;Main.c: 133: ctemp=getkey();
  1076  001236  EC52  F00D         	call	_getkey	;wreg free
  1077  00123A  0100               	movlb	0	; () banked
  1078  00123C  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;Main.c: 134: lcd_write_data(ctemp);
  1082  00123E  0100               	movlb	0	; () banked
  1083  001240  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1084  001242  ECE0  F00A         	call	_lcd_write_data
  1085                           
  1086                           ;Main.c: 135: minute10 = char_2_int (ctemp);
  1087  001246  0100               	movlb	0	; () banked
  1088  001248  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1089  00124A  EC2A  F00C         	call	_char_2_int
  1090  00124E  0100               	movlb	0	; () banked
  1091  001250  6FCC               	movwf	SetupTime@minute10& (0+255),b
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;Main.c: 137: ctemp=getkey();
  1095  001252  EC52  F00D         	call	_getkey	;wreg free
  1096  001256  0100               	movlb	0	; () banked
  1097  001258  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1098                           
  1099                           ;Main.c: 138: lcd_write_data(ctemp);
  1100  00125A  0100               	movlb	0	; () banked
  1101  00125C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1102  00125E  ECE0  F00A         	call	_lcd_write_data
  1103                           
  1104                           ;Main.c: 139: minute1 = char_2_int (ctemp);
  1105  001262  0100               	movlb	0	; () banked
  1106  001264  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1107  001266  EC2A  F00C         	call	_char_2_int
  1108  00126A  0100               	movlb	0	; () banked
  1109  00126C  6FCD               	movwf	SetupTime@minute1& (0+255),b
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;Main.c: 141: ctemp=getkey();
  1113  00126E  EC52  F00D         	call	_getkey	;wreg free
  1114  001272  0100               	movlb	0	; () banked
  1115  001274  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;Main.c: 142: lcd_write_data(ctemp);
  1119  001276  0100               	movlb	0	; () banked
  1120  001278  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1121  00127A  ECE0  F00A         	call	_lcd_write_data
  1122                           
  1123                           ;Main.c: 143: second10 = char_2_int (ctemp);
  1124  00127E  0100               	movlb	0	; () banked
  1125  001280  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1126  001282  EC2A  F00C         	call	_char_2_int
  1127  001286  0100               	movlb	0	; () banked
  1128  001288  6FCE               	movwf	SetupTime@second10& (0+255),b
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;Main.c: 145: ctemp=getkey();
  1132  00128A  EC52  F00D         	call	_getkey	;wreg free
  1133  00128E  0100               	movlb	0	; () banked
  1134  001290  6FD1               	movwf	SetupTime@ctemp& (0+255),b
  1135                           
  1136                           ;Main.c: 146: lcd_write_data(ctemp);
  1137  001292  0100               	movlb	0	; () banked
  1138  001294  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1139  001296  ECE0  F00A         	call	_lcd_write_data
  1140                           
  1141                           ;Main.c: 147: second1 = char_2_int (ctemp);
  1142  00129A  0100               	movlb	0	; () banked
  1143  00129C  51D1               	movf	SetupTime@ctemp& (0+255),w,b
  1144  00129E  EC2A  F00C         	call	_char_2_int
  1145  0012A2  0100               	movlb	0	; () banked
  1146  0012A4  6FCF               	movwf	SetupTime@second1& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;Main.c: 149: hour = hour10 * 10 + hour1;
  1150  0012A6  0100               	movlb	0	; () banked
  1151  0012A8  51CA               	movf	SetupTime@hour10& (0+255),w,b
  1152  0012AA  0D0A               	mullw	10
  1153  0012AC  50F3               	movf	prodl,w,c
  1154  0012AE  0100               	movlb	0	; () banked
  1155  0012B0  25CB               	addwf	SetupTime@hour1& (0+255),w,b
  1156  0012B2  6E31               	movwf	_hour,c
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;Main.c: 150: minute = minute10 * 10 + minute1;
  1160  0012B4  0100               	movlb	0	; () banked
  1161  0012B6  51CC               	movf	SetupTime@minute10& (0+255),w,b
  1162  0012B8  0D0A               	mullw	10
  1163  0012BA  50F3               	movf	prodl,w,c
  1164  0012BC  0100               	movlb	0	; () banked
  1165  0012BE  25CD               	addwf	SetupTime@minute1& (0+255),w,b
  1166  0012C0  6E35               	movwf	_minute,c
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;Main.c: 151: second = second10 * 10 + second1;
  1170  0012C2  0100               	movlb	0	; () banked
  1171  0012C4  51CE               	movf	SetupTime@second10& (0+255),w,b
  1172  0012C6  0D0A               	mullw	10
  1173  0012C8  50F3               	movf	prodl,w,c
  1174  0012CA  0100               	movlb	0	; () banked
  1175  0012CC  25CF               	addwf	SetupTime@second1& (0+255),w,b
  1176  0012CE  6E39               	movwf	_second,c
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;Main.c: 153: delay_ms(500);
  1180  0012D0  0E01               	movlw	1
  1181  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1182  0012D4  0EF4               	movlw	244
  1183  0012D6  6E1D               	movwf	delay_ms@i,c
  1184  0012D8  EC6F  F00D         	call	_delay_ms	;wreg free
  1185                           
  1186                           ;Main.c: 154: lcd_write_cmd(0x01);
  1187  0012DC  0E01               	movlw	1
  1188  0012DE  EC9B  F00C         	call	_lcd_write_cmd
  1189  0012E2  0012               	return		;funcret
  1190  0012E4                     __end_of_SetupTime:
  1191                           	opt stack 0
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           intcon	equ	0xFF2
  1199                           intcon2	equ	0xFF1
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           plusw1	equ	0xFE3
  1204                           fsr1l	equ	0xFE1
  1205                           indf2	equ	0xFDF
  1206                           plusw2	equ	0xFDB
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _SetupAlarmTimeC *****************
  1212 ;; Defined at:
  1213 ;;		line 233 in file "Main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1218 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1219 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1220 ;;  minute1         1   25[BANK0 ] unsigned char 
  1221 ;;  minute10        1   24[BANK0 ] unsigned char 
  1222 ;;  hour1           1   23[BANK0 ] unsigned char 
  1223 ;;  hour10          1   22[BANK0 ] unsigned char 
  1224 ;;  outchar         1   21[BANK0 ] unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0
  1235 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1237 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1238 ;;Total ram usage:       28 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    5
  1241 ;; This function calls:
  1242 ;;		_char_2_int
  1243 ;;		_delay_ms
  1244 ;;		_getkey
  1245 ;;		_lcd_write_cmd
  1246 ;;		_lcd_write_data
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text4
  1253  0012E4                     __ptext4:
  1254                           	opt stack 0
  1255  0012E4                     _SetupAlarmTimeC:
  1256                           	opt stack 25
  1257                           
  1258                           ;Main.c: 235: unsigned char msgindex, outchar, ctemp;
  1259                           ;Main.c: 236: unsigned char hour10, hour1, minute10, minute1;
  1260                           ;Main.c: 237: char Message[ ] = "Subject C Time hhmm:";
  1261                           
  1262                           ;incstack = 0
  1263  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4516
  1264  0012E8  EE10  F0B4         	lfsr	1,SetupAlarmTimeC@Message
  1265  0012EC  0E14               	movlw	20
  1266  0012EE                     u561:
  1267  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1268  0012F2  06E8               	decf	wreg,f,c
  1269  0012F4  E2FC               	bc	u561
  1270                           
  1271                           ;Main.c: 239: lcd_write_cmd(0x80);
  1272  0012F6  0E80               	movlw	128
  1273  0012F8  EC9B  F00C         	call	_lcd_write_cmd
  1274                           
  1275                           ;Main.c: 241: for (msgindex = 0; msgindex < 20; msgindex++)
  1276  0012FC  0E00               	movlw	0
  1277  0012FE  0100               	movlb	0	; () banked
  1278  001300  6FCE               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1279  001302                     l1636:
  1280                           
  1281                           ; BSR set to: 0
  1282  001302  0E13               	movlw	19
  1283  001304  0100               	movlb	0	; () banked
  1284  001306  65CE               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1285  001308  D001               	goto	l1640
  1286  00130A  D013               	goto	l1648
  1287  00130C                     l1640:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;Main.c: 242: {
  1291                           ;Main.c: 243: outchar = Message[msgindex];
  1292  00130C  0100               	movlb	0	; () banked
  1293  00130E  51CE               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1294  001310  0D01               	mullw	1
  1295  001312  0EB4               	movlw	low SetupAlarmTimeC@Message
  1296  001314  24F3               	addwf	prodl,w,c
  1297  001316  6ED9               	movwf	fsr2l,c
  1298  001318  0E00               	movlw	high SetupAlarmTimeC@Message
  1299  00131A  20F4               	addwfc	prodh,w,c
  1300  00131C  6EDA               	movwf	fsr2h,c
  1301  00131E  50DF               	movf	indf2,w,c
  1302  001320  0100               	movlb	0	; () banked
  1303  001322  6FC9               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;Main.c: 244: lcd_write_data(outchar);
  1307  001324  0100               	movlb	0	; () banked
  1308  001326  51C9               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1309  001328  ECE0  F00A         	call	_lcd_write_data
  1310  00132C  0100               	movlb	0	; () banked
  1311  00132E  2BCE               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1312  001330  D7E8               	goto	l1636
  1313  001332                     l1648:
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;Main.c: 245: }
  1317                           ;Main.c: 247: lcd_write_cmd(0xC0);
  1318  001332  0EC0               	movlw	192
  1319  001334  EC9B  F00C         	call	_lcd_write_cmd
  1320                           
  1321                           ;Main.c: 249: ctemp=getkey();
  1322  001338  EC52  F00D         	call	_getkey	;wreg free
  1323  00133C  0100               	movlb	0	; () banked
  1324  00133E  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;Main.c: 250: lcd_write_data(ctemp);
  1328  001340  0100               	movlb	0	; () banked
  1329  001342  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1330  001344  ECE0  F00A         	call	_lcd_write_data
  1331                           
  1332                           ;Main.c: 251: hour10 = char_2_int (ctemp);
  1333  001348  0100               	movlb	0	; () banked
  1334  00134A  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1335  00134C  EC2A  F00C         	call	_char_2_int
  1336  001350  0100               	movlb	0	; () banked
  1337  001352  6FCA               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;Main.c: 253: ctemp=getkey();
  1341  001354  EC52  F00D         	call	_getkey	;wreg free
  1342  001358  0100               	movlb	0	; () banked
  1343  00135A  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1344                           
  1345                           ;Main.c: 254: lcd_write_data(ctemp);
  1346  00135C  0100               	movlb	0	; () banked
  1347  00135E  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1348  001360  ECE0  F00A         	call	_lcd_write_data
  1349                           
  1350                           ;Main.c: 255: hour1 = char_2_int (ctemp);
  1351  001364  0100               	movlb	0	; () banked
  1352  001366  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1353  001368  EC2A  F00C         	call	_char_2_int
  1354  00136C  0100               	movlb	0	; () banked
  1355  00136E  6FCB               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;Main.c: 257: ctemp=getkey();
  1359  001370  EC52  F00D         	call	_getkey	;wreg free
  1360  001374  0100               	movlb	0	; () banked
  1361  001376  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;Main.c: 258: lcd_write_data(ctemp);
  1365  001378  0100               	movlb	0	; () banked
  1366  00137A  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1367  00137C  ECE0  F00A         	call	_lcd_write_data
  1368                           
  1369                           ;Main.c: 259: minute10 = char_2_int (ctemp);
  1370  001380  0100               	movlb	0	; () banked
  1371  001382  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1372  001384  EC2A  F00C         	call	_char_2_int
  1373  001388  0100               	movlb	0	; () banked
  1374  00138A  6FCC               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;Main.c: 261: ctemp=getkey();
  1378  00138C  EC52  F00D         	call	_getkey	;wreg free
  1379  001390  0100               	movlb	0	; () banked
  1380  001392  6FCF               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1381                           
  1382                           ;Main.c: 262: lcd_write_data(ctemp);
  1383  001394  0100               	movlb	0	; () banked
  1384  001396  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1385  001398  ECE0  F00A         	call	_lcd_write_data
  1386                           
  1387                           ;Main.c: 263: minute1 = char_2_int (ctemp);
  1388  00139C  0100               	movlb	0	; () banked
  1389  00139E  51CF               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1390  0013A0  EC2A  F00C         	call	_char_2_int
  1391  0013A4  0100               	movlb	0	; () banked
  1392  0013A6  6FCD               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;Main.c: 265: hourC = hour10 * 10 + hour1;
  1396  0013A8  0100               	movlb	0	; () banked
  1397  0013AA  51CA               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1398  0013AC  0D0A               	mullw	10
  1399  0013AE  50F3               	movf	prodl,w,c
  1400  0013B0  0100               	movlb	0	; () banked
  1401  0013B2  25CB               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1402  0013B4  6E34               	movwf	_hourC,c
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;Main.c: 266: minuteC = minute10 * 10 + minute1;
  1406  0013B6  0100               	movlb	0	; () banked
  1407  0013B8  51CC               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1408  0013BA  0D0A               	mullw	10
  1409  0013BC  50F3               	movf	prodl,w,c
  1410  0013BE  0100               	movlb	0	; () banked
  1411  0013C0  25CD               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1412  0013C2  6E38               	movwf	_minuteC,c
  1413                           
  1414                           ;Main.c: 268: delay_ms(500);
  1415  0013C4  0E01               	movlw	1
  1416  0013C6  6E1E               	movwf	delay_ms@i+1,c
  1417  0013C8  0EF4               	movlw	244
  1418  0013CA  6E1D               	movwf	delay_ms@i,c
  1419  0013CC  EC6F  F00D         	call	_delay_ms	;wreg free
  1420                           
  1421                           ;Main.c: 269: lcd_write_cmd(0x01);
  1422  0013D0  0E01               	movlw	1
  1423  0013D2  EC9B  F00C         	call	_lcd_write_cmd
  1424  0013D6  0012               	return		;funcret
  1425  0013D8                     __end_of_SetupAlarmTimeC:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           prodh	equ	0xFF4
  1432                           prodl	equ	0xFF3
  1433                           intcon	equ	0xFF2
  1434                           intcon2	equ	0xFF1
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           postdec1	equ	0xFE5
  1438                           plusw1	equ	0xFE3
  1439                           fsr1l	equ	0xFE1
  1440                           indf2	equ	0xFDF
  1441                           plusw2	equ	0xFDB
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _SetupAlarmTimeB *****************
  1447 ;; Defined at:
  1448 ;;		line 195 in file "Main.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1453 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1454 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1455 ;;  minute1         1   25[BANK0 ] unsigned char 
  1456 ;;  minute10        1   24[BANK0 ] unsigned char 
  1457 ;;  hour1           1   23[BANK0 ] unsigned char 
  1458 ;;  hour10          1   22[BANK0 ] unsigned char 
  1459 ;;  outchar         1   21[BANK0 ] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;		None               void
  1462 ;; Registers used:
  1463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0
  1470 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1472 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1473 ;;Total ram usage:       28 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    5
  1476 ;; This function calls:
  1477 ;;		_char_2_int
  1478 ;;		_delay_ms
  1479 ;;		_getkey
  1480 ;;		_lcd_write_cmd
  1481 ;;		_lcd_write_data
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text5
  1488  0013D8                     __ptext5:
  1489                           	opt stack 0
  1490  0013D8                     _SetupAlarmTimeB:
  1491                           	opt stack 25
  1492                           
  1493                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1494                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1495                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1496                           
  1497                           ;incstack = 0
  1498  0013D8  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4506
  1499  0013DC  EE10  F0B4         	lfsr	1,SetupAlarmTimeB@Message
  1500  0013E0  0E14               	movlw	20
  1501  0013E2                     u531:
  1502  0013E2  CFDB FFE3          	movff	plusw2,plusw1
  1503  0013E6  06E8               	decf	wreg,f,c
  1504  0013E8  E2FC               	bc	u531
  1505                           
  1506                           ;Main.c: 201: lcd_write_cmd(0x80);
  1507  0013EA  0E80               	movlw	128
  1508  0013EC  EC9B  F00C         	call	_lcd_write_cmd
  1509                           
  1510                           ;Main.c: 203: for (msgindex = 0; msgindex < 20; msgindex++)
  1511  0013F0  0E00               	movlw	0
  1512  0013F2  0100               	movlb	0	; () banked
  1513  0013F4  6FCE               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1514  0013F6                     l1596:
  1515                           
  1516                           ; BSR set to: 0
  1517  0013F6  0E13               	movlw	19
  1518  0013F8  0100               	movlb	0	; () banked
  1519  0013FA  65CE               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1520  0013FC  D001               	goto	l1600
  1521  0013FE  D013               	goto	l1608
  1522  001400                     l1600:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;Main.c: 204: {
  1526                           ;Main.c: 205: outchar = Message[msgindex];
  1527  001400  0100               	movlb	0	; () banked
  1528  001402  51CE               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1529  001404  0D01               	mullw	1
  1530  001406  0EB4               	movlw	low SetupAlarmTimeB@Message
  1531  001408  24F3               	addwf	prodl,w,c
  1532  00140A  6ED9               	movwf	fsr2l,c
  1533  00140C  0E00               	movlw	high SetupAlarmTimeB@Message
  1534  00140E  20F4               	addwfc	prodh,w,c
  1535  001410  6EDA               	movwf	fsr2h,c
  1536  001412  50DF               	movf	indf2,w,c
  1537  001414  0100               	movlb	0	; () banked
  1538  001416  6FC9               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;Main.c: 206: lcd_write_data(outchar);
  1542  001418  0100               	movlb	0	; () banked
  1543  00141A  51C9               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1544  00141C  ECE0  F00A         	call	_lcd_write_data
  1545  001420  0100               	movlb	0	; () banked
  1546  001422  2BCE               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1547  001424  D7E8               	goto	l1596
  1548  001426                     l1608:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;Main.c: 207: }
  1552                           ;Main.c: 209: lcd_write_cmd(0xC0);
  1553  001426  0EC0               	movlw	192
  1554  001428  EC9B  F00C         	call	_lcd_write_cmd
  1555                           
  1556                           ;Main.c: 211: ctemp=getkey();
  1557  00142C  EC52  F00D         	call	_getkey	;wreg free
  1558  001430  0100               	movlb	0	; () banked
  1559  001432  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;Main.c: 212: lcd_write_data(ctemp);
  1563  001434  0100               	movlb	0	; () banked
  1564  001436  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1565  001438  ECE0  F00A         	call	_lcd_write_data
  1566                           
  1567                           ;Main.c: 213: hour10 = char_2_int (ctemp);
  1568  00143C  0100               	movlb	0	; () banked
  1569  00143E  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1570  001440  EC2A  F00C         	call	_char_2_int
  1571  001444  0100               	movlb	0	; () banked
  1572  001446  6FCA               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;Main.c: 215: ctemp=getkey();
  1576  001448  EC52  F00D         	call	_getkey	;wreg free
  1577  00144C  0100               	movlb	0	; () banked
  1578  00144E  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1579                           
  1580                           ;Main.c: 216: lcd_write_data(ctemp);
  1581  001450  0100               	movlb	0	; () banked
  1582  001452  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1583  001454  ECE0  F00A         	call	_lcd_write_data
  1584                           
  1585                           ;Main.c: 217: hour1 = char_2_int (ctemp);
  1586  001458  0100               	movlb	0	; () banked
  1587  00145A  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1588  00145C  EC2A  F00C         	call	_char_2_int
  1589  001460  0100               	movlb	0	; () banked
  1590  001462  6FCB               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;Main.c: 219: ctemp=getkey();
  1594  001464  EC52  F00D         	call	_getkey	;wreg free
  1595  001468  0100               	movlb	0	; () banked
  1596  00146A  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;Main.c: 220: lcd_write_data(ctemp);
  1600  00146C  0100               	movlb	0	; () banked
  1601  00146E  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1602  001470  ECE0  F00A         	call	_lcd_write_data
  1603                           
  1604                           ;Main.c: 221: minute10 = char_2_int (ctemp);
  1605  001474  0100               	movlb	0	; () banked
  1606  001476  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1607  001478  EC2A  F00C         	call	_char_2_int
  1608  00147C  0100               	movlb	0	; () banked
  1609  00147E  6FCC               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;Main.c: 223: ctemp=getkey();
  1613  001480  EC52  F00D         	call	_getkey	;wreg free
  1614  001484  0100               	movlb	0	; () banked
  1615  001486  6FCF               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1616                           
  1617                           ;Main.c: 224: lcd_write_data(ctemp);
  1618  001488  0100               	movlb	0	; () banked
  1619  00148A  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1620  00148C  ECE0  F00A         	call	_lcd_write_data
  1621                           
  1622                           ;Main.c: 225: minute1 = char_2_int (ctemp);
  1623  001490  0100               	movlb	0	; () banked
  1624  001492  51CF               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1625  001494  EC2A  F00C         	call	_char_2_int
  1626  001498  0100               	movlb	0	; () banked
  1627  00149A  6FCD               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;Main.c: 227: hourB = hour10 * 10 + hour1;
  1631  00149C  0100               	movlb	0	; () banked
  1632  00149E  51CA               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1633  0014A0  0D0A               	mullw	10
  1634  0014A2  50F3               	movf	prodl,w,c
  1635  0014A4  0100               	movlb	0	; () banked
  1636  0014A6  25CB               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1637  0014A8  6E33               	movwf	_hourB,c
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;Main.c: 228: minuteB = minute10 * 10 + minute1;
  1641  0014AA  0100               	movlb	0	; () banked
  1642  0014AC  51CC               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1643  0014AE  0D0A               	mullw	10
  1644  0014B0  50F3               	movf	prodl,w,c
  1645  0014B2  0100               	movlb	0	; () banked
  1646  0014B4  25CD               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1647  0014B6  6E37               	movwf	_minuteB,c
  1648                           
  1649                           ;Main.c: 230: delay_ms(500);
  1650  0014B8  0E01               	movlw	1
  1651  0014BA  6E1E               	movwf	delay_ms@i+1,c
  1652  0014BC  0EF4               	movlw	244
  1653  0014BE  6E1D               	movwf	delay_ms@i,c
  1654  0014C0  EC6F  F00D         	call	_delay_ms	;wreg free
  1655                           
  1656                           ;Main.c: 231: lcd_write_cmd(0x01);
  1657  0014C4  0E01               	movlw	1
  1658  0014C6  EC9B  F00C         	call	_lcd_write_cmd
  1659  0014CA  0012               	return		;funcret
  1660  0014CC                     __end_of_SetupAlarmTimeB:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           intcon2	equ	0xFF1
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           plusw1	equ	0xFE3
  1674                           fsr1l	equ	0xFE1
  1675                           indf2	equ	0xFDF
  1676                           plusw2	equ	0xFDB
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _SetupAlarmTimeA *****************
  1682 ;; Defined at:
  1683 ;;		line 157 in file "Main.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1688 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1689 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1690 ;;  minute1         1   25[BANK0 ] unsigned char 
  1691 ;;  minute10        1   24[BANK0 ] unsigned char 
  1692 ;;  hour1           1   23[BANK0 ] unsigned char 
  1693 ;;  hour10          1   22[BANK0 ] unsigned char 
  1694 ;;  outchar         1   21[BANK0 ] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         0       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1708 ;;Total ram usage:       28 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    5
  1711 ;; This function calls:
  1712 ;;		_char_2_int
  1713 ;;		_delay_ms
  1714 ;;		_getkey
  1715 ;;		_lcd_write_cmd
  1716 ;;		_lcd_write_data
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text6
  1723  0014CC                     __ptext6:
  1724                           	opt stack 0
  1725  0014CC                     _SetupAlarmTimeA:
  1726                           	opt stack 25
  1727                           
  1728                           ;Main.c: 159: unsigned char msgindex, outchar, ctemp;
  1729                           ;Main.c: 160: unsigned char hour10, hour1, minute10, minute1;
  1730                           ;Main.c: 161: char Message[ ] = "Subject A Time hhmm:";
  1731                           
  1732                           ;incstack = 0
  1733  0014CC  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4496
  1734  0014D0  EE10  F0B4         	lfsr	1,SetupAlarmTimeA@Message
  1735  0014D4  0E14               	movlw	20
  1736  0014D6                     u501:
  1737  0014D6  CFDB FFE3          	movff	plusw2,plusw1
  1738  0014DA  06E8               	decf	wreg,f,c
  1739  0014DC  E2FC               	bc	u501
  1740                           
  1741                           ;Main.c: 163: lcd_write_cmd(0x80);
  1742  0014DE  0E80               	movlw	128
  1743  0014E0  EC9B  F00C         	call	_lcd_write_cmd
  1744                           
  1745                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1746  0014E4  0E00               	movlw	0
  1747  0014E6  0100               	movlb	0	; () banked
  1748  0014E8  6FCE               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1749  0014EA                     l1556:
  1750                           
  1751                           ; BSR set to: 0
  1752  0014EA  0E13               	movlw	19
  1753  0014EC  0100               	movlb	0	; () banked
  1754  0014EE  65CE               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1755  0014F0  D001               	goto	l1560
  1756  0014F2  D013               	goto	l1568
  1757  0014F4                     l1560:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;Main.c: 166: {
  1761                           ;Main.c: 167: outchar = Message[msgindex];
  1762  0014F4  0100               	movlb	0	; () banked
  1763  0014F6  51CE               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  1764  0014F8  0D01               	mullw	1
  1765  0014FA  0EB4               	movlw	low SetupAlarmTimeA@Message
  1766  0014FC  24F3               	addwf	prodl,w,c
  1767  0014FE  6ED9               	movwf	fsr2l,c
  1768  001500  0E00               	movlw	high SetupAlarmTimeA@Message
  1769  001502  20F4               	addwfc	prodh,w,c
  1770  001504  6EDA               	movwf	fsr2h,c
  1771  001506  50DF               	movf	indf2,w,c
  1772  001508  0100               	movlb	0	; () banked
  1773  00150A  6FC9               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;Main.c: 168: lcd_write_data(outchar);
  1777  00150C  0100               	movlb	0	; () banked
  1778  00150E  51C9               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  1779  001510  ECE0  F00A         	call	_lcd_write_data
  1780  001514  0100               	movlb	0	; () banked
  1781  001516  2BCE               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  1782  001518  D7E8               	goto	l1556
  1783  00151A                     l1568:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;Main.c: 169: }
  1787                           ;Main.c: 171: lcd_write_cmd(0xC0);
  1788  00151A  0EC0               	movlw	192
  1789  00151C  EC9B  F00C         	call	_lcd_write_cmd
  1790                           
  1791                           ;Main.c: 173: ctemp=getkey();
  1792  001520  EC52  F00D         	call	_getkey	;wreg free
  1793  001524  0100               	movlb	0	; () banked
  1794  001526  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;Main.c: 174: lcd_write_data(ctemp);
  1798  001528  0100               	movlb	0	; () banked
  1799  00152A  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1800  00152C  ECE0  F00A         	call	_lcd_write_data
  1801                           
  1802                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  1803  001530  0100               	movlb	0	; () banked
  1804  001532  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1805  001534  EC2A  F00C         	call	_char_2_int
  1806  001538  0100               	movlb	0	; () banked
  1807  00153A  6FCA               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;Main.c: 177: ctemp=getkey();
  1811  00153C  EC52  F00D         	call	_getkey	;wreg free
  1812  001540  0100               	movlb	0	; () banked
  1813  001542  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1814                           
  1815                           ;Main.c: 178: lcd_write_data(ctemp);
  1816  001544  0100               	movlb	0	; () banked
  1817  001546  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1818  001548  ECE0  F00A         	call	_lcd_write_data
  1819                           
  1820                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  1821  00154C  0100               	movlb	0	; () banked
  1822  00154E  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1823  001550  EC2A  F00C         	call	_char_2_int
  1824  001554  0100               	movlb	0	; () banked
  1825  001556  6FCB               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;Main.c: 181: ctemp=getkey();
  1829  001558  EC52  F00D         	call	_getkey	;wreg free
  1830  00155C  0100               	movlb	0	; () banked
  1831  00155E  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;Main.c: 182: lcd_write_data(ctemp);
  1835  001560  0100               	movlb	0	; () banked
  1836  001562  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1837  001564  ECE0  F00A         	call	_lcd_write_data
  1838                           
  1839                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  1840  001568  0100               	movlb	0	; () banked
  1841  00156A  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1842  00156C  EC2A  F00C         	call	_char_2_int
  1843  001570  0100               	movlb	0	; () banked
  1844  001572  6FCC               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;Main.c: 185: ctemp=getkey();
  1848  001574  EC52  F00D         	call	_getkey	;wreg free
  1849  001578  0100               	movlb	0	; () banked
  1850  00157A  6FCF               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1851                           
  1852                           ;Main.c: 186: lcd_write_data(ctemp);
  1853  00157C  0100               	movlb	0	; () banked
  1854  00157E  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1855  001580  ECE0  F00A         	call	_lcd_write_data
  1856                           
  1857                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  1858  001584  0100               	movlb	0	; () banked
  1859  001586  51CF               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1860  001588  EC2A  F00C         	call	_char_2_int
  1861  00158C  0100               	movlb	0	; () banked
  1862  00158E  6FCD               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  1866  001590  0100               	movlb	0	; () banked
  1867  001592  51CA               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  1868  001594  0D0A               	mullw	10
  1869  001596  50F3               	movf	prodl,w,c
  1870  001598  0100               	movlb	0	; () banked
  1871  00159A  25CB               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  1872  00159C  6E32               	movwf	_hourA,c
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  1876  00159E  0100               	movlb	0	; () banked
  1877  0015A0  51CC               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  1878  0015A2  0D0A               	mullw	10
  1879  0015A4  50F3               	movf	prodl,w,c
  1880  0015A6  0100               	movlb	0	; () banked
  1881  0015A8  25CD               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  1882  0015AA  6E36               	movwf	_minuteA,c
  1883                           
  1884                           ;Main.c: 192: delay_ms(500);
  1885  0015AC  0E01               	movlw	1
  1886  0015AE  6E1E               	movwf	delay_ms@i+1,c
  1887  0015B0  0EF4               	movlw	244
  1888  0015B2  6E1D               	movwf	delay_ms@i,c
  1889  0015B4  EC6F  F00D         	call	_delay_ms	;wreg free
  1890                           
  1891                           ;Main.c: 193: lcd_write_cmd(0x01);
  1892  0015B8  0E01               	movlw	1
  1893  0015BA  EC9B  F00C         	call	_lcd_write_cmd
  1894  0015BE  0012               	return		;funcret
  1895  0015C0                     __end_of_SetupAlarmTimeA:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           prodh	equ	0xFF4
  1902                           prodl	equ	0xFF3
  1903                           intcon	equ	0xFF2
  1904                           intcon2	equ	0xFF1
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           plusw1	equ	0xFE3
  1909                           fsr1l	equ	0xFE1
  1910                           indf2	equ	0xFDF
  1911                           plusw2	equ	0xFDB
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _lcd_write_data *****************
  1917 ;; Defined at:
  1918 ;;		line 43 in file "lcd_utilities.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  data            1    wreg     unsigned char 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  data            1   30[COMRAM] unsigned char 
  1923 ;;  temp1           1   31[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        3 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    4
  1940 ;; This function calls:
  1941 ;;		_lcd_strobe
  1942 ;; This function is called by:
  1943 ;;		_SetupTime
  1944 ;;		_SetupAlarmTimeA
  1945 ;;		_SetupAlarmTimeB
  1946 ;;		_SetupAlarmTimeC
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text7
  1951  0015C0                     __ptext7:
  1952                           	opt stack 0
  1953  0015C0                     _lcd_write_data:
  1954                           	opt stack 25
  1955                           
  1956                           ;incstack = 0
  1957                           ;lcd_write_data@data stored from wreg
  1958  0015C0  6E1F               	movwf	lcd_write_data@data,c
  1959                           
  1960                           ;lcd_utilities.c: 45: char temp1;
  1961                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  1962  0015C2  8C83               	bsf	3971,6,c	;volatile
  1963                           
  1964                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  1965  0015C4  0E3F               	movlw	63
  1966  0015C6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1967  0015C8  0E55               	movlw	85
  1968  0015CA                     u777:
  1969  0015CA  2EE8               	decfsz	wreg,f,c
  1970  0015CC  D7FE               	goto	u777
  1971  0015CE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1972  0015D0  D7FC               	goto	u777
  1973  0015D2  F000               	nop	
  1974                           
  1975                           ;lcd_utilities.c: 50: temp1 = data;
  1976  0015D4  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1977                           
  1978                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  1979  0015D8  3820               	swapf	lcd_write_data@temp1,w,c
  1980  0015DA  0B0F               	andlw	15
  1981  0015DC  6E20               	movwf	lcd_write_data@temp1,c
  1982                           
  1983                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  1984  0015DE  5020               	movf	lcd_write_data@temp1,w,c
  1985  0015E0  0B0F               	andlw	15
  1986  0015E2  6E83               	movwf	3971,c	;volatile
  1987                           
  1988                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  1989  0015E4  0E7D               	movlw	125
  1990  0015E6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1991  0015E8  0EAC               	movlw	172
  1992  0015EA                     u787:
  1993  0015EA  2EE8               	decfsz	wreg,f,c
  1994  0015EC  D7FE               	goto	u787
  1995  0015EE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1996  0015F0  D7FC               	goto	u787
  1997                           
  1998                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  1999  0015F2  8C83               	bsf	3971,6,c	;volatile
  2000                           
  2001                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2002  0015F4  0E7D               	movlw	125
  2003  0015F6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2004  0015F8  0EAC               	movlw	172
  2005  0015FA                     u797:
  2006  0015FA  2EE8               	decfsz	wreg,f,c
  2007  0015FC  D7FE               	goto	u797
  2008  0015FE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2009  001600  D7FC               	goto	u797
  2010                           
  2011                           ;lcd_utilities.c: 57: lcd_strobe();
  2012  001602  EC89  F00D         	call	_lcd_strobe	;wreg free
  2013                           
  2014                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2015  001606  0E7D               	movlw	125
  2016  001608  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2017  00160A  0EAC               	movlw	172
  2018  00160C                     u807:
  2019  00160C  2EE8               	decfsz	wreg,f,c
  2020  00160E  D7FE               	goto	u807
  2021  001610  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2022  001612  D7FC               	goto	u807
  2023                           
  2024                           ;lcd_utilities.c: 60: temp1 = data;
  2025  001614  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2026                           
  2027                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2028  001618  5020               	movf	lcd_write_data@temp1,w,c
  2029  00161A  0B0F               	andlw	15
  2030  00161C  6E83               	movwf	3971,c	;volatile
  2031                           
  2032                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2033  00161E  0E7D               	movlw	125
  2034  001620  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2035  001622  0EAC               	movlw	172
  2036  001624                     u817:
  2037  001624  2EE8               	decfsz	wreg,f,c
  2038  001626  D7FE               	goto	u817
  2039  001628  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2040  00162A  D7FC               	goto	u817
  2041                           
  2042                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2043  00162C  8C83               	bsf	3971,6,c	;volatile
  2044                           
  2045                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2046  00162E  0E9C               	movlw	156
  2047  001630  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2048  001632  0ED7               	movlw	215
  2049  001634                     u827:
  2050  001634  2EE8               	decfsz	wreg,f,c
  2051  001636  D7FE               	goto	u827
  2052  001638  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2053  00163A  D7FC               	goto	u827
  2054  00163C  F000               	nop	
  2055                           
  2056                           ;lcd_utilities.c: 66: lcd_strobe();
  2057  00163E  EC89  F00D         	call	_lcd_strobe	;wreg free
  2058                           
  2059                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2060  001642  0E9C               	movlw	156
  2061  001644  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2062  001646  0ED7               	movlw	215
  2063  001648                     u837:
  2064  001648  2EE8               	decfsz	wreg,f,c
  2065  00164A  D7FE               	goto	u837
  2066  00164C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2067  00164E  D7FC               	goto	u837
  2068  001650  F000               	nop	
  2069  001652  0012               	return		;funcret
  2070  001654                     __end_of_lcd_write_data:
  2071                           	opt stack 0
  2072                           tblptru	equ	0xFF8
  2073                           tblptrh	equ	0xFF7
  2074                           tblptrl	equ	0xFF6
  2075                           tablat	equ	0xFF5
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           intcon	equ	0xFF2
  2079                           intcon2	equ	0xFF1
  2080                           postinc0	equ	0xFEE
  2081                           wreg	equ	0xFE8
  2082                           postdec1	equ	0xFE5
  2083                           plusw1	equ	0xFE3
  2084                           fsr1l	equ	0xFE1
  2085                           indf2	equ	0xFDF
  2086                           plusw2	equ	0xFDB
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _lcd_write_cmd *****************
  2092 ;; Defined at:
  2093 ;;		line 18 in file "lcd_utilities.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  cmd             1    wreg     unsigned char 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  cmd             1   30[COMRAM] unsigned char 
  2098 ;;  temp2           1   31[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2108 ;;      Params:         0       0       0       0       0       0       0       0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2110 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2111 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2112 ;;Total ram usage:        3 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    4
  2115 ;; This function calls:
  2116 ;;		_lcd_strobe
  2117 ;; This function is called by:
  2118 ;;		_lcd_init
  2119 ;;		_SetupTime
  2120 ;;		_SetupAlarmTimeA
  2121 ;;		_SetupAlarmTimeB
  2122 ;;		_SetupAlarmTimeC
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text8
  2127  001936                     __ptext8:
  2128                           	opt stack 0
  2129  001936                     _lcd_write_cmd:
  2130                           	opt stack 25
  2131                           
  2132                           ;incstack = 0
  2133                           ;lcd_write_cmd@cmd stored from wreg
  2134  001936  6E1F               	movwf	lcd_write_cmd@cmd,c
  2135                           
  2136                           ;lcd_utilities.c: 20: unsigned char temp2;
  2137                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2138  001938  9C83               	bcf	3971,6,c	;volatile
  2139                           
  2140                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2141  00193A  0E3F               	movlw	63
  2142  00193C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2143  00193E  0E55               	movlw	85
  2144  001940                     u847:
  2145  001940  2EE8               	decfsz	wreg,f,c
  2146  001942  D7FE               	goto	u847
  2147  001944  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2148  001946  D7FC               	goto	u847
  2149  001948  F000               	nop	
  2150                           
  2151                           ;lcd_utilities.c: 23: temp2 = cmd;
  2152  00194A  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2153                           
  2154                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2155  00194E  3820               	swapf	lcd_write_cmd@temp2,w,c
  2156  001950  0B0F               	andlw	15
  2157  001952  6E20               	movwf	lcd_write_cmd@temp2,c
  2158                           
  2159                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2160  001954  5020               	movf	lcd_write_cmd@temp2,w,c
  2161  001956  0B0F               	andlw	15
  2162  001958  6E83               	movwf	3971,c	;volatile
  2163                           
  2164                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2165  00195A  0E7D               	movlw	125
  2166  00195C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2167  00195E  0EAC               	movlw	172
  2168  001960                     u857:
  2169  001960  2EE8               	decfsz	wreg,f,c
  2170  001962  D7FE               	goto	u857
  2171  001964  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2172  001966  D7FC               	goto	u857
  2173                           
  2174                           ;lcd_utilities.c: 28: lcd_strobe();
  2175  001968  EC89  F00D         	call	_lcd_strobe	;wreg free
  2176                           
  2177                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2178  00196C  0E7D               	movlw	125
  2179  00196E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2180  001970  0EAC               	movlw	172
  2181  001972                     u867:
  2182  001972  2EE8               	decfsz	wreg,f,c
  2183  001974  D7FE               	goto	u867
  2184  001976  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2185  001978  D7FC               	goto	u867
  2186                           
  2187                           ;lcd_utilities.c: 32: temp2 = cmd;
  2188  00197A  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2189                           
  2190                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2191  00197E  5020               	movf	lcd_write_cmd@temp2,w,c
  2192  001980  0B0F               	andlw	15
  2193  001982  6E83               	movwf	3971,c	;volatile
  2194                           
  2195                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2196  001984  0E7D               	movlw	125
  2197  001986  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2198  001988  0EAC               	movlw	172
  2199  00198A                     u877:
  2200  00198A  2EE8               	decfsz	wreg,f,c
  2201  00198C  D7FE               	goto	u877
  2202  00198E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2203  001990  D7FC               	goto	u877
  2204                           
  2205                           ;lcd_utilities.c: 36: lcd_strobe();
  2206  001992  EC89  F00D         	call	_lcd_strobe	;wreg free
  2207                           
  2208                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2209  001996  0E7D               	movlw	125
  2210  001998  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2211  00199A  0EAC               	movlw	172
  2212  00199C                     u887:
  2213  00199C  2EE8               	decfsz	wreg,f,c
  2214  00199E  D7FE               	goto	u887
  2215  0019A0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2216  0019A2  D7FC               	goto	u887
  2217  0019A4  0012               	return		;funcret
  2218  0019A6                     __end_of_lcd_write_cmd:
  2219                           	opt stack 0
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           intcon	equ	0xFF2
  2227                           intcon2	equ	0xFF1
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           postdec1	equ	0xFE5
  2231                           plusw1	equ	0xFE3
  2232                           fsr1l	equ	0xFE1
  2233                           indf2	equ	0xFDF
  2234                           plusw2	equ	0xFDB
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _lcd_strobe *****************
  2240 ;; Defined at:
  2241 ;;		line 73 in file "lcd_utilities.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;		None               void
  2248 ;; Registers used:
  2249 ;;		wreg
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        1 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    3
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_lcd_write_cmd
  2266 ;;		_lcd_write_data
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text9
  2271  001B12                     __ptext9:
  2272                           	opt stack 0
  2273  001B12                     _lcd_strobe:
  2274                           	opt stack 25
  2275                           
  2276                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2277                           
  2278                           ;incstack = 0
  2279  001B12  8883               	bsf	3971,4,c	;volatile
  2280                           
  2281                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2282  001B14  0E7D               	movlw	125
  2283  001B16  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2284  001B18  0EAC               	movlw	172
  2285  001B1A                     u897:
  2286  001B1A  2EE8               	decfsz	wreg,f,c
  2287  001B1C  D7FE               	goto	u897
  2288  001B1E  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2289  001B20  D7FC               	goto	u897
  2290                           
  2291                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2292  001B22  9883               	bcf	3971,4,c	;volatile
  2293                           
  2294                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2295  001B24  0E7D               	movlw	125
  2296  001B26  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2297  001B28  0EAC               	movlw	172
  2298  001B2A                     u907:
  2299  001B2A  2EE8               	decfsz	wreg,f,c
  2300  001B2C  D7FE               	goto	u907
  2301  001B2E  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2302  001B30  D7FC               	goto	u907
  2303  001B32  0012               	return		;funcret
  2304  001B34                     __end_of_lcd_strobe:
  2305                           	opt stack 0
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           intcon	equ	0xFF2
  2313                           intcon2	equ	0xFF1
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postdec1	equ	0xFE5
  2317                           plusw1	equ	0xFE3
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           plusw2	equ	0xFDB
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _getkey *****************
  2326 ;; Defined at:
  2327 ;;		line 17 in file "keypad_utilities.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  lookup         18   28[COMRAM] const unsigned char [18]
  2332 ;;  keycode         1   46[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:        19       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:       19 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    3
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_SetupTime
  2353 ;;		_SetupAlarmTimeA
  2354 ;;		_SetupAlarmTimeB
  2355 ;;		_SetupAlarmTimeC
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text10
  2360  001AA4                     __ptext10:
  2361                           	opt stack 0
  2362  001AA4                     _getkey:
  2363                           	opt stack 26
  2364                           
  2365                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2366                           
  2367                           ;incstack = 0
  2368  001AA4  0E1B               	movlw	low getkey@F4444
  2369  001AA6  6EF6               	movwf	tblptrl,c
  2370  001AA8                     	if	1	;There is more than 1 active tblptr byte
  2371  001AA8  0E10               	movlw	high getkey@F4444
  2372  001AAA  6EF7               	movwf	tblptrh,c
  2373  001AAC                     	endif
  2374  001AAC                     	if	0	;There are less than 3 active tblptr bytes
  2375  001AAC                     	endif
  2376  001AAC  EE20  F01D         	lfsr	2,getkey@lookup
  2377  001AB0  0E11               	movlw	17
  2378  001AB2                     u400:
  2379  001AB2  0009               	tblrd		*+
  2380  001AB4  CFF5 FFDE          	movff	tablat,postinc2
  2381  001AB8  06E8               	decf	wreg,f,c
  2382  001ABA  E2FB               	bc	u400
  2383  001ABC                     l33:
  2384  001ABC  AA81               	btfss	3969,5,c	;volatile
  2385  001ABE  D7FE               	goto	l33
  2386                           
  2387                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2388  001AC0  5081               	movf	3969,w,c	;volatile
  2389  001AC2  0B0F               	andlw	15
  2390  001AC4  6E2F               	movwf	getkey@keycode,c
  2391  001AC6                     l36:
  2392  001AC6  BA81               	btfsc	3969,5,c	;volatile
  2393  001AC8  D7FE               	goto	l36
  2394                           
  2395                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2396  001ACA  502F               	movf	getkey@keycode,w,c
  2397  001ACC  0D01               	mullw	1
  2398  001ACE  0E1D               	movlw	low getkey@lookup
  2399  001AD0  24F3               	addwf	prodl,w,c
  2400  001AD2  6ED9               	movwf	fsr2l,c
  2401  001AD4  0E00               	movlw	high getkey@lookup
  2402  001AD6  20F4               	addwfc	prodh,w,c
  2403  001AD8  6EDA               	movwf	fsr2h,c
  2404  001ADA  50DF               	movf	indf2,w,c
  2405  001ADC  0012               	return	
  2406  001ADE                     __end_of_getkey:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           prodh	equ	0xFF4
  2413                           prodl	equ	0xFF3
  2414                           intcon	equ	0xFF2
  2415                           intcon2	equ	0xFF1
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           plusw1	equ	0xFE3
  2420                           fsr1l	equ	0xFE1
  2421                           indf2	equ	0xFDF
  2422                           postinc2	equ	0xFDE
  2423                           plusw2	equ	0xFDB
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8
  2427                           
  2428 ;; *************** function _delay_ms *****************
  2429 ;; Defined at:
  2430 ;;		line 10 in file "delays_utilities.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  i               2   28[COMRAM] unsigned int 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  j               2   31[COMRAM] unsigned int 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;		None               void
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         2       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        5 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    3
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_SetupTime
  2455 ;;		_SetupAlarmTimeA
  2456 ;;		_SetupAlarmTimeB
  2457 ;;		_SetupAlarmTimeC
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text11
  2462  001ADE                     __ptext11:
  2463                           	opt stack 0
  2464  001ADE                     _delay_ms:
  2465                           	opt stack 26
  2466                           
  2467                           ;delays_utilities.c: 12: if(i!=0)
  2468                           
  2469                           ;incstack = 0
  2470  001ADE  501D               	movf	delay_ms@i,w,c
  2471  001AE0  101E               	iorwf	delay_ms@i+1,w,c
  2472  001AE2  B4D8               	btfsc	status,2,c
  2473  001AE4  0012               	return	
  2474                           
  2475                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2476  001AE6  0E00               	movlw	0
  2477  001AE8  6E21               	movwf	delay_ms@j+1,c
  2478  001AEA  0E00               	movlw	0
  2479  001AEC  6E20               	movwf	delay_ms@j,c
  2480  001AEE  D00A               	goto	l179
  2481  001AF0                     l1466:
  2482  001AF0  0E10               	movlw	16
  2483  001AF2  6E1F               	movwf	??_delay_ms& (0+255),c
  2484  001AF4  0E94               	movlw	148
  2485  001AF6                     u917:
  2486  001AF6  2EE8               	decfsz	wreg,f,c
  2487  001AF8  D7FE               	goto	u917
  2488  001AFA  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2489  001AFC  D7FC               	goto	u917
  2490  001AFE  D000               	nop2	
  2491  001B00  4A20               	infsnz	delay_ms@j,f,c
  2492  001B02  2A21               	incf	delay_ms@j+1,f,c
  2493  001B04                     l179:
  2494  001B04  501D               	movf	delay_ms@i,w,c
  2495  001B06  5C20               	subwf	delay_ms@j,w,c
  2496  001B08  501E               	movf	delay_ms@i+1,w,c
  2497  001B0A  5821               	subwfb	delay_ms@j+1,w,c
  2498  001B0C  B0D8               	btfsc	status,0,c
  2499  001B0E  0012               	return	
  2500  001B10  D7EF               	goto	l1466
  2501  001B12                     __end_of_delay_ms:
  2502                           	opt stack 0
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           prodh	equ	0xFF4
  2508                           prodl	equ	0xFF3
  2509                           intcon	equ	0xFF2
  2510                           intcon2	equ	0xFF1
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           postdec1	equ	0xFE5
  2514                           plusw1	equ	0xFE3
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           plusw2	equ	0xFDB
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _char_2_int *****************
  2524 ;; Defined at:
  2525 ;;		line 37 in file "Main.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  char1           1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  char1           1   28[COMRAM] unsigned char 
  2530 ;;  int1            1   29[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      unsigned char 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        2 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    3
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_SetupTime
  2551 ;;		_SetupAlarmTimeA
  2552 ;;		_SetupAlarmTimeB
  2553 ;;		_SetupAlarmTimeC
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text12
  2558  001854                     __ptext12:
  2559                           	opt stack 0
  2560  001854                     _char_2_int:
  2561                           	opt stack 26
  2562                           
  2563                           ;incstack = 0
  2564                           ;char_2_int@char1 stored from wreg
  2565  001854  6E1D               	movwf	char_2_int@char1,c
  2566                           
  2567                           ;Main.c: 39: unsigned char int1;
  2568                           ;Main.c: 40: switch (char1)
  2569  001856  D015               	goto	l1460
  2570  001858                     l1440:
  2571  001858  0E01               	movlw	1
  2572  00185A  D011               	goto	L12
  2573  00185C                     l1442:
  2574  00185C  0E02               	movlw	2
  2575  00185E  D00F               	goto	L12
  2576  001860                     l1444:
  2577  001860  0E03               	movlw	3
  2578  001862  D00D               	goto	L12
  2579  001864                     l1446:
  2580  001864  0E04               	movlw	4
  2581  001866  D00B               	goto	L12
  2582  001868                     l1448:
  2583  001868  0E05               	movlw	5
  2584  00186A  D009               	goto	L12
  2585  00186C                     l1450:
  2586  00186C  0E06               	movlw	6
  2587  00186E  D007               	goto	L12
  2588  001870                     l1452:
  2589  001870  0E07               	movlw	7
  2590  001872  D005               	goto	L12
  2591  001874                     l1454:
  2592  001874  0E08               	movlw	8
  2593  001876  D003               	goto	L12
  2594  001878                     l1456:
  2595  001878  0E09               	movlw	9
  2596  00187A  D001               	goto	L12
  2597  00187C                     l1458:
  2598  00187C  0E00               	movlw	0
  2599  00187E                     L12:
  2600  00187E  6E1E               	movwf	char_2_int@int1,c
  2601                           
  2602                           ;Main.c: 53: }
  2603  001880  D020               	goto	l112
  2604  001882                     l1460:
  2605  001882  501D               	movf	char_2_int@char1,w,c
  2606                           
  2607                           ; Switch size 1, requested type "space"
  2608                           ; Number of cases is 10, Range of values is 48 to 57
  2609                           ; switch strategies available:
  2610                           ; Name         Instructions Cycles
  2611                           ; simple_byte           31    16 (average)
  2612                           ;	Chosen strategy is simple_byte
  2613  001884  0A30               	xorlw	48	; case 48
  2614  001886  B4D8               	btfsc	status,2,c
  2615  001888  D7F9               	goto	l1458
  2616  00188A  0A01               	xorlw	1	; case 49
  2617  00188C  B4D8               	btfsc	status,2,c
  2618  00188E  D7E4               	goto	l1440
  2619  001890  0A03               	xorlw	3	; case 50
  2620  001892  B4D8               	btfsc	status,2,c
  2621  001894  D7E3               	goto	l1442
  2622  001896  0A01               	xorlw	1	; case 51
  2623  001898  B4D8               	btfsc	status,2,c
  2624  00189A  D7E2               	goto	l1444
  2625  00189C  0A07               	xorlw	7	; case 52
  2626  00189E  B4D8               	btfsc	status,2,c
  2627  0018A0  D7E1               	goto	l1446
  2628  0018A2  0A01               	xorlw	1	; case 53
  2629  0018A4  B4D8               	btfsc	status,2,c
  2630  0018A6  D7E0               	goto	l1448
  2631  0018A8  0A03               	xorlw	3	; case 54
  2632  0018AA  B4D8               	btfsc	status,2,c
  2633  0018AC  D7DF               	goto	l1450
  2634  0018AE  0A01               	xorlw	1	; case 55
  2635  0018B0  B4D8               	btfsc	status,2,c
  2636  0018B2  D7DE               	goto	l1452
  2637  0018B4  0A0F               	xorlw	15	; case 56
  2638  0018B6  B4D8               	btfsc	status,2,c
  2639  0018B8  D7DD               	goto	l1454
  2640  0018BA  0A01               	xorlw	1	; case 57
  2641  0018BC  B4D8               	btfsc	status,2,c
  2642  0018BE  D7DC               	goto	l1456
  2643  0018C0  D7DD               	goto	l1458
  2644  0018C2                     l112:
  2645                           
  2646                           ;Main.c: 54: return(int1);
  2647  0018C2  501E               	movf	char_2_int@int1,w,c
  2648  0018C4  0012               	return		;funcret
  2649  0018C6                     __end_of_char_2_int:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           intcon	equ	0xFF2
  2658                           intcon2	equ	0xFF1
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           postdec1	equ	0xFE5
  2662                           plusw1	equ	0xFE3
  2663                           fsr1l	equ	0xFE1
  2664                           indf2	equ	0xFDF
  2665                           postinc2	equ	0xFDE
  2666                           plusw2	equ	0xFDB
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _ISR_Timer0_Int *****************
  2672 ;; Defined at:
  2673 ;;		line 57 in file "Main.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  second10        1   27[COMRAM] unsigned char 
  2678 ;;  minute10        1   26[COMRAM] unsigned char 
  2679 ;;  hour10          1   25[COMRAM] unsigned char 
  2680 ;;  second1         1   24[COMRAM] unsigned char 
  2681 ;;  minute1         1   23[COMRAM] unsigned char 
  2682 ;;  hour1           1   22[COMRAM] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0
  2693 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2694 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2695 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2696 ;;Total ram usage:       20 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		___awdiv
  2701 ;;		_int_2_char
  2702 ;;		i2_lcd_write_cmd
  2703 ;;		i2_lcd_write_data
  2704 ;; This function is called by:
  2705 ;;		Interrupt level 2
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	intcode
  2710  001008                     __pintcode:
  2711                           	opt stack 0
  2712  001008                     _ISR_Timer0_Int:
  2713                           	opt stack 25
  2714                           
  2715                           ;incstack = 0
  2716  001008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2717  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2718  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2719  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2720                           pclatu	equ	0xFFB
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           intcon2	equ	0xFF1
  2730                           postinc0	equ	0xFEE
  2731                           wreg	equ	0xFE8
  2732                           postdec1	equ	0xFE5
  2733                           plusw1	equ	0xFE3
  2734                           fsr1l	equ	0xFE1
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           plusw2	equ	0xFDB
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742                           	psect	intcode_body
  2743  00102E                     __pintcode_body:
  2744                           	opt stack 25
  2745  00102E                     int_func:
  2746                           	opt stack 25
  2747  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2748  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2749  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2750  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2751  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2752  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2753  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2754  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2755  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2756  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2757  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2758  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2759  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2760                           
  2761                           ;Main.c: 59: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2762                           ;Main.c: 60: if (INTCONbits.TMR0IF == 1)
  2763  001060  A4F2               	btfss	intcon,2,c	;volatile
  2764  001062  D085               	goto	i2l130
  2765                           
  2766                           ;Main.c: 61: {
  2767                           ;Main.c: 65: second = second + 1;
  2768  001064  2839               	incf	_second,w,c
  2769  001066  6E39               	movwf	_second,c
  2770                           
  2771                           ;Main.c: 66: if ( second > 59 )
  2772  001068  0E3B               	movlw	59
  2773  00106A  6439               	cpfsgt	_second,c
  2774  00106C  D010               	goto	i2l1792
  2775                           
  2776                           ;Main.c: 67: {
  2777                           ;Main.c: 68: second = 0;
  2778  00106E  0E00               	movlw	0
  2779  001070  6E39               	movwf	_second,c
  2780                           
  2781                           ;Main.c: 69: minute = minute + 1;
  2782  001072  2835               	incf	_minute,w,c
  2783  001074  6E35               	movwf	_minute,c
  2784                           
  2785                           ;Main.c: 70: if ( minute > 59 )
  2786  001076  0E3B               	movlw	59
  2787  001078  6435               	cpfsgt	_minute,c
  2788  00107A  D009               	goto	i2l1792
  2789                           
  2790                           ;Main.c: 71: {
  2791                           ;Main.c: 72: minute = 0;
  2792  00107C  0E00               	movlw	0
  2793  00107E  6E35               	movwf	_minute,c
  2794                           
  2795                           ;Main.c: 73: hour = hour + 1;
  2796  001080  2831               	incf	_hour,w,c
  2797  001082  6E31               	movwf	_hour,c
  2798                           
  2799                           ;Main.c: 74: if ( hour > 23 )
  2800  001084  0E17               	movlw	23
  2801  001086  6431               	cpfsgt	_hour,c
  2802  001088  D002               	goto	i2l1792
  2803                           
  2804                           ;Main.c: 75: hour = 0;
  2805  00108A  0E00               	movlw	0
  2806  00108C  6E31               	movwf	_hour,c
  2807  00108E                     i2l1792:
  2808                           
  2809                           ;Main.c: 76: }
  2810                           ;Main.c: 77: }
  2811                           ;Main.c: 79: hour10 = hour / 10;
  2812  00108E  C031  F001         	movff	_hour,___awdiv@dividend
  2813  001092  6A02               	clrf	___awdiv@dividend+1,c
  2814  001094  0E00               	movlw	0
  2815  001096  6E04               	movwf	___awdiv@divisor+1,c
  2816  001098  0E0A               	movlw	10
  2817  00109A  6E03               	movwf	___awdiv@divisor,c
  2818  00109C  EC74  F00B         	call	___awdiv	;wreg free
  2819  0010A0  5001               	movf	?___awdiv,w,c
  2820  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  2821                           
  2822                           ;Main.c: 80: hour1 = hour - hour10 * 10;
  2823  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2824  0010A6  0D0A               	mullw	10
  2825  0010A8  50F3               	movf	prodl,w,c
  2826  0010AA  0800               	sublw	0
  2827  0010AC  2431               	addwf	_hour,w,c
  2828  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  2829                           
  2830                           ;Main.c: 82: minute10 = minute / 10;
  2831  0010B0  C035  F001         	movff	_minute,___awdiv@dividend
  2832  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  2833  0010B6  0E00               	movlw	0
  2834  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  2835  0010BA  0E0A               	movlw	10
  2836  0010BC  6E03               	movwf	___awdiv@divisor,c
  2837  0010BE  EC74  F00B         	call	___awdiv	;wreg free
  2838  0010C2  5001               	movf	?___awdiv,w,c
  2839  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  2840                           
  2841                           ;Main.c: 83: minute1 = minute - minute10 * 10;
  2842  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2843  0010C8  0D0A               	mullw	10
  2844  0010CA  50F3               	movf	prodl,w,c
  2845  0010CC  0800               	sublw	0
  2846  0010CE  2435               	addwf	_minute,w,c
  2847  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  2848                           
  2849                           ;Main.c: 85: second10 = second / 10;
  2850  0010D2  C039  F001         	movff	_second,___awdiv@dividend
  2851  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  2852  0010D8  0E00               	movlw	0
  2853  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  2854  0010DC  0E0A               	movlw	10
  2855  0010DE  6E03               	movwf	___awdiv@divisor,c
  2856  0010E0  EC74  F00B         	call	___awdiv	;wreg free
  2857  0010E4  5001               	movf	?___awdiv,w,c
  2858  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  2859                           
  2860                           ;Main.c: 86: second1 = second - second10 * 10;
  2861  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  2862  0010EA  0D0A               	mullw	10
  2863  0010EC  50F3               	movf	prodl,w,c
  2864  0010EE  0800               	sublw	0
  2865  0010F0  2439               	addwf	_second,w,c
  2866  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  2867                           
  2868                           ;Main.c: 88: lcd_write_cmd(0x80);
  2869  0010F4  0E80               	movlw	128
  2870  0010F6  ECD3  F00C         	call	i2_lcd_write_cmd
  2871                           
  2872                           ;Main.c: 89: lcd_write_data('t');
  2873  0010FA  0E74               	movlw	116
  2874  0010FC  EC2A  F00B         	call	i2_lcd_write_data
  2875                           
  2876                           ;Main.c: 90: lcd_write_data('i');
  2877  001100  0E69               	movlw	105
  2878  001102  EC2A  F00B         	call	i2_lcd_write_data
  2879                           
  2880                           ;Main.c: 91: lcd_write_data('m');
  2881  001106  0E6D               	movlw	109
  2882  001108  EC2A  F00B         	call	i2_lcd_write_data
  2883                           
  2884                           ;Main.c: 92: lcd_write_data('e');
  2885  00110C  0E65               	movlw	101
  2886  00110E  EC2A  F00B         	call	i2_lcd_write_data
  2887                           
  2888                           ;Main.c: 93: lcd_write_data(' ');
  2889  001112  0E20               	movlw	32
  2890  001114  EC2A  F00B         	call	i2_lcd_write_data
  2891                           
  2892                           ;Main.c: 94: lcd_write_data('=');
  2893  001118  0E3D               	movlw	61
  2894  00111A  EC2A  F00B         	call	i2_lcd_write_data
  2895                           
  2896                           ;Main.c: 95: lcd_write_data(' ');
  2897  00111E  0E20               	movlw	32
  2898  001120  EC2A  F00B         	call	i2_lcd_write_data
  2899                           
  2900                           ;Main.c: 96: lcd_write_data(int_2_char (hour10));
  2901  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2902  001126  ECB6  F00B         	call	_int_2_char
  2903  00112A  EC2A  F00B         	call	i2_lcd_write_data
  2904                           
  2905                           ;Main.c: 97: lcd_write_data(int_2_char (hour1));
  2906  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  2907  001130  ECB6  F00B         	call	_int_2_char
  2908  001134  EC2A  F00B         	call	i2_lcd_write_data
  2909                           
  2910                           ;Main.c: 98: lcd_write_data(':');
  2911  001138  0E3A               	movlw	58
  2912  00113A  EC2A  F00B         	call	i2_lcd_write_data
  2913                           
  2914                           ;Main.c: 99: lcd_write_data(int_2_char (minute10));
  2915  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2916  001140  ECB6  F00B         	call	_int_2_char
  2917  001144  EC2A  F00B         	call	i2_lcd_write_data
  2918                           
  2919                           ;Main.c: 100: lcd_write_data(int_2_char (minute1));
  2920  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  2921  00114A  ECB6  F00B         	call	_int_2_char
  2922  00114E  EC2A  F00B         	call	i2_lcd_write_data
  2923                           
  2924                           ;Main.c: 101: lcd_write_data(':');
  2925  001152  0E3A               	movlw	58
  2926  001154  EC2A  F00B         	call	i2_lcd_write_data
  2927                           
  2928                           ;Main.c: 102: lcd_write_data(int_2_char (second10));
  2929  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  2930  00115A  ECB6  F00B         	call	_int_2_char
  2931  00115E  EC2A  F00B         	call	i2_lcd_write_data
  2932                           
  2933                           ;Main.c: 103: lcd_write_data(int_2_char (second1));
  2934  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  2935  001164  ECB6  F00B         	call	_int_2_char
  2936  001168  EC2A  F00B         	call	i2_lcd_write_data
  2937                           
  2938                           ;Main.c: 105: INTCONbits.TMR0IF = 0;
  2939  00116C  94F2               	bcf	intcon,2,c	;volatile
  2940  00116E                     i2l130:
  2941  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  2942  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  2943  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  2944  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  2945  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  2946  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  2947  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  2948  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  2949  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  2950  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  2951  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  2952  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  2953  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  2954  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  2955  0011A6  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2956  0011A8  0011               	retfie		f
  2957  0011AA                     __end_of_ISR_Timer0_Int:
  2958                           	opt stack 0
  2959                           pclatu	equ	0xFFB
  2960                           pclath	equ	0xFFA
  2961                           tblptru	equ	0xFF8
  2962                           tblptrh	equ	0xFF7
  2963                           tblptrl	equ	0xFF6
  2964                           tablat	equ	0xFF5
  2965                           prodh	equ	0xFF4
  2966                           prodl	equ	0xFF3
  2967                           intcon	equ	0xFF2
  2968                           intcon2	equ	0xFF1
  2969                           postinc0	equ	0xFEE
  2970                           fsr0h	equ	0xFEA
  2971                           fsr0l	equ	0xFE9
  2972                           wreg	equ	0xFE8
  2973                           postdec1	equ	0xFE5
  2974                           plusw1	equ	0xFE3
  2975                           fsr1h	equ	0xFE2
  2976                           fsr1l	equ	0xFE1
  2977                           indf2	equ	0xFDF
  2978                           postinc2	equ	0xFDE
  2979                           plusw2	equ	0xFDB
  2980                           fsr2h	equ	0xFDA
  2981                           fsr2l	equ	0xFD9
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function i2_lcd_write_data *****************
  2985 ;; Defined at:
  2986 ;;		line 43 in file "lcd_utilities.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  data            1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  data            1    2[COMRAM] unsigned char 
  2991 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;		None               void
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0
  3002 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3003 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3004 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        3 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    1
  3008 ;; This function calls:
  3009 ;;		i2_lcd_strobe
  3010 ;; This function is called by:
  3011 ;;		_ISR_Timer0_Int
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text14
  3016  001654                     __ptext14:
  3017                           	opt stack 0
  3018  001654                     i2_lcd_write_data:
  3019                           	opt stack 25
  3020                           
  3021                           ;incstack = 0
  3022                           ;i2lcd_write_data@data stored from wreg
  3023  001654  6E03               	movwf	i2lcd_write_data@data,c
  3024                           
  3025                           ;lcd_utilities.c: 45: char temp1;
  3026                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3027  001656  8C83               	bsf	3971,6,c	;volatile
  3028                           
  3029                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3030  001658  0E3F               	movlw	63
  3031  00165A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3032  00165C  0E55               	movlw	85
  3033  00165E                     i2u92_47:
  3034  00165E  2EE8               	decfsz	wreg,f,c
  3035  001660  D7FE               	goto	i2u92_47
  3036  001662  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3037  001664  D7FC               	goto	i2u92_47
  3038  001666  F000               	nop	
  3039                           
  3040                           ;lcd_utilities.c: 50: temp1 = data;
  3041  001668  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3042                           
  3043                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3044  00166C  3804               	swapf	i2lcd_write_data@temp1,w,c
  3045  00166E  0B0F               	andlw	15
  3046  001670  6E04               	movwf	i2lcd_write_data@temp1,c
  3047                           
  3048                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3049  001672  5004               	movf	i2lcd_write_data@temp1,w,c
  3050  001674  0B0F               	andlw	15
  3051  001676  6E83               	movwf	3971,c	;volatile
  3052                           
  3053                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3054  001678  0E7D               	movlw	125
  3055  00167A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3056  00167C  0EAC               	movlw	172
  3057  00167E                     i2u93_47:
  3058  00167E  2EE8               	decfsz	wreg,f,c
  3059  001680  D7FE               	goto	i2u93_47
  3060  001682  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3061  001684  D7FC               	goto	i2u93_47
  3062                           
  3063                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3064  001686  8C83               	bsf	3971,6,c	;volatile
  3065                           
  3066                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3067  001688  0E7D               	movlw	125
  3068  00168A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3069  00168C  0EAC               	movlw	172
  3070  00168E                     i2u94_47:
  3071  00168E  2EE8               	decfsz	wreg,f,c
  3072  001690  D7FE               	goto	i2u94_47
  3073  001692  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3074  001694  D7FC               	goto	i2u94_47
  3075                           
  3076                           ;lcd_utilities.c: 57: lcd_strobe();
  3077  001696  EC9A  F00D         	call	i2_lcd_strobe	;wreg free
  3078                           
  3079                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3080  00169A  0E7D               	movlw	125
  3081  00169C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3082  00169E  0EAC               	movlw	172
  3083  0016A0                     i2u95_47:
  3084  0016A0  2EE8               	decfsz	wreg,f,c
  3085  0016A2  D7FE               	goto	i2u95_47
  3086  0016A4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3087  0016A6  D7FC               	goto	i2u95_47
  3088                           
  3089                           ;lcd_utilities.c: 60: temp1 = data;
  3090  0016A8  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3091                           
  3092                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3093  0016AC  5004               	movf	i2lcd_write_data@temp1,w,c
  3094  0016AE  0B0F               	andlw	15
  3095  0016B0  6E83               	movwf	3971,c	;volatile
  3096                           
  3097                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3098  0016B2  0E7D               	movlw	125
  3099  0016B4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3100  0016B6  0EAC               	movlw	172
  3101  0016B8                     i2u96_47:
  3102  0016B8  2EE8               	decfsz	wreg,f,c
  3103  0016BA  D7FE               	goto	i2u96_47
  3104  0016BC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3105  0016BE  D7FC               	goto	i2u96_47
  3106                           
  3107                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3108  0016C0  8C83               	bsf	3971,6,c	;volatile
  3109                           
  3110                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3111  0016C2  0E9C               	movlw	156
  3112  0016C4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3113  0016C6  0ED7               	movlw	215
  3114  0016C8                     i2u97_47:
  3115  0016C8  2EE8               	decfsz	wreg,f,c
  3116  0016CA  D7FE               	goto	i2u97_47
  3117  0016CC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3118  0016CE  D7FC               	goto	i2u97_47
  3119  0016D0  F000               	nop	
  3120                           
  3121                           ;lcd_utilities.c: 66: lcd_strobe();
  3122  0016D2  EC9A  F00D         	call	i2_lcd_strobe	;wreg free
  3123                           
  3124                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3125  0016D6  0E9C               	movlw	156
  3126  0016D8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3127  0016DA  0ED7               	movlw	215
  3128  0016DC                     i2u98_47:
  3129  0016DC  2EE8               	decfsz	wreg,f,c
  3130  0016DE  D7FE               	goto	i2u98_47
  3131  0016E0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3132  0016E2  D7FC               	goto	i2u98_47
  3133  0016E4  F000               	nop	
  3134  0016E6  0012               	return		;funcret
  3135  0016E8                     __end_ofi2_lcd_write_data:
  3136                           	opt stack 0
  3137                           pclatu	equ	0xFFB
  3138                           pclath	equ	0xFFA
  3139                           tblptru	equ	0xFF8
  3140                           tblptrh	equ	0xFF7
  3141                           tblptrl	equ	0xFF6
  3142                           tablat	equ	0xFF5
  3143                           prodh	equ	0xFF4
  3144                           prodl	equ	0xFF3
  3145                           intcon	equ	0xFF2
  3146                           intcon2	equ	0xFF1
  3147                           postinc0	equ	0xFEE
  3148                           fsr0h	equ	0xFEA
  3149                           fsr0l	equ	0xFE9
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           plusw1	equ	0xFE3
  3153                           fsr1h	equ	0xFE2
  3154                           fsr1l	equ	0xFE1
  3155                           indf2	equ	0xFDF
  3156                           postinc2	equ	0xFDE
  3157                           plusw2	equ	0xFDB
  3158                           fsr2h	equ	0xFDA
  3159                           fsr2l	equ	0xFD9
  3160                           status	equ	0xFD8
  3161                           
  3162 ;; *************** function i2_lcd_write_cmd *****************
  3163 ;; Defined at:
  3164 ;;		line 18 in file "lcd_utilities.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  cmd             1    wreg     unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  cmd             1    2[COMRAM] unsigned char 
  3169 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0
  3180 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3182 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3183 ;;Total ram usage:        3 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		i2_lcd_strobe
  3188 ;; This function is called by:
  3189 ;;		_ISR_Timer0_Int
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text15
  3194  0019A6                     __ptext15:
  3195                           	opt stack 0
  3196  0019A6                     i2_lcd_write_cmd:
  3197                           	opt stack 25
  3198                           
  3199                           ;incstack = 0
  3200                           ;i2lcd_write_cmd@cmd stored from wreg
  3201  0019A6  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3202                           
  3203                           ;lcd_utilities.c: 20: unsigned char temp2;
  3204                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3205  0019A8  9C83               	bcf	3971,6,c	;volatile
  3206                           
  3207                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3208  0019AA  0E3F               	movlw	63
  3209  0019AC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3210  0019AE  0E55               	movlw	85
  3211  0019B0                     i2u99_47:
  3212  0019B0  2EE8               	decfsz	wreg,f,c
  3213  0019B2  D7FE               	goto	i2u99_47
  3214  0019B4  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3215  0019B6  D7FC               	goto	i2u99_47
  3216  0019B8  F000               	nop	
  3217                           
  3218                           ;lcd_utilities.c: 23: temp2 = cmd;
  3219  0019BA  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3220                           
  3221                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3222  0019BE  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3223  0019C0  0B0F               	andlw	15
  3224  0019C2  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3225                           
  3226                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3227  0019C4  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3228  0019C6  0B0F               	andlw	15
  3229  0019C8  6E83               	movwf	3971,c	;volatile
  3230                           
  3231                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3232  0019CA  0E7D               	movlw	125
  3233  0019CC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3234  0019CE  0EAC               	movlw	172
  3235  0019D0                     i2u100_47:
  3236  0019D0  2EE8               	decfsz	wreg,f,c
  3237  0019D2  D7FE               	goto	i2u100_47
  3238  0019D4  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3239  0019D6  D7FC               	goto	i2u100_47
  3240                           
  3241                           ;lcd_utilities.c: 28: lcd_strobe();
  3242  0019D8  EC9A  F00D         	call	i2_lcd_strobe	;wreg free
  3243                           
  3244                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3245  0019DC  0E7D               	movlw	125
  3246  0019DE  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3247  0019E0  0EAC               	movlw	172
  3248  0019E2                     i2u101_47:
  3249  0019E2  2EE8               	decfsz	wreg,f,c
  3250  0019E4  D7FE               	goto	i2u101_47
  3251  0019E6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3252  0019E8  D7FC               	goto	i2u101_47
  3253                           
  3254                           ;lcd_utilities.c: 32: temp2 = cmd;
  3255  0019EA  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3256                           
  3257                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3258  0019EE  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3259  0019F0  0B0F               	andlw	15
  3260  0019F2  6E83               	movwf	3971,c	;volatile
  3261                           
  3262                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3263  0019F4  0E7D               	movlw	125
  3264  0019F6  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3265  0019F8  0EAC               	movlw	172
  3266  0019FA                     i2u102_47:
  3267  0019FA  2EE8               	decfsz	wreg,f,c
  3268  0019FC  D7FE               	goto	i2u102_47
  3269  0019FE  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3270  001A00  D7FC               	goto	i2u102_47
  3271                           
  3272                           ;lcd_utilities.c: 36: lcd_strobe();
  3273  001A02  EC9A  F00D         	call	i2_lcd_strobe	;wreg free
  3274                           
  3275                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3276  001A06  0E7D               	movlw	125
  3277  001A08  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3278  001A0A  0EAC               	movlw	172
  3279  001A0C                     i2u103_47:
  3280  001A0C  2EE8               	decfsz	wreg,f,c
  3281  001A0E  D7FE               	goto	i2u103_47
  3282  001A10  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3283  001A12  D7FC               	goto	i2u103_47
  3284  001A14  0012               	return		;funcret
  3285  001A16                     __end_ofi2_lcd_write_cmd:
  3286                           	opt stack 0
  3287                           pclatu	equ	0xFFB
  3288                           pclath	equ	0xFFA
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           intcon2	equ	0xFF1
  3297                           postinc0	equ	0xFEE
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           postdec1	equ	0xFE5
  3302                           plusw1	equ	0xFE3
  3303                           fsr1h	equ	0xFE2
  3304                           fsr1l	equ	0xFE1
  3305                           indf2	equ	0xFDF
  3306                           postinc2	equ	0xFDE
  3307                           plusw2	equ	0xFDB
  3308                           fsr2h	equ	0xFDA
  3309                           fsr2l	equ	0xFD9
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function i2_lcd_strobe *****************
  3313 ;; Defined at:
  3314 ;;		line 73 in file "lcd_utilities.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;		None               void
  3321 ;; Registers used:
  3322 ;;		wreg
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3330 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3331 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3332 ;;Total ram usage:        1 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		i2_lcd_write_cmd
  3338 ;;		i2_lcd_write_data
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text16
  3343  001B34                     __ptext16:
  3344                           	opt stack 0
  3345  001B34                     i2_lcd_strobe:
  3346                           	opt stack 25
  3347                           
  3348                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3349                           
  3350                           ;incstack = 0
  3351  001B34  8883               	bsf	3971,4,c	;volatile
  3352                           
  3353                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3354  001B36  0E7D               	movlw	125
  3355  001B38  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3356  001B3A  0EAC               	movlw	172
  3357  001B3C                     i2u104_47:
  3358  001B3C  2EE8               	decfsz	wreg,f,c
  3359  001B3E  D7FE               	goto	i2u104_47
  3360  001B40  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3361  001B42  D7FC               	goto	i2u104_47
  3362                           
  3363                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3364  001B44  9883               	bcf	3971,4,c	;volatile
  3365                           
  3366                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3367  001B46  0E7D               	movlw	125
  3368  001B48  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3369  001B4A  0EAC               	movlw	172
  3370  001B4C                     i2u105_47:
  3371  001B4C  2EE8               	decfsz	wreg,f,c
  3372  001B4E  D7FE               	goto	i2u105_47
  3373  001B50  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3374  001B52  D7FC               	goto	i2u105_47
  3375  001B54  0012               	return		;funcret
  3376  001B56                     __end_ofi2_lcd_strobe:
  3377                           	opt stack 0
  3378                           pclatu	equ	0xFFB
  3379                           pclath	equ	0xFFA
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           intcon	equ	0xFF2
  3387                           intcon2	equ	0xFF1
  3388                           postinc0	equ	0xFEE
  3389                           fsr0h	equ	0xFEA
  3390                           fsr0l	equ	0xFE9
  3391                           wreg	equ	0xFE8
  3392                           postdec1	equ	0xFE5
  3393                           plusw1	equ	0xFE3
  3394                           fsr1h	equ	0xFE2
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           plusw2	equ	0xFDB
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _int_2_char *****************
  3404 ;; Defined at:
  3405 ;;		line 17 in file "Main.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  int1            1    wreg     unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  int1            1    0[COMRAM] unsigned char 
  3410 ;;  char1           1    1[COMRAM] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      unsigned char 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0
  3421 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3424 ;;Total ram usage:        2 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_ISR_Timer0_Int
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text17
  3434  00176C                     __ptext17:
  3435                           	opt stack 0
  3436  00176C                     _int_2_char:
  3437                           	opt stack 26
  3438                           
  3439                           ;incstack = 0
  3440                           ;int_2_char@int1 stored from wreg
  3441  00176C  6E01               	movwf	int_2_char@int1,c
  3442                           
  3443                           ;Main.c: 19: char char1;
  3444                           ;Main.c: 20: switch (int1)
  3445  00176E  D017               	goto	i2l950
  3446  001770                     i2l928:
  3447  001770  0E30               	movlw	48
  3448  001772  D013               	goto	L22
  3449  001774                     i2l930:
  3450  001774  0E31               	movlw	49
  3451  001776  D011               	goto	L22
  3452  001778                     i2l932:
  3453  001778  0E32               	movlw	50
  3454  00177A  D00F               	goto	L22
  3455  00177C                     i2l934:
  3456  00177C  0E33               	movlw	51
  3457  00177E  D00D               	goto	L22
  3458  001780                     i2l936:
  3459  001780  0E34               	movlw	52
  3460  001782  D00B               	goto	L22
  3461  001784                     i2l938:
  3462  001784  0E35               	movlw	53
  3463  001786  D009               	goto	L22
  3464  001788                     i2l940:
  3465  001788  0E36               	movlw	54
  3466  00178A  D007               	goto	L22
  3467  00178C                     i2l942:
  3468  00178C  0E37               	movlw	55
  3469  00178E  D005               	goto	L22
  3470  001790                     i2l944:
  3471  001790  0E38               	movlw	56
  3472  001792  D003               	goto	L22
  3473  001794                     i2l946:
  3474  001794  0E39               	movlw	57
  3475  001796  D001               	goto	L22
  3476  001798                     i2l948:
  3477  001798  0E3F               	movlw	63
  3478  00179A                     L22:
  3479  00179A  6E02               	movwf	int_2_char@char1,c
  3480                           
  3481                           ;Main.c: 33: }
  3482  00179C  D020               	goto	i2l96
  3483  00179E                     i2l950:
  3484  00179E  5001               	movf	int_2_char@int1,w,c
  3485                           
  3486                           ; Switch size 1, requested type "space"
  3487                           ; Number of cases is 10, Range of values is 0 to 9
  3488                           ; switch strategies available:
  3489                           ; Name         Instructions Cycles
  3490                           ; simple_byte           31    16 (average)
  3491                           ;	Chosen strategy is simple_byte
  3492  0017A0  0A00               	xorlw	0	; case 0
  3493  0017A2  B4D8               	btfsc	status,2,c
  3494  0017A4  D7E5               	goto	i2l928
  3495  0017A6  0A01               	xorlw	1	; case 1
  3496  0017A8  B4D8               	btfsc	status,2,c
  3497  0017AA  D7E4               	goto	i2l930
  3498  0017AC  0A03               	xorlw	3	; case 2
  3499  0017AE  B4D8               	btfsc	status,2,c
  3500  0017B0  D7E3               	goto	i2l932
  3501  0017B2  0A01               	xorlw	1	; case 3
  3502  0017B4  B4D8               	btfsc	status,2,c
  3503  0017B6  D7E2               	goto	i2l934
  3504  0017B8  0A07               	xorlw	7	; case 4
  3505  0017BA  B4D8               	btfsc	status,2,c
  3506  0017BC  D7E1               	goto	i2l936
  3507  0017BE  0A01               	xorlw	1	; case 5
  3508  0017C0  B4D8               	btfsc	status,2,c
  3509  0017C2  D7E0               	goto	i2l938
  3510  0017C4  0A03               	xorlw	3	; case 6
  3511  0017C6  B4D8               	btfsc	status,2,c
  3512  0017C8  D7DF               	goto	i2l940
  3513  0017CA  0A01               	xorlw	1	; case 7
  3514  0017CC  B4D8               	btfsc	status,2,c
  3515  0017CE  D7DE               	goto	i2l942
  3516  0017D0  0A0F               	xorlw	15	; case 8
  3517  0017D2  B4D8               	btfsc	status,2,c
  3518  0017D4  D7DD               	goto	i2l944
  3519  0017D6  0A01               	xorlw	1	; case 9
  3520  0017D8  B4D8               	btfsc	status,2,c
  3521  0017DA  D7DC               	goto	i2l946
  3522  0017DC  D7DD               	goto	i2l948
  3523  0017DE                     i2l96:
  3524                           
  3525                           ;Main.c: 34: return(char1);
  3526  0017DE  5002               	movf	int_2_char@char1,w,c
  3527  0017E0  0012               	return		;funcret
  3528  0017E2                     __end_of_int_2_char:
  3529                           	opt stack 0
  3530                           pclatu	equ	0xFFB
  3531                           pclath	equ	0xFFA
  3532                           tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           prodh	equ	0xFF4
  3537                           prodl	equ	0xFF3
  3538                           intcon	equ	0xFF2
  3539                           intcon2	equ	0xFF1
  3540                           postinc0	equ	0xFEE
  3541                           fsr0h	equ	0xFEA
  3542                           fsr0l	equ	0xFE9
  3543                           wreg	equ	0xFE8
  3544                           postdec1	equ	0xFE5
  3545                           plusw1	equ	0xFE3
  3546                           fsr1h	equ	0xFE2
  3547                           fsr1l	equ	0xFE1
  3548                           indf2	equ	0xFDF
  3549                           postinc2	equ	0xFDE
  3550                           plusw2	equ	0xFDB
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function ___awdiv *****************
  3556 ;; Defined at:
  3557 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  dividend        2    0[COMRAM] int 
  3560 ;;  divisor         2    2[COMRAM] int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  quotient        2    6[COMRAM] int 
  3563 ;;  sign            1    5[COMRAM] unsigned char 
  3564 ;;  counter         1    4[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2    0[COMRAM] int 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3574 ;;      Params:         4       0       0       0       0       0       0       0       0
  3575 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3577 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3578 ;;Total ram usage:        8 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_ISR_Timer0_Int
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text18
  3588  0016E8                     __ptext18:
  3589                           	opt stack 0
  3590  0016E8                     ___awdiv:
  3591                           	opt stack 26
  3592                           
  3593                           ;incstack = 0
  3594  0016E8  0E00               	movlw	0
  3595  0016EA  6E06               	movwf	___awdiv@sign,c
  3596  0016EC  AE04               	btfss	___awdiv@divisor+1,7,c
  3597  0016EE  D006               	goto	i2l1678
  3598  0016F0  6C03               	negf	___awdiv@divisor,c
  3599  0016F2  1E04               	comf	___awdiv@divisor+1,f,c
  3600  0016F4  B0D8               	btfsc	status,0,c
  3601  0016F6  2A04               	incf	___awdiv@divisor+1,f,c
  3602  0016F8  0E01               	movlw	1
  3603  0016FA  6E06               	movwf	___awdiv@sign,c
  3604  0016FC                     i2l1678:
  3605  0016FC  AE02               	btfss	___awdiv@dividend+1,7,c
  3606  0016FE  D006               	goto	i2l1684
  3607  001700  6C01               	negf	___awdiv@dividend,c
  3608  001702  1E02               	comf	___awdiv@dividend+1,f,c
  3609  001704  B0D8               	btfsc	status,0,c
  3610  001706  2A02               	incf	___awdiv@dividend+1,f,c
  3611  001708  0E01               	movlw	1
  3612  00170A  1A06               	xorwf	___awdiv@sign,f,c
  3613  00170C                     i2l1684:
  3614  00170C  0E00               	movlw	0
  3615  00170E  6E08               	movwf	___awdiv@quotient+1,c
  3616  001710  0E00               	movlw	0
  3617  001712  6E07               	movwf	___awdiv@quotient,c
  3618  001714  5003               	movf	___awdiv@divisor,w,c
  3619  001716  1004               	iorwf	___awdiv@divisor+1,w,c
  3620  001718  B4D8               	btfsc	status,2,c
  3621  00171A  D01C               	goto	i2l1706
  3622  00171C  0E01               	movlw	1
  3623  00171E  6E05               	movwf	___awdiv@counter,c
  3624  001720  D004               	goto	i2l1692
  3625  001722                     i2l1690:
  3626  001722  90D8               	bcf	status,0,c
  3627  001724  3603               	rlcf	___awdiv@divisor,f,c
  3628  001726  3604               	rlcf	___awdiv@divisor+1,f,c
  3629  001728  2A05               	incf	___awdiv@counter,f,c
  3630  00172A                     i2l1692:
  3631  00172A  AE04               	btfss	___awdiv@divisor+1,7,c
  3632  00172C  D7FA               	goto	i2l1690
  3633  00172E                     i2l1694:
  3634  00172E  90D8               	bcf	status,0,c
  3635  001730  3607               	rlcf	___awdiv@quotient,f,c
  3636  001732  3608               	rlcf	___awdiv@quotient+1,f,c
  3637  001734  5003               	movf	___awdiv@divisor,w,c
  3638  001736  5C01               	subwf	___awdiv@dividend,w,c
  3639  001738  5004               	movf	___awdiv@divisor+1,w,c
  3640  00173A  5802               	subwfb	___awdiv@dividend+1,w,c
  3641  00173C  A0D8               	btfss	status,0,c
  3642  00173E  D005               	goto	i2l1702
  3643  001740  5003               	movf	___awdiv@divisor,w,c
  3644  001742  5E01               	subwf	___awdiv@dividend,f,c
  3645  001744  5004               	movf	___awdiv@divisor+1,w,c
  3646  001746  5A02               	subwfb	___awdiv@dividend+1,f,c
  3647  001748  8007               	bsf	___awdiv@quotient,0,c
  3648  00174A                     i2l1702:
  3649  00174A  90D8               	bcf	status,0,c
  3650  00174C  3204               	rrcf	___awdiv@divisor+1,f,c
  3651  00174E  3203               	rrcf	___awdiv@divisor,f,c
  3652  001750  2E05               	decfsz	___awdiv@counter,f,c
  3653  001752  D7ED               	goto	i2l1694
  3654  001754                     i2l1706:
  3655  001754  5006               	movf	___awdiv@sign,w,c
  3656  001756  B4D8               	btfsc	status,2,c
  3657  001758  D004               	goto	i2l1710
  3658  00175A  6C07               	negf	___awdiv@quotient,c
  3659  00175C  1E08               	comf	___awdiv@quotient+1,f,c
  3660  00175E  B0D8               	btfsc	status,0,c
  3661  001760  2A08               	incf	___awdiv@quotient+1,f,c
  3662  001762                     i2l1710:
  3663  001762  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3664  001766  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3665  00176A  0012               	return	
  3666  00176C                     __end_of___awdiv:
  3667                           	opt stack 0
  3668                           pclatu	equ	0xFFB
  3669                           pclath	equ	0xFFA
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           intcon2	equ	0xFF1
  3678                           postinc0	equ	0xFEE
  3679                           fsr0h	equ	0xFEA
  3680                           fsr0l	equ	0xFE9
  3681                           wreg	equ	0xFE8
  3682                           postdec1	equ	0xFE5
  3683                           plusw1	equ	0xFE3
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           plusw2	equ	0xFDB
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           pclatu	equ	0xFFB
  3693                           pclath	equ	0xFFA
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           intcon2	equ	0xFF1
  3702                           postinc0	equ	0xFEE
  3703                           fsr0h	equ	0xFEA
  3704                           fsr0l	equ	0xFE9
  3705                           wreg	equ	0xFE8
  3706                           postdec1	equ	0xFE5
  3707                           plusw1	equ	0xFE3
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           plusw2	equ	0xFDB
  3713                           fsr2h	equ	0xFDA
  3714                           fsr2l	equ	0xFD9
  3715                           status	equ	0xFD8
  3716                           
  3717                           	psect	rparam
  3718  0000                     pclatu	equ	0xFFB
  3719                           pclath	equ	0xFFA
  3720                           tblptru	equ	0xFF8
  3721                           tblptrh	equ	0xFF7
  3722                           tblptrl	equ	0xFF6
  3723                           tablat	equ	0xFF5
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           intcon	equ	0xFF2
  3727                           intcon2	equ	0xFF1
  3728                           postinc0	equ	0xFEE
  3729                           fsr0h	equ	0xFEA
  3730                           fsr0l	equ	0xFE9
  3731                           wreg	equ	0xFE8
  3732                           postdec1	equ	0xFE5
  3733                           plusw1	equ	0xFE3
  3734                           fsr1h	equ	0xFE2
  3735                           fsr1l	equ	0xFE1
  3736                           indf2	equ	0xFDF
  3737                           postinc2	equ	0xFDE
  3738                           plusw2	equ	0xFDB
  3739                           fsr2h	equ	0xFDA
  3740                           fsr2l	equ	0xFD9
  3741                           status	equ	0xFD8
  3742                           
  3743                           	psect	temp
  3744  00003A                     btemp:
  3745                           	opt stack 0
  3746  00003A                     	ds	1
  3747  0000                     int$flags	set	btemp
  3748                           pclatu	equ	0xFFB
  3749                           pclath	equ	0xFFA
  3750                           tblptru	equ	0xFF8
  3751                           tblptrh	equ	0xFF7
  3752                           tblptrl	equ	0xFF6
  3753                           tablat	equ	0xFF5
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           intcon2	equ	0xFF1
  3758                           postinc0	equ	0xFEE
  3759                           fsr0h	equ	0xFEA
  3760                           fsr0l	equ	0xFE9
  3761                           wreg	equ	0xFE8
  3762                           postdec1	equ	0xFE5
  3763                           plusw1	equ	0xFE3
  3764                           fsr1h	equ	0xFE2
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           postinc2	equ	0xFDE
  3768                           plusw2	equ	0xFDB
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        84
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      57
    BANK0           160     30     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _lcd_init->_lcd_write_cmd
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4120
                                             47 COMRAM     1     1      0
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     159
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1092
                                              0 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0     956
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      48
                                             28 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     240
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      72       5       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      39       1       60.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB      20        0.0%
DATA                 0      0      AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 03 11:13:25 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1ABC  
                                   l36 1AC6                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l112 18C2  
                                  l169 192C                                    l179 1B04  
                                  u400 1AB2                                    u501 14D6  
                                  u531 13E2                                    u471 11B4  
                                  u561 12EE                                    u807 160C  
                                  u817 1624                                    u907 1B2A  
                                  u827 1634                                    u917 1AF6  
                                  u837 1648                                    u757 180E  
                                  u847 1940                                    u767 1848  
                                  u857 1960                                    u777 15CA  
                                  u867 1972                                    u787 15EA  
                                  u877 198A                                    u797 15FA  
                                  u887 199C                                    u897 1B1A  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4444 101B                                   l1502 11C8  
                                 l1440 1858                                   l1600 1400  
                                 l1450 186C                                   l1442 185C  
                                 l1514 11F8                                   l1506 11D2  
                                 l1452 1870                                   l1444 1860  
                                 l1460 1882                                   l1454 1874  
                                 l1446 1864                                   l1456 1878  
                                 l1448 1868                                   l1560 14F4  
                                 l1608 1426                                   l1640 130C  
                                 l1458 187C                                   l1466 1AF0  
                                 l1556 14EA                                   l1636 1302  
                                 l1492 181E                                   l1484 17F8  
                                 l1568 151A                                   l1648 1332  
                                 l1488 1808                                   l1596 13F6  
                                 l1860 1902                                   l1854 18EE  
                                 l1866 1916                                   i2l96 17DE  
               __end_of_lcd_write_data 1654                                   _main 18C6  
                                 _hour 0031                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 003A                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 16E8                           ___param_bank 000010  
                                ?_main 0001                        __end_of___awdiv 176C  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l130 116E  
                                i2l930 1774                                  i2l940 1788  
                                i2l932 1778                                  i2l942 178C  
                                i2l934 177C                                  i2l950 179E  
                                i2l944 1790                                  i2l936 1780  
                                i2l928 1770                                  i2l946 1794  
                                i2l938 1784                                  i2l948 1798  
                      ___awdiv@counter 0005                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISD 000F95  
                     lcd_write_cmd@cmd 001F                                  _hourA 0032  
                                _hourB 0033                                  _hourC 0034  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 001D                        __initialization 1A6A  
                         __end_of_main 1936                                 ??_main 0030  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1B34                                 i2l1710 1762  
                               i2l1702 174A                                 i2l1706 1754  
                               i2l1690 1722                                 i2l1692 172A  
                               i2l1684 170C                                 i2l1694 172E  
                               i2l1678 16FC                                 i2l1792 108E  
                      ??_lcd_write_cmd 001E                       __end_of_delay_ms 1B12  
                     __end_of_lcd_init 1854                         char_2_int@int1 001E  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1AA4                                 clear_0 1A70  
                     ___awdiv@quotient 0007                                 _minute 0035  
                               _second 0039                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                           __accesstop 0060                __end_of__initialization 1A96  
                        getkey@keycode 002F                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1A16                             _char_2_int 1854  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                                i2u92_47 165E  
                              i2u93_47 167E                                i2u94_47 168E  
                              i2u95_47 16A0                                i2u96_47 16B8  
                              i2u97_47 16C8                                i2u98_47 16DC  
                     ??_lcd_write_data 001E                                i2u99_47 19B0  
                           _lcd_strobe 1B12               __size_of_SetupAlarmTimeA 00F4  
             __size_of_SetupAlarmTimeB 00F4               __size_of_SetupAlarmTimeC 00F4  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                             _int_2_char 176C  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 16E8  
                         __psmallconst 101A                        __size_of_getkey 003A  
                      i2_lcd_write_cmd 19A6                                __pcinit 1A6A  
                   main@displayUpdated 0030                                __ramtop 0800  
                              __ptext0 18C6                                __ptext1 17E2  
                              __ptext2 1B56                                __ptext3 11AA  
                              __ptext4 12E4                                __ptext5 13D8  
                              __ptext6 14CC                                __ptext7 15C0  
                              __ptext8 1936                                __ptext9 1B12  
                            _T0CONbits 000FD5                         SetupTime@F4486 009F  
                              _minuteA 0036                                _minuteB 0037  
                              _minuteC 0038                             ??_delay_ms 001F  
                          ?_char_2_int 0001                             ??_lcd_init 0021  
                       __pintcode_body 102E                   end_of_initialization 1A96  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00D1                         SetupTime@hour1 00CB  
                        __Lmediumconst 0000                                int_func 102E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                  SetupAlarmTimeA@hour10 00CA  
                            _PORTAbits 000F80                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00CA  
                SetupAlarmTimeC@hour10 00CA                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0030  
                    ??_SetupAlarmTimeB 0030                      ??_SetupAlarmTimeC 0030  
                __end_of_lcd_write_cmd 19A6                __end_ofi2_lcd_write_cmd 1A16  
                  __size_of_char_2_int 0072                         __end_of_getkey 1ADE  
                  start_initialization 1A6A                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00CC  
                    SetupTime@second10 00CE                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00D0                            __pbssCOMRAM 0031  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                        ?i2_lcd_strobe 0001                   SetupAlarmTimeA@F4496 0060  
                 SetupAlarmTimeB@F4506 0075                              delay_ms@i 001D  
                            delay_ms@j 0020                   SetupAlarmTimeC@F4516 008A  
                  ISR_Timer0_Int@hour1 0017                               i2u100_47 19D0  
                             i2u101_47 19E2                               i2u102_47 19FA  
                             i2u103_47 1A0C                               i2u104_47 1B3C  
                             i2u105_47 1B4C                               _RCONbits 000FD0  
                 SetupAlarmTimeA@ctemp 00CF                   SetupAlarmTimeA@hour1 00CB  
                 SetupAlarmTimeB@ctemp 00CF                     __end_of_char_2_int 18C6  
                 SetupAlarmTimeB@hour1 00CB                   SetupAlarmTimeC@ctemp 00CF  
                 SetupAlarmTimeC@hour1 00CB                              lcd_init@i 0022  
                  lcd_write_data@temp1 0020                        _SetupAlarmTimeA 14CC  
                      _SetupAlarmTimeB 13D8                        _SetupAlarmTimeC 12E4  
                       ??i2_lcd_strobe 0001                           ??_lcd_strobe 001D  
                     SetupTime@Message 00B4                              copy_data0 1A8A  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1B72  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1B56  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                          ??_SetupTime 0030                       SetupTime@minute1 00CD  
                     SetupTime@second1 00CF                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1B34                       SetupTime@outchar 00C9  
                   __end_of_int_2_char 17E2                       i2_lcd_write_data 1654  
                             _delay_ms 1ADE                               __ptext10 1AA4  
                             __ptext11 1ADE                               __ptext12 1854  
                             __ptext14 1654                               __ptext15 19A6  
                             __ptext16 1B34                               __ptext17 176C  
                             __ptext18 16E8                               _lcd_init 17E2  
                        __size_of_main 0070          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 003A                __end_of_SetupAlarmTimeA 15C0  
              __end_of_SetupAlarmTimeB 14CC                __end_of_SetupAlarmTimeC 13D8  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00CA  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                 __end_ofi2_lcd_strobe 1B56                 SetupAlarmTimeA@Message 00B4  
               SetupAlarmTimeB@Message 00B4                 SetupAlarmTimeC@Message 00B4  
              SetupAlarmTimeA@minute10 00CC                SetupAlarmTimeA@msgindex 00CE  
              SetupAlarmTimeB@minute10 00CC                SetupAlarmTimeB@msgindex 00CE  
              SetupAlarmTimeC@minute10 00CC                SetupAlarmTimeC@msgindex 00CE  
               SetupAlarmTimeA@minute1 00CD                 SetupAlarmTimeB@minute1 00CD  
               SetupAlarmTimeA@outchar 00C9                 SetupAlarmTimeC@minute1 00CD  
               SetupAlarmTimeB@outchar 00C9                         _lcd_write_data 15C0  
               SetupAlarmTimeC@outchar 00C9                          _lcd_write_cmd 1936  
