

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Aug 15 16:35:09 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001BEE                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for version@F4451
    44  001BEE  45                 	db	69
    45  001BEF  54                 	db	84
    46  001BF0  54                 	db	84
    47  001BF1  20                 	db	32
    48  001BF2  56                 	db	86
    49  001BF3  65                 	db	101
    50  001BF4  72                 	db	114
    51  001BF5  73                 	db	115
    52  001BF6  69                 	db	105
    53  001BF7  6F                 	db	111
    54  001BF8  6E                 	db	110
    55  001BF9  20                 	db	32
    56  001BFA  31                 	db	49
    57  001BFB  2E                 	db	46
    58  001BFC  33                 	db	51
    59  001BFD  20                 	db	32
    60  001BFE  20                 	db	32
    61  001BFF  20                 	db	32
    62  001C00  20                 	db	32
    63  001C01  20                 	db	32
    64  001C02  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001A7A                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4496
    71  001A7A  53                 	db	83
    72  001A7B  75                 	db	117
    73  001A7C  62                 	db	98
    74  001A7D  6A                 	db	106
    75  001A7E  65                 	db	101
    76  001A7F  63                 	db	99
    77  001A80  74                 	db	116
    78  001A81  20                 	db	32
    79  001A82  41                 	db	65
    80  001A83  20                 	db	32
    81  001A84  54                 	db	84
    82  001A85  69                 	db	105
    83  001A86  6D                 	db	109
    84  001A87  65                 	db	101
    85  001A88  20                 	db	32
    86  001A89  68                 	db	104
    87  001A8A  68                 	db	104
    88  001A8B  6D                 	db	109
    89  001A8C  6D                 	db	109
    90  001A8D  3A                 	db	58
    91  001A8E  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4506
    94  001A8F  53                 	db	83
    95  001A90  75                 	db	117
    96  001A91  62                 	db	98
    97  001A92  6A                 	db	106
    98  001A93  65                 	db	101
    99  001A94  63                 	db	99
   100  001A95  74                 	db	116
   101  001A96  20                 	db	32
   102  001A97  42                 	db	66
   103  001A98  20                 	db	32
   104  001A99  54                 	db	84
   105  001A9A  69                 	db	105
   106  001A9B  6D                 	db	109
   107  001A9C  65                 	db	101
   108  001A9D  20                 	db	32
   109  001A9E  68                 	db	104
   110  001A9F  68                 	db	104
   111  001AA0  6D                 	db	109
   112  001AA1  6D                 	db	109
   113  001AA2  3A                 	db	58
   114  001AA3  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4516
   117  001AA4  53                 	db	83
   118  001AA5  75                 	db	117
   119  001AA6  62                 	db	98
   120  001AA7  6A                 	db	106
   121  001AA8  65                 	db	101
   122  001AA9  63                 	db	99
   123  001AAA  74                 	db	116
   124  001AAB  20                 	db	32
   125  001AAC  43                 	db	67
   126  001AAD  20                 	db	32
   127  001AAE  54                 	db	84
   128  001AAF  69                 	db	105
   129  001AB0  6D                 	db	109
   130  001AB1  65                 	db	101
   131  001AB2  20                 	db	32
   132  001AB3  68                 	db	104
   133  001AB4  68                 	db	104
   134  001AB5  6D                 	db	109
   135  001AB6  6D                 	db	109
   136  001AB7  3A                 	db	58
   137  001AB8  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4486
   140  001AB9  53                 	db	83
   141  001ABA  65                 	db	101
   142  001ABB  74                 	db	116
   143  001ABC  20                 	db	32
   144  001ABD  74                 	db	116
   145  001ABE  69                 	db	105
   146  001ABF  6D                 	db	109
   147  001AC0  65                 	db	101
   148  001AC1  20                 	db	32
   149  001AC2  68                 	db	104
   150  001AC3  68                 	db	104
   151  001AC4  6D                 	db	109
   152  001AC5  6D                 	db	109
   153  001AC6  73                 	db	115
   154  001AC7  73                 	db	115
   155  001AC8  3A                 	db	58
   156  001AC9  20                 	db	32
   157  001ACA  20                 	db	32
   158  001ACB  20                 	db	32
   159  001ACC  20                 	db	32
   160  001ACD  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4444:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4444:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTB	set	3969
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTDbits	set	3971
   197  0000                     _RCONbits	set	4048
   198  0000                     _T0CON	set	4053
   199  0000                     _T0CONbits	set	4053
   200  0000                     _TMR0H	set	4055
   201  0000                     _TMR0L	set	4054
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISD	set	3989
   204  00102D  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  001A20                     __pcinit:
   210                           	opt stack 0
   211  001A20                     start_initialization:
   212                           	opt stack 0
   213  001A20                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Clear objects allocated to COMRAM (9 bytes)
   217  001A20  EE00  F039         	lfsr	0,__pbssCOMRAM
   218  001A24  0E09               	movlw	9
   219  001A26                     clear_0:
   220  001A26  6AEE               	clrf	postinc0,c
   221  001A28  06E8               	decf	wreg,f,c
   222  001A2A  E1FD               	bnz	clear_0
   223                           
   224                           ; Initialize objects allocated to BANK0 (84 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226  001A2C  0E7A               	movlw	low __pidataBANK0
   227  001A2E  6EF6               	movwf	tblptrl,c
   228  001A30  0E1A               	movlw	high __pidataBANK0
   229  001A32  6EF7               	movwf	tblptrh,c
   230  001A34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   231  001A36  6EF8               	movwf	tblptru,c
   232  001A38  EE00  F060         	lfsr	0,__pdataBANK0
   233  001A3C  EE10 F054          	lfsr	1,84
   234  001A40                     copy_data0:
   235  001A40  0009               	tblrd		*+
   236  001A42  CFF5 FFEE          	movff	tablat,postinc0
   237  001A46  50E5               	movf	postdec1,w,c
   238  001A48  50E1               	movf	fsr1l,w,c
   239  001A4A  E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to COMRAM (21 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243  001A4C  0EEE               	movlw	low __pidataCOMRAM
   244  001A4E  6EF6               	movwf	tblptrl,c
   245  001A50  0E1B               	movlw	high __pidataCOMRAM
   246  001A52  6EF7               	movwf	tblptrh,c
   247  001A54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248  001A56  6EF8               	movwf	tblptru,c
   249  001A58  EE00  F024         	lfsr	0,__pdataCOMRAM
   250  001A5C  EE10 F015          	lfsr	1,21
   251  001A60                     copy_data1:
   252  001A60  0009               	tblrd		*+
   253  001A62  CFF5 FFEE          	movff	tablat,postinc0
   254  001A66  50E5               	movf	postdec1,w,c
   255  001A68  50E1               	movf	fsr1l,w,c
   256  001A6A  E1FA               	bnz	copy_data1
   257  001A6C                     end_of_initialization:
   258                           	opt stack 0
   259  001A6C                     __end_of__initialization:
   260                           	opt stack 0
   261  001A6C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  001A6E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  001A70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  001A72  6EF8               	movwf	tblptru,c
   265  001A74  0100               	movlb	0
   266  001A76  EFD9  F00C         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  000039                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000039                     _hour:
   280                           	opt stack 0
   281  000039                     	ds	1
   282  00003A                     _hourA:
   283                           	opt stack 0
   284  00003A                     	ds	1
   285  00003B                     _hourB:
   286                           	opt stack 0
   287  00003B                     	ds	1
   288  00003C                     _hourC:
   289                           	opt stack 0
   290  00003C                     	ds	1
   291  00003D                     _minute:
   292                           	opt stack 0
   293  00003D                     	ds	1
   294  00003E                     _minuteA:
   295                           	opt stack 0
   296  00003E                     	ds	1
   297  00003F                     _minuteB:
   298                           	opt stack 0
   299  00003F                     	ds	1
   300  000040                     _minuteC:
   301                           	opt stack 0
   302  000040                     	ds	1
   303  000041                     _second:
   304                           	opt stack 0
   305  000041                     	ds	1
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	dataCOMRAM
   316  000024                     __pdataCOMRAM:
   317                           	opt stack 0
   318  000024                     version@F4451:
   319                           	opt stack 0
   320  000024                     	ds	21
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	dataBANK0
   331  000060                     __pdataBANK0:
   332                           	opt stack 0
   333  000060                     SetupAlarmTimeA@F4496:
   334                           	opt stack 0
   335  000060                     	ds	21
   336  000075                     SetupAlarmTimeB@F4506:
   337                           	opt stack 0
   338  000075                     	ds	21
   339  00008A                     SetupAlarmTimeC@F4516:
   340                           	opt stack 0
   341  00008A                     	ds	21
   342  00009F                     SetupTime@F4486:
   343                           	opt stack 0
   344  00009F                     	ds	21
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackBANK0
   355  0000B4                     __pcstackBANK0:
   356                           	opt stack 0
   357  0000B4                     getkey@lookup:
   358                           	opt stack 0
   359  0000B4                     version@Version:
   360                           	opt stack 0
   361                           
   362                           ; 21 bytes @ 0x0
   363  0000B4                     	ds	18
   364  0000C6                     getkey@keycode:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x12
   368  0000C6                     	ds	1
   369  0000C7                     SetupTime@Message:
   370                           	opt stack 0
   371  0000C7                     SetupAlarmTimeA@Message:
   372                           	opt stack 0
   373  0000C7                     SetupAlarmTimeB@Message:
   374                           	opt stack 0
   375  0000C7                     SetupAlarmTimeC@Message:
   376                           	opt stack 0
   377                           
   378                           ; 21 bytes @ 0x13
   379  0000C7                     	ds	2
   380  0000C9                     version@outchar:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x15
   384  0000C9                     	ds	1
   385  0000CA                     version@msgindex:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x16
   389  0000CA                     	ds	18
   390  0000DC                     SetupTime@outchar:
   391                           	opt stack 0
   392  0000DC                     SetupAlarmTimeA@outchar:
   393                           	opt stack 0
   394  0000DC                     SetupAlarmTimeB@outchar:
   395                           	opt stack 0
   396  0000DC                     SetupAlarmTimeC@outchar:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x28
   400  0000DC                     	ds	1
   401  0000DD                     SetupTime@hour10:
   402                           	opt stack 0
   403  0000DD                     SetupAlarmTimeA@hour10:
   404                           	opt stack 0
   405  0000DD                     SetupAlarmTimeB@hour10:
   406                           	opt stack 0
   407  0000DD                     SetupAlarmTimeC@hour10:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x29
   411  0000DD                     	ds	1
   412  0000DE                     SetupTime@hour1:
   413                           	opt stack 0
   414  0000DE                     SetupAlarmTimeA@hour1:
   415                           	opt stack 0
   416  0000DE                     SetupAlarmTimeB@hour1:
   417                           	opt stack 0
   418  0000DE                     SetupAlarmTimeC@hour1:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x2A
   422  0000DE                     	ds	1
   423  0000DF                     SetupTime@minute10:
   424                           	opt stack 0
   425  0000DF                     SetupAlarmTimeA@minute10:
   426                           	opt stack 0
   427  0000DF                     SetupAlarmTimeB@minute10:
   428                           	opt stack 0
   429  0000DF                     SetupAlarmTimeC@minute10:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x2B
   433  0000DF                     	ds	1
   434  0000E0                     SetupTime@minute1:
   435                           	opt stack 0
   436  0000E0                     SetupAlarmTimeA@minute1:
   437                           	opt stack 0
   438  0000E0                     SetupAlarmTimeB@minute1:
   439                           	opt stack 0
   440  0000E0                     SetupAlarmTimeC@minute1:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x2C
   444  0000E0                     	ds	1
   445  0000E1                     SetupTime@second10:
   446                           	opt stack 0
   447  0000E1                     SetupAlarmTimeA@msgindex:
   448                           	opt stack 0
   449  0000E1                     SetupAlarmTimeB@msgindex:
   450                           	opt stack 0
   451  0000E1                     SetupAlarmTimeC@msgindex:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x2D
   455  0000E1                     	ds	1
   456  0000E2                     SetupTime@second1:
   457                           	opt stack 0
   458  0000E2                     SetupAlarmTimeA@ctemp:
   459                           	opt stack 0
   460  0000E2                     SetupAlarmTimeB@ctemp:
   461                           	opt stack 0
   462  0000E2                     SetupAlarmTimeC@ctemp:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x2E
   466  0000E2                     	ds	1
   467  0000E3                     SetupTime@msgindex:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x2F
   471  0000E3                     	ds	1
   472  0000E4                     SetupTime@ctemp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x30
   476  0000E4                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	opt stack 0
   489  000001                     ??i2_lcd_strobe:
   490  000001                     ?___awdiv:
   491                           	opt stack 0
   492  000001                     int_2_char@int1:
   493                           	opt stack 0
   494  000001                     ___awdiv@dividend:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000001                     	ds	1
   499  000002                     ??i2_lcd_write_cmd:
   500  000002                     ??i2_lcd_write_data:
   501  000002                     int_2_char@char1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505  000002                     	ds	1
   506  000003                     i2lcd_write_cmd@cmd:
   507                           	opt stack 0
   508  000003                     i2lcd_write_data@data:
   509                           	opt stack 0
   510  000003                     ___awdiv@divisor:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000003                     	ds	1
   515  000004                     i2lcd_write_cmd@temp2:
   516                           	opt stack 0
   517  000004                     i2lcd_write_data@temp1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  000004                     	ds	1
   522  000005                     ___awdiv@counter:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x5
   531  000006                     	ds	1
   532  000007                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	2
   537  000009                     ??_ISR_Timer0_Int:
   538                           
   539                           ; 0 bytes @ 0x8
   540  000009                     	ds	14
   541  000017                     ISR_Timer0_Int@hour1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x16
   545  000017                     	ds	1
   546  000018                     ISR_Timer0_Int@minute1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x17
   550  000018                     	ds	1
   551  000019                     ISR_Timer0_Int@second1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     ISR_Timer0_Int@hour10:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     ISR_Timer0_Int@minute10:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x1A
   565  00001B                     	ds	1
   566  00001C                     ISR_Timer0_Int@second10:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1B
   570  00001C                     	ds	1
   571  00001D                     ??_lcd_strobe:
   572  00001D                     char_2_int@char1:
   573                           	opt stack 0
   574  00001D                     delay_ms@i:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x1C
   578  00001D                     	ds	1
   579  00001E                     ??_lcd_write_cmd:
   580  00001E                     ??_lcd_write_data:
   581  00001E                     char_2_int@int1:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1D
   585  00001E                     	ds	1
   586  00001F                     ??_delay_ms:
   587  00001F                     lcd_write_cmd@cmd:
   588                           	opt stack 0
   589  00001F                     lcd_write_data@data:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x1E
   593  00001F                     	ds	1
   594  000020                     lcd_write_cmd@temp2:
   595                           	opt stack 0
   596  000020                     lcd_write_data@temp1:
   597                           	opt stack 0
   598  000020                     delay_ms@j:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x1F
   602  000020                     	ds	1
   603  000021                     ??_lcd_init:
   604                           
   605                           ; 0 bytes @ 0x20
   606  000021                     	ds	1
   607  000022                     lcd_init@i:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x21
   611  000022                     	ds	2
   612  000024                     tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           ; 0 bytes @ 0x23
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 311 in file "Main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;		None               void
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called:    6
   647 ;; This function calls:
   648 ;;		_SetupAlarmTimeA
   649 ;;		_SetupAlarmTimeB
   650 ;;		_SetupAlarmTimeC
   651 ;;		_SetupTime
   652 ;;		_SetupTimerInterruptRegisters
   653 ;;		_lcd_init
   654 ;;		_version
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  0019B2                     __ptext0:
   662                           	opt stack 0
   663  0019B2                     _main:
   664                           	opt stack 25
   665                           
   666                           ;Main.c: 313: ADCON1 = 0x0F;
   667                           
   668                           ;incstack = 0
   669  0019B2  0E0F               	movlw	15
   670  0019B4  6EC1               	movwf	4033,c	;volatile
   671                           
   672                           ;Main.c: 314: CMCON = 0x07;
   673  0019B6  0E07               	movlw	7
   674  0019B8  6EB4               	movwf	4020,c	;volatile
   675                           
   676                           ;Main.c: 316: lcd_init();
   677  0019BA  ECF7  F00B         	call	_lcd_init	;wreg free
   678                           
   679                           ;Main.c: 317: TRISA = 0b00000000;
   680  0019BE  0E00               	movlw	0
   681  0019C0  6E92               	movwf	3986,c	;volatile
   682                           
   683                           ;Main.c: 318: PORTA = 0b00000000;
   684  0019C2  0E00               	movlw	0
   685  0019C4  6E80               	movwf	3968,c	;volatile
   686                           
   687                           ;Main.c: 320: version();
   688  0019C6  EC67  F00D         	call	_version	;wreg free
   689                           
   690                           ;Main.c: 321: SetupTime();
   691  0019CA  ECD5  F008         	call	_SetupTime	;wreg free
   692                           
   693                           ;Main.c: 322: SetupAlarmTimeA();
   694  0019CE  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   695                           
   696                           ;Main.c: 323: SetupAlarmTimeB();
   697  0019D2  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   698                           
   699                           ;Main.c: 324: SetupAlarmTimeC();
   700  0019D6  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   701                           
   702                           ;Main.c: 325: SetupTimerInterruptRegisters();
   703  0019DA  ECE9  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   704  0019DE                     l2255:
   705                           
   706                           ;Main.c: 328: {
   707                           ;Main.c: 329: if(hour==hourA && minute==minuteA)
   708  0019DE  503A               	movf	_hourA,w,c
   709  0019E0  1839               	xorwf	_hour,w,c
   710  0019E2  A4D8               	btfss	status,2,c
   711  0019E4  D006               	goto	l2261
   712  0019E6  503E               	movf	_minuteA,w,c
   713  0019E8  183D               	xorwf	_minute,w,c
   714  0019EA  A4D8               	btfss	status,2,c
   715  0019EC  D002               	goto	l2261
   716                           
   717                           ;Main.c: 330: {
   718                           ;Main.c: 331: PORTA = 0b00000011;
   719  0019EE  0E03               	movlw	3
   720  0019F0  D015               	goto	L3
   721  0019F2                     l2261:
   722                           
   723                           ;Main.c: 333: else if(hour==hourB && minute==minuteB)
   724  0019F2  503B               	movf	_hourB,w,c
   725  0019F4  1839               	xorwf	_hour,w,c
   726  0019F6  A4D8               	btfss	status,2,c
   727  0019F8  D006               	goto	l2267
   728  0019FA  503F               	movf	_minuteB,w,c
   729  0019FC  183D               	xorwf	_minute,w,c
   730  0019FE  A4D8               	btfss	status,2,c
   731  001A00  D002               	goto	l2267
   732                           
   733                           ;Main.c: 334: {
   734                           ;Main.c: 335: PORTA = 0b00000101;
   735  001A02  0E05               	movlw	5
   736  001A04  D00B               	goto	L3
   737  001A06                     l2267:
   738                           
   739                           ;Main.c: 337: else if(hour==hourC && minute==minuteC)
   740  001A06  503C               	movf	_hourC,w,c
   741  001A08  1839               	xorwf	_hour,w,c
   742  001A0A  A4D8               	btfss	status,2,c
   743  001A0C  D006               	goto	l2273
   744  001A0E  5040               	movf	_minuteC,w,c
   745  001A10  183D               	xorwf	_minute,w,c
   746  001A12  A4D8               	btfss	status,2,c
   747  001A14  D002               	goto	l2273
   748                           
   749                           ;Main.c: 338: {
   750                           ;Main.c: 339: PORTA = 0b00001001;
   751  001A16  0E09               	movlw	9
   752  001A18  D001               	goto	L3
   753  001A1A                     l2273:
   754                           
   755                           ;Main.c: 341: {
   756                           ;Main.c: 342: PORTA = 0b00000000;
   757  001A1A  0E00               	movlw	0
   758  001A1C                     L3:
   759  001A1C  6E80               	movwf	3968,c	;volatile
   760  001A1E  D7DF               	goto	l2255
   761  001A20                     __end_of_main:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           status	equ	0xFD8
   772                           
   773 ;; *************** function _version *****************
   774 ;; Defined at:
   775 ;;		line 12 in file "version.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  Version        21    0[BANK0 ] unsigned char [21]
   780 ;;  msgindex        1   22[BANK0 ] unsigned char 
   781 ;;  outchar         1   21[BANK0 ] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2   73[None  ] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         0       0       0       0       0       0       0       0       0
   792 ;;      Locals:         0      23       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         0      23       0       0       0       0       0       0       0
   795 ;;Total ram usage:       23 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    5
   798 ;; This function calls:
   799 ;;		_lcd_write_cmd
   800 ;;		_lcd_write_data
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text1
   807  001ACE                     __ptext1:
   808                           	opt stack 0
   809  001ACE                     _version:
   810                           	opt stack 25
   811                           
   812                           ;version.c: 14: unsigned char msgindex, outchar;
   813                           ;version.c: 15: char Version[ ] = "ETT Version 1.3     ";
   814                           
   815                           ;incstack = 0
   816  001ACE  EE20  F024         	lfsr	2,version@F4451
   817  001AD2  EE10  F0B4         	lfsr	1,version@Version
   818  001AD6  0E14               	movlw	20
   819  001AD8                     u981:
   820  001AD8  CFDB FFE3          	movff	plusw2,plusw1
   821  001ADC  06E8               	decf	wreg,f,c
   822  001ADE  E2FC               	bc	u981
   823                           
   824                           ;version.c: 17: lcd_write_cmd(0x80);
   825  001AE0  0E80               	movlw	128
   826  001AE2  EC69  F00C         	call	_lcd_write_cmd
   827                           
   828                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   829  001AE6  0E00               	movlw	0
   830  001AE8  0100               	movlb	0	; () banked
   831  001AEA  6FCA               	movwf	version@msgindex& (0+255),b
   832  001AEC                     l2223:
   833                           
   834                           ; BSR set to: 0
   835  001AEC  0E13               	movlw	19
   836  001AEE  0100               	movlb	0	; () banked
   837  001AF0  65CA               	cpfsgt	version@msgindex& (0+255),b
   838  001AF2  D001               	goto	l2227
   839  001AF4  0012               	return	
   840  001AF6                     l2227:
   841                           
   842                           ; BSR set to: 0
   843                           ;version.c: 20: {
   844                           ;version.c: 21: outchar = Version[msgindex];
   845  001AF6  0100               	movlb	0	; () banked
   846  001AF8  51CA               	movf	version@msgindex& (0+255),w,b
   847  001AFA  0D01               	mullw	1
   848  001AFC  0EB4               	movlw	low version@Version
   849  001AFE  24F3               	addwf	prodl,w,c
   850  001B00  6ED9               	movwf	fsr2l,c
   851  001B02  0E00               	movlw	high version@Version
   852  001B04  20F4               	addwfc	prodh,w,c
   853  001B06  6EDA               	movwf	fsr2h,c
   854  001B08  50DF               	movf	indf2,w,c
   855  001B0A  0100               	movlb	0	; () banked
   856  001B0C  6FC9               	movwf	version@outchar& (0+255),b
   857                           
   858                           ; BSR set to: 0
   859                           ;version.c: 22: lcd_write_data(outchar);
   860  001B0E  0100               	movlb	0	; () banked
   861  001B10  51C9               	movf	version@outchar& (0+255),w,b
   862  001B12  ECE6  F00A         	call	_lcd_write_data
   863  001B16  0100               	movlb	0	; () banked
   864  001B18  2BCA               	incf	version@msgindex& (0+255),f,b
   865  001B1A  D7E8               	goto	l2223
   866  001B1C                     __end_of_version:
   867                           	opt stack 0
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           plusw1	equ	0xFE3
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           plusw2	equ	0xFDB
   881                           fsr2h	equ	0xFDA
   882                           fsr2l	equ	0xFD9
   883                           status	equ	0xFD8
   884                           
   885 ;; *************** function _lcd_init *****************
   886 ;; Defined at:
   887 ;;		line 83 in file "lcd_utilities.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  i               2   33[COMRAM] int 
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         0       0       0       0       0       0       0       0       0
   902 ;;      Locals:         2       0       0       0       0       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0       0       0       0       0
   904 ;;      Totals:         3       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        3 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    5
   908 ;; This function calls:
   909 ;;		_lcd_write_cmd
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text2
   916  0017EE                     __ptext2:
   917                           	opt stack 0
   918  0017EE                     _lcd_init:
   919                           	opt stack 25
   920                           
   921                           ;lcd_utilities.c: 85: int i;
   922                           ;lcd_utilities.c: 86: TRISD = 0x00;
   923                           
   924                           ; BSR set to: 0
   925                           ;incstack = 0
   926  0017EE  0E00               	movlw	0
   927  0017F0  6E95               	movwf	3989,c	;volatile
   928                           
   929                           ;lcd_utilities.c: 87: PORTD = 0x00;
   930  0017F2  0E00               	movlw	0
   931  0017F4  6E83               	movwf	3971,c	;volatile
   932                           
   933                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   934  0017F6  9883               	bcf	3971,4,c	;volatile
   935                           
   936                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   937  0017F8  9C83               	bcf	3971,6,c	;volatile
   938                           
   939                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   940  0017FA  9A83               	bcf	3971,5,c	;volatile
   941                           
   942                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   943  0017FC  0E00               	movlw	0
   944  0017FE  6E23               	movwf	lcd_init@i+1,c
   945  001800  0E00               	movlw	0
   946  001802  6E22               	movwf	lcd_init@i,c
   947  001804                     l2025:
   948  001804  BE23               	btfsc	lcd_init@i+1,7,c
   949  001806  D006               	goto	l2029
   950  001808  5023               	movf	lcd_init@i+1,w,c
   951  00180A  E10F               	bnz	l2033
   952  00180C  0E64               	movlw	100
   953  00180E  5C22               	subwf	lcd_init@i,w,c
   954  001810  B0D8               	btfsc	status,0,c
   955  001812  D00B               	goto	l2033
   956  001814                     l2029:
   957                           
   958                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   959  001814  0E9C               	movlw	156
   960  001816  6E21               	movwf	??_lcd_init& (0+255),c
   961  001818  0ED7               	movlw	215
   962  00181A                     u1077:
   963  00181A  2EE8               	decfsz	wreg,f,c
   964  00181C  D7FE               	goto	u1077
   965  00181E  2E21               	decfsz	??_lcd_init& (0+255),f,c
   966  001820  D7FC               	goto	u1077
   967  001822  F000               	nop	
   968  001824  4A22               	infsnz	lcd_init@i,f,c
   969  001826  2A23               	incf	lcd_init@i+1,f,c
   970  001828  D7ED               	goto	l2025
   971  00182A                     l2033:
   972                           
   973                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   974  00182A  0E33               	movlw	51
   975  00182C  EC69  F00C         	call	_lcd_write_cmd
   976                           
   977                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   978  001830  0E32               	movlw	50
   979  001832  EC69  F00C         	call	_lcd_write_cmd
   980                           
   981                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   982  001836  0E28               	movlw	40
   983  001838  EC69  F00C         	call	_lcd_write_cmd
   984                           
   985                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   986  00183C  0E0E               	movlw	14
   987  00183E  EC69  F00C         	call	_lcd_write_cmd
   988                           
   989                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   990  001842  0E06               	movlw	6
   991  001844  EC69  F00C         	call	_lcd_write_cmd
   992                           
   993                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   994  001848  0E01               	movlw	1
   995  00184A  EC69  F00C         	call	_lcd_write_cmd
   996                           
   997                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   998  00184E  0E9C               	movlw	156
   999  001850  6E21               	movwf	??_lcd_init& (0+255),c
  1000  001852  0ED7               	movlw	215
  1001  001854                     u1087:
  1002  001854  2EE8               	decfsz	wreg,f,c
  1003  001856  D7FE               	goto	u1087
  1004  001858  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1005  00185A  D7FC               	goto	u1087
  1006  00185C  F000               	nop	
  1007  00185E  0012               	return		;funcret
  1008  001860                     __end_of_lcd_init:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           prodh	equ	0xFF4
  1015                           prodl	equ	0xFF3
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postdec1	equ	0xFE5
  1019                           plusw1	equ	0xFE3
  1020                           fsr1l	equ	0xFE1
  1021                           indf2	equ	0xFDF
  1022                           plusw2	equ	0xFDB
  1023                           fsr2h	equ	0xFDA
  1024                           fsr2l	equ	0xFD9
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _SetupTimerInterruptRegisters *****************
  1028 ;; Defined at:
  1029 ;;		line 275 in file "Main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;		None               void
  1036 ;; Registers used:
  1037 ;;		wreg, status,2
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    3
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text3
  1058  001BD2                     __ptext3:
  1059                           	opt stack 0
  1060  001BD2                     _SetupTimerInterruptRegisters:
  1061                           	opt stack 27
  1062                           
  1063                           ;Main.c: 277: RCONbits.IPEN =1;
  1064                           
  1065                           ;incstack = 0
  1066  001BD2  8ED0               	bsf	4048,7,c	;volatile
  1067                           
  1068                           ;Main.c: 281: INTCONbits.GIEH =1;
  1069  001BD4  8EF2               	bsf	intcon,7,c	;volatile
  1070                           
  1071                           ;Main.c: 286: T0CON = 0b00000111;
  1072  001BD6  0E07               	movlw	7
  1073  001BD8  6ED5               	movwf	4053,c	;volatile
  1074                           
  1075                           ;Main.c: 294: INTCON2 = 0b10000100;
  1076  001BDA  0E84               	movlw	132
  1077  001BDC  6EF1               	movwf	intcon2,c	;volatile
  1078                           
  1079                           ;Main.c: 299: TMR0H = 0x48;
  1080  001BDE  0E48               	movlw	72
  1081  001BE0  6ED7               	movwf	4055,c	;volatile
  1082                           
  1083                           ;Main.c: 300: TMR0L = 0xE5;
  1084  001BE2  0EE5               	movlw	229
  1085  001BE4  6ED6               	movwf	4054,c	;volatile
  1086                           
  1087                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1088  001BE6  8ED5               	bsf	4053,7,c	;volatile
  1089                           
  1090                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1091  001BE8  8AF2               	bsf	intcon,5,c	;volatile
  1092                           
  1093                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1094  001BEA  94F2               	bcf	intcon,2,c	;volatile
  1095  001BEC  0012               	return		;funcret
  1096  001BEE                     __end_of_SetupTimerInterruptRegisters:
  1097                           	opt stack 0
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           prodh	equ	0xFF4
  1103                           prodl	equ	0xFF3
  1104                           intcon	equ	0xFF2
  1105                           intcon2	equ	0xFF1
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           plusw1	equ	0xFE3
  1110                           fsr1l	equ	0xFE1
  1111                           indf2	equ	0xFDF
  1112                           plusw2	equ	0xFDB
  1113                           fsr2h	equ	0xFDA
  1114                           fsr2l	equ	0xFD9
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _SetupTime *****************
  1118 ;; Defined at:
  1119 ;;		line 107 in file "Main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1124 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1125 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1126 ;;  second1         1   46[BANK0 ] unsigned char 
  1127 ;;  second10        1   45[BANK0 ] unsigned char 
  1128 ;;  minute1         1   44[BANK0 ] unsigned char 
  1129 ;;  minute10        1   43[BANK0 ] unsigned char 
  1130 ;;  hour1           1   42[BANK0 ] unsigned char 
  1131 ;;  hour10          1   41[BANK0 ] unsigned char 
  1132 ;;  outchar         1   40[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;		None               void
  1135 ;; Registers used:
  1136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0
  1143 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1145 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1146 ;;Total ram usage:       30 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    5
  1149 ;; This function calls:
  1150 ;;		_char_2_int
  1151 ;;		_delay_ms
  1152 ;;		_getkey
  1153 ;;		_lcd_write_cmd
  1154 ;;		_lcd_write_data
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text4
  1161  0011AA                     __ptext4:
  1162                           	opt stack 0
  1163  0011AA                     _SetupTime:
  1164                           	opt stack 25
  1165                           
  1166                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1167                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1168                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1169                           
  1170                           ;incstack = 0
  1171  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4486
  1172  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1173  0011B2  0E14               	movlw	20
  1174  0011B4                     u861:
  1175  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1176  0011B8  06E8               	decf	wreg,f,c
  1177  0011BA  E2FC               	bc	u861
  1178                           
  1179                           ;Main.c: 113: lcd_write_cmd(0x80);
  1180  0011BC  0E80               	movlw	128
  1181  0011BE  EC69  F00C         	call	_lcd_write_cmd
  1182                           
  1183                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1184  0011C2  0E00               	movlw	0
  1185  0011C4  0100               	movlb	0	; () banked
  1186  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1187  0011C8                     l2043:
  1188                           
  1189                           ; BSR set to: 0
  1190  0011C8  0E13               	movlw	19
  1191  0011CA  0100               	movlb	0	; () banked
  1192  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1193  0011CE  D001               	goto	l2047
  1194  0011D0  D013               	goto	l2055
  1195  0011D2                     l2047:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;Main.c: 116: {
  1199                           ;Main.c: 117: outchar = Message[msgindex];
  1200  0011D2  0100               	movlb	0	; () banked
  1201  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1202  0011D6  0D01               	mullw	1
  1203  0011D8  0EC7               	movlw	low SetupTime@Message
  1204  0011DA  24F3               	addwf	prodl,w,c
  1205  0011DC  6ED9               	movwf	fsr2l,c
  1206  0011DE  0E00               	movlw	high SetupTime@Message
  1207  0011E0  20F4               	addwfc	prodh,w,c
  1208  0011E2  6EDA               	movwf	fsr2h,c
  1209  0011E4  50DF               	movf	indf2,w,c
  1210  0011E6  0100               	movlb	0	; () banked
  1211  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;Main.c: 118: lcd_write_data(outchar);
  1215  0011EA  0100               	movlb	0	; () banked
  1216  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1217  0011EE  ECE6  F00A         	call	_lcd_write_data
  1218  0011F2  0100               	movlb	0	; () banked
  1219  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1220  0011F6  D7E8               	goto	l2043
  1221  0011F8                     l2055:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;Main.c: 119: }
  1225                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1226  0011F8  0EC0               	movlw	192
  1227  0011FA  EC69  F00C         	call	_lcd_write_cmd
  1228                           
  1229                           ;Main.c: 123: ctemp=getkey();
  1230  0011FE  EC8E  F00D         	call	_getkey	;wreg free
  1231  001202  0100               	movlb	0	; () banked
  1232  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;Main.c: 124: lcd_write_data(ctemp);
  1236  001206  0100               	movlb	0	; () banked
  1237  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1238  00120A  ECE6  F00A         	call	_lcd_write_data
  1239                           
  1240                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1241  00120E  0100               	movlb	0	; () banked
  1242  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1243  001212  EC30  F00C         	call	_char_2_int
  1244  001216  0100               	movlb	0	; () banked
  1245  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;Main.c: 127: ctemp=getkey();
  1249  00121A  EC8E  F00D         	call	_getkey	;wreg free
  1250  00121E  0100               	movlb	0	; () banked
  1251  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1252                           
  1253                           ;Main.c: 128: lcd_write_data(ctemp);
  1254  001222  0100               	movlb	0	; () banked
  1255  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1256  001226  ECE6  F00A         	call	_lcd_write_data
  1257                           
  1258                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1259  00122A  0100               	movlb	0	; () banked
  1260  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1261  00122E  EC30  F00C         	call	_char_2_int
  1262  001232  0100               	movlb	0	; () banked
  1263  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Main.c: 131: ctemp=getkey();
  1267  001236  EC8E  F00D         	call	_getkey	;wreg free
  1268  00123A  0100               	movlb	0	; () banked
  1269  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;Main.c: 132: lcd_write_data(ctemp);
  1273  00123E  0100               	movlb	0	; () banked
  1274  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1275  001242  ECE6  F00A         	call	_lcd_write_data
  1276                           
  1277                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1278  001246  0100               	movlb	0	; () banked
  1279  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1280  00124A  EC30  F00C         	call	_char_2_int
  1281  00124E  0100               	movlb	0	; () banked
  1282  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;Main.c: 135: ctemp=getkey();
  1286  001252  EC8E  F00D         	call	_getkey	;wreg free
  1287  001256  0100               	movlb	0	; () banked
  1288  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1289                           
  1290                           ;Main.c: 136: lcd_write_data(ctemp);
  1291  00125A  0100               	movlb	0	; () banked
  1292  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1293  00125E  ECE6  F00A         	call	_lcd_write_data
  1294                           
  1295                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1296  001262  0100               	movlb	0	; () banked
  1297  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1298  001266  EC30  F00C         	call	_char_2_int
  1299  00126A  0100               	movlb	0	; () banked
  1300  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Main.c: 139: ctemp=getkey();
  1304  00126E  EC8E  F00D         	call	_getkey	;wreg free
  1305  001272  0100               	movlb	0	; () banked
  1306  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;Main.c: 140: lcd_write_data(ctemp);
  1310  001276  0100               	movlb	0	; () banked
  1311  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1312  00127A  ECE6  F00A         	call	_lcd_write_data
  1313                           
  1314                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1315  00127E  0100               	movlb	0	; () banked
  1316  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1317  001282  EC30  F00C         	call	_char_2_int
  1318  001286  0100               	movlb	0	; () banked
  1319  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;Main.c: 143: ctemp=getkey();
  1323  00128A  EC8E  F00D         	call	_getkey	;wreg free
  1324  00128E  0100               	movlb	0	; () banked
  1325  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1326                           
  1327                           ;Main.c: 144: lcd_write_data(ctemp);
  1328  001292  0100               	movlb	0	; () banked
  1329  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1330  001296  ECE6  F00A         	call	_lcd_write_data
  1331                           
  1332                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1333  00129A  0100               	movlb	0	; () banked
  1334  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1335  00129E  EC30  F00C         	call	_char_2_int
  1336  0012A2  0100               	movlb	0	; () banked
  1337  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1341  0012A6  0100               	movlb	0	; () banked
  1342  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1343  0012AA  0D0A               	mullw	10
  1344  0012AC  50F3               	movf	prodl,w,c
  1345  0012AE  0100               	movlb	0	; () banked
  1346  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1347  0012B2  6E39               	movwf	_hour,c
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1351  0012B4  0100               	movlb	0	; () banked
  1352  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1353  0012B8  0D0A               	mullw	10
  1354  0012BA  50F3               	movf	prodl,w,c
  1355  0012BC  0100               	movlb	0	; () banked
  1356  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1357  0012C0  6E3D               	movwf	_minute,c
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;Main.c: 149: second = second10 * 10 + second1;
  1361  0012C2  0100               	movlb	0	; () banked
  1362  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1363  0012C6  0D0A               	mullw	10
  1364  0012C8  50F3               	movf	prodl,w,c
  1365  0012CA  0100               	movlb	0	; () banked
  1366  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1367  0012CE  6E41               	movwf	_second,c
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;Main.c: 151: delay_ms(500);
  1371  0012D0  0E01               	movlw	1
  1372  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1373  0012D4  0EF4               	movlw	244
  1374  0012D6  6E1D               	movwf	delay_ms@i,c
  1375  0012D8  ECAD  F00D         	call	_delay_ms	;wreg free
  1376                           
  1377                           ;Main.c: 152: lcd_write_cmd(0x01);
  1378  0012DC  0E01               	movlw	1
  1379  0012DE  EC69  F00C         	call	_lcd_write_cmd
  1380  0012E2  0012               	return		;funcret
  1381  0012E4                     __end_of_SetupTime:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           prodh	equ	0xFF4
  1388                           prodl	equ	0xFF3
  1389                           intcon	equ	0xFF2
  1390                           intcon2	equ	0xFF1
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           postdec1	equ	0xFE5
  1394                           plusw1	equ	0xFE3
  1395                           fsr1l	equ	0xFE1
  1396                           indf2	equ	0xFDF
  1397                           plusw2	equ	0xFDB
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _SetupAlarmTimeC *****************
  1403 ;; Defined at:
  1404 ;;		line 235 in file "Main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1409 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1410 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1411 ;;  minute1         1   44[BANK0 ] unsigned char 
  1412 ;;  minute10        1   43[BANK0 ] unsigned char 
  1413 ;;  hour1           1   42[BANK0 ] unsigned char 
  1414 ;;  hour10          1   41[BANK0 ] unsigned char 
  1415 ;;  outchar         1   40[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;		None               void
  1418 ;; Registers used:
  1419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1429 ;;Total ram usage:       28 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    5
  1432 ;; This function calls:
  1433 ;;		_char_2_int
  1434 ;;		_delay_ms
  1435 ;;		_getkey
  1436 ;;		_lcd_write_cmd
  1437 ;;		_lcd_write_data
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text5
  1444  0012E4                     __ptext5:
  1445                           	opt stack 0
  1446  0012E4                     _SetupAlarmTimeC:
  1447                           	opt stack 25
  1448                           
  1449                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1450                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1451                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1452                           
  1453                           ;incstack = 0
  1454  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4516
  1455  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1456  0012EC  0E14               	movlw	20
  1457  0012EE                     u951:
  1458  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1459  0012F2  06E8               	decf	wreg,f,c
  1460  0012F4  E2FC               	bc	u951
  1461                           
  1462                           ;Main.c: 241: PORTA = 0b00001000;
  1463  0012F6  0E08               	movlw	8
  1464  0012F8  6E80               	movwf	3968,c	;volatile
  1465                           
  1466                           ;Main.c: 243: lcd_write_cmd(0x80);
  1467  0012FA  0E80               	movlw	128
  1468  0012FC  EC69  F00C         	call	_lcd_write_cmd
  1469                           
  1470                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1471  001300  0E00               	movlw	0
  1472  001302  0100               	movlb	0	; () banked
  1473  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1474  001306                     l2183:
  1475                           
  1476                           ; BSR set to: 0
  1477  001306  0E13               	movlw	19
  1478  001308  0100               	movlb	0	; () banked
  1479  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1480  00130C  D001               	goto	l2187
  1481  00130E  D013               	goto	l2195
  1482  001310                     l2187:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;Main.c: 246: {
  1486                           ;Main.c: 247: outchar = Message[msgindex];
  1487  001310  0100               	movlb	0	; () banked
  1488  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1489  001314  0D01               	mullw	1
  1490  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1491  001318  24F3               	addwf	prodl,w,c
  1492  00131A  6ED9               	movwf	fsr2l,c
  1493  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1494  00131E  20F4               	addwfc	prodh,w,c
  1495  001320  6EDA               	movwf	fsr2h,c
  1496  001322  50DF               	movf	indf2,w,c
  1497  001324  0100               	movlb	0	; () banked
  1498  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;Main.c: 248: lcd_write_data(outchar);
  1502  001328  0100               	movlb	0	; () banked
  1503  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1504  00132C  ECE6  F00A         	call	_lcd_write_data
  1505  001330  0100               	movlb	0	; () banked
  1506  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1507  001334  D7E8               	goto	l2183
  1508  001336                     l2195:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;Main.c: 249: }
  1512                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1513  001336  0EC0               	movlw	192
  1514  001338  EC69  F00C         	call	_lcd_write_cmd
  1515                           
  1516                           ;Main.c: 253: ctemp=getkey();
  1517  00133C  EC8E  F00D         	call	_getkey	;wreg free
  1518  001340  0100               	movlb	0	; () banked
  1519  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;Main.c: 254: lcd_write_data(ctemp);
  1523  001344  0100               	movlb	0	; () banked
  1524  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1525  001348  ECE6  F00A         	call	_lcd_write_data
  1526                           
  1527                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1528  00134C  0100               	movlb	0	; () banked
  1529  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1530  001350  EC30  F00C         	call	_char_2_int
  1531  001354  0100               	movlb	0	; () banked
  1532  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;Main.c: 257: ctemp=getkey();
  1536  001358  EC8E  F00D         	call	_getkey	;wreg free
  1537  00135C  0100               	movlb	0	; () banked
  1538  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1539                           
  1540                           ;Main.c: 258: lcd_write_data(ctemp);
  1541  001360  0100               	movlb	0	; () banked
  1542  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1543  001364  ECE6  F00A         	call	_lcd_write_data
  1544                           
  1545                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1546  001368  0100               	movlb	0	; () banked
  1547  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1548  00136C  EC30  F00C         	call	_char_2_int
  1549  001370  0100               	movlb	0	; () banked
  1550  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;Main.c: 261: ctemp=getkey();
  1554  001374  EC8E  F00D         	call	_getkey	;wreg free
  1555  001378  0100               	movlb	0	; () banked
  1556  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;Main.c: 262: lcd_write_data(ctemp);
  1560  00137C  0100               	movlb	0	; () banked
  1561  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1562  001380  ECE6  F00A         	call	_lcd_write_data
  1563                           
  1564                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1565  001384  0100               	movlb	0	; () banked
  1566  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1567  001388  EC30  F00C         	call	_char_2_int
  1568  00138C  0100               	movlb	0	; () banked
  1569  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;Main.c: 265: ctemp=getkey();
  1573  001390  EC8E  F00D         	call	_getkey	;wreg free
  1574  001394  0100               	movlb	0	; () banked
  1575  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1576                           
  1577                           ;Main.c: 266: lcd_write_data(ctemp);
  1578  001398  0100               	movlb	0	; () banked
  1579  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1580  00139C  ECE6  F00A         	call	_lcd_write_data
  1581                           
  1582                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1583  0013A0  0100               	movlb	0	; () banked
  1584  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1585  0013A4  EC30  F00C         	call	_char_2_int
  1586  0013A8  0100               	movlb	0	; () banked
  1587  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1591  0013AC  0100               	movlb	0	; () banked
  1592  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1593  0013B0  0D0A               	mullw	10
  1594  0013B2  50F3               	movf	prodl,w,c
  1595  0013B4  0100               	movlb	0	; () banked
  1596  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1597  0013B8  6E3C               	movwf	_hourC,c
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1601  0013BA  0100               	movlb	0	; () banked
  1602  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1603  0013BE  0D0A               	mullw	10
  1604  0013C0  50F3               	movf	prodl,w,c
  1605  0013C2  0100               	movlb	0	; () banked
  1606  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1607  0013C6  6E40               	movwf	_minuteC,c
  1608                           
  1609                           ;Main.c: 272: delay_ms(500);
  1610  0013C8  0E01               	movlw	1
  1611  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1612  0013CC  0EF4               	movlw	244
  1613  0013CE  6E1D               	movwf	delay_ms@i,c
  1614  0013D0  ECAD  F00D         	call	_delay_ms	;wreg free
  1615                           
  1616                           ;Main.c: 273: lcd_write_cmd(0x01);
  1617  0013D4  0E01               	movlw	1
  1618  0013D6  EC69  F00C         	call	_lcd_write_cmd
  1619  0013DA  0012               	return		;funcret
  1620  0013DC                     __end_of_SetupAlarmTimeC:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           prodh	equ	0xFF4
  1627                           prodl	equ	0xFF3
  1628                           intcon	equ	0xFF2
  1629                           intcon2	equ	0xFF1
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           plusw1	equ	0xFE3
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           plusw2	equ	0xFDB
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _SetupAlarmTimeB *****************
  1642 ;; Defined at:
  1643 ;;		line 195 in file "Main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1648 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1649 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1650 ;;  minute1         1   44[BANK0 ] unsigned char 
  1651 ;;  minute10        1   43[BANK0 ] unsigned char 
  1652 ;;  hour1           1   42[BANK0 ] unsigned char 
  1653 ;;  hour10          1   41[BANK0 ] unsigned char 
  1654 ;;  outchar         1   40[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1668 ;;Total ram usage:       28 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    5
  1671 ;; This function calls:
  1672 ;;		_char_2_int
  1673 ;;		_delay_ms
  1674 ;;		_getkey
  1675 ;;		_lcd_write_cmd
  1676 ;;		_lcd_write_data
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  0013DC                     __ptext6:
  1684                           	opt stack 0
  1685  0013DC                     _SetupAlarmTimeB:
  1686                           	opt stack 25
  1687                           
  1688                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1689                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1690                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1691                           
  1692                           ;incstack = 0
  1693  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4506
  1694  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1695  0013E4  0E14               	movlw	20
  1696  0013E6                     u921:
  1697  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1698  0013EA  06E8               	decf	wreg,f,c
  1699  0013EC  E2FC               	bc	u921
  1700                           
  1701                           ;Main.c: 201: PORTA = 0b00000100;
  1702  0013EE  0E04               	movlw	4
  1703  0013F0  6E80               	movwf	3968,c	;volatile
  1704                           
  1705                           ;Main.c: 203: lcd_write_cmd(0x80);
  1706  0013F2  0E80               	movlw	128
  1707  0013F4  EC69  F00C         	call	_lcd_write_cmd
  1708                           
  1709                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1710  0013F8  0E00               	movlw	0
  1711  0013FA  0100               	movlb	0	; () banked
  1712  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1713  0013FE                     l2141:
  1714                           
  1715                           ; BSR set to: 0
  1716  0013FE  0E13               	movlw	19
  1717  001400  0100               	movlb	0	; () banked
  1718  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1719  001404  D001               	goto	l2145
  1720  001406  D013               	goto	l2153
  1721  001408                     l2145:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;Main.c: 206: {
  1725                           ;Main.c: 207: outchar = Message[msgindex];
  1726  001408  0100               	movlb	0	; () banked
  1727  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1728  00140C  0D01               	mullw	1
  1729  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1730  001410  24F3               	addwf	prodl,w,c
  1731  001412  6ED9               	movwf	fsr2l,c
  1732  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1733  001416  20F4               	addwfc	prodh,w,c
  1734  001418  6EDA               	movwf	fsr2h,c
  1735  00141A  50DF               	movf	indf2,w,c
  1736  00141C  0100               	movlb	0	; () banked
  1737  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;Main.c: 208: lcd_write_data(outchar);
  1741  001420  0100               	movlb	0	; () banked
  1742  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1743  001424  ECE6  F00A         	call	_lcd_write_data
  1744  001428  0100               	movlb	0	; () banked
  1745  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1746  00142C  D7E8               	goto	l2141
  1747  00142E                     l2153:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;Main.c: 209: }
  1751                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1752  00142E  0EC0               	movlw	192
  1753  001430  EC69  F00C         	call	_lcd_write_cmd
  1754                           
  1755                           ;Main.c: 213: ctemp=getkey();
  1756  001434  EC8E  F00D         	call	_getkey	;wreg free
  1757  001438  0100               	movlb	0	; () banked
  1758  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;Main.c: 214: lcd_write_data(ctemp);
  1762  00143C  0100               	movlb	0	; () banked
  1763  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1764  001440  ECE6  F00A         	call	_lcd_write_data
  1765                           
  1766                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1767  001444  0100               	movlb	0	; () banked
  1768  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1769  001448  EC30  F00C         	call	_char_2_int
  1770  00144C  0100               	movlb	0	; () banked
  1771  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;Main.c: 217: ctemp=getkey();
  1775  001450  EC8E  F00D         	call	_getkey	;wreg free
  1776  001454  0100               	movlb	0	; () banked
  1777  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1778                           
  1779                           ;Main.c: 218: lcd_write_data(ctemp);
  1780  001458  0100               	movlb	0	; () banked
  1781  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1782  00145C  ECE6  F00A         	call	_lcd_write_data
  1783                           
  1784                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1785  001460  0100               	movlb	0	; () banked
  1786  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1787  001464  EC30  F00C         	call	_char_2_int
  1788  001468  0100               	movlb	0	; () banked
  1789  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;Main.c: 221: ctemp=getkey();
  1793  00146C  EC8E  F00D         	call	_getkey	;wreg free
  1794  001470  0100               	movlb	0	; () banked
  1795  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;Main.c: 222: lcd_write_data(ctemp);
  1799  001474  0100               	movlb	0	; () banked
  1800  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1801  001478  ECE6  F00A         	call	_lcd_write_data
  1802                           
  1803                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1804  00147C  0100               	movlb	0	; () banked
  1805  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1806  001480  EC30  F00C         	call	_char_2_int
  1807  001484  0100               	movlb	0	; () banked
  1808  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;Main.c: 225: ctemp=getkey();
  1812  001488  EC8E  F00D         	call	_getkey	;wreg free
  1813  00148C  0100               	movlb	0	; () banked
  1814  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1815                           
  1816                           ;Main.c: 226: lcd_write_data(ctemp);
  1817  001490  0100               	movlb	0	; () banked
  1818  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1819  001494  ECE6  F00A         	call	_lcd_write_data
  1820                           
  1821                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1822  001498  0100               	movlb	0	; () banked
  1823  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1824  00149C  EC30  F00C         	call	_char_2_int
  1825  0014A0  0100               	movlb	0	; () banked
  1826  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1830  0014A4  0100               	movlb	0	; () banked
  1831  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1832  0014A8  0D0A               	mullw	10
  1833  0014AA  50F3               	movf	prodl,w,c
  1834  0014AC  0100               	movlb	0	; () banked
  1835  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1836  0014B0  6E3B               	movwf	_hourB,c
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1840  0014B2  0100               	movlb	0	; () banked
  1841  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1842  0014B6  0D0A               	mullw	10
  1843  0014B8  50F3               	movf	prodl,w,c
  1844  0014BA  0100               	movlb	0	; () banked
  1845  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1846  0014BE  6E3F               	movwf	_minuteB,c
  1847                           
  1848                           ;Main.c: 232: delay_ms(500);
  1849  0014C0  0E01               	movlw	1
  1850  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1851  0014C4  0EF4               	movlw	244
  1852  0014C6  6E1D               	movwf	delay_ms@i,c
  1853  0014C8  ECAD  F00D         	call	_delay_ms	;wreg free
  1854                           
  1855                           ;Main.c: 233: lcd_write_cmd(0x01);
  1856  0014CC  0E01               	movlw	1
  1857  0014CE  EC69  F00C         	call	_lcd_write_cmd
  1858  0014D2  0012               	return		;funcret
  1859  0014D4                     __end_of_SetupAlarmTimeB:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           tblptrh	equ	0xFF7
  1863                           tblptrl	equ	0xFF6
  1864                           tablat	equ	0xFF5
  1865                           prodh	equ	0xFF4
  1866                           prodl	equ	0xFF3
  1867                           intcon	equ	0xFF2
  1868                           intcon2	equ	0xFF1
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           plusw1	equ	0xFE3
  1873                           fsr1l	equ	0xFE1
  1874                           indf2	equ	0xFDF
  1875                           plusw2	equ	0xFDB
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function _SetupAlarmTimeA *****************
  1881 ;; Defined at:
  1882 ;;		line 155 in file "Main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1887 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1888 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1889 ;;  minute1         1   44[BANK0 ] unsigned char 
  1890 ;;  minute10        1   43[BANK0 ] unsigned char 
  1891 ;;  hour1           1   42[BANK0 ] unsigned char 
  1892 ;;  hour10          1   41[BANK0 ] unsigned char 
  1893 ;;  outchar         1   40[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;		None               void
  1896 ;; Registers used:
  1897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1907 ;;Total ram usage:       28 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    5
  1910 ;; This function calls:
  1911 ;;		_char_2_int
  1912 ;;		_delay_ms
  1913 ;;		_getkey
  1914 ;;		_lcd_write_cmd
  1915 ;;		_lcd_write_data
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text7
  1922  0014D4                     __ptext7:
  1923                           	opt stack 0
  1924  0014D4                     _SetupAlarmTimeA:
  1925                           	opt stack 25
  1926                           
  1927                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  1928                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  1929                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  1930                           
  1931                           ;incstack = 0
  1932  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4496
  1933  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  1934  0014DC  0E14               	movlw	20
  1935  0014DE                     u891:
  1936  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  1937  0014E2  06E8               	decf	wreg,f,c
  1938  0014E4  E2FC               	bc	u891
  1939                           
  1940                           ;Main.c: 161: PORTA = 0b00000010;
  1941  0014E6  0E02               	movlw	2
  1942  0014E8  6E80               	movwf	3968,c	;volatile
  1943                           
  1944                           ;Main.c: 163: lcd_write_cmd(0x80);
  1945  0014EA  0E80               	movlw	128
  1946  0014EC  EC69  F00C         	call	_lcd_write_cmd
  1947                           
  1948                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1949  0014F0  0E00               	movlw	0
  1950  0014F2  0100               	movlb	0	; () banked
  1951  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1952  0014F6                     l2099:
  1953                           
  1954                           ; BSR set to: 0
  1955  0014F6  0E13               	movlw	19
  1956  0014F8  0100               	movlb	0	; () banked
  1957  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1958  0014FC  D001               	goto	l2103
  1959  0014FE  D013               	goto	l2111
  1960  001500                     l2103:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;Main.c: 166: {
  1964                           ;Main.c: 167: outchar = Message[msgindex];
  1965  001500  0100               	movlb	0	; () banked
  1966  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  1967  001504  0D01               	mullw	1
  1968  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  1969  001508  24F3               	addwf	prodl,w,c
  1970  00150A  6ED9               	movwf	fsr2l,c
  1971  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  1972  00150E  20F4               	addwfc	prodh,w,c
  1973  001510  6EDA               	movwf	fsr2h,c
  1974  001512  50DF               	movf	indf2,w,c
  1975  001514  0100               	movlb	0	; () banked
  1976  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;Main.c: 168: lcd_write_data(outchar);
  1980  001518  0100               	movlb	0	; () banked
  1981  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  1982  00151C  ECE6  F00A         	call	_lcd_write_data
  1983  001520  0100               	movlb	0	; () banked
  1984  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  1985  001524  D7E8               	goto	l2099
  1986  001526                     l2111:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;Main.c: 169: }
  1990                           ;Main.c: 171: lcd_write_cmd(0xC0);
  1991  001526  0EC0               	movlw	192
  1992  001528  EC69  F00C         	call	_lcd_write_cmd
  1993                           
  1994                           ;Main.c: 173: ctemp=getkey();
  1995  00152C  EC8E  F00D         	call	_getkey	;wreg free
  1996  001530  0100               	movlb	0	; () banked
  1997  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;Main.c: 174: lcd_write_data(ctemp);
  2001  001534  0100               	movlb	0	; () banked
  2002  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2003  001538  ECE6  F00A         	call	_lcd_write_data
  2004                           
  2005                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  2006  00153C  0100               	movlb	0	; () banked
  2007  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2008  001540  EC30  F00C         	call	_char_2_int
  2009  001544  0100               	movlb	0	; () banked
  2010  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;Main.c: 177: ctemp=getkey();
  2014  001548  EC8E  F00D         	call	_getkey	;wreg free
  2015  00154C  0100               	movlb	0	; () banked
  2016  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2017                           
  2018                           ;Main.c: 178: lcd_write_data(ctemp);
  2019  001550  0100               	movlb	0	; () banked
  2020  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2021  001554  ECE6  F00A         	call	_lcd_write_data
  2022                           
  2023                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2024  001558  0100               	movlb	0	; () banked
  2025  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2026  00155C  EC30  F00C         	call	_char_2_int
  2027  001560  0100               	movlb	0	; () banked
  2028  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;Main.c: 181: ctemp=getkey();
  2032  001564  EC8E  F00D         	call	_getkey	;wreg free
  2033  001568  0100               	movlb	0	; () banked
  2034  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;Main.c: 182: lcd_write_data(ctemp);
  2038  00156C  0100               	movlb	0	; () banked
  2039  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2040  001570  ECE6  F00A         	call	_lcd_write_data
  2041                           
  2042                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2043  001574  0100               	movlb	0	; () banked
  2044  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2045  001578  EC30  F00C         	call	_char_2_int
  2046  00157C  0100               	movlb	0	; () banked
  2047  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;Main.c: 185: ctemp=getkey();
  2051  001580  EC8E  F00D         	call	_getkey	;wreg free
  2052  001584  0100               	movlb	0	; () banked
  2053  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2054                           
  2055                           ;Main.c: 186: lcd_write_data(ctemp);
  2056  001588  0100               	movlb	0	; () banked
  2057  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2058  00158C  ECE6  F00A         	call	_lcd_write_data
  2059                           
  2060                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2061  001590  0100               	movlb	0	; () banked
  2062  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2063  001594  EC30  F00C         	call	_char_2_int
  2064  001598  0100               	movlb	0	; () banked
  2065  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2069  00159C  0100               	movlb	0	; () banked
  2070  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2071  0015A0  0D0A               	mullw	10
  2072  0015A2  50F3               	movf	prodl,w,c
  2073  0015A4  0100               	movlb	0	; () banked
  2074  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2075  0015A8  6E3A               	movwf	_hourA,c
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2079  0015AA  0100               	movlb	0	; () banked
  2080  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2081  0015AE  0D0A               	mullw	10
  2082  0015B0  50F3               	movf	prodl,w,c
  2083  0015B2  0100               	movlb	0	; () banked
  2084  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2085  0015B6  6E3E               	movwf	_minuteA,c
  2086                           
  2087                           ;Main.c: 192: delay_ms(500);
  2088  0015B8  0E01               	movlw	1
  2089  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2090  0015BC  0EF4               	movlw	244
  2091  0015BE  6E1D               	movwf	delay_ms@i,c
  2092  0015C0  ECAD  F00D         	call	_delay_ms	;wreg free
  2093                           
  2094                           ;Main.c: 193: lcd_write_cmd(0x01);
  2095  0015C4  0E01               	movlw	1
  2096  0015C6  EC69  F00C         	call	_lcd_write_cmd
  2097  0015CA  0012               	return		;funcret
  2098  0015CC                     __end_of_SetupAlarmTimeA:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           prodh	equ	0xFF4
  2105                           prodl	equ	0xFF3
  2106                           intcon	equ	0xFF2
  2107                           intcon2	equ	0xFF1
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postdec1	equ	0xFE5
  2111                           plusw1	equ	0xFE3
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           plusw2	equ	0xFDB
  2115                           fsr2h	equ	0xFDA
  2116                           fsr2l	equ	0xFD9
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _lcd_write_data *****************
  2120 ;; Defined at:
  2121 ;;		line 43 in file "lcd_utilities.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  data            1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  data            1   30[COMRAM] unsigned char 
  2126 ;;  temp1           1   31[COMRAM] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;		None               void
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2139 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:        3 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    4
  2143 ;; This function calls:
  2144 ;;		_lcd_strobe
  2145 ;; This function is called by:
  2146 ;;		_SetupTime
  2147 ;;		_SetupAlarmTimeA
  2148 ;;		_SetupAlarmTimeB
  2149 ;;		_SetupAlarmTimeC
  2150 ;;		_version
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text8
  2155  0015CC                     __ptext8:
  2156                           	opt stack 0
  2157  0015CC                     _lcd_write_data:
  2158                           	opt stack 25
  2159                           
  2160                           ;incstack = 0
  2161                           ;lcd_write_data@data stored from wreg
  2162  0015CC  6E1F               	movwf	lcd_write_data@data,c
  2163                           
  2164                           ;lcd_utilities.c: 45: char temp1;
  2165                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2166  0015CE  8C83               	bsf	3971,6,c	;volatile
  2167                           
  2168                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2169  0015D0  0E3F               	movlw	63
  2170  0015D2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2171  0015D4  0E55               	movlw	85
  2172  0015D6                     u1097:
  2173  0015D6  2EE8               	decfsz	wreg,f,c
  2174  0015D8  D7FE               	goto	u1097
  2175  0015DA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2176  0015DC  D7FC               	goto	u1097
  2177  0015DE  F000               	nop	
  2178                           
  2179                           ;lcd_utilities.c: 50: temp1 = data;
  2180  0015E0  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2181                           
  2182                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2183  0015E4  3820               	swapf	lcd_write_data@temp1,w,c
  2184  0015E6  0B0F               	andlw	15
  2185  0015E8  6E20               	movwf	lcd_write_data@temp1,c
  2186                           
  2187                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2188  0015EA  5020               	movf	lcd_write_data@temp1,w,c
  2189  0015EC  0B0F               	andlw	15
  2190  0015EE  6E83               	movwf	3971,c	;volatile
  2191                           
  2192                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2193  0015F0  0E7D               	movlw	125
  2194  0015F2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2195  0015F4  0EAC               	movlw	172
  2196  0015F6                     u1107:
  2197  0015F6  2EE8               	decfsz	wreg,f,c
  2198  0015F8  D7FE               	goto	u1107
  2199  0015FA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2200  0015FC  D7FC               	goto	u1107
  2201                           
  2202                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2203  0015FE  8C83               	bsf	3971,6,c	;volatile
  2204                           
  2205                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2206  001600  0E7D               	movlw	125
  2207  001602  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2208  001604  0EAC               	movlw	172
  2209  001606                     u1117:
  2210  001606  2EE8               	decfsz	wreg,f,c
  2211  001608  D7FE               	goto	u1117
  2212  00160A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2213  00160C  D7FC               	goto	u1117
  2214                           
  2215                           ;lcd_utilities.c: 57: lcd_strobe();
  2216  00160E  ECC7  F00D         	call	_lcd_strobe	;wreg free
  2217                           
  2218                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2219  001612  0E7D               	movlw	125
  2220  001614  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2221  001616  0EAC               	movlw	172
  2222  001618                     u1127:
  2223  001618  2EE8               	decfsz	wreg,f,c
  2224  00161A  D7FE               	goto	u1127
  2225  00161C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2226  00161E  D7FC               	goto	u1127
  2227                           
  2228                           ;lcd_utilities.c: 60: temp1 = data;
  2229  001620  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2230                           
  2231                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2232  001624  5020               	movf	lcd_write_data@temp1,w,c
  2233  001626  0B0F               	andlw	15
  2234  001628  6E83               	movwf	3971,c	;volatile
  2235                           
  2236                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2237  00162A  0E7D               	movlw	125
  2238  00162C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2239  00162E  0EAC               	movlw	172
  2240  001630                     u1137:
  2241  001630  2EE8               	decfsz	wreg,f,c
  2242  001632  D7FE               	goto	u1137
  2243  001634  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2244  001636  D7FC               	goto	u1137
  2245                           
  2246                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2247  001638  8C83               	bsf	3971,6,c	;volatile
  2248                           
  2249                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2250  00163A  0E9C               	movlw	156
  2251  00163C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2252  00163E  0ED7               	movlw	215
  2253  001640                     u1147:
  2254  001640  2EE8               	decfsz	wreg,f,c
  2255  001642  D7FE               	goto	u1147
  2256  001644  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2257  001646  D7FC               	goto	u1147
  2258  001648  F000               	nop	
  2259                           
  2260                           ;lcd_utilities.c: 66: lcd_strobe();
  2261  00164A  ECC7  F00D         	call	_lcd_strobe	;wreg free
  2262                           
  2263                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2264  00164E  0E9C               	movlw	156
  2265  001650  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2266  001652  0ED7               	movlw	215
  2267  001654                     u1157:
  2268  001654  2EE8               	decfsz	wreg,f,c
  2269  001656  D7FE               	goto	u1157
  2270  001658  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2271  00165A  D7FC               	goto	u1157
  2272  00165C  F000               	nop	
  2273  00165E  0012               	return		;funcret
  2274  001660                     __end_of_lcd_write_data:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           intcon2	equ	0xFF1
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           postdec1	equ	0xFE5
  2287                           plusw1	equ	0xFE3
  2288                           fsr1l	equ	0xFE1
  2289                           indf2	equ	0xFDF
  2290                           plusw2	equ	0xFDB
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _lcd_write_cmd *****************
  2296 ;; Defined at:
  2297 ;;		line 18 in file "lcd_utilities.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  cmd             1    wreg     unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  cmd             1   30[COMRAM] unsigned char 
  2302 ;;  temp2           1   31[COMRAM] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0
  2313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2315 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2316 ;;Total ram usage:        3 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    4
  2319 ;; This function calls:
  2320 ;;		_lcd_strobe
  2321 ;; This function is called by:
  2322 ;;		_lcd_init
  2323 ;;		_SetupTime
  2324 ;;		_SetupAlarmTimeA
  2325 ;;		_SetupAlarmTimeB
  2326 ;;		_SetupAlarmTimeC
  2327 ;;		_version
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text9
  2332  0018D2                     __ptext9:
  2333                           	opt stack 0
  2334  0018D2                     _lcd_write_cmd:
  2335                           	opt stack 25
  2336                           
  2337                           ;incstack = 0
  2338                           ;lcd_write_cmd@cmd stored from wreg
  2339  0018D2  6E1F               	movwf	lcd_write_cmd@cmd,c
  2340                           
  2341                           ;lcd_utilities.c: 20: unsigned char temp2;
  2342                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2343  0018D4  9C83               	bcf	3971,6,c	;volatile
  2344                           
  2345                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2346  0018D6  0E3F               	movlw	63
  2347  0018D8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2348  0018DA  0E55               	movlw	85
  2349  0018DC                     u1167:
  2350  0018DC  2EE8               	decfsz	wreg,f,c
  2351  0018DE  D7FE               	goto	u1167
  2352  0018E0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2353  0018E2  D7FC               	goto	u1167
  2354  0018E4  F000               	nop	
  2355                           
  2356                           ;lcd_utilities.c: 23: temp2 = cmd;
  2357  0018E6  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2358                           
  2359                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2360  0018EA  3820               	swapf	lcd_write_cmd@temp2,w,c
  2361  0018EC  0B0F               	andlw	15
  2362  0018EE  6E20               	movwf	lcd_write_cmd@temp2,c
  2363                           
  2364                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2365  0018F0  5020               	movf	lcd_write_cmd@temp2,w,c
  2366  0018F2  0B0F               	andlw	15
  2367  0018F4  6E83               	movwf	3971,c	;volatile
  2368                           
  2369                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2370  0018F6  0E7D               	movlw	125
  2371  0018F8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2372  0018FA  0EAC               	movlw	172
  2373  0018FC                     u1177:
  2374  0018FC  2EE8               	decfsz	wreg,f,c
  2375  0018FE  D7FE               	goto	u1177
  2376  001900  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2377  001902  D7FC               	goto	u1177
  2378                           
  2379                           ;lcd_utilities.c: 28: lcd_strobe();
  2380  001904  ECC7  F00D         	call	_lcd_strobe	;wreg free
  2381                           
  2382                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2383  001908  0E7D               	movlw	125
  2384  00190A  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2385  00190C  0EAC               	movlw	172
  2386  00190E                     u1187:
  2387  00190E  2EE8               	decfsz	wreg,f,c
  2388  001910  D7FE               	goto	u1187
  2389  001912  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2390  001914  D7FC               	goto	u1187
  2391                           
  2392                           ;lcd_utilities.c: 32: temp2 = cmd;
  2393  001916  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2394                           
  2395                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2396  00191A  5020               	movf	lcd_write_cmd@temp2,w,c
  2397  00191C  0B0F               	andlw	15
  2398  00191E  6E83               	movwf	3971,c	;volatile
  2399                           
  2400                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2401  001920  0E7D               	movlw	125
  2402  001922  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2403  001924  0EAC               	movlw	172
  2404  001926                     u1197:
  2405  001926  2EE8               	decfsz	wreg,f,c
  2406  001928  D7FE               	goto	u1197
  2407  00192A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2408  00192C  D7FC               	goto	u1197
  2409                           
  2410                           ;lcd_utilities.c: 36: lcd_strobe();
  2411  00192E  ECC7  F00D         	call	_lcd_strobe	;wreg free
  2412                           
  2413                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2414  001932  0E7D               	movlw	125
  2415  001934  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2416  001936  0EAC               	movlw	172
  2417  001938                     u1207:
  2418  001938  2EE8               	decfsz	wreg,f,c
  2419  00193A  D7FE               	goto	u1207
  2420  00193C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2421  00193E  D7FC               	goto	u1207
  2422  001940  0012               	return		;funcret
  2423  001942                     __end_of_lcd_write_cmd:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           prodh	equ	0xFF4
  2430                           prodl	equ	0xFF3
  2431                           intcon	equ	0xFF2
  2432                           intcon2	equ	0xFF1
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           plusw1	equ	0xFE3
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           plusw2	equ	0xFDB
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _lcd_strobe *****************
  2445 ;; Defined at:
  2446 ;;		line 73 in file "lcd_utilities.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2462 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2463 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_lcd_write_cmd
  2471 ;;		_lcd_write_data
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text10
  2476  001B8E                     __ptext10:
  2477                           	opt stack 0
  2478  001B8E                     _lcd_strobe:
  2479                           	opt stack 25
  2480                           
  2481                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2482                           
  2483                           ;incstack = 0
  2484  001B8E  8883               	bsf	3971,4,c	;volatile
  2485                           
  2486                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2487  001B90  0E7D               	movlw	125
  2488  001B92  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2489  001B94  0EAC               	movlw	172
  2490  001B96                     u1217:
  2491  001B96  2EE8               	decfsz	wreg,f,c
  2492  001B98  D7FE               	goto	u1217
  2493  001B9A  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2494  001B9C  D7FC               	goto	u1217
  2495                           
  2496                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2497  001B9E  9883               	bcf	3971,4,c	;volatile
  2498                           
  2499                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2500  001BA0  0E7D               	movlw	125
  2501  001BA2  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2502  001BA4  0EAC               	movlw	172
  2503  001BA6                     u1227:
  2504  001BA6  2EE8               	decfsz	wreg,f,c
  2505  001BA8  D7FE               	goto	u1227
  2506  001BAA  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2507  001BAC  D7FC               	goto	u1227
  2508  001BAE  0012               	return		;funcret
  2509  001BB0                     __end_of_lcd_strobe:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           intcon2	equ	0xFF1
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           postdec1	equ	0xFE5
  2522                           plusw1	equ	0xFE3
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           plusw2	equ	0xFDB
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _getkey *****************
  2531 ;; Defined at:
  2532 ;;		line 17 in file "keypad_utilities.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2537 ;;  keycode         1   18[BANK0 ] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      unsigned char 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         0       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2550 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2551 ;;Total ram usage:       19 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    3
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_SetupTime
  2558 ;;		_SetupAlarmTimeA
  2559 ;;		_SetupAlarmTimeB
  2560 ;;		_SetupAlarmTimeC
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text11
  2565  001B1C                     __ptext11:
  2566                           	opt stack 0
  2567  001B1C                     _getkey:
  2568                           	opt stack 26
  2569                           
  2570                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2571                           
  2572                           ;incstack = 0
  2573  001B1C  0E1B               	movlw	low getkey@F4444
  2574  001B1E  6EF6               	movwf	tblptrl,c
  2575  001B20                     	if	1	;There is more than 1 active tblptr byte
  2576  001B20  0E10               	movlw	high getkey@F4444
  2577  001B22  6EF7               	movwf	tblptrh,c
  2578  001B24                     	endif
  2579  001B24                     	if	0	;There are less than 3 active tblptr bytes
  2580  001B24                     	endif
  2581  001B24  EE20  F0B4         	lfsr	2,getkey@lookup
  2582  001B28  0E11               	movlw	17
  2583  001B2A                     u810:
  2584  001B2A  0009               	tblrd		*+
  2585  001B2C  CFF5 FFDE          	movff	tablat,postinc2
  2586  001B30  06E8               	decf	wreg,f,c
  2587  001B32  E2FB               	bc	u810
  2588  001B34                     l33:
  2589  001B34  AA81               	btfss	3969,5,c	;volatile
  2590  001B36  D7FE               	goto	l33
  2591                           
  2592                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2593  001B38  5081               	movf	3969,w,c	;volatile
  2594  001B3A  0B0F               	andlw	15
  2595  001B3C  0100               	movlb	0	; () banked
  2596  001B3E  6FC6               	movwf	getkey@keycode& (0+255),b
  2597  001B40                     l36:
  2598  001B40  BA81               	btfsc	3969,5,c	;volatile
  2599  001B42  D7FE               	goto	l36
  2600                           
  2601                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2602  001B44  0100               	movlb	0	; () banked
  2603  001B46  51C6               	movf	getkey@keycode& (0+255),w,b
  2604  001B48  0D01               	mullw	1
  2605  001B4A  0EB4               	movlw	low getkey@lookup
  2606  001B4C  24F3               	addwf	prodl,w,c
  2607  001B4E  6ED9               	movwf	fsr2l,c
  2608  001B50  0E00               	movlw	high getkey@lookup
  2609  001B52  20F4               	addwfc	prodh,w,c
  2610  001B54  6EDA               	movwf	fsr2h,c
  2611  001B56  50DF               	movf	indf2,w,c
  2612  001B58  0012               	return	
  2613  001B5A                     __end_of_getkey:
  2614                           	opt stack 0
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           intcon2	equ	0xFF1
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           postdec1	equ	0xFE5
  2626                           plusw1	equ	0xFE3
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           plusw2	equ	0xFDB
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _delay_ms *****************
  2636 ;; Defined at:
  2637 ;;		line 10 in file "delays_utilities.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  i               2   28[COMRAM] unsigned int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  j               2   31[COMRAM] unsigned int 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;		None               void
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2651 ;;      Params:         2       0       0       0       0       0       0       0       0
  2652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2654 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2655 ;;Total ram usage:        5 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    3
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_SetupTime
  2662 ;;		_SetupAlarmTimeA
  2663 ;;		_SetupAlarmTimeB
  2664 ;;		_SetupAlarmTimeC
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  001B5A                     __ptext12:
  2670                           	opt stack 0
  2671  001B5A                     _delay_ms:
  2672                           	opt stack 26
  2673                           
  2674                           ;delays_utilities.c: 12: if(i!=0)
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;incstack = 0
  2678  001B5A  501D               	movf	delay_ms@i,w,c
  2679  001B5C  101E               	iorwf	delay_ms@i+1,w,c
  2680  001B5E  B4D8               	btfsc	status,2,c
  2681  001B60  0012               	return	
  2682                           
  2683                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2684  001B62  0E00               	movlw	0
  2685  001B64  6E21               	movwf	delay_ms@j+1,c
  2686  001B66  0E00               	movlw	0
  2687  001B68  6E20               	movwf	delay_ms@j,c
  2688  001B6A  D00A               	goto	l179
  2689  001B6C                     l1507:
  2690  001B6C  0E10               	movlw	16
  2691  001B6E  6E1F               	movwf	??_delay_ms& (0+255),c
  2692  001B70  0E94               	movlw	148
  2693  001B72                     u1237:
  2694  001B72  2EE8               	decfsz	wreg,f,c
  2695  001B74  D7FE               	goto	u1237
  2696  001B76  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2697  001B78  D7FC               	goto	u1237
  2698  001B7A  D000               	nop2	
  2699  001B7C  4A20               	infsnz	delay_ms@j,f,c
  2700  001B7E  2A21               	incf	delay_ms@j+1,f,c
  2701  001B80                     l179:
  2702  001B80  501D               	movf	delay_ms@i,w,c
  2703  001B82  5C20               	subwf	delay_ms@j,w,c
  2704  001B84  501E               	movf	delay_ms@i+1,w,c
  2705  001B86  5821               	subwfb	delay_ms@j+1,w,c
  2706  001B88  B0D8               	btfsc	status,0,c
  2707  001B8A  0012               	return	
  2708  001B8C  D7EF               	goto	l1507
  2709  001B8E                     __end_of_delay_ms:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           intcon	equ	0xFF2
  2718                           intcon2	equ	0xFF1
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           plusw1	equ	0xFE3
  2723                           fsr1l	equ	0xFE1
  2724                           indf2	equ	0xFDF
  2725                           postinc2	equ	0xFDE
  2726                           plusw2	equ	0xFDB
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _char_2_int *****************
  2732 ;; Defined at:
  2733 ;;		line 35 in file "Main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  char1           1    wreg     unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  char1           1   28[COMRAM] unsigned char 
  2738 ;;  int1            1   29[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0
  2749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2751 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2752 ;;Total ram usage:        2 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    3
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_SetupTime
  2759 ;;		_SetupAlarmTimeA
  2760 ;;		_SetupAlarmTimeB
  2761 ;;		_SetupAlarmTimeC
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text13
  2766  001860                     __ptext13:
  2767                           	opt stack 0
  2768  001860                     _char_2_int:
  2769                           	opt stack 26
  2770                           
  2771                           ;incstack = 0
  2772                           ;char_2_int@char1 stored from wreg
  2773  001860  6E1D               	movwf	char_2_int@char1,c
  2774                           
  2775                           ;Main.c: 37: unsigned char int1;
  2776                           ;Main.c: 38: switch (char1)
  2777  001862  D015               	goto	l1501
  2778  001864                     l1481:
  2779  001864  0E01               	movlw	1
  2780  001866  D011               	goto	L13
  2781  001868                     l1483:
  2782  001868  0E02               	movlw	2
  2783  00186A  D00F               	goto	L13
  2784  00186C                     l1485:
  2785  00186C  0E03               	movlw	3
  2786  00186E  D00D               	goto	L13
  2787  001870                     l1487:
  2788  001870  0E04               	movlw	4
  2789  001872  D00B               	goto	L13
  2790  001874                     l1489:
  2791  001874  0E05               	movlw	5
  2792  001876  D009               	goto	L13
  2793  001878                     l1491:
  2794  001878  0E06               	movlw	6
  2795  00187A  D007               	goto	L13
  2796  00187C                     l1493:
  2797  00187C  0E07               	movlw	7
  2798  00187E  D005               	goto	L13
  2799  001880                     l1495:
  2800  001880  0E08               	movlw	8
  2801  001882  D003               	goto	L13
  2802  001884                     l1497:
  2803  001884  0E09               	movlw	9
  2804  001886  D001               	goto	L13
  2805  001888                     l1499:
  2806  001888  0E00               	movlw	0
  2807  00188A                     L13:
  2808  00188A  6E1E               	movwf	char_2_int@int1,c
  2809                           
  2810                           ;Main.c: 51: }
  2811  00188C  D020               	goto	l112
  2812  00188E                     l1501:
  2813  00188E  501D               	movf	char_2_int@char1,w,c
  2814                           
  2815                           ; Switch size 1, requested type "space"
  2816                           ; Number of cases is 10, Range of values is 48 to 57
  2817                           ; switch strategies available:
  2818                           ; Name         Instructions Cycles
  2819                           ; simple_byte           31    16 (average)
  2820                           ;	Chosen strategy is simple_byte
  2821  001890  0A30               	xorlw	48	; case 48
  2822  001892  B4D8               	btfsc	status,2,c
  2823  001894  D7F9               	goto	l1499
  2824  001896  0A01               	xorlw	1	; case 49
  2825  001898  B4D8               	btfsc	status,2,c
  2826  00189A  D7E4               	goto	l1481
  2827  00189C  0A03               	xorlw	3	; case 50
  2828  00189E  B4D8               	btfsc	status,2,c
  2829  0018A0  D7E3               	goto	l1483
  2830  0018A2  0A01               	xorlw	1	; case 51
  2831  0018A4  B4D8               	btfsc	status,2,c
  2832  0018A6  D7E2               	goto	l1485
  2833  0018A8  0A07               	xorlw	7	; case 52
  2834  0018AA  B4D8               	btfsc	status,2,c
  2835  0018AC  D7E1               	goto	l1487
  2836  0018AE  0A01               	xorlw	1	; case 53
  2837  0018B0  B4D8               	btfsc	status,2,c
  2838  0018B2  D7E0               	goto	l1489
  2839  0018B4  0A03               	xorlw	3	; case 54
  2840  0018B6  B4D8               	btfsc	status,2,c
  2841  0018B8  D7DF               	goto	l1491
  2842  0018BA  0A01               	xorlw	1	; case 55
  2843  0018BC  B4D8               	btfsc	status,2,c
  2844  0018BE  D7DE               	goto	l1493
  2845  0018C0  0A0F               	xorlw	15	; case 56
  2846  0018C2  B4D8               	btfsc	status,2,c
  2847  0018C4  D7DD               	goto	l1495
  2848  0018C6  0A01               	xorlw	1	; case 57
  2849  0018C8  B4D8               	btfsc	status,2,c
  2850  0018CA  D7DC               	goto	l1497
  2851  0018CC  D7DD               	goto	l1499
  2852  0018CE                     l112:
  2853                           
  2854                           ;Main.c: 52: return(int1);
  2855  0018CE  501E               	movf	char_2_int@int1,w,c
  2856  0018D0  0012               	return		;funcret
  2857  0018D2                     __end_of_char_2_int:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           intcon2	equ	0xFF1
  2867                           postinc0	equ	0xFEE
  2868                           wreg	equ	0xFE8
  2869                           postdec1	equ	0xFE5
  2870                           plusw1	equ	0xFE3
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           postinc2	equ	0xFDE
  2874                           plusw2	equ	0xFDB
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _ISR_Timer0_Int *****************
  2880 ;; Defined at:
  2881 ;;		line 55 in file "Main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  second10        1   27[COMRAM] unsigned char 
  2886 ;;  minute10        1   26[COMRAM] unsigned char 
  2887 ;;  hour10          1   25[COMRAM] unsigned char 
  2888 ;;  second1         1   24[COMRAM] unsigned char 
  2889 ;;  minute1         1   23[COMRAM] unsigned char 
  2890 ;;  hour1           1   22[COMRAM] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2902 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2903 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:       20 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    2
  2907 ;; This function calls:
  2908 ;;		___awdiv
  2909 ;;		_int_2_char
  2910 ;;		i2_lcd_write_cmd
  2911 ;;		i2_lcd_write_data
  2912 ;; This function is called by:
  2913 ;;		Interrupt level 2
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	intcode
  2918  001008                     __pintcode:
  2919                           	opt stack 0
  2920  001008                     _ISR_Timer0_Int:
  2921                           	opt stack 25
  2922                           
  2923                           ;incstack = 0
  2924  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2925  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2926  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2927  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2928                           pclatu	equ	0xFFB
  2929                           pclath	equ	0xFFA
  2930                           tblptru	equ	0xFF8
  2931                           tblptrh	equ	0xFF7
  2932                           tblptrl	equ	0xFF6
  2933                           tablat	equ	0xFF5
  2934                           prodh	equ	0xFF4
  2935                           prodl	equ	0xFF3
  2936                           intcon	equ	0xFF2
  2937                           intcon2	equ	0xFF1
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postdec1	equ	0xFE5
  2941                           plusw1	equ	0xFE3
  2942                           fsr1l	equ	0xFE1
  2943                           indf2	equ	0xFDF
  2944                           postinc2	equ	0xFDE
  2945                           plusw2	equ	0xFDB
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8
  2949                           
  2950                           	psect	intcode_body
  2951  00102E                     __pintcode_body:
  2952                           	opt stack 25
  2953  00102E                     int_func:
  2954                           	opt stack 25
  2955  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2956  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2957  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2958  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2959  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2960  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2961  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2962  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2963  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2964  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2965  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2966  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2967  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2968                           
  2969                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2970                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  2971  001060  A4F2               	btfss	intcon,2,c	;volatile
  2972  001062  D085               	goto	i2l130
  2973                           
  2974                           ;Main.c: 59: {
  2975                           ;Main.c: 63: second = second + 1;
  2976  001064  2841               	incf	_second,w,c
  2977  001066  6E41               	movwf	_second,c
  2978                           
  2979                           ;Main.c: 64: if ( second > 59 )
  2980  001068  0E3B               	movlw	59
  2981  00106A  6441               	cpfsgt	_second,c
  2982  00106C  D010               	goto	i2l1857
  2983                           
  2984                           ;Main.c: 65: {
  2985                           ;Main.c: 66: second = 0;
  2986  00106E  0E00               	movlw	0
  2987  001070  6E41               	movwf	_second,c
  2988                           
  2989                           ;Main.c: 67: minute = minute + 1;
  2990  001072  283D               	incf	_minute,w,c
  2991  001074  6E3D               	movwf	_minute,c
  2992                           
  2993                           ;Main.c: 68: if ( minute > 59 )
  2994  001076  0E3B               	movlw	59
  2995  001078  643D               	cpfsgt	_minute,c
  2996  00107A  D009               	goto	i2l1857
  2997                           
  2998                           ;Main.c: 69: {
  2999                           ;Main.c: 70: minute = 0;
  3000  00107C  0E00               	movlw	0
  3001  00107E  6E3D               	movwf	_minute,c
  3002                           
  3003                           ;Main.c: 71: hour = hour + 1;
  3004  001080  2839               	incf	_hour,w,c
  3005  001082  6E39               	movwf	_hour,c
  3006                           
  3007                           ;Main.c: 72: if ( hour > 23 )
  3008  001084  0E17               	movlw	23
  3009  001086  6439               	cpfsgt	_hour,c
  3010  001088  D002               	goto	i2l1857
  3011                           
  3012                           ;Main.c: 73: hour = 0;
  3013  00108A  0E00               	movlw	0
  3014  00108C  6E39               	movwf	_hour,c
  3015  00108E                     i2l1857:
  3016                           
  3017                           ;Main.c: 74: }
  3018                           ;Main.c: 75: }
  3019                           ;Main.c: 77: hour10 = hour / 10;
  3020  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3021  001092  6A02               	clrf	___awdiv@dividend+1,c
  3022  001094  0E00               	movlw	0
  3023  001096  6E04               	movwf	___awdiv@divisor+1,c
  3024  001098  0E0A               	movlw	10
  3025  00109A  6E03               	movwf	___awdiv@divisor,c
  3026  00109C  EC7A  F00B         	call	___awdiv	;wreg free
  3027  0010A0  5001               	movf	?___awdiv,w,c
  3028  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3029                           
  3030                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3031  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3032  0010A6  0D0A               	mullw	10
  3033  0010A8  50F3               	movf	prodl,w,c
  3034  0010AA  0800               	sublw	0
  3035  0010AC  2439               	addwf	_hour,w,c
  3036  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3037                           
  3038                           ;Main.c: 80: minute10 = minute / 10;
  3039  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3040  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3041  0010B6  0E00               	movlw	0
  3042  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3043  0010BA  0E0A               	movlw	10
  3044  0010BC  6E03               	movwf	___awdiv@divisor,c
  3045  0010BE  EC7A  F00B         	call	___awdiv	;wreg free
  3046  0010C2  5001               	movf	?___awdiv,w,c
  3047  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3048                           
  3049                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3050  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3051  0010C8  0D0A               	mullw	10
  3052  0010CA  50F3               	movf	prodl,w,c
  3053  0010CC  0800               	sublw	0
  3054  0010CE  243D               	addwf	_minute,w,c
  3055  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3056                           
  3057                           ;Main.c: 83: second10 = second / 10;
  3058  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3059  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3060  0010D8  0E00               	movlw	0
  3061  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3062  0010DC  0E0A               	movlw	10
  3063  0010DE  6E03               	movwf	___awdiv@divisor,c
  3064  0010E0  EC7A  F00B         	call	___awdiv	;wreg free
  3065  0010E4  5001               	movf	?___awdiv,w,c
  3066  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3067                           
  3068                           ;Main.c: 84: second1 = second - second10 * 10;
  3069  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3070  0010EA  0D0A               	mullw	10
  3071  0010EC  50F3               	movf	prodl,w,c
  3072  0010EE  0800               	sublw	0
  3073  0010F0  2441               	addwf	_second,w,c
  3074  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3075                           
  3076                           ;Main.c: 86: lcd_write_cmd(0x80);
  3077  0010F4  0E80               	movlw	128
  3078  0010F6  ECA1  F00C         	call	i2_lcd_write_cmd
  3079                           
  3080                           ;Main.c: 87: lcd_write_data('t');
  3081  0010FA  0E74               	movlw	116
  3082  0010FC  EC30  F00B         	call	i2_lcd_write_data
  3083                           
  3084                           ;Main.c: 88: lcd_write_data('i');
  3085  001100  0E69               	movlw	105
  3086  001102  EC30  F00B         	call	i2_lcd_write_data
  3087                           
  3088                           ;Main.c: 89: lcd_write_data('m');
  3089  001106  0E6D               	movlw	109
  3090  001108  EC30  F00B         	call	i2_lcd_write_data
  3091                           
  3092                           ;Main.c: 90: lcd_write_data('e');
  3093  00110C  0E65               	movlw	101
  3094  00110E  EC30  F00B         	call	i2_lcd_write_data
  3095                           
  3096                           ;Main.c: 91: lcd_write_data(' ');
  3097  001112  0E20               	movlw	32
  3098  001114  EC30  F00B         	call	i2_lcd_write_data
  3099                           
  3100                           ;Main.c: 92: lcd_write_data('=');
  3101  001118  0E3D               	movlw	61
  3102  00111A  EC30  F00B         	call	i2_lcd_write_data
  3103                           
  3104                           ;Main.c: 93: lcd_write_data(' ');
  3105  00111E  0E20               	movlw	32
  3106  001120  EC30  F00B         	call	i2_lcd_write_data
  3107                           
  3108                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3109  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3110  001126  ECBC  F00B         	call	_int_2_char
  3111  00112A  EC30  F00B         	call	i2_lcd_write_data
  3112                           
  3113                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3114  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3115  001130  ECBC  F00B         	call	_int_2_char
  3116  001134  EC30  F00B         	call	i2_lcd_write_data
  3117                           
  3118                           ;Main.c: 96: lcd_write_data(':');
  3119  001138  0E3A               	movlw	58
  3120  00113A  EC30  F00B         	call	i2_lcd_write_data
  3121                           
  3122                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3123  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3124  001140  ECBC  F00B         	call	_int_2_char
  3125  001144  EC30  F00B         	call	i2_lcd_write_data
  3126                           
  3127                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3128  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3129  00114A  ECBC  F00B         	call	_int_2_char
  3130  00114E  EC30  F00B         	call	i2_lcd_write_data
  3131                           
  3132                           ;Main.c: 99: lcd_write_data(':');
  3133  001152  0E3A               	movlw	58
  3134  001154  EC30  F00B         	call	i2_lcd_write_data
  3135                           
  3136                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3137  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3138  00115A  ECBC  F00B         	call	_int_2_char
  3139  00115E  EC30  F00B         	call	i2_lcd_write_data
  3140                           
  3141                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3142  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3143  001164  ECBC  F00B         	call	_int_2_char
  3144  001168  EC30  F00B         	call	i2_lcd_write_data
  3145                           
  3146                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3147  00116C  94F2               	bcf	intcon,2,c	;volatile
  3148  00116E                     i2l130:
  3149  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3150  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3151  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3152  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3153  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3154  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3155  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3156  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3157  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3158  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3159  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3160  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3161  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3162  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3163  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3164  0011A8  0011               	retfie		f
  3165  0011AA                     __end_of_ISR_Timer0_Int:
  3166                           	opt stack 0
  3167                           pclatu	equ	0xFFB
  3168                           pclath	equ	0xFFA
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           plusw1	equ	0xFE3
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           plusw2	equ	0xFDB
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function i2_lcd_write_data *****************
  3193 ;; Defined at:
  3194 ;;		line 43 in file "lcd_utilities.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  data            1    wreg     unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  data            1    2[COMRAM] unsigned char 
  3199 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;		None               void
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        3 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    1
  3216 ;; This function calls:
  3217 ;;		i2_lcd_strobe
  3218 ;; This function is called by:
  3219 ;;		_ISR_Timer0_Int
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text15
  3224  001660                     __ptext15:
  3225                           	opt stack 0
  3226  001660                     i2_lcd_write_data:
  3227                           	opt stack 25
  3228                           
  3229                           ;incstack = 0
  3230                           ;i2lcd_write_data@data stored from wreg
  3231  001660  6E03               	movwf	i2lcd_write_data@data,c
  3232                           
  3233                           ;lcd_utilities.c: 45: char temp1;
  3234                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3235  001662  8C83               	bsf	3971,6,c	;volatile
  3236                           
  3237                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3238  001664  0E3F               	movlw	63
  3239  001666  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3240  001668  0E55               	movlw	85
  3241  00166A                     i2u124_47:
  3242  00166A  2EE8               	decfsz	wreg,f,c
  3243  00166C  D7FE               	goto	i2u124_47
  3244  00166E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3245  001670  D7FC               	goto	i2u124_47
  3246  001672  F000               	nop	
  3247                           
  3248                           ;lcd_utilities.c: 50: temp1 = data;
  3249  001674  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3250                           
  3251                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3252  001678  3804               	swapf	i2lcd_write_data@temp1,w,c
  3253  00167A  0B0F               	andlw	15
  3254  00167C  6E04               	movwf	i2lcd_write_data@temp1,c
  3255                           
  3256                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3257  00167E  5004               	movf	i2lcd_write_data@temp1,w,c
  3258  001680  0B0F               	andlw	15
  3259  001682  6E83               	movwf	3971,c	;volatile
  3260                           
  3261                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3262  001684  0E7D               	movlw	125
  3263  001686  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3264  001688  0EAC               	movlw	172
  3265  00168A                     i2u125_47:
  3266  00168A  2EE8               	decfsz	wreg,f,c
  3267  00168C  D7FE               	goto	i2u125_47
  3268  00168E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3269  001690  D7FC               	goto	i2u125_47
  3270                           
  3271                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3272  001692  8C83               	bsf	3971,6,c	;volatile
  3273                           
  3274                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3275  001694  0E7D               	movlw	125
  3276  001696  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3277  001698  0EAC               	movlw	172
  3278  00169A                     i2u126_47:
  3279  00169A  2EE8               	decfsz	wreg,f,c
  3280  00169C  D7FE               	goto	i2u126_47
  3281  00169E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3282  0016A0  D7FC               	goto	i2u126_47
  3283                           
  3284                           ;lcd_utilities.c: 57: lcd_strobe();
  3285  0016A2  ECD8  F00D         	call	i2_lcd_strobe	;wreg free
  3286                           
  3287                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3288  0016A6  0E7D               	movlw	125
  3289  0016A8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3290  0016AA  0EAC               	movlw	172
  3291  0016AC                     i2u127_47:
  3292  0016AC  2EE8               	decfsz	wreg,f,c
  3293  0016AE  D7FE               	goto	i2u127_47
  3294  0016B0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3295  0016B2  D7FC               	goto	i2u127_47
  3296                           
  3297                           ;lcd_utilities.c: 60: temp1 = data;
  3298  0016B4  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3299                           
  3300                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3301  0016B8  5004               	movf	i2lcd_write_data@temp1,w,c
  3302  0016BA  0B0F               	andlw	15
  3303  0016BC  6E83               	movwf	3971,c	;volatile
  3304                           
  3305                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3306  0016BE  0E7D               	movlw	125
  3307  0016C0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3308  0016C2  0EAC               	movlw	172
  3309  0016C4                     i2u128_47:
  3310  0016C4  2EE8               	decfsz	wreg,f,c
  3311  0016C6  D7FE               	goto	i2u128_47
  3312  0016C8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3313  0016CA  D7FC               	goto	i2u128_47
  3314                           
  3315                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3316  0016CC  8C83               	bsf	3971,6,c	;volatile
  3317                           
  3318                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3319  0016CE  0E9C               	movlw	156
  3320  0016D0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3321  0016D2  0ED7               	movlw	215
  3322  0016D4                     i2u129_47:
  3323  0016D4  2EE8               	decfsz	wreg,f,c
  3324  0016D6  D7FE               	goto	i2u129_47
  3325  0016D8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3326  0016DA  D7FC               	goto	i2u129_47
  3327  0016DC  F000               	nop	
  3328                           
  3329                           ;lcd_utilities.c: 66: lcd_strobe();
  3330  0016DE  ECD8  F00D         	call	i2_lcd_strobe	;wreg free
  3331                           
  3332                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3333  0016E2  0E9C               	movlw	156
  3334  0016E4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3335  0016E6  0ED7               	movlw	215
  3336  0016E8                     i2u130_47:
  3337  0016E8  2EE8               	decfsz	wreg,f,c
  3338  0016EA  D7FE               	goto	i2u130_47
  3339  0016EC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3340  0016EE  D7FC               	goto	i2u130_47
  3341  0016F0  F000               	nop	
  3342  0016F2  0012               	return		;funcret
  3343  0016F4                     __end_ofi2_lcd_write_data:
  3344                           	opt stack 0
  3345                           pclatu	equ	0xFFB
  3346                           pclath	equ	0xFFA
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           prodh	equ	0xFF4
  3352                           prodl	equ	0xFF3
  3353                           intcon	equ	0xFF2
  3354                           intcon2	equ	0xFF1
  3355                           postinc0	equ	0xFEE
  3356                           fsr0h	equ	0xFEA
  3357                           fsr0l	equ	0xFE9
  3358                           wreg	equ	0xFE8
  3359                           postdec1	equ	0xFE5
  3360                           plusw1	equ	0xFE3
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           plusw2	equ	0xFDB
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function i2_lcd_write_cmd *****************
  3371 ;; Defined at:
  3372 ;;		line 18 in file "lcd_utilities.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  cmd             1    wreg     unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  cmd             1    2[COMRAM] unsigned char 
  3377 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3387 ;;      Params:         0       0       0       0       0       0       0       0       0
  3388 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3390 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3391 ;;Total ram usage:        3 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		i2_lcd_strobe
  3396 ;; This function is called by:
  3397 ;;		_ISR_Timer0_Int
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text16
  3402  001942                     __ptext16:
  3403                           	opt stack 0
  3404  001942                     i2_lcd_write_cmd:
  3405                           	opt stack 25
  3406                           
  3407                           ;incstack = 0
  3408                           ;i2lcd_write_cmd@cmd stored from wreg
  3409  001942  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3410                           
  3411                           ;lcd_utilities.c: 20: unsigned char temp2;
  3412                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3413  001944  9C83               	bcf	3971,6,c	;volatile
  3414                           
  3415                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3416  001946  0E3F               	movlw	63
  3417  001948  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3418  00194A  0E55               	movlw	85
  3419  00194C                     i2u131_47:
  3420  00194C  2EE8               	decfsz	wreg,f,c
  3421  00194E  D7FE               	goto	i2u131_47
  3422  001950  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3423  001952  D7FC               	goto	i2u131_47
  3424  001954  F000               	nop	
  3425                           
  3426                           ;lcd_utilities.c: 23: temp2 = cmd;
  3427  001956  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3428                           
  3429                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3430  00195A  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3431  00195C  0B0F               	andlw	15
  3432  00195E  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3433                           
  3434                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3435  001960  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3436  001962  0B0F               	andlw	15
  3437  001964  6E83               	movwf	3971,c	;volatile
  3438                           
  3439                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3440  001966  0E7D               	movlw	125
  3441  001968  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3442  00196A  0EAC               	movlw	172
  3443  00196C                     i2u132_47:
  3444  00196C  2EE8               	decfsz	wreg,f,c
  3445  00196E  D7FE               	goto	i2u132_47
  3446  001970  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3447  001972  D7FC               	goto	i2u132_47
  3448                           
  3449                           ;lcd_utilities.c: 28: lcd_strobe();
  3450  001974  ECD8  F00D         	call	i2_lcd_strobe	;wreg free
  3451                           
  3452                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3453  001978  0E7D               	movlw	125
  3454  00197A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3455  00197C  0EAC               	movlw	172
  3456  00197E                     i2u133_47:
  3457  00197E  2EE8               	decfsz	wreg,f,c
  3458  001980  D7FE               	goto	i2u133_47
  3459  001982  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3460  001984  D7FC               	goto	i2u133_47
  3461                           
  3462                           ;lcd_utilities.c: 32: temp2 = cmd;
  3463  001986  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3464                           
  3465                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3466  00198A  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3467  00198C  0B0F               	andlw	15
  3468  00198E  6E83               	movwf	3971,c	;volatile
  3469                           
  3470                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3471  001990  0E7D               	movlw	125
  3472  001992  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3473  001994  0EAC               	movlw	172
  3474  001996                     i2u134_47:
  3475  001996  2EE8               	decfsz	wreg,f,c
  3476  001998  D7FE               	goto	i2u134_47
  3477  00199A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3478  00199C  D7FC               	goto	i2u134_47
  3479                           
  3480                           ;lcd_utilities.c: 36: lcd_strobe();
  3481  00199E  ECD8  F00D         	call	i2_lcd_strobe	;wreg free
  3482                           
  3483                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3484  0019A2  0E7D               	movlw	125
  3485  0019A4  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3486  0019A6  0EAC               	movlw	172
  3487  0019A8                     i2u135_47:
  3488  0019A8  2EE8               	decfsz	wreg,f,c
  3489  0019AA  D7FE               	goto	i2u135_47
  3490  0019AC  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3491  0019AE  D7FC               	goto	i2u135_47
  3492  0019B0  0012               	return		;funcret
  3493  0019B2                     __end_ofi2_lcd_write_cmd:
  3494                           	opt stack 0
  3495                           pclatu	equ	0xFFB
  3496                           pclath	equ	0xFFA
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           intcon	equ	0xFF2
  3504                           intcon2	equ	0xFF1
  3505                           postinc0	equ	0xFEE
  3506                           fsr0h	equ	0xFEA
  3507                           fsr0l	equ	0xFE9
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           plusw1	equ	0xFE3
  3511                           fsr1h	equ	0xFE2
  3512                           fsr1l	equ	0xFE1
  3513                           indf2	equ	0xFDF
  3514                           postinc2	equ	0xFDE
  3515                           plusw2	equ	0xFDB
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function i2_lcd_strobe *****************
  3521 ;; Defined at:
  3522 ;;		line 73 in file "lcd_utilities.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;		None               void
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3538 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3539 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		i2_lcd_write_cmd
  3546 ;;		i2_lcd_write_data
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text17
  3551  001BB0                     __ptext17:
  3552                           	opt stack 0
  3553  001BB0                     i2_lcd_strobe:
  3554                           	opt stack 25
  3555                           
  3556                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3557                           
  3558                           ;incstack = 0
  3559  001BB0  8883               	bsf	3971,4,c	;volatile
  3560                           
  3561                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3562  001BB2  0E7D               	movlw	125
  3563  001BB4  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3564  001BB6  0EAC               	movlw	172
  3565  001BB8                     i2u136_47:
  3566  001BB8  2EE8               	decfsz	wreg,f,c
  3567  001BBA  D7FE               	goto	i2u136_47
  3568  001BBC  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3569  001BBE  D7FC               	goto	i2u136_47
  3570                           
  3571                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3572  001BC0  9883               	bcf	3971,4,c	;volatile
  3573                           
  3574                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3575  001BC2  0E7D               	movlw	125
  3576  001BC4  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3577  001BC6  0EAC               	movlw	172
  3578  001BC8                     i2u137_47:
  3579  001BC8  2EE8               	decfsz	wreg,f,c
  3580  001BCA  D7FE               	goto	i2u137_47
  3581  001BCC  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3582  001BCE  D7FC               	goto	i2u137_47
  3583  001BD0  0012               	return		;funcret
  3584  001BD2                     __end_ofi2_lcd_strobe:
  3585                           	opt stack 0
  3586                           pclatu	equ	0xFFB
  3587                           pclath	equ	0xFFA
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           intcon2	equ	0xFF1
  3596                           postinc0	equ	0xFEE
  3597                           fsr0h	equ	0xFEA
  3598                           fsr0l	equ	0xFE9
  3599                           wreg	equ	0xFE8
  3600                           postdec1	equ	0xFE5
  3601                           plusw1	equ	0xFE3
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           postinc2	equ	0xFDE
  3606                           plusw2	equ	0xFDB
  3607                           fsr2h	equ	0xFDA
  3608                           fsr2l	equ	0xFD9
  3609                           status	equ	0xFD8
  3610                           
  3611 ;; *************** function _int_2_char *****************
  3612 ;; Defined at:
  3613 ;;		line 15 in file "Main.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  int1            1    wreg     unsigned char 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  int1            1    0[COMRAM] unsigned char 
  3618 ;;  char1           1    1[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      unsigned char 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0
  3629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3631 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3632 ;;Total ram usage:        2 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_ISR_Timer0_Int
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text18
  3642  001778                     __ptext18:
  3643                           	opt stack 0
  3644  001778                     _int_2_char:
  3645                           	opt stack 26
  3646                           
  3647                           ;incstack = 0
  3648                           ;int_2_char@int1 stored from wreg
  3649  001778  6E01               	movwf	int_2_char@int1,c
  3650                           
  3651                           ;Main.c: 17: char char1;
  3652                           ;Main.c: 18: switch (int1)
  3653  00177A  D017               	goto	i2l961
  3654  00177C                     i2l939:
  3655  00177C  0E30               	movlw	48
  3656  00177E  D013               	goto	L23
  3657  001780                     i2l941:
  3658  001780  0E31               	movlw	49
  3659  001782  D011               	goto	L23
  3660  001784                     i2l943:
  3661  001784  0E32               	movlw	50
  3662  001786  D00F               	goto	L23
  3663  001788                     i2l945:
  3664  001788  0E33               	movlw	51
  3665  00178A  D00D               	goto	L23
  3666  00178C                     i2l947:
  3667  00178C  0E34               	movlw	52
  3668  00178E  D00B               	goto	L23
  3669  001790                     i2l949:
  3670  001790  0E35               	movlw	53
  3671  001792  D009               	goto	L23
  3672  001794                     i2l951:
  3673  001794  0E36               	movlw	54
  3674  001796  D007               	goto	L23
  3675  001798                     i2l953:
  3676  001798  0E37               	movlw	55
  3677  00179A  D005               	goto	L23
  3678  00179C                     i2l955:
  3679  00179C  0E38               	movlw	56
  3680  00179E  D003               	goto	L23
  3681  0017A0                     i2l957:
  3682  0017A0  0E39               	movlw	57
  3683  0017A2  D001               	goto	L23
  3684  0017A4                     i2l959:
  3685  0017A4  0E3F               	movlw	63
  3686  0017A6                     L23:
  3687  0017A6  6E02               	movwf	int_2_char@char1,c
  3688                           
  3689                           ;Main.c: 31: }
  3690  0017A8  D020               	goto	i2l96
  3691  0017AA                     i2l961:
  3692  0017AA  5001               	movf	int_2_char@int1,w,c
  3693                           
  3694                           ; Switch size 1, requested type "space"
  3695                           ; Number of cases is 10, Range of values is 0 to 9
  3696                           ; switch strategies available:
  3697                           ; Name         Instructions Cycles
  3698                           ; simple_byte           31    16 (average)
  3699                           ;	Chosen strategy is simple_byte
  3700  0017AC  0A00               	xorlw	0	; case 0
  3701  0017AE  B4D8               	btfsc	status,2,c
  3702  0017B0  D7E5               	goto	i2l939
  3703  0017B2  0A01               	xorlw	1	; case 1
  3704  0017B4  B4D8               	btfsc	status,2,c
  3705  0017B6  D7E4               	goto	i2l941
  3706  0017B8  0A03               	xorlw	3	; case 2
  3707  0017BA  B4D8               	btfsc	status,2,c
  3708  0017BC  D7E3               	goto	i2l943
  3709  0017BE  0A01               	xorlw	1	; case 3
  3710  0017C0  B4D8               	btfsc	status,2,c
  3711  0017C2  D7E2               	goto	i2l945
  3712  0017C4  0A07               	xorlw	7	; case 4
  3713  0017C6  B4D8               	btfsc	status,2,c
  3714  0017C8  D7E1               	goto	i2l947
  3715  0017CA  0A01               	xorlw	1	; case 5
  3716  0017CC  B4D8               	btfsc	status,2,c
  3717  0017CE  D7E0               	goto	i2l949
  3718  0017D0  0A03               	xorlw	3	; case 6
  3719  0017D2  B4D8               	btfsc	status,2,c
  3720  0017D4  D7DF               	goto	i2l951
  3721  0017D6  0A01               	xorlw	1	; case 7
  3722  0017D8  B4D8               	btfsc	status,2,c
  3723  0017DA  D7DE               	goto	i2l953
  3724  0017DC  0A0F               	xorlw	15	; case 8
  3725  0017DE  B4D8               	btfsc	status,2,c
  3726  0017E0  D7DD               	goto	i2l955
  3727  0017E2  0A01               	xorlw	1	; case 9
  3728  0017E4  B4D8               	btfsc	status,2,c
  3729  0017E6  D7DC               	goto	i2l957
  3730  0017E8  D7DD               	goto	i2l959
  3731  0017EA                     i2l96:
  3732                           
  3733                           ;Main.c: 32: return(char1);
  3734  0017EA  5002               	movf	int_2_char@char1,w,c
  3735  0017EC  0012               	return		;funcret
  3736  0017EE                     __end_of_int_2_char:
  3737                           	opt stack 0
  3738                           pclatu	equ	0xFFB
  3739                           pclath	equ	0xFFA
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           prodh	equ	0xFF4
  3745                           prodl	equ	0xFF3
  3746                           intcon	equ	0xFF2
  3747                           intcon2	equ	0xFF1
  3748                           postinc0	equ	0xFEE
  3749                           fsr0h	equ	0xFEA
  3750                           fsr0l	equ	0xFE9
  3751                           wreg	equ	0xFE8
  3752                           postdec1	equ	0xFE5
  3753                           plusw1	equ	0xFE3
  3754                           fsr1h	equ	0xFE2
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           plusw2	equ	0xFDB
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function ___awdiv *****************
  3764 ;; Defined at:
  3765 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  dividend        2    0[COMRAM] int 
  3768 ;;  divisor         2    2[COMRAM] int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  quotient        2    6[COMRAM] int 
  3771 ;;  sign            1    5[COMRAM] unsigned char 
  3772 ;;  counter         1    4[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2    0[COMRAM] int 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         4       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        8 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_ISR_Timer0_Int
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text19
  3796  0016F4                     __ptext19:
  3797                           	opt stack 0
  3798  0016F4                     ___awdiv:
  3799                           	opt stack 26
  3800                           
  3801                           ;incstack = 0
  3802  0016F4  0E00               	movlw	0
  3803  0016F6  6E06               	movwf	___awdiv@sign,c
  3804  0016F8  AE04               	btfss	___awdiv@divisor+1,7,c
  3805  0016FA  D006               	goto	i2l1743
  3806  0016FC  6C03               	negf	___awdiv@divisor,c
  3807  0016FE  1E04               	comf	___awdiv@divisor+1,f,c
  3808  001700  B0D8               	btfsc	status,0,c
  3809  001702  2A04               	incf	___awdiv@divisor+1,f,c
  3810  001704  0E01               	movlw	1
  3811  001706  6E06               	movwf	___awdiv@sign,c
  3812  001708                     i2l1743:
  3813  001708  AE02               	btfss	___awdiv@dividend+1,7,c
  3814  00170A  D006               	goto	i2l1749
  3815  00170C  6C01               	negf	___awdiv@dividend,c
  3816  00170E  1E02               	comf	___awdiv@dividend+1,f,c
  3817  001710  B0D8               	btfsc	status,0,c
  3818  001712  2A02               	incf	___awdiv@dividend+1,f,c
  3819  001714  0E01               	movlw	1
  3820  001716  1A06               	xorwf	___awdiv@sign,f,c
  3821  001718                     i2l1749:
  3822  001718  0E00               	movlw	0
  3823  00171A  6E08               	movwf	___awdiv@quotient+1,c
  3824  00171C  0E00               	movlw	0
  3825  00171E  6E07               	movwf	___awdiv@quotient,c
  3826  001720  5003               	movf	___awdiv@divisor,w,c
  3827  001722  1004               	iorwf	___awdiv@divisor+1,w,c
  3828  001724  B4D8               	btfsc	status,2,c
  3829  001726  D01C               	goto	i2l1771
  3830  001728  0E01               	movlw	1
  3831  00172A  6E05               	movwf	___awdiv@counter,c
  3832  00172C  D004               	goto	i2l1757
  3833  00172E                     i2l1755:
  3834  00172E  90D8               	bcf	status,0,c
  3835  001730  3603               	rlcf	___awdiv@divisor,f,c
  3836  001732  3604               	rlcf	___awdiv@divisor+1,f,c
  3837  001734  2A05               	incf	___awdiv@counter,f,c
  3838  001736                     i2l1757:
  3839  001736  AE04               	btfss	___awdiv@divisor+1,7,c
  3840  001738  D7FA               	goto	i2l1755
  3841  00173A                     i2l1759:
  3842  00173A  90D8               	bcf	status,0,c
  3843  00173C  3607               	rlcf	___awdiv@quotient,f,c
  3844  00173E  3608               	rlcf	___awdiv@quotient+1,f,c
  3845  001740  5003               	movf	___awdiv@divisor,w,c
  3846  001742  5C01               	subwf	___awdiv@dividend,w,c
  3847  001744  5004               	movf	___awdiv@divisor+1,w,c
  3848  001746  5802               	subwfb	___awdiv@dividend+1,w,c
  3849  001748  A0D8               	btfss	status,0,c
  3850  00174A  D005               	goto	i2l1767
  3851  00174C  5003               	movf	___awdiv@divisor,w,c
  3852  00174E  5E01               	subwf	___awdiv@dividend,f,c
  3853  001750  5004               	movf	___awdiv@divisor+1,w,c
  3854  001752  5A02               	subwfb	___awdiv@dividend+1,f,c
  3855  001754  8007               	bsf	___awdiv@quotient,0,c
  3856  001756                     i2l1767:
  3857  001756  90D8               	bcf	status,0,c
  3858  001758  3204               	rrcf	___awdiv@divisor+1,f,c
  3859  00175A  3203               	rrcf	___awdiv@divisor,f,c
  3860  00175C  2E05               	decfsz	___awdiv@counter,f,c
  3861  00175E  D7ED               	goto	i2l1759
  3862  001760                     i2l1771:
  3863  001760  5006               	movf	___awdiv@sign,w,c
  3864  001762  B4D8               	btfsc	status,2,c
  3865  001764  D004               	goto	i2l1775
  3866  001766  6C07               	negf	___awdiv@quotient,c
  3867  001768  1E08               	comf	___awdiv@quotient+1,f,c
  3868  00176A  B0D8               	btfsc	status,0,c
  3869  00176C  2A08               	incf	___awdiv@quotient+1,f,c
  3870  00176E                     i2l1775:
  3871  00176E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3872  001772  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3873  001776  0012               	return	
  3874  001778                     __end_of___awdiv:
  3875                           	opt stack 0
  3876                           pclatu	equ	0xFFB
  3877                           pclath	equ	0xFFA
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           intcon2	equ	0xFF1
  3886                           postinc0	equ	0xFEE
  3887                           fsr0h	equ	0xFEA
  3888                           fsr0l	equ	0xFE9
  3889                           wreg	equ	0xFE8
  3890                           postdec1	equ	0xFE5
  3891                           plusw1	equ	0xFE3
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           indf2	equ	0xFDF
  3895                           postinc2	equ	0xFDE
  3896                           plusw2	equ	0xFDB
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           pclatu	equ	0xFFB
  3901                           pclath	equ	0xFFA
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           prodh	equ	0xFF4
  3907                           prodl	equ	0xFF3
  3908                           intcon	equ	0xFF2
  3909                           intcon2	equ	0xFF1
  3910                           postinc0	equ	0xFEE
  3911                           fsr0h	equ	0xFEA
  3912                           fsr0l	equ	0xFE9
  3913                           wreg	equ	0xFE8
  3914                           postdec1	equ	0xFE5
  3915                           plusw1	equ	0xFE3
  3916                           fsr1h	equ	0xFE2
  3917                           fsr1l	equ	0xFE1
  3918                           indf2	equ	0xFDF
  3919                           postinc2	equ	0xFDE
  3920                           plusw2	equ	0xFDB
  3921                           fsr2h	equ	0xFDA
  3922                           fsr2l	equ	0xFD9
  3923                           status	equ	0xFD8
  3924                           
  3925                           	psect	rparam
  3926  0000                     pclatu	equ	0xFFB
  3927                           pclath	equ	0xFFA
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           prodh	equ	0xFF4
  3933                           prodl	equ	0xFF3
  3934                           intcon	equ	0xFF2
  3935                           intcon2	equ	0xFF1
  3936                           postinc0	equ	0xFEE
  3937                           fsr0h	equ	0xFEA
  3938                           fsr0l	equ	0xFE9
  3939                           wreg	equ	0xFE8
  3940                           postdec1	equ	0xFE5
  3941                           plusw1	equ	0xFE3
  3942                           fsr1h	equ	0xFE2
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           plusw2	equ	0xFDB
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951                           	psect	temp
  3952  000042                     btemp:
  3953                           	opt stack 0
  3954  000042                     	ds	1
  3955  0000                     int$flags	set	btemp
  3956                           pclatu	equ	0xFFB
  3957                           pclath	equ	0xFFA
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           intcon	equ	0xFF2
  3965                           intcon2	equ	0xFF1
  3966                           postinc0	equ	0xFEE
  3967                           fsr0h	equ	0xFEA
  3968                           fsr0l	equ	0xFE9
  3969                           wreg	equ	0xFE8
  3970                           postdec1	equ	0xFE5
  3971                           plusw1	equ	0xFE3
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           plusw2	equ	0xFDB
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     49     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5980
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1461
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     240
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      20        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Aug 15 16:35:09 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1B34  
                                   l36 1B40                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l112 18CE  
                                  l179 1B80                                    u810 1B2A  
                                  u921 13E6                                    u861 11B4  
                                  u951 12EE                                    u891 14DE  
                                  u981 1AD8                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4444 101B  
                                 l2111 1526                                   l2103 1500  
                                 l2033 182A                                   l2025 1804  
                                 l2043 11C8                                   l1501 188E  
                                 l2141 13FE                                   l2029 1814  
                                 l2055 11F8                                   l2047 11D2  
                                 l2223 1AEC                                   l2153 142E  
                                 l2145 1408                                   l1507 1B6C  
                                 l2227 1AF6                                   l2261 19F2  
                                 l2183 1306                                   l2255 19DE  
                                 l1481 1864                                   l2273 1A1A  
                                 l1491 1878                                   l1483 1868  
                                 l2099 14F6                                   l2195 1336  
                                 l2187 1310                                   l2267 1A06  
                                 l1493 187C                                   l1485 186C  
                                 l1495 1880                                   l1487 1870  
                                 l1497 1884                                   l1489 1874  
                                 l1499 1888                                   u1107 15F6  
                                 u1117 1606                                   u1207 1938  
                                 u1127 1618                                   u1217 1B96  
                                 u1137 1630                                   u1227 1BA6  
                                 u1147 1640                                   u1237 1B72  
                                 u1157 1654                                   u1077 181A  
                                 u1167 18DC                                   u1087 1854  
                                 u1177 18FC                                   u1097 15D6  
                                 u1187 190E                                   u1197 1926  
                                 i2l96 17EA                 __end_of_lcd_write_data 1660  
                                 _main 19B2                                   _hour 0039  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0042  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 16F4  
                         ___param_bank 000010                                  ?_main 0001  
                      __end_of___awdiv 1778                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l130 116E                                  i2l941 1780  
                                i2l951 1794                                  i2l943 1784  
                                i2l953 1798                                  i2l945 1788  
                                i2l961 17AA                                  i2l955 179C  
                                i2l947 178C                                  i2l939 177C  
                      ___awdiv@counter 0005                                  i2l957 17A0  
                                i2l949 1790                                  i2l959 17A4  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003A                                  _hourB 003B  
                                _hourC 003C                                  tablat 000FF5  
                                plusw1 000FE3                                  plusw2 000FDB  
                      ?_lcd_write_data 0001                        __end_of_version 1B1C  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00B4                        __initialization 1A20  
                         __end_of_main 1A20                                 ??_main 0024  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                           version@F4451 0024  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1BB0  
                               i2l1743 1708                                 i2l1755 172E  
                               i2l1771 1760                                 i2l1757 1736  
                               i2l1749 1718                                 i2l1775 176E  
                               i2l1767 1756                                 i2l1759 173A  
                               i2l1857 108E                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1B8E                       __end_of_lcd_init 1860  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1B1C  
                               clear_0 1A26                       ___awdiv@quotient 0007  
                               _minute 003D                                 _second 0041  
                         __pdataCOMRAM 0024                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 0021                             __accesstop 0060  
              __end_of__initialization 1A6C                          getkey@keycode 00C6  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1A7A  
                           _char_2_int 1860                      __end_of_SetupTime 12E4  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 001D  
                     ??_lcd_write_data 001E                             _lcd_strobe 1B8E  
             __size_of_SetupAlarmTimeA 00F8               __size_of_SetupAlarmTimeB 00F8  
             __size_of_SetupAlarmTimeC 00F8                              ?_lcd_init 0001  
                   lcd_write_data@data 001F                     lcd_write_cmd@temp2 0020  
                           _int_2_char 1778                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              ___awdiv 16F4                           __psmallconst 101A  
                      __size_of_getkey 003E                        i2_lcd_write_cmd 1942  
                              __pcinit 1A20                                __ramtop 0800  
                              __ptext0 19B2                                __ptext1 1ACE  
                              __ptext2 17EE                                __ptext3 1BD2  
                              __ptext4 11AA                                __ptext5 12E4  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 15CC                                __ptext9 18D2  
                            _T0CONbits 000FD5                         SetupTime@F4486 009F  
                              _minuteA 003E                                _minuteB 003F  
                              _minuteC 0040                             ??_delay_ms 001F  
                          ?_char_2_int 0001                                _version 1ACE  
                           ??_lcd_init 0021                         __pintcode_body 102E  
                 end_of_initialization 1A6C                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00E4  
                       SetupTime@hour1 00DE                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00DD                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00DD  
                SetupAlarmTimeC@hour10 00DD                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0022  
                    ??_SetupAlarmTimeB 0022                      ??_SetupAlarmTimeC 0022  
                __end_of_lcd_write_cmd 1942                __end_ofi2_lcd_write_cmd 19B2  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1BEE  
                       __end_of_getkey 1B5A                    start_initialization 1A20  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00CA                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0039  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4496 0060                   SetupAlarmTimeB@F4506 0075  
                            delay_ms@i 001D                              delay_ms@j 0020  
                 SetupAlarmTimeC@F4516 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u130_47 16E8                               i2u131_47 194C  
                             i2u132_47 196C                               i2u124_47 166A  
                             i2u133_47 197E                               i2u125_47 168A  
                             i2u134_47 1996                               i2u126_47 169A  
                             i2u135_47 19A8                               i2u127_47 16AC  
                             i2u136_47 1BB8                               i2u128_47 16C4  
                             i2u137_47 1BC8                               i2u129_47 16D4  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 18D2                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 0022                    lcd_write_data@temp1 0020  
                      _SetupAlarmTimeA 14D4                        _SetupAlarmTimeB 13DC  
                      _SetupAlarmTimeC 12E4                         ??i2_lcd_strobe 0001  
                       version@Version 00B4                           ??_lcd_strobe 001D  
                     SetupTime@Message 00C7                              copy_data0 1A40  
                            copy_data1 1A60                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 1BEE  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1BD2                __size_of_lcd_write_data 0094  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                         version@outchar 00C9  
                          ??_SetupTime 0022                       SetupTime@minute1 00E0  
                     SetupTime@second1 00E2                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1BB0                       SetupTime@outchar 00DC  
                   __end_of_int_2_char 17EE                       i2_lcd_write_data 1660  
                             _delay_ms 1B5A                               __ptext10 1B8E  
                             __ptext11 1B1C                               __ptext12 1B5A  
                             __ptext13 1860                               __ptext15 1660  
                             __ptext16 1942                               __ptext17 1BB0  
                             __ptext18 1778                               __ptext19 16F4  
                             _lcd_init 17EE                       __size_of_version 004E  
                        __size_of_main 006E          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0042                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                 __end_ofi2_lcd_strobe 1BD2                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 15CC  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 18D2  
