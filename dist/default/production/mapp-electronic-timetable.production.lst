

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug 10 02:20:31 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001BEA                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for Version@F4348
    44  001BEA  45                 	db	69
    45  001BEB  54                 	db	84
    46  001BEC  54                 	db	84
    47  001BED  20                 	db	32
    48  001BEE  56                 	db	86
    49  001BEF  65                 	db	101
    50  001BF0  72                 	db	114
    51  001BF1  73                 	db	115
    52  001BF2  69                 	db	105
    53  001BF3  6F                 	db	111
    54  001BF4  6E                 	db	110
    55  001BF5  20                 	db	32
    56  001BF6  31                 	db	49
    57  001BF7  2E                 	db	46
    58  001BF8  31                 	db	49
    59  001BF9  20                 	db	32
    60  001BFA  20                 	db	32
    61  001BFB  20                 	db	32
    62  001BFC  20                 	db	32
    63  001BFD  20                 	db	32
    64  001BFE  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001A76                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4322
    71  001A76  53                 	db	83
    72  001A77  75                 	db	117
    73  001A78  62                 	db	98
    74  001A79  6A                 	db	106
    75  001A7A  65                 	db	101
    76  001A7B  63                 	db	99
    77  001A7C  74                 	db	116
    78  001A7D  20                 	db	32
    79  001A7E  41                 	db	65
    80  001A7F  20                 	db	32
    81  001A80  54                 	db	84
    82  001A81  69                 	db	105
    83  001A82  6D                 	db	109
    84  001A83  65                 	db	101
    85  001A84  20                 	db	32
    86  001A85  68                 	db	104
    87  001A86  68                 	db	104
    88  001A87  6D                 	db	109
    89  001A88  6D                 	db	109
    90  001A89  3A                 	db	58
    91  001A8A  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4332
    94  001A8B  53                 	db	83
    95  001A8C  75                 	db	117
    96  001A8D  62                 	db	98
    97  001A8E  6A                 	db	106
    98  001A8F  65                 	db	101
    99  001A90  63                 	db	99
   100  001A91  74                 	db	116
   101  001A92  20                 	db	32
   102  001A93  42                 	db	66
   103  001A94  20                 	db	32
   104  001A95  54                 	db	84
   105  001A96  69                 	db	105
   106  001A97  6D                 	db	109
   107  001A98  65                 	db	101
   108  001A99  20                 	db	32
   109  001A9A  68                 	db	104
   110  001A9B  68                 	db	104
   111  001A9C  6D                 	db	109
   112  001A9D  6D                 	db	109
   113  001A9E  3A                 	db	58
   114  001A9F  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4342
   117  001AA0  53                 	db	83
   118  001AA1  75                 	db	117
   119  001AA2  62                 	db	98
   120  001AA3  6A                 	db	106
   121  001AA4  65                 	db	101
   122  001AA5  63                 	db	99
   123  001AA6  74                 	db	116
   124  001AA7  20                 	db	32
   125  001AA8  43                 	db	67
   126  001AA9  20                 	db	32
   127  001AAA  54                 	db	84
   128  001AAB  69                 	db	105
   129  001AAC  6D                 	db	109
   130  001AAD  65                 	db	101
   131  001AAE  20                 	db	32
   132  001AAF  68                 	db	104
   133  001AB0  68                 	db	104
   134  001AB1  6D                 	db	109
   135  001AB2  6D                 	db	109
   136  001AB3  3A                 	db	58
   137  001AB4  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4312
   140  001AB5  53                 	db	83
   141  001AB6  65                 	db	101
   142  001AB7  74                 	db	116
   143  001AB8  20                 	db	32
   144  001AB9  74                 	db	116
   145  001ABA  69                 	db	105
   146  001ABB  6D                 	db	109
   147  001ABC  65                 	db	101
   148  001ABD  20                 	db	32
   149  001ABE  68                 	db	104
   150  001ABF  68                 	db	104
   151  001AC0  6D                 	db	109
   152  001AC1  6D                 	db	109
   153  001AC2  73                 	db	115
   154  001AC3  73                 	db	115
   155  001AC4  3A                 	db	58
   156  001AC5  20                 	db	32
   157  001AC6  20                 	db	32
   158  001AC7  20                 	db	32
   159  001AC8  20                 	db	32
   160  001AC9  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4270:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4270:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTB	set	3969
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTDbits	set	3971
   197  0000                     _RCONbits	set	4048
   198  0000                     _T0CON	set	4053
   199  0000                     _T0CONbits	set	4053
   200  0000                     _TMR0H	set	4055
   201  0000                     _TMR0L	set	4054
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISD	set	3989
   204  00102D  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  001A1C                     __pcinit:
   210                           	opt stack 0
   211  001A1C                     start_initialization:
   212                           	opt stack 0
   213  001A1C                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (84 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  001A1C  0E76               	movlw	low __pidataBANK0
   219  001A1E  6EF6               	movwf	tblptrl,c
   220  001A20  0E1A               	movlw	high __pidataBANK0
   221  001A22  6EF7               	movwf	tblptrh,c
   222  001A24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  001A26  6EF8               	movwf	tblptru,c
   224  001A28  EE00  F060         	lfsr	0,__pdataBANK0
   225  001A2C  EE10 F054          	lfsr	1,84
   226  001A30                     copy_data0:
   227  001A30  0009               	tblrd		*+
   228  001A32  CFF5 FFEE          	movff	tablat,postinc0
   229  001A36  50E5               	movf	postdec1,w,c
   230  001A38  50E1               	movf	fsr1l,w,c
   231  001A3A  E1FA               	bnz	copy_data0
   232                           
   233                           ; Initialize objects allocated to COMRAM (21 bytes)
   234                           ; load TBLPTR registers with __pidataCOMRAM
   235  001A3C  0EEA               	movlw	low __pidataCOMRAM
   236  001A3E  6EF6               	movwf	tblptrl,c
   237  001A40  0E1B               	movlw	high __pidataCOMRAM
   238  001A42  6EF7               	movwf	tblptrh,c
   239  001A44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   240  001A46  6EF8               	movwf	tblptru,c
   241  001A48  EE00  F024         	lfsr	0,__pdataCOMRAM
   242  001A4C  EE10 F015          	lfsr	1,21
   243  001A50                     copy_data1:
   244  001A50  0009               	tblrd		*+
   245  001A52  CFF5 FFEE          	movff	tablat,postinc0
   246  001A56  50E5               	movf	postdec1,w,c
   247  001A58  50E1               	movf	fsr1l,w,c
   248  001A5A  E1FA               	bnz	copy_data1
   249                           
   250                           ; Clear objects allocated to COMRAM (9 bytes)
   251  001A5C  EE00  F039         	lfsr	0,__pbssCOMRAM
   252  001A60  0E09               	movlw	9
   253  001A62                     clear_0:
   254  001A62  6AEE               	clrf	postinc0,c
   255  001A64  06E8               	decf	wreg,f,c
   256  001A66  E1FD               	bnz	clear_0
   257  001A68                     end_of_initialization:
   258                           	opt stack 0
   259  001A68                     __end_of__initialization:
   260                           	opt stack 0
   261  001A68  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  001A6A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  001A6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  001A6E  6EF8               	movwf	tblptru,c
   265  001A70  0100               	movlb	0
   266  001A72  EFD9  F00C         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  000039                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000039                     _hour:
   280                           	opt stack 0
   281  000039                     	ds	1
   282  00003A                     _hourA:
   283                           	opt stack 0
   284  00003A                     	ds	1
   285  00003B                     _hourB:
   286                           	opt stack 0
   287  00003B                     	ds	1
   288  00003C                     _hourC:
   289                           	opt stack 0
   290  00003C                     	ds	1
   291  00003D                     _minute:
   292                           	opt stack 0
   293  00003D                     	ds	1
   294  00003E                     _minuteA:
   295                           	opt stack 0
   296  00003E                     	ds	1
   297  00003F                     _minuteB:
   298                           	opt stack 0
   299  00003F                     	ds	1
   300  000040                     _minuteC:
   301                           	opt stack 0
   302  000040                     	ds	1
   303  000041                     _second:
   304                           	opt stack 0
   305  000041                     	ds	1
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	dataCOMRAM
   316  000024                     __pdataCOMRAM:
   317                           	opt stack 0
   318  000024                     Version@F4348:
   319                           	opt stack 0
   320  000024                     	ds	21
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	dataBANK0
   331  000060                     __pdataBANK0:
   332                           	opt stack 0
   333  000060                     SetupAlarmTimeA@F4322:
   334                           	opt stack 0
   335  000060                     	ds	21
   336  000075                     SetupAlarmTimeB@F4332:
   337                           	opt stack 0
   338  000075                     	ds	21
   339  00008A                     SetupAlarmTimeC@F4342:
   340                           	opt stack 0
   341  00008A                     	ds	21
   342  00009F                     SetupTime@F4312:
   343                           	opt stack 0
   344  00009F                     	ds	21
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackBANK0
   355  0000B4                     __pcstackBANK0:
   356                           	opt stack 0
   357  0000B4                     getkey@lookup:
   358                           	opt stack 0
   359  0000B4                     Version@Version:
   360                           	opt stack 0
   361                           
   362                           ; 21 bytes @ 0x0
   363  0000B4                     	ds	18
   364  0000C6                     getkey@keycode:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x12
   368  0000C6                     	ds	1
   369  0000C7                     SetupTime@Message:
   370                           	opt stack 0
   371  0000C7                     SetupAlarmTimeA@Message:
   372                           	opt stack 0
   373  0000C7                     SetupAlarmTimeB@Message:
   374                           	opt stack 0
   375  0000C7                     SetupAlarmTimeC@Message:
   376                           	opt stack 0
   377                           
   378                           ; 21 bytes @ 0x13
   379  0000C7                     	ds	2
   380  0000C9                     Version@outchar:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x15
   384  0000C9                     	ds	1
   385  0000CA                     Version@msgindex:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x16
   389  0000CA                     	ds	18
   390  0000DC                     SetupTime@outchar:
   391                           	opt stack 0
   392  0000DC                     SetupAlarmTimeA@outchar:
   393                           	opt stack 0
   394  0000DC                     SetupAlarmTimeB@outchar:
   395                           	opt stack 0
   396  0000DC                     SetupAlarmTimeC@outchar:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x28
   400  0000DC                     	ds	1
   401  0000DD                     SetupTime@hour10:
   402                           	opt stack 0
   403  0000DD                     SetupAlarmTimeA@hour10:
   404                           	opt stack 0
   405  0000DD                     SetupAlarmTimeB@hour10:
   406                           	opt stack 0
   407  0000DD                     SetupAlarmTimeC@hour10:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x29
   411  0000DD                     	ds	1
   412  0000DE                     SetupTime@hour1:
   413                           	opt stack 0
   414  0000DE                     SetupAlarmTimeA@hour1:
   415                           	opt stack 0
   416  0000DE                     SetupAlarmTimeB@hour1:
   417                           	opt stack 0
   418  0000DE                     SetupAlarmTimeC@hour1:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x2A
   422  0000DE                     	ds	1
   423  0000DF                     SetupTime@minute10:
   424                           	opt stack 0
   425  0000DF                     SetupAlarmTimeA@minute10:
   426                           	opt stack 0
   427  0000DF                     SetupAlarmTimeB@minute10:
   428                           	opt stack 0
   429  0000DF                     SetupAlarmTimeC@minute10:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x2B
   433  0000DF                     	ds	1
   434  0000E0                     SetupTime@minute1:
   435                           	opt stack 0
   436  0000E0                     SetupAlarmTimeA@minute1:
   437                           	opt stack 0
   438  0000E0                     SetupAlarmTimeB@minute1:
   439                           	opt stack 0
   440  0000E0                     SetupAlarmTimeC@minute1:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x2C
   444  0000E0                     	ds	1
   445  0000E1                     SetupTime@second10:
   446                           	opt stack 0
   447  0000E1                     SetupAlarmTimeA@msgindex:
   448                           	opt stack 0
   449  0000E1                     SetupAlarmTimeB@msgindex:
   450                           	opt stack 0
   451  0000E1                     SetupAlarmTimeC@msgindex:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x2D
   455  0000E1                     	ds	1
   456  0000E2                     SetupTime@second1:
   457                           	opt stack 0
   458  0000E2                     SetupAlarmTimeA@ctemp:
   459                           	opt stack 0
   460  0000E2                     SetupAlarmTimeB@ctemp:
   461                           	opt stack 0
   462  0000E2                     SetupAlarmTimeC@ctemp:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x2E
   466  0000E2                     	ds	1
   467  0000E3                     SetupTime@msgindex:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x2F
   471  0000E3                     	ds	1
   472  0000E4                     SetupTime@ctemp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x30
   476  0000E4                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	opt stack 0
   489  000001                     ??i2_lcd_strobe:
   490  000001                     ?___awdiv:
   491                           	opt stack 0
   492  000001                     int_2_char@int1:
   493                           	opt stack 0
   494  000001                     ___awdiv@dividend:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000001                     	ds	1
   499  000002                     ??i2_lcd_write_cmd:
   500  000002                     ??i2_lcd_write_data:
   501  000002                     int_2_char@char1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505  000002                     	ds	1
   506  000003                     i2lcd_write_cmd@cmd:
   507                           	opt stack 0
   508  000003                     i2lcd_write_data@data:
   509                           	opt stack 0
   510  000003                     ___awdiv@divisor:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000003                     	ds	1
   515  000004                     i2lcd_write_cmd@temp2:
   516                           	opt stack 0
   517  000004                     i2lcd_write_data@temp1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  000004                     	ds	1
   522  000005                     ___awdiv@counter:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x5
   531  000006                     	ds	1
   532  000007                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	2
   537  000009                     ??_ISR_Timer0_Int:
   538                           
   539                           ; 1 bytes @ 0x8
   540  000009                     	ds	14
   541  000017                     ISR_Timer0_Int@hour1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x16
   545  000017                     	ds	1
   546  000018                     ISR_Timer0_Int@minute1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x17
   550  000018                     	ds	1
   551  000019                     ISR_Timer0_Int@second1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     ISR_Timer0_Int@hour10:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     ISR_Timer0_Int@minute10:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x1A
   565  00001B                     	ds	1
   566  00001C                     ISR_Timer0_Int@second10:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1B
   570  00001C                     	ds	1
   571  00001D                     ??_lcd_strobe:
   572  00001D                     char_2_int@char1:
   573                           	opt stack 0
   574  00001D                     delay_ms@i:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x1C
   578  00001D                     	ds	1
   579  00001E                     ??_lcd_write_cmd:
   580  00001E                     ??_lcd_write_data:
   581  00001E                     char_2_int@int1:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1D
   585  00001E                     	ds	1
   586  00001F                     ??_delay_ms:
   587  00001F                     lcd_write_cmd@cmd:
   588                           	opt stack 0
   589  00001F                     lcd_write_data@data:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x1E
   593  00001F                     	ds	1
   594  000020                     lcd_write_cmd@temp2:
   595                           	opt stack 0
   596  000020                     lcd_write_data@temp1:
   597                           	opt stack 0
   598  000020                     delay_ms@j:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x1F
   602  000020                     	ds	1
   603  000021                     ??_lcd_init:
   604  000021                     
   605                           ; 1 bytes @ 0x20
   606  000021                     	ds	1
   607  000022                     lcd_init@i:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x21
   611  000022                     	ds	2
   612  000024                     tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           ; 1 bytes @ 0x23
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 324 in file "Main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called:    6
   647 ;; This function calls:
   648 ;;		_SetupAlarmTimeA
   649 ;;		_SetupAlarmTimeB
   650 ;;		_SetupAlarmTimeC
   651 ;;		_SetupTime
   652 ;;		_SetupTimerInterruptRegisters
   653 ;;		_Version
   654 ;;		_lcd_init
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  0019B2                     __ptext0:
   662                           	opt stack 0
   663  0019B2                     _main:
   664                           	opt stack 25
   665                           
   666                           ;Main.c: 326: ADCON1 = 0x0F;
   667                           
   668                           ;incstack = 0
   669  0019B2  0E0F               	movlw	15
   670  0019B4  6EC1               	movwf	4033,c	;volatile
   671                           
   672                           ;Main.c: 327: CMCON = 0x07;
   673  0019B6  0E07               	movlw	7
   674  0019B8  6EB4               	movwf	4020,c	;volatile
   675                           
   676                           ;Main.c: 329: lcd_init();
   677  0019BA  ECF7  F00B         	call	_lcd_init	;wreg free
   678                           
   679                           ;Main.c: 330: TRISA = 0b00000000;
   680  0019BE  0E00               	movlw	0
   681  0019C0  6E92               	movwf	3986,c	;volatile
   682                           
   683                           ;Main.c: 332: Version();
   684  0019C2  EC65  F00D         	call	_Version	;wreg free
   685                           
   686                           ;Main.c: 333: SetupTime();
   687  0019C6  ECD5  F008         	call	_SetupTime	;wreg free
   688                           
   689                           ;Main.c: 334: SetupAlarmTimeA();
   690  0019CA  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   691                           
   692                           ;Main.c: 335: SetupAlarmTimeB();
   693  0019CE  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   694                           
   695                           ;Main.c: 336: SetupAlarmTimeC();
   696  0019D2  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   697                           
   698                           ;Main.c: 337: SetupTimerInterruptRegisters();
   699  0019D6  ECE7  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   700  0019DA                     l2243:
   701                           
   702                           ;Main.c: 340: {
   703                           ;Main.c: 341: if(hour==hourA && minute==minuteA)
   704  0019DA  503A               	movf	_hourA,w,c
   705  0019DC  1839               	xorwf	_hour,w,c
   706  0019DE  A4D8               	btfss	status,2,c
   707  0019E0  D006               	goto	l2249
   708  0019E2  503E               	movf	_minuteA,w,c
   709  0019E4  183D               	xorwf	_minute,w,c
   710  0019E6  A4D8               	btfss	status,2,c
   711  0019E8  D002               	goto	l2249
   712                           
   713                           ;Main.c: 342: {
   714                           ;Main.c: 343: PORTA = 0b00000011;
   715  0019EA  0E03               	movlw	3
   716  0019EC  D015               	goto	L3
   717  0019EE                     l2249:
   718                           
   719                           ;Main.c: 345: else if(hour==hourB && minute==minuteB)
   720  0019EE  503B               	movf	_hourB,w,c
   721  0019F0  1839               	xorwf	_hour,w,c
   722  0019F2  A4D8               	btfss	status,2,c
   723  0019F4  D006               	goto	l2255
   724  0019F6  503F               	movf	_minuteB,w,c
   725  0019F8  183D               	xorwf	_minute,w,c
   726  0019FA  A4D8               	btfss	status,2,c
   727  0019FC  D002               	goto	l2255
   728                           
   729                           ;Main.c: 346: {
   730                           ;Main.c: 347: PORTA = 0b00000101;
   731  0019FE  0E05               	movlw	5
   732  001A00  D00B               	goto	L3
   733  001A02                     l2255:
   734                           
   735                           ;Main.c: 349: else if(hour==hourC && minute==minuteC)
   736  001A02  503C               	movf	_hourC,w,c
   737  001A04  1839               	xorwf	_hour,w,c
   738  001A06  A4D8               	btfss	status,2,c
   739  001A08  D006               	goto	l2261
   740  001A0A  5040               	movf	_minuteC,w,c
   741  001A0C  183D               	xorwf	_minute,w,c
   742  001A0E  A4D8               	btfss	status,2,c
   743  001A10  D002               	goto	l2261
   744                           
   745                           ;Main.c: 350: {
   746                           ;Main.c: 351: PORTA = 0b00001001;
   747  001A12  0E09               	movlw	9
   748  001A14  D001               	goto	L3
   749  001A16                     l2261:
   750                           
   751                           ;Main.c: 353: {
   752                           ;Main.c: 354: PORTA = 0b00000000;
   753  001A16  0E00               	movlw	0
   754  001A18                     L3:
   755  001A18  6E80               	movwf	3968,c	;volatile
   756  001A1A  D7DF               	goto	l2243
   757  001A1C                     __end_of_main:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _lcd_init *****************
   770 ;; Defined at:
   771 ;;		line 83 in file "lcd_utilities.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  i               2   33[COMRAM] int 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         2       0       0       0       0       0       0       0       0
   787 ;;      Temps:          1       0       0       0       0       0       0       0       0
   788 ;;      Totals:         3       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    5
   792 ;; This function calls:
   793 ;;		_lcd_write_cmd
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800  0017EE                     __ptext1:
   801                           	opt stack 0
   802  0017EE                     _lcd_init:
   803                           	opt stack 25
   804                           
   805                           ;lcd_utilities.c: 85: int i;
   806                           ;lcd_utilities.c: 86: TRISD = 0x00;
   807                           
   808                           ;incstack = 0
   809  0017EE  0E00               	movlw	0
   810  0017F0  6E95               	movwf	3989,c	;volatile
   811                           
   812                           ;lcd_utilities.c: 87: PORTD = 0x00;
   813  0017F2  0E00               	movlw	0
   814  0017F4  6E83               	movwf	3971,c	;volatile
   815                           
   816                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   817  0017F6  9883               	bcf	3971,4,c	;volatile
   818                           
   819                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   820  0017F8  9C83               	bcf	3971,6,c	;volatile
   821                           
   822                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   823  0017FA  9A83               	bcf	3971,5,c	;volatile
   824                           
   825                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   826  0017FC  0E00               	movlw	0
   827  0017FE  6E23               	movwf	lcd_init@i+1,c
   828  001800  0E00               	movlw	0
   829  001802  6E22               	movwf	lcd_init@i,c
   830  001804                     l2015:
   831  001804  BE23               	btfsc	lcd_init@i+1,7,c
   832  001806  D006               	goto	l2019
   833  001808  5023               	movf	lcd_init@i+1,w,c
   834  00180A  E10F               	bnz	l2023
   835  00180C  0E64               	movlw	100
   836  00180E  5C22               	subwf	lcd_init@i,w,c
   837  001810  B0D8               	btfsc	status,0,c
   838  001812  D00B               	goto	l2023
   839  001814                     l2019:
   840                           
   841                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   842  001814  0E9C               	movlw	156
   843  001816  6E21               	movwf	??_lcd_init& (0+255),c
   844  001818  0ED7               	movlw	215
   845  00181A                     u1077:
   846  00181A  2EE8               	decfsz	wreg,f,c
   847  00181C  D7FE               	goto	u1077
   848  00181E  2E21               	decfsz	??_lcd_init& (0+255),f,c
   849  001820  D7FC               	goto	u1077
   850  001822  F000               	nop	
   851  001824  4A22               	infsnz	lcd_init@i,f,c
   852  001826  2A23               	incf	lcd_init@i+1,f,c
   853  001828  D7ED               	goto	l2015
   854  00182A                     l2023:
   855                           
   856                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   857  00182A  0E33               	movlw	51
   858  00182C  EC69  F00C         	call	_lcd_write_cmd
   859                           
   860                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   861  001830  0E32               	movlw	50
   862  001832  EC69  F00C         	call	_lcd_write_cmd
   863                           
   864                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   865  001836  0E28               	movlw	40
   866  001838  EC69  F00C         	call	_lcd_write_cmd
   867                           
   868                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   869  00183C  0E0E               	movlw	14
   870  00183E  EC69  F00C         	call	_lcd_write_cmd
   871                           
   872                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   873  001842  0E06               	movlw	6
   874  001844  EC69  F00C         	call	_lcd_write_cmd
   875                           
   876                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   877  001848  0E01               	movlw	1
   878  00184A  EC69  F00C         	call	_lcd_write_cmd
   879                           
   880                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   881  00184E  0E9C               	movlw	156
   882  001850  6E21               	movwf	??_lcd_init& (0+255),c
   883  001852  0ED7               	movlw	215
   884  001854                     u1087:
   885  001854  2EE8               	decfsz	wreg,f,c
   886  001856  D7FE               	goto	u1087
   887  001858  2E21               	decfsz	??_lcd_init& (0+255),f,c
   888  00185A  D7FC               	goto	u1087
   889  00185C  F000               	nop	
   890  00185E  0012               	return		;funcret
   891  001860                     __end_of_lcd_init:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1l	equ	0xFE1
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _Version *****************
   904 ;; Defined at:
   905 ;;		line 311 in file "Main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  Version        21    0[BANK0 ] unsigned char [21]
   910 ;;  msgindex        1   22[BANK0 ] unsigned char 
   911 ;;  outchar         1   21[BANK0 ] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   921 ;;      Params:         0       0       0       0       0       0       0       0       0
   922 ;;      Locals:         0      23       0       0       0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0
   924 ;;      Totals:         0      23       0       0       0       0       0       0       0
   925 ;;Total ram usage:       23 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    5
   928 ;; This function calls:
   929 ;;		_lcd_write_cmd
   930 ;;		_lcd_write_data
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text2
   937  001ACA                     __ptext2:
   938                           	opt stack 0
   939  001ACA                     _Version:
   940                           	opt stack 25
   941                           
   942                           ;Main.c: 313: unsigned char msgindex, outchar;
   943                           ;Main.c: 314: char Version[ ] = "ETT Version 1.1     ";
   944                           
   945                           ;incstack = 0
   946  001ACA  EE20  F024         	lfsr	2,Version@F4348
   947  001ACE  EE10  F0B4         	lfsr	1,Version@Version
   948  001AD2  0E14               	movlw	20
   949  001AD4                     u981:
   950  001AD4  CFDB FFE3          	movff	plusw2,plusw1
   951  001AD8  06E8               	decf	wreg,f,c
   952  001ADA  E2FC               	bc	u981
   953                           
   954                           ;Main.c: 316: lcd_write_cmd(0x80);
   955  001ADC  0E80               	movlw	128
   956  001ADE  EC69  F00C         	call	_lcd_write_cmd
   957                           
   958                           ;Main.c: 318: for (msgindex = 0; msgindex < 20; msgindex++)
   959  001AE2  0E00               	movlw	0
   960  001AE4  0100               	movlb	0	; () banked
   961  001AE6  6FCA               	movwf	Version@msgindex& (0+255),b
   962  001AE8                     l2213:
   963                           
   964                           ; BSR set to: 0
   965  001AE8  0E13               	movlw	19
   966  001AEA  0100               	movlb	0	; () banked
   967  001AEC  65CA               	cpfsgt	Version@msgindex& (0+255),b
   968  001AEE  D001               	goto	l2217
   969  001AF0  0012               	return	
   970  001AF2                     l2217:
   971                           
   972                           ; BSR set to: 0
   973                           ;Main.c: 319: {
   974                           ;Main.c: 320: outchar = Version[msgindex];
   975  001AF2  0100               	movlb	0	; () banked
   976  001AF4  51CA               	movf	Version@msgindex& (0+255),w,b
   977  001AF6  0D01               	mullw	1
   978  001AF8  0EB4               	movlw	low Version@Version
   979  001AFA  24F3               	addwf	prodl,w,c
   980  001AFC  6ED9               	movwf	fsr2l,c
   981  001AFE  0E00               	movlw	high Version@Version
   982  001B00  20F4               	addwfc	prodh,w,c
   983  001B02  6EDA               	movwf	fsr2h,c
   984  001B04  50DF               	movf	indf2,w,c
   985  001B06  0100               	movlb	0	; () banked
   986  001B08  6FC9               	movwf	Version@outchar& (0+255),b
   987                           
   988                           ; BSR set to: 0
   989                           ;Main.c: 321: lcd_write_data(outchar);
   990  001B0A  0100               	movlb	0	; () banked
   991  001B0C  51C9               	movf	Version@outchar& (0+255),w,b
   992  001B0E  ECE6  F00A         	call	_lcd_write_data
   993  001B12  0100               	movlb	0	; () banked
   994  001B14  2BCA               	incf	Version@msgindex& (0+255),f,b
   995  001B16  D7E8               	goto	l2213
   996  001B18                     __end_of_Version:
   997                           	opt stack 0
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           prodh	equ	0xFF4
  1003                           prodl	equ	0xFF3
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           plusw1	equ	0xFE3
  1008                           fsr1l	equ	0xFE1
  1009                           indf2	equ	0xFDF
  1010                           plusw2	equ	0xFDB
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           status	equ	0xFD8
  1014                           
  1015 ;; *************** function _SetupTimerInterruptRegisters *****************
  1016 ;; Defined at:
  1017 ;;		line 275 in file "Main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    3
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text3
  1046  001BCE                     __ptext3:
  1047                           	opt stack 0
  1048  001BCE                     _SetupTimerInterruptRegisters:
  1049                           	opt stack 27
  1050                           
  1051                           ;Main.c: 277: RCONbits.IPEN =1;
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;incstack = 0
  1055  001BCE  8ED0               	bsf	4048,7,c	;volatile
  1056                           
  1057                           ;Main.c: 281: INTCONbits.GIEH =1;
  1058  001BD0  8EF2               	bsf	intcon,7,c	;volatile
  1059                           
  1060                           ;Main.c: 286: T0CON = 0b00000111;
  1061  001BD2  0E07               	movlw	7
  1062  001BD4  6ED5               	movwf	4053,c	;volatile
  1063                           
  1064                           ;Main.c: 294: INTCON2 = 0b10000100;
  1065  001BD6  0E84               	movlw	132
  1066  001BD8  6EF1               	movwf	intcon2,c	;volatile
  1067                           
  1068                           ;Main.c: 299: TMR0H = 0x48;
  1069  001BDA  0E48               	movlw	72
  1070  001BDC  6ED7               	movwf	4055,c	;volatile
  1071                           
  1072                           ;Main.c: 300: TMR0L = 0xE5;
  1073  001BDE  0EE5               	movlw	229
  1074  001BE0  6ED6               	movwf	4054,c	;volatile
  1075                           
  1076                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1077  001BE2  8ED5               	bsf	4053,7,c	;volatile
  1078                           
  1079                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1080  001BE4  8AF2               	bsf	intcon,5,c	;volatile
  1081                           
  1082                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1083  001BE6  94F2               	bcf	intcon,2,c	;volatile
  1084  001BE8  0012               	return		;funcret
  1085  001BEA                     __end_of_SetupTimerInterruptRegisters:
  1086                           	opt stack 0
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           prodh	equ	0xFF4
  1092                           prodl	equ	0xFF3
  1093                           intcon	equ	0xFF2
  1094                           intcon2	equ	0xFF1
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           plusw1	equ	0xFE3
  1099                           fsr1l	equ	0xFE1
  1100                           indf2	equ	0xFDF
  1101                           plusw2	equ	0xFDB
  1102                           fsr2h	equ	0xFDA
  1103                           fsr2l	equ	0xFD9
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _SetupTime *****************
  1107 ;; Defined at:
  1108 ;;		line 107 in file "Main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1113 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1114 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1115 ;;  second1         1   46[BANK0 ] unsigned char 
  1116 ;;  second10        1   45[BANK0 ] unsigned char 
  1117 ;;  minute1         1   44[BANK0 ] unsigned char 
  1118 ;;  minute10        1   43[BANK0 ] unsigned char 
  1119 ;;  hour1           1   42[BANK0 ] unsigned char 
  1120 ;;  hour10          1   41[BANK0 ] unsigned char 
  1121 ;;  outchar         1   40[BANK0 ] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1135 ;;Total ram usage:       30 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    5
  1138 ;; This function calls:
  1139 ;;		_char_2_int
  1140 ;;		_delay_ms
  1141 ;;		_getkey
  1142 ;;		_lcd_write_cmd
  1143 ;;		_lcd_write_data
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text4
  1150  0011AA                     __ptext4:
  1151                           	opt stack 0
  1152  0011AA                     _SetupTime:
  1153                           	opt stack 25
  1154                           
  1155                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1156                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1157                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1158                           
  1159                           ;incstack = 0
  1160  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4312
  1161  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1162  0011B2  0E14               	movlw	20
  1163  0011B4                     u861:
  1164  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1165  0011B8  06E8               	decf	wreg,f,c
  1166  0011BA  E2FC               	bc	u861
  1167                           
  1168                           ;Main.c: 113: lcd_write_cmd(0x80);
  1169  0011BC  0E80               	movlw	128
  1170  0011BE  EC69  F00C         	call	_lcd_write_cmd
  1171                           
  1172                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1173  0011C2  0E00               	movlw	0
  1174  0011C4  0100               	movlb	0	; () banked
  1175  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1176  0011C8                     l2033:
  1177                           
  1178                           ; BSR set to: 0
  1179  0011C8  0E13               	movlw	19
  1180  0011CA  0100               	movlb	0	; () banked
  1181  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1182  0011CE  D001               	goto	l2037
  1183  0011D0  D013               	goto	l2045
  1184  0011D2                     l2037:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;Main.c: 116: {
  1188                           ;Main.c: 117: outchar = Message[msgindex];
  1189  0011D2  0100               	movlb	0	; () banked
  1190  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1191  0011D6  0D01               	mullw	1
  1192  0011D8  0EC7               	movlw	low SetupTime@Message
  1193  0011DA  24F3               	addwf	prodl,w,c
  1194  0011DC  6ED9               	movwf	fsr2l,c
  1195  0011DE  0E00               	movlw	high SetupTime@Message
  1196  0011E0  20F4               	addwfc	prodh,w,c
  1197  0011E2  6EDA               	movwf	fsr2h,c
  1198  0011E4  50DF               	movf	indf2,w,c
  1199  0011E6  0100               	movlb	0	; () banked
  1200  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;Main.c: 118: lcd_write_data(outchar);
  1204  0011EA  0100               	movlb	0	; () banked
  1205  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1206  0011EE  ECE6  F00A         	call	_lcd_write_data
  1207  0011F2  0100               	movlb	0	; () banked
  1208  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1209  0011F6  D7E8               	goto	l2033
  1210  0011F8                     l2045:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;Main.c: 119: }
  1214                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1215  0011F8  0EC0               	movlw	192
  1216  0011FA  EC69  F00C         	call	_lcd_write_cmd
  1217                           
  1218                           ;Main.c: 123: ctemp=getkey();
  1219  0011FE  EC8C  F00D         	call	_getkey	;wreg free
  1220  001202  0100               	movlb	0	; () banked
  1221  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;Main.c: 124: lcd_write_data(ctemp);
  1225  001206  0100               	movlb	0	; () banked
  1226  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1227  00120A  ECE6  F00A         	call	_lcd_write_data
  1228                           
  1229                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1230  00120E  0100               	movlb	0	; () banked
  1231  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1232  001212  EC30  F00C         	call	_char_2_int
  1233  001216  0100               	movlb	0	; () banked
  1234  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;Main.c: 127: ctemp=getkey();
  1238  00121A  EC8C  F00D         	call	_getkey	;wreg free
  1239  00121E  0100               	movlb	0	; () banked
  1240  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1241                           
  1242                           ;Main.c: 128: lcd_write_data(ctemp);
  1243  001222  0100               	movlb	0	; () banked
  1244  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1245  001226  ECE6  F00A         	call	_lcd_write_data
  1246                           
  1247                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1248  00122A  0100               	movlb	0	; () banked
  1249  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1250  00122E  EC30  F00C         	call	_char_2_int
  1251  001232  0100               	movlb	0	; () banked
  1252  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;Main.c: 131: ctemp=getkey();
  1256  001236  EC8C  F00D         	call	_getkey	;wreg free
  1257  00123A  0100               	movlb	0	; () banked
  1258  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;Main.c: 132: lcd_write_data(ctemp);
  1262  00123E  0100               	movlb	0	; () banked
  1263  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1264  001242  ECE6  F00A         	call	_lcd_write_data
  1265                           
  1266                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1267  001246  0100               	movlb	0	; () banked
  1268  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1269  00124A  EC30  F00C         	call	_char_2_int
  1270  00124E  0100               	movlb	0	; () banked
  1271  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;Main.c: 135: ctemp=getkey();
  1275  001252  EC8C  F00D         	call	_getkey	;wreg free
  1276  001256  0100               	movlb	0	; () banked
  1277  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1278                           
  1279                           ;Main.c: 136: lcd_write_data(ctemp);
  1280  00125A  0100               	movlb	0	; () banked
  1281  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1282  00125E  ECE6  F00A         	call	_lcd_write_data
  1283                           
  1284                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1285  001262  0100               	movlb	0	; () banked
  1286  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1287  001266  EC30  F00C         	call	_char_2_int
  1288  00126A  0100               	movlb	0	; () banked
  1289  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;Main.c: 139: ctemp=getkey();
  1293  00126E  EC8C  F00D         	call	_getkey	;wreg free
  1294  001272  0100               	movlb	0	; () banked
  1295  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;Main.c: 140: lcd_write_data(ctemp);
  1299  001276  0100               	movlb	0	; () banked
  1300  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1301  00127A  ECE6  F00A         	call	_lcd_write_data
  1302                           
  1303                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1304  00127E  0100               	movlb	0	; () banked
  1305  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1306  001282  EC30  F00C         	call	_char_2_int
  1307  001286  0100               	movlb	0	; () banked
  1308  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;Main.c: 143: ctemp=getkey();
  1312  00128A  EC8C  F00D         	call	_getkey	;wreg free
  1313  00128E  0100               	movlb	0	; () banked
  1314  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1315                           
  1316                           ;Main.c: 144: lcd_write_data(ctemp);
  1317  001292  0100               	movlb	0	; () banked
  1318  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1319  001296  ECE6  F00A         	call	_lcd_write_data
  1320                           
  1321                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1322  00129A  0100               	movlb	0	; () banked
  1323  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1324  00129E  EC30  F00C         	call	_char_2_int
  1325  0012A2  0100               	movlb	0	; () banked
  1326  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1330  0012A6  0100               	movlb	0	; () banked
  1331  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1332  0012AA  0D0A               	mullw	10
  1333  0012AC  50F3               	movf	prodl,w,c
  1334  0012AE  0100               	movlb	0	; () banked
  1335  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1336  0012B2  6E39               	movwf	_hour,c
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1340  0012B4  0100               	movlb	0	; () banked
  1341  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1342  0012B8  0D0A               	mullw	10
  1343  0012BA  50F3               	movf	prodl,w,c
  1344  0012BC  0100               	movlb	0	; () banked
  1345  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1346  0012C0  6E3D               	movwf	_minute,c
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;Main.c: 149: second = second10 * 10 + second1;
  1350  0012C2  0100               	movlb	0	; () banked
  1351  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1352  0012C6  0D0A               	mullw	10
  1353  0012C8  50F3               	movf	prodl,w,c
  1354  0012CA  0100               	movlb	0	; () banked
  1355  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1356  0012CE  6E41               	movwf	_second,c
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;Main.c: 151: delay_ms(500);
  1360  0012D0  0E01               	movlw	1
  1361  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1362  0012D4  0EF4               	movlw	244
  1363  0012D6  6E1D               	movwf	delay_ms@i,c
  1364  0012D8  ECAB  F00D         	call	_delay_ms	;wreg free
  1365                           
  1366                           ;Main.c: 152: lcd_write_cmd(0x01);
  1367  0012DC  0E01               	movlw	1
  1368  0012DE  EC69  F00C         	call	_lcd_write_cmd
  1369  0012E2  0012               	return		;funcret
  1370  0012E4                     __end_of_SetupTime:
  1371                           	opt stack 0
  1372                           tblptru	equ	0xFF8
  1373                           tblptrh	equ	0xFF7
  1374                           tblptrl	equ	0xFF6
  1375                           tablat	equ	0xFF5
  1376                           prodh	equ	0xFF4
  1377                           prodl	equ	0xFF3
  1378                           intcon	equ	0xFF2
  1379                           intcon2	equ	0xFF1
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           postdec1	equ	0xFE5
  1383                           plusw1	equ	0xFE3
  1384                           fsr1l	equ	0xFE1
  1385                           indf2	equ	0xFDF
  1386                           plusw2	equ	0xFDB
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _SetupAlarmTimeC *****************
  1392 ;; Defined at:
  1393 ;;		line 235 in file "Main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1398 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1399 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1400 ;;  minute1         1   44[BANK0 ] unsigned char 
  1401 ;;  minute10        1   43[BANK0 ] unsigned char 
  1402 ;;  hour1           1   42[BANK0 ] unsigned char 
  1403 ;;  hour10          1   41[BANK0 ] unsigned char 
  1404 ;;  outchar         1   40[BANK0 ] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0
  1415 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1417 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1418 ;;Total ram usage:       28 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    5
  1421 ;; This function calls:
  1422 ;;		_char_2_int
  1423 ;;		_delay_ms
  1424 ;;		_getkey
  1425 ;;		_lcd_write_cmd
  1426 ;;		_lcd_write_data
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text5
  1433  0012E4                     __ptext5:
  1434                           	opt stack 0
  1435  0012E4                     _SetupAlarmTimeC:
  1436                           	opt stack 25
  1437                           
  1438                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1439                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1440                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1441                           
  1442                           ;incstack = 0
  1443  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4342
  1444  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1445  0012EC  0E14               	movlw	20
  1446  0012EE                     u951:
  1447  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1448  0012F2  06E8               	decf	wreg,f,c
  1449  0012F4  E2FC               	bc	u951
  1450                           
  1451                           ;Main.c: 241: PORTA = 0b00001000;
  1452  0012F6  0E08               	movlw	8
  1453  0012F8  6E80               	movwf	3968,c	;volatile
  1454                           
  1455                           ;Main.c: 243: lcd_write_cmd(0x80);
  1456  0012FA  0E80               	movlw	128
  1457  0012FC  EC69  F00C         	call	_lcd_write_cmd
  1458                           
  1459                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1460  001300  0E00               	movlw	0
  1461  001302  0100               	movlb	0	; () banked
  1462  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1463  001306                     l2173:
  1464                           
  1465                           ; BSR set to: 0
  1466  001306  0E13               	movlw	19
  1467  001308  0100               	movlb	0	; () banked
  1468  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1469  00130C  D001               	goto	l2177
  1470  00130E  D013               	goto	l2185
  1471  001310                     l2177:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;Main.c: 246: {
  1475                           ;Main.c: 247: outchar = Message[msgindex];
  1476  001310  0100               	movlb	0	; () banked
  1477  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1478  001314  0D01               	mullw	1
  1479  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1480  001318  24F3               	addwf	prodl,w,c
  1481  00131A  6ED9               	movwf	fsr2l,c
  1482  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1483  00131E  20F4               	addwfc	prodh,w,c
  1484  001320  6EDA               	movwf	fsr2h,c
  1485  001322  50DF               	movf	indf2,w,c
  1486  001324  0100               	movlb	0	; () banked
  1487  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;Main.c: 248: lcd_write_data(outchar);
  1491  001328  0100               	movlb	0	; () banked
  1492  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1493  00132C  ECE6  F00A         	call	_lcd_write_data
  1494  001330  0100               	movlb	0	; () banked
  1495  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1496  001334  D7E8               	goto	l2173
  1497  001336                     l2185:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;Main.c: 249: }
  1501                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1502  001336  0EC0               	movlw	192
  1503  001338  EC69  F00C         	call	_lcd_write_cmd
  1504                           
  1505                           ;Main.c: 253: ctemp=getkey();
  1506  00133C  EC8C  F00D         	call	_getkey	;wreg free
  1507  001340  0100               	movlb	0	; () banked
  1508  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;Main.c: 254: lcd_write_data(ctemp);
  1512  001344  0100               	movlb	0	; () banked
  1513  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1514  001348  ECE6  F00A         	call	_lcd_write_data
  1515                           
  1516                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1517  00134C  0100               	movlb	0	; () banked
  1518  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1519  001350  EC30  F00C         	call	_char_2_int
  1520  001354  0100               	movlb	0	; () banked
  1521  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;Main.c: 257: ctemp=getkey();
  1525  001358  EC8C  F00D         	call	_getkey	;wreg free
  1526  00135C  0100               	movlb	0	; () banked
  1527  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1528                           
  1529                           ;Main.c: 258: lcd_write_data(ctemp);
  1530  001360  0100               	movlb	0	; () banked
  1531  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1532  001364  ECE6  F00A         	call	_lcd_write_data
  1533                           
  1534                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1535  001368  0100               	movlb	0	; () banked
  1536  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1537  00136C  EC30  F00C         	call	_char_2_int
  1538  001370  0100               	movlb	0	; () banked
  1539  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;Main.c: 261: ctemp=getkey();
  1543  001374  EC8C  F00D         	call	_getkey	;wreg free
  1544  001378  0100               	movlb	0	; () banked
  1545  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;Main.c: 262: lcd_write_data(ctemp);
  1549  00137C  0100               	movlb	0	; () banked
  1550  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1551  001380  ECE6  F00A         	call	_lcd_write_data
  1552                           
  1553                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1554  001384  0100               	movlb	0	; () banked
  1555  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1556  001388  EC30  F00C         	call	_char_2_int
  1557  00138C  0100               	movlb	0	; () banked
  1558  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;Main.c: 265: ctemp=getkey();
  1562  001390  EC8C  F00D         	call	_getkey	;wreg free
  1563  001394  0100               	movlb	0	; () banked
  1564  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1565                           
  1566                           ;Main.c: 266: lcd_write_data(ctemp);
  1567  001398  0100               	movlb	0	; () banked
  1568  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1569  00139C  ECE6  F00A         	call	_lcd_write_data
  1570                           
  1571                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1572  0013A0  0100               	movlb	0	; () banked
  1573  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1574  0013A4  EC30  F00C         	call	_char_2_int
  1575  0013A8  0100               	movlb	0	; () banked
  1576  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1580  0013AC  0100               	movlb	0	; () banked
  1581  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1582  0013B0  0D0A               	mullw	10
  1583  0013B2  50F3               	movf	prodl,w,c
  1584  0013B4  0100               	movlb	0	; () banked
  1585  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1586  0013B8  6E3C               	movwf	_hourC,c
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1590  0013BA  0100               	movlb	0	; () banked
  1591  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1592  0013BE  0D0A               	mullw	10
  1593  0013C0  50F3               	movf	prodl,w,c
  1594  0013C2  0100               	movlb	0	; () banked
  1595  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1596  0013C6  6E40               	movwf	_minuteC,c
  1597                           
  1598                           ;Main.c: 272: delay_ms(500);
  1599  0013C8  0E01               	movlw	1
  1600  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1601  0013CC  0EF4               	movlw	244
  1602  0013CE  6E1D               	movwf	delay_ms@i,c
  1603  0013D0  ECAB  F00D         	call	_delay_ms	;wreg free
  1604                           
  1605                           ;Main.c: 273: lcd_write_cmd(0x01);
  1606  0013D4  0E01               	movlw	1
  1607  0013D6  EC69  F00C         	call	_lcd_write_cmd
  1608  0013DA  0012               	return		;funcret
  1609  0013DC                     __end_of_SetupAlarmTimeC:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           intcon	equ	0xFF2
  1618                           intcon2	equ	0xFF1
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           plusw1	equ	0xFE3
  1623                           fsr1l	equ	0xFE1
  1624                           indf2	equ	0xFDF
  1625                           plusw2	equ	0xFDB
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _SetupAlarmTimeB *****************
  1631 ;; Defined at:
  1632 ;;		line 195 in file "Main.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1637 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1638 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1639 ;;  minute1         1   44[BANK0 ] unsigned char 
  1640 ;;  minute10        1   43[BANK0 ] unsigned char 
  1641 ;;  hour1           1   42[BANK0 ] unsigned char 
  1642 ;;  hour10          1   41[BANK0 ] unsigned char 
  1643 ;;  outchar         1   40[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0
  1654 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1656 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1657 ;;Total ram usage:       28 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    5
  1660 ;; This function calls:
  1661 ;;		_char_2_int
  1662 ;;		_delay_ms
  1663 ;;		_getkey
  1664 ;;		_lcd_write_cmd
  1665 ;;		_lcd_write_data
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text6
  1672  0013DC                     __ptext6:
  1673                           	opt stack 0
  1674  0013DC                     _SetupAlarmTimeB:
  1675                           	opt stack 25
  1676                           
  1677                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1678                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1679                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1680                           
  1681                           ;incstack = 0
  1682  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4332
  1683  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1684  0013E4  0E14               	movlw	20
  1685  0013E6                     u921:
  1686  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1687  0013EA  06E8               	decf	wreg,f,c
  1688  0013EC  E2FC               	bc	u921
  1689                           
  1690                           ;Main.c: 201: PORTA = 0b00000100;
  1691  0013EE  0E04               	movlw	4
  1692  0013F0  6E80               	movwf	3968,c	;volatile
  1693                           
  1694                           ;Main.c: 203: lcd_write_cmd(0x80);
  1695  0013F2  0E80               	movlw	128
  1696  0013F4  EC69  F00C         	call	_lcd_write_cmd
  1697                           
  1698                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1699  0013F8  0E00               	movlw	0
  1700  0013FA  0100               	movlb	0	; () banked
  1701  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1702  0013FE                     l2131:
  1703                           
  1704                           ; BSR set to: 0
  1705  0013FE  0E13               	movlw	19
  1706  001400  0100               	movlb	0	; () banked
  1707  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1708  001404  D001               	goto	l2135
  1709  001406  D013               	goto	l2143
  1710  001408                     l2135:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;Main.c: 206: {
  1714                           ;Main.c: 207: outchar = Message[msgindex];
  1715  001408  0100               	movlb	0	; () banked
  1716  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1717  00140C  0D01               	mullw	1
  1718  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1719  001410  24F3               	addwf	prodl,w,c
  1720  001412  6ED9               	movwf	fsr2l,c
  1721  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1722  001416  20F4               	addwfc	prodh,w,c
  1723  001418  6EDA               	movwf	fsr2h,c
  1724  00141A  50DF               	movf	indf2,w,c
  1725  00141C  0100               	movlb	0	; () banked
  1726  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;Main.c: 208: lcd_write_data(outchar);
  1730  001420  0100               	movlb	0	; () banked
  1731  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1732  001424  ECE6  F00A         	call	_lcd_write_data
  1733  001428  0100               	movlb	0	; () banked
  1734  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1735  00142C  D7E8               	goto	l2131
  1736  00142E                     l2143:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;Main.c: 209: }
  1740                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1741  00142E  0EC0               	movlw	192
  1742  001430  EC69  F00C         	call	_lcd_write_cmd
  1743                           
  1744                           ;Main.c: 213: ctemp=getkey();
  1745  001434  EC8C  F00D         	call	_getkey	;wreg free
  1746  001438  0100               	movlb	0	; () banked
  1747  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;Main.c: 214: lcd_write_data(ctemp);
  1751  00143C  0100               	movlb	0	; () banked
  1752  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1753  001440  ECE6  F00A         	call	_lcd_write_data
  1754                           
  1755                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1756  001444  0100               	movlb	0	; () banked
  1757  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1758  001448  EC30  F00C         	call	_char_2_int
  1759  00144C  0100               	movlb	0	; () banked
  1760  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;Main.c: 217: ctemp=getkey();
  1764  001450  EC8C  F00D         	call	_getkey	;wreg free
  1765  001454  0100               	movlb	0	; () banked
  1766  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1767                           
  1768                           ;Main.c: 218: lcd_write_data(ctemp);
  1769  001458  0100               	movlb	0	; () banked
  1770  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1771  00145C  ECE6  F00A         	call	_lcd_write_data
  1772                           
  1773                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1774  001460  0100               	movlb	0	; () banked
  1775  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1776  001464  EC30  F00C         	call	_char_2_int
  1777  001468  0100               	movlb	0	; () banked
  1778  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;Main.c: 221: ctemp=getkey();
  1782  00146C  EC8C  F00D         	call	_getkey	;wreg free
  1783  001470  0100               	movlb	0	; () banked
  1784  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;Main.c: 222: lcd_write_data(ctemp);
  1788  001474  0100               	movlb	0	; () banked
  1789  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1790  001478  ECE6  F00A         	call	_lcd_write_data
  1791                           
  1792                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1793  00147C  0100               	movlb	0	; () banked
  1794  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1795  001480  EC30  F00C         	call	_char_2_int
  1796  001484  0100               	movlb	0	; () banked
  1797  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;Main.c: 225: ctemp=getkey();
  1801  001488  EC8C  F00D         	call	_getkey	;wreg free
  1802  00148C  0100               	movlb	0	; () banked
  1803  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1804                           
  1805                           ;Main.c: 226: lcd_write_data(ctemp);
  1806  001490  0100               	movlb	0	; () banked
  1807  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1808  001494  ECE6  F00A         	call	_lcd_write_data
  1809                           
  1810                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1811  001498  0100               	movlb	0	; () banked
  1812  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1813  00149C  EC30  F00C         	call	_char_2_int
  1814  0014A0  0100               	movlb	0	; () banked
  1815  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1819  0014A4  0100               	movlb	0	; () banked
  1820  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1821  0014A8  0D0A               	mullw	10
  1822  0014AA  50F3               	movf	prodl,w,c
  1823  0014AC  0100               	movlb	0	; () banked
  1824  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1825  0014B0  6E3B               	movwf	_hourB,c
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1829  0014B2  0100               	movlb	0	; () banked
  1830  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1831  0014B6  0D0A               	mullw	10
  1832  0014B8  50F3               	movf	prodl,w,c
  1833  0014BA  0100               	movlb	0	; () banked
  1834  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1835  0014BE  6E3F               	movwf	_minuteB,c
  1836                           
  1837                           ;Main.c: 232: delay_ms(500);
  1838  0014C0  0E01               	movlw	1
  1839  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1840  0014C4  0EF4               	movlw	244
  1841  0014C6  6E1D               	movwf	delay_ms@i,c
  1842  0014C8  ECAB  F00D         	call	_delay_ms	;wreg free
  1843                           
  1844                           ;Main.c: 233: lcd_write_cmd(0x01);
  1845  0014CC  0E01               	movlw	1
  1846  0014CE  EC69  F00C         	call	_lcd_write_cmd
  1847  0014D2  0012               	return		;funcret
  1848  0014D4                     __end_of_SetupAlarmTimeB:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodh	equ	0xFF4
  1855                           prodl	equ	0xFF3
  1856                           intcon	equ	0xFF2
  1857                           intcon2	equ	0xFF1
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           postdec1	equ	0xFE5
  1861                           plusw1	equ	0xFE3
  1862                           fsr1l	equ	0xFE1
  1863                           indf2	equ	0xFDF
  1864                           plusw2	equ	0xFDB
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function _SetupAlarmTimeA *****************
  1870 ;; Defined at:
  1871 ;;		line 155 in file "Main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1876 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1877 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1878 ;;  minute1         1   44[BANK0 ] unsigned char 
  1879 ;;  minute10        1   43[BANK0 ] unsigned char 
  1880 ;;  hour1           1   42[BANK0 ] unsigned char 
  1881 ;;  hour10          1   41[BANK0 ] unsigned char 
  1882 ;;  outchar         1   40[BANK0 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0
  1893 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1895 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1896 ;;Total ram usage:       28 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    5
  1899 ;; This function calls:
  1900 ;;		_char_2_int
  1901 ;;		_delay_ms
  1902 ;;		_getkey
  1903 ;;		_lcd_write_cmd
  1904 ;;		_lcd_write_data
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text7
  1911  0014D4                     __ptext7:
  1912                           	opt stack 0
  1913  0014D4                     _SetupAlarmTimeA:
  1914                           	opt stack 25
  1915                           
  1916                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  1917                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  1918                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  1919                           
  1920                           ;incstack = 0
  1921  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4322
  1922  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  1923  0014DC  0E14               	movlw	20
  1924  0014DE                     u891:
  1925  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  1926  0014E2  06E8               	decf	wreg,f,c
  1927  0014E4  E2FC               	bc	u891
  1928                           
  1929                           ;Main.c: 161: PORTA = 0b00000010;
  1930  0014E6  0E02               	movlw	2
  1931  0014E8  6E80               	movwf	3968,c	;volatile
  1932                           
  1933                           ;Main.c: 163: lcd_write_cmd(0x80);
  1934  0014EA  0E80               	movlw	128
  1935  0014EC  EC69  F00C         	call	_lcd_write_cmd
  1936                           
  1937                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1938  0014F0  0E00               	movlw	0
  1939  0014F2  0100               	movlb	0	; () banked
  1940  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1941  0014F6                     l2089:
  1942                           
  1943                           ; BSR set to: 0
  1944  0014F6  0E13               	movlw	19
  1945  0014F8  0100               	movlb	0	; () banked
  1946  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1947  0014FC  D001               	goto	l2093
  1948  0014FE  D013               	goto	l2101
  1949  001500                     l2093:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;Main.c: 166: {
  1953                           ;Main.c: 167: outchar = Message[msgindex];
  1954  001500  0100               	movlb	0	; () banked
  1955  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  1956  001504  0D01               	mullw	1
  1957  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  1958  001508  24F3               	addwf	prodl,w,c
  1959  00150A  6ED9               	movwf	fsr2l,c
  1960  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  1961  00150E  20F4               	addwfc	prodh,w,c
  1962  001510  6EDA               	movwf	fsr2h,c
  1963  001512  50DF               	movf	indf2,w,c
  1964  001514  0100               	movlb	0	; () banked
  1965  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;Main.c: 168: lcd_write_data(outchar);
  1969  001518  0100               	movlb	0	; () banked
  1970  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  1971  00151C  ECE6  F00A         	call	_lcd_write_data
  1972  001520  0100               	movlb	0	; () banked
  1973  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  1974  001524  D7E8               	goto	l2089
  1975  001526                     l2101:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;Main.c: 169: }
  1979                           ;Main.c: 171: lcd_write_cmd(0xC0);
  1980  001526  0EC0               	movlw	192
  1981  001528  EC69  F00C         	call	_lcd_write_cmd
  1982                           
  1983                           ;Main.c: 173: ctemp=getkey();
  1984  00152C  EC8C  F00D         	call	_getkey	;wreg free
  1985  001530  0100               	movlb	0	; () banked
  1986  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;Main.c: 174: lcd_write_data(ctemp);
  1990  001534  0100               	movlb	0	; () banked
  1991  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1992  001538  ECE6  F00A         	call	_lcd_write_data
  1993                           
  1994                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  1995  00153C  0100               	movlb	0	; () banked
  1996  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1997  001540  EC30  F00C         	call	_char_2_int
  1998  001544  0100               	movlb	0	; () banked
  1999  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;Main.c: 177: ctemp=getkey();
  2003  001548  EC8C  F00D         	call	_getkey	;wreg free
  2004  00154C  0100               	movlb	0	; () banked
  2005  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2006                           
  2007                           ;Main.c: 178: lcd_write_data(ctemp);
  2008  001550  0100               	movlb	0	; () banked
  2009  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2010  001554  ECE6  F00A         	call	_lcd_write_data
  2011                           
  2012                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2013  001558  0100               	movlb	0	; () banked
  2014  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2015  00155C  EC30  F00C         	call	_char_2_int
  2016  001560  0100               	movlb	0	; () banked
  2017  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;Main.c: 181: ctemp=getkey();
  2021  001564  EC8C  F00D         	call	_getkey	;wreg free
  2022  001568  0100               	movlb	0	; () banked
  2023  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;Main.c: 182: lcd_write_data(ctemp);
  2027  00156C  0100               	movlb	0	; () banked
  2028  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2029  001570  ECE6  F00A         	call	_lcd_write_data
  2030                           
  2031                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2032  001574  0100               	movlb	0	; () banked
  2033  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2034  001578  EC30  F00C         	call	_char_2_int
  2035  00157C  0100               	movlb	0	; () banked
  2036  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;Main.c: 185: ctemp=getkey();
  2040  001580  EC8C  F00D         	call	_getkey	;wreg free
  2041  001584  0100               	movlb	0	; () banked
  2042  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2043                           
  2044                           ;Main.c: 186: lcd_write_data(ctemp);
  2045  001588  0100               	movlb	0	; () banked
  2046  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2047  00158C  ECE6  F00A         	call	_lcd_write_data
  2048                           
  2049                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2050  001590  0100               	movlb	0	; () banked
  2051  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2052  001594  EC30  F00C         	call	_char_2_int
  2053  001598  0100               	movlb	0	; () banked
  2054  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2058  00159C  0100               	movlb	0	; () banked
  2059  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2060  0015A0  0D0A               	mullw	10
  2061  0015A2  50F3               	movf	prodl,w,c
  2062  0015A4  0100               	movlb	0	; () banked
  2063  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2064  0015A8  6E3A               	movwf	_hourA,c
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2068  0015AA  0100               	movlb	0	; () banked
  2069  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2070  0015AE  0D0A               	mullw	10
  2071  0015B0  50F3               	movf	prodl,w,c
  2072  0015B2  0100               	movlb	0	; () banked
  2073  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2074  0015B6  6E3E               	movwf	_minuteA,c
  2075                           
  2076                           ;Main.c: 192: delay_ms(500);
  2077  0015B8  0E01               	movlw	1
  2078  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2079  0015BC  0EF4               	movlw	244
  2080  0015BE  6E1D               	movwf	delay_ms@i,c
  2081  0015C0  ECAB  F00D         	call	_delay_ms	;wreg free
  2082                           
  2083                           ;Main.c: 193: lcd_write_cmd(0x01);
  2084  0015C4  0E01               	movlw	1
  2085  0015C6  EC69  F00C         	call	_lcd_write_cmd
  2086  0015CA  0012               	return		;funcret
  2087  0015CC                     __end_of_SetupAlarmTimeA:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           prodh	equ	0xFF4
  2094                           prodl	equ	0xFF3
  2095                           intcon	equ	0xFF2
  2096                           intcon2	equ	0xFF1
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           plusw1	equ	0xFE3
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           plusw2	equ	0xFDB
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _lcd_write_data *****************
  2109 ;; Defined at:
  2110 ;;		line 43 in file "lcd_utilities.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  data            1    wreg     unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  data            1   30[COMRAM] unsigned char 
  2115 ;;  temp1           1   31[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0
  2126 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2127 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        3 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    4
  2132 ;; This function calls:
  2133 ;;		_lcd_strobe
  2134 ;; This function is called by:
  2135 ;;		_SetupTime
  2136 ;;		_SetupAlarmTimeA
  2137 ;;		_SetupAlarmTimeB
  2138 ;;		_SetupAlarmTimeC
  2139 ;;		_Version
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text8
  2144  0015CC                     __ptext8:
  2145                           	opt stack 0
  2146  0015CC                     _lcd_write_data:
  2147                           	opt stack 25
  2148                           
  2149                           ;incstack = 0
  2150                           ;lcd_write_data@data stored from wreg
  2151  0015CC  6E1F               	movwf	lcd_write_data@data,c
  2152                           
  2153                           ;lcd_utilities.c: 45: char temp1;
  2154                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2155  0015CE  8C83               	bsf	3971,6,c	;volatile
  2156                           
  2157                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2158  0015D0  0E3F               	movlw	63
  2159  0015D2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2160  0015D4  0E55               	movlw	85
  2161  0015D6                     u1097:
  2162  0015D6  2EE8               	decfsz	wreg,f,c
  2163  0015D8  D7FE               	goto	u1097
  2164  0015DA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2165  0015DC  D7FC               	goto	u1097
  2166  0015DE  F000               	nop	
  2167                           
  2168                           ;lcd_utilities.c: 50: temp1 = data;
  2169  0015E0  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2170                           
  2171                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2172  0015E4  3820               	swapf	lcd_write_data@temp1,w,c
  2173  0015E6  0B0F               	andlw	15
  2174  0015E8  6E20               	movwf	lcd_write_data@temp1,c
  2175                           
  2176                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2177  0015EA  5020               	movf	lcd_write_data@temp1,w,c
  2178  0015EC  0B0F               	andlw	15
  2179  0015EE  6E83               	movwf	3971,c	;volatile
  2180                           
  2181                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2182  0015F0  0E7D               	movlw	125
  2183  0015F2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2184  0015F4  0EAC               	movlw	172
  2185  0015F6                     u1107:
  2186  0015F6  2EE8               	decfsz	wreg,f,c
  2187  0015F8  D7FE               	goto	u1107
  2188  0015FA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2189  0015FC  D7FC               	goto	u1107
  2190                           
  2191                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2192  0015FE  8C83               	bsf	3971,6,c	;volatile
  2193                           
  2194                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2195  001600  0E7D               	movlw	125
  2196  001602  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2197  001604  0EAC               	movlw	172
  2198  001606                     u1117:
  2199  001606  2EE8               	decfsz	wreg,f,c
  2200  001608  D7FE               	goto	u1117
  2201  00160A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2202  00160C  D7FC               	goto	u1117
  2203                           
  2204                           ;lcd_utilities.c: 57: lcd_strobe();
  2205  00160E  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2206                           
  2207                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2208  001612  0E7D               	movlw	125
  2209  001614  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2210  001616  0EAC               	movlw	172
  2211  001618                     u1127:
  2212  001618  2EE8               	decfsz	wreg,f,c
  2213  00161A  D7FE               	goto	u1127
  2214  00161C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2215  00161E  D7FC               	goto	u1127
  2216                           
  2217                           ;lcd_utilities.c: 60: temp1 = data;
  2218  001620  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2219                           
  2220                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2221  001624  5020               	movf	lcd_write_data@temp1,w,c
  2222  001626  0B0F               	andlw	15
  2223  001628  6E83               	movwf	3971,c	;volatile
  2224                           
  2225                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2226  00162A  0E7D               	movlw	125
  2227  00162C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2228  00162E  0EAC               	movlw	172
  2229  001630                     u1137:
  2230  001630  2EE8               	decfsz	wreg,f,c
  2231  001632  D7FE               	goto	u1137
  2232  001634  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2233  001636  D7FC               	goto	u1137
  2234                           
  2235                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2236  001638  8C83               	bsf	3971,6,c	;volatile
  2237                           
  2238                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2239  00163A  0E9C               	movlw	156
  2240  00163C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2241  00163E  0ED7               	movlw	215
  2242  001640                     u1147:
  2243  001640  2EE8               	decfsz	wreg,f,c
  2244  001642  D7FE               	goto	u1147
  2245  001644  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2246  001646  D7FC               	goto	u1147
  2247  001648  F000               	nop	
  2248                           
  2249                           ;lcd_utilities.c: 66: lcd_strobe();
  2250  00164A  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2251                           
  2252                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2253  00164E  0E9C               	movlw	156
  2254  001650  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2255  001652  0ED7               	movlw	215
  2256  001654                     u1157:
  2257  001654  2EE8               	decfsz	wreg,f,c
  2258  001656  D7FE               	goto	u1157
  2259  001658  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2260  00165A  D7FC               	goto	u1157
  2261  00165C  F000               	nop	
  2262  00165E  0012               	return		;funcret
  2263  001660                     __end_of_lcd_write_data:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           plusw1	equ	0xFE3
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           plusw2	equ	0xFDB
  2280                           fsr2h	equ	0xFDA
  2281                           fsr2l	equ	0xFD9
  2282                           status	equ	0xFD8
  2283                           
  2284 ;; *************** function _lcd_write_cmd *****************
  2285 ;; Defined at:
  2286 ;;		line 18 in file "lcd_utilities.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  cmd             1    wreg     unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  cmd             1   30[COMRAM] unsigned char 
  2291 ;;  temp2           1   31[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2301 ;;      Params:         0       0       0       0       0       0       0       0       0
  2302 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2304 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    4
  2308 ;; This function calls:
  2309 ;;		_lcd_strobe
  2310 ;; This function is called by:
  2311 ;;		_lcd_init
  2312 ;;		_SetupTime
  2313 ;;		_SetupAlarmTimeA
  2314 ;;		_SetupAlarmTimeB
  2315 ;;		_SetupAlarmTimeC
  2316 ;;		_Version
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text9
  2321  0018D2                     __ptext9:
  2322                           	opt stack 0
  2323  0018D2                     _lcd_write_cmd:
  2324                           	opt stack 25
  2325                           
  2326                           ;incstack = 0
  2327                           ;lcd_write_cmd@cmd stored from wreg
  2328  0018D2  6E1F               	movwf	lcd_write_cmd@cmd,c
  2329                           
  2330                           ;lcd_utilities.c: 20: unsigned char temp2;
  2331                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2332  0018D4  9C83               	bcf	3971,6,c	;volatile
  2333                           
  2334                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2335  0018D6  0E3F               	movlw	63
  2336  0018D8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2337  0018DA  0E55               	movlw	85
  2338  0018DC                     u1167:
  2339  0018DC  2EE8               	decfsz	wreg,f,c
  2340  0018DE  D7FE               	goto	u1167
  2341  0018E0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2342  0018E2  D7FC               	goto	u1167
  2343  0018E4  F000               	nop	
  2344                           
  2345                           ;lcd_utilities.c: 23: temp2 = cmd;
  2346  0018E6  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2347                           
  2348                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2349  0018EA  3820               	swapf	lcd_write_cmd@temp2,w,c
  2350  0018EC  0B0F               	andlw	15
  2351  0018EE  6E20               	movwf	lcd_write_cmd@temp2,c
  2352                           
  2353                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2354  0018F0  5020               	movf	lcd_write_cmd@temp2,w,c
  2355  0018F2  0B0F               	andlw	15
  2356  0018F4  6E83               	movwf	3971,c	;volatile
  2357                           
  2358                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2359  0018F6  0E7D               	movlw	125
  2360  0018F8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2361  0018FA  0EAC               	movlw	172
  2362  0018FC                     u1177:
  2363  0018FC  2EE8               	decfsz	wreg,f,c
  2364  0018FE  D7FE               	goto	u1177
  2365  001900  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2366  001902  D7FC               	goto	u1177
  2367                           
  2368                           ;lcd_utilities.c: 28: lcd_strobe();
  2369  001904  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2370                           
  2371                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2372  001908  0E7D               	movlw	125
  2373  00190A  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2374  00190C  0EAC               	movlw	172
  2375  00190E                     u1187:
  2376  00190E  2EE8               	decfsz	wreg,f,c
  2377  001910  D7FE               	goto	u1187
  2378  001912  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2379  001914  D7FC               	goto	u1187
  2380                           
  2381                           ;lcd_utilities.c: 32: temp2 = cmd;
  2382  001916  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2383                           
  2384                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2385  00191A  5020               	movf	lcd_write_cmd@temp2,w,c
  2386  00191C  0B0F               	andlw	15
  2387  00191E  6E83               	movwf	3971,c	;volatile
  2388                           
  2389                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2390  001920  0E7D               	movlw	125
  2391  001922  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2392  001924  0EAC               	movlw	172
  2393  001926                     u1197:
  2394  001926  2EE8               	decfsz	wreg,f,c
  2395  001928  D7FE               	goto	u1197
  2396  00192A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2397  00192C  D7FC               	goto	u1197
  2398                           
  2399                           ;lcd_utilities.c: 36: lcd_strobe();
  2400  00192E  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2401                           
  2402                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2403  001932  0E7D               	movlw	125
  2404  001934  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2405  001936  0EAC               	movlw	172
  2406  001938                     u1207:
  2407  001938  2EE8               	decfsz	wreg,f,c
  2408  00193A  D7FE               	goto	u1207
  2409  00193C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2410  00193E  D7FC               	goto	u1207
  2411  001940  0012               	return		;funcret
  2412  001942                     __end_of_lcd_write_cmd:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           intcon2	equ	0xFF1
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           plusw1	equ	0xFE3
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           plusw2	equ	0xFDB
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           
  2433 ;; *************** function _lcd_strobe *****************
  2434 ;; Defined at:
  2435 ;;		line 73 in file "lcd_utilities.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2452 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2453 ;;Total ram usage:        1 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    3
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_lcd_write_cmd
  2460 ;;		_lcd_write_data
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text10
  2465  001B8A                     __ptext10:
  2466                           	opt stack 0
  2467  001B8A                     _lcd_strobe:
  2468                           	opt stack 25
  2469                           
  2470                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2471                           
  2472                           ;incstack = 0
  2473  001B8A  8883               	bsf	3971,4,c	;volatile
  2474                           
  2475                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2476  001B8C  0E7D               	movlw	125
  2477  001B8E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2478  001B90  0EAC               	movlw	172
  2479  001B92                     u1217:
  2480  001B92  2EE8               	decfsz	wreg,f,c
  2481  001B94  D7FE               	goto	u1217
  2482  001B96  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2483  001B98  D7FC               	goto	u1217
  2484                           
  2485                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2486  001B9A  9883               	bcf	3971,4,c	;volatile
  2487                           
  2488                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2489  001B9C  0E7D               	movlw	125
  2490  001B9E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2491  001BA0  0EAC               	movlw	172
  2492  001BA2                     u1227:
  2493  001BA2  2EE8               	decfsz	wreg,f,c
  2494  001BA4  D7FE               	goto	u1227
  2495  001BA6  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2496  001BA8  D7FC               	goto	u1227
  2497  001BAA  0012               	return		;funcret
  2498  001BAC                     __end_of_lcd_strobe:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           intcon	equ	0xFF2
  2507                           intcon2	equ	0xFF1
  2508                           postinc0	equ	0xFEE
  2509                           wreg	equ	0xFE8
  2510                           postdec1	equ	0xFE5
  2511                           plusw1	equ	0xFE3
  2512                           fsr1l	equ	0xFE1
  2513                           indf2	equ	0xFDF
  2514                           plusw2	equ	0xFDB
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _getkey *****************
  2520 ;; Defined at:
  2521 ;;		line 17 in file "keypad_utilities.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2526 ;;  keycode         1   18[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2540 ;;Total ram usage:       19 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    3
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_SetupTime
  2547 ;;		_SetupAlarmTimeA
  2548 ;;		_SetupAlarmTimeB
  2549 ;;		_SetupAlarmTimeC
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text11
  2554  001B18                     __ptext11:
  2555                           	opt stack 0
  2556  001B18                     _getkey:
  2557                           	opt stack 26
  2558                           
  2559                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2560                           
  2561                           ;incstack = 0
  2562  001B18  0E1B               	movlw	low getkey@F4270
  2563  001B1A  6EF6               	movwf	tblptrl,c
  2564  001B1C                     	if	1	;There is more than 1 active tblptr byte
  2565  001B1C  0E10               	movlw	high getkey@F4270
  2566  001B1E  6EF7               	movwf	tblptrh,c
  2567  001B20                     	endif
  2568  001B20                     	if	0	;There are less than 3 active tblptr bytes
  2569  001B20                     	endif
  2570  001B20  EE20  F0B4         	lfsr	2,getkey@lookup
  2571  001B24  0E11               	movlw	17
  2572  001B26                     u810:
  2573  001B26  0009               	tblrd		*+
  2574  001B28  CFF5 FFDE          	movff	tablat,postinc2
  2575  001B2C  06E8               	decf	wreg,f,c
  2576  001B2E  E2FB               	bc	u810
  2577  001B30                     l33:
  2578  001B30  AA81               	btfss	3969,5,c	;volatile
  2579  001B32  D7FE               	goto	l33
  2580                           
  2581                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2582  001B34  5081               	movf	3969,w,c	;volatile
  2583  001B36  0B0F               	andlw	15
  2584  001B38  0100               	movlb	0	; () banked
  2585  001B3A  6FC6               	movwf	getkey@keycode& (0+255),b
  2586  001B3C                     l36:
  2587  001B3C  BA81               	btfsc	3969,5,c	;volatile
  2588  001B3E  D7FE               	goto	l36
  2589                           
  2590                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2591  001B40  0100               	movlb	0	; () banked
  2592  001B42  51C6               	movf	getkey@keycode& (0+255),w,b
  2593  001B44  0D01               	mullw	1
  2594  001B46  0EB4               	movlw	low getkey@lookup
  2595  001B48  24F3               	addwf	prodl,w,c
  2596  001B4A  6ED9               	movwf	fsr2l,c
  2597  001B4C  0E00               	movlw	high getkey@lookup
  2598  001B4E  20F4               	addwfc	prodh,w,c
  2599  001B50  6EDA               	movwf	fsr2h,c
  2600  001B52  50DF               	movf	indf2,w,c
  2601  001B54  0012               	return	
  2602  001B56                     __end_of_getkey:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodh	equ	0xFF4
  2609                           prodl	equ	0xFF3
  2610                           intcon	equ	0xFF2
  2611                           intcon2	equ	0xFF1
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           plusw1	equ	0xFE3
  2616                           fsr1l	equ	0xFE1
  2617                           indf2	equ	0xFDF
  2618                           postinc2	equ	0xFDE
  2619                           plusw2	equ	0xFDB
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _delay_ms *****************
  2625 ;; Defined at:
  2626 ;;		line 10 in file "delays_utilities.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  i               2   28[COMRAM] unsigned int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  j               2   31[COMRAM] unsigned int 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         2       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2642 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2643 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:        5 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    3
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_SetupTime
  2651 ;;		_SetupAlarmTimeA
  2652 ;;		_SetupAlarmTimeB
  2653 ;;		_SetupAlarmTimeC
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text12
  2658  001B56                     __ptext12:
  2659                           	opt stack 0
  2660  001B56                     _delay_ms:
  2661                           	opt stack 26
  2662                           
  2663                           ;delays_utilities.c: 12: if(i!=0)
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;incstack = 0
  2667  001B56  501D               	movf	delay_ms@i,w,c
  2668  001B58  101E               	iorwf	delay_ms@i+1,w,c
  2669  001B5A  B4D8               	btfsc	status,2,c
  2670  001B5C  0012               	return	
  2671                           
  2672                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2673  001B5E  0E00               	movlw	0
  2674  001B60  6E21               	movwf	delay_ms@j+1,c
  2675  001B62  0E00               	movlw	0
  2676  001B64  6E20               	movwf	delay_ms@j,c
  2677  001B66  D00A               	goto	l184
  2678  001B68                     l1499:
  2679  001B68  0E10               	movlw	16
  2680  001B6A  6E1F               	movwf	??_delay_ms& (0+255),c
  2681  001B6C  0E94               	movlw	148
  2682  001B6E                     u1237:
  2683  001B6E  2EE8               	decfsz	wreg,f,c
  2684  001B70  D7FE               	goto	u1237
  2685  001B72  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2686  001B74  D7FC               	goto	u1237
  2687  001B76  D000               	nop2	
  2688  001B78  4A20               	infsnz	delay_ms@j,f,c
  2689  001B7A  2A21               	incf	delay_ms@j+1,f,c
  2690  001B7C                     l184:
  2691  001B7C  501D               	movf	delay_ms@i,w,c
  2692  001B7E  5C20               	subwf	delay_ms@j,w,c
  2693  001B80  501E               	movf	delay_ms@i+1,w,c
  2694  001B82  5821               	subwfb	delay_ms@j+1,w,c
  2695  001B84  B0D8               	btfsc	status,0,c
  2696  001B86  0012               	return	
  2697  001B88  D7EF               	goto	l1499
  2698  001B8A                     __end_of_delay_ms:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           intcon2	equ	0xFF1
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           plusw1	equ	0xFE3
  2712                           fsr1l	equ	0xFE1
  2713                           indf2	equ	0xFDF
  2714                           postinc2	equ	0xFDE
  2715                           plusw2	equ	0xFDB
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720 ;; *************** function _char_2_int *****************
  2721 ;; Defined at:
  2722 ;;		line 35 in file "Main.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  char1           1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  char1           1   28[COMRAM] unsigned char 
  2727 ;;  int1            1   29[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      unsigned char 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        2 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    3
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_SetupTime
  2748 ;;		_SetupAlarmTimeA
  2749 ;;		_SetupAlarmTimeB
  2750 ;;		_SetupAlarmTimeC
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text13
  2755  001860                     __ptext13:
  2756                           	opt stack 0
  2757  001860                     _char_2_int:
  2758                           	opt stack 26
  2759                           
  2760                           ;incstack = 0
  2761                           ;char_2_int@char1 stored from wreg
  2762  001860  6E1D               	movwf	char_2_int@char1,c
  2763                           
  2764                           ;Main.c: 37: unsigned char int1;
  2765                           ;Main.c: 38: switch (char1)
  2766  001862  D015               	goto	l1493
  2767  001864                     l1473:
  2768  001864  0E01               	movlw	1
  2769  001866  D011               	goto	L13
  2770  001868                     l1475:
  2771  001868  0E02               	movlw	2
  2772  00186A  D00F               	goto	L13
  2773  00186C                     l1477:
  2774  00186C  0E03               	movlw	3
  2775  00186E  D00D               	goto	L13
  2776  001870                     l1479:
  2777  001870  0E04               	movlw	4
  2778  001872  D00B               	goto	L13
  2779  001874                     l1481:
  2780  001874  0E05               	movlw	5
  2781  001876  D009               	goto	L13
  2782  001878                     l1483:
  2783  001878  0E06               	movlw	6
  2784  00187A  D007               	goto	L13
  2785  00187C                     l1485:
  2786  00187C  0E07               	movlw	7
  2787  00187E  D005               	goto	L13
  2788  001880                     l1487:
  2789  001880  0E08               	movlw	8
  2790  001882  D003               	goto	L13
  2791  001884                     l1489:
  2792  001884  0E09               	movlw	9
  2793  001886  D001               	goto	L13
  2794  001888                     l1491:
  2795  001888  0E00               	movlw	0
  2796  00188A                     L13:
  2797  00188A  6E1E               	movwf	char_2_int@int1,c
  2798                           
  2799                           ;Main.c: 51: }
  2800  00188C  D020               	goto	l110
  2801  00188E                     l1493:
  2802  00188E  501D               	movf	char_2_int@char1,w,c
  2803                           
  2804                           ; Switch size 1, requested type "space"
  2805                           ; Number of cases is 10, Range of values is 48 to 57
  2806                           ; switch strategies available:
  2807                           ; Name         Instructions Cycles
  2808                           ; simple_byte           31    16 (average)
  2809                           ;	Chosen strategy is simple_byte
  2810  001890  0A30               	xorlw	48	; case 48
  2811  001892  B4D8               	btfsc	status,2,c
  2812  001894  D7F9               	goto	l1491
  2813  001896  0A01               	xorlw	1	; case 49
  2814  001898  B4D8               	btfsc	status,2,c
  2815  00189A  D7E4               	goto	l1473
  2816  00189C  0A03               	xorlw	3	; case 50
  2817  00189E  B4D8               	btfsc	status,2,c
  2818  0018A0  D7E3               	goto	l1475
  2819  0018A2  0A01               	xorlw	1	; case 51
  2820  0018A4  B4D8               	btfsc	status,2,c
  2821  0018A6  D7E2               	goto	l1477
  2822  0018A8  0A07               	xorlw	7	; case 52
  2823  0018AA  B4D8               	btfsc	status,2,c
  2824  0018AC  D7E1               	goto	l1479
  2825  0018AE  0A01               	xorlw	1	; case 53
  2826  0018B0  B4D8               	btfsc	status,2,c
  2827  0018B2  D7E0               	goto	l1481
  2828  0018B4  0A03               	xorlw	3	; case 54
  2829  0018B6  B4D8               	btfsc	status,2,c
  2830  0018B8  D7DF               	goto	l1483
  2831  0018BA  0A01               	xorlw	1	; case 55
  2832  0018BC  B4D8               	btfsc	status,2,c
  2833  0018BE  D7DE               	goto	l1485
  2834  0018C0  0A0F               	xorlw	15	; case 56
  2835  0018C2  B4D8               	btfsc	status,2,c
  2836  0018C4  D7DD               	goto	l1487
  2837  0018C6  0A01               	xorlw	1	; case 57
  2838  0018C8  B4D8               	btfsc	status,2,c
  2839  0018CA  D7DC               	goto	l1489
  2840  0018CC  D7DD               	goto	l1491
  2841  0018CE                     l110:
  2842                           
  2843                           ;Main.c: 52: return(int1);
  2844  0018CE  501E               	movf	char_2_int@int1,w,c
  2845  0018D0  0012               	return		;funcret
  2846  0018D2                     __end_of_char_2_int:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           intcon	equ	0xFF2
  2855                           intcon2	equ	0xFF1
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postdec1	equ	0xFE5
  2859                           plusw1	equ	0xFE3
  2860                           fsr1l	equ	0xFE1
  2861                           indf2	equ	0xFDF
  2862                           postinc2	equ	0xFDE
  2863                           plusw2	equ	0xFDB
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _ISR_Timer0_Int *****************
  2869 ;; Defined at:
  2870 ;;		line 55 in file "Main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  second10        1   27[COMRAM] unsigned char 
  2875 ;;  minute10        1   26[COMRAM] unsigned char 
  2876 ;;  hour10          1   25[COMRAM] unsigned char 
  2877 ;;  second1         1   24[COMRAM] unsigned char 
  2878 ;;  minute1         1   23[COMRAM] unsigned char 
  2879 ;;  hour1           1   22[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2891 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2892 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:       20 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    2
  2896 ;; This function calls:
  2897 ;;		___awdiv
  2898 ;;		_int_2_char
  2899 ;;		i2_lcd_write_cmd
  2900 ;;		i2_lcd_write_data
  2901 ;; This function is called by:
  2902 ;;		Interrupt level 2
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	intcode
  2907  001008                     __pintcode:
  2908                           	opt stack 0
  2909  001008                     _ISR_Timer0_Int:
  2910                           	opt stack 25
  2911                           
  2912                           ;incstack = 0
  2913  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2914  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2915  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2916  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2917                           pclatu	equ	0xFFB
  2918                           pclath	equ	0xFFA
  2919                           tblptru	equ	0xFF8
  2920                           tblptrh	equ	0xFF7
  2921                           tblptrl	equ	0xFF6
  2922                           tablat	equ	0xFF5
  2923                           prodh	equ	0xFF4
  2924                           prodl	equ	0xFF3
  2925                           intcon	equ	0xFF2
  2926                           intcon2	equ	0xFF1
  2927                           postinc0	equ	0xFEE
  2928                           wreg	equ	0xFE8
  2929                           postdec1	equ	0xFE5
  2930                           plusw1	equ	0xFE3
  2931                           fsr1l	equ	0xFE1
  2932                           indf2	equ	0xFDF
  2933                           postinc2	equ	0xFDE
  2934                           plusw2	equ	0xFDB
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8
  2938                           
  2939                           	psect	intcode_body
  2940  00102E                     __pintcode_body:
  2941                           	opt stack 25
  2942  00102E                     int_func:
  2943                           	opt stack 25
  2944  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2945  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2946  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2947  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2948  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2949  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2950  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2951  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2952  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2953  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2954  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2955  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2956  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2957                           
  2958                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2959                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  2960  001060  A4F2               	btfss	intcon,2,c	;volatile
  2961  001062  D085               	goto	i2l128
  2962                           
  2963                           ;Main.c: 59: {
  2964                           ;Main.c: 63: second = second + 1;
  2965  001064  2841               	incf	_second,w,c
  2966  001066  6E41               	movwf	_second,c
  2967                           
  2968                           ;Main.c: 64: if ( second > 59 )
  2969  001068  0E3B               	movlw	59
  2970  00106A  6441               	cpfsgt	_second,c
  2971  00106C  D010               	goto	i2l1849
  2972                           
  2973                           ;Main.c: 65: {
  2974                           ;Main.c: 66: second = 0;
  2975  00106E  0E00               	movlw	0
  2976  001070  6E41               	movwf	_second,c
  2977                           
  2978                           ;Main.c: 67: minute = minute + 1;
  2979  001072  283D               	incf	_minute,w,c
  2980  001074  6E3D               	movwf	_minute,c
  2981                           
  2982                           ;Main.c: 68: if ( minute > 59 )
  2983  001076  0E3B               	movlw	59
  2984  001078  643D               	cpfsgt	_minute,c
  2985  00107A  D009               	goto	i2l1849
  2986                           
  2987                           ;Main.c: 69: {
  2988                           ;Main.c: 70: minute = 0;
  2989  00107C  0E00               	movlw	0
  2990  00107E  6E3D               	movwf	_minute,c
  2991                           
  2992                           ;Main.c: 71: hour = hour + 1;
  2993  001080  2839               	incf	_hour,w,c
  2994  001082  6E39               	movwf	_hour,c
  2995                           
  2996                           ;Main.c: 72: if ( hour > 23 )
  2997  001084  0E17               	movlw	23
  2998  001086  6439               	cpfsgt	_hour,c
  2999  001088  D002               	goto	i2l1849
  3000                           
  3001                           ;Main.c: 73: hour = 0;
  3002  00108A  0E00               	movlw	0
  3003  00108C  6E39               	movwf	_hour,c
  3004  00108E                     i2l1849:
  3005                           
  3006                           ;Main.c: 74: }
  3007                           ;Main.c: 75: }
  3008                           ;Main.c: 77: hour10 = hour / 10;
  3009  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3010  001092  6A02               	clrf	___awdiv@dividend+1,c
  3011  001094  0E00               	movlw	0
  3012  001096  6E04               	movwf	___awdiv@divisor+1,c
  3013  001098  0E0A               	movlw	10
  3014  00109A  6E03               	movwf	___awdiv@divisor,c
  3015  00109C  EC7A  F00B         	call	___awdiv	;wreg free
  3016  0010A0  5001               	movf	?___awdiv,w,c
  3017  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3018                           
  3019                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3020  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3021  0010A6  0D0A               	mullw	10
  3022  0010A8  50F3               	movf	prodl,w,c
  3023  0010AA  0800               	sublw	0
  3024  0010AC  2439               	addwf	_hour,w,c
  3025  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3026                           
  3027                           ;Main.c: 80: minute10 = minute / 10;
  3028  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3029  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3030  0010B6  0E00               	movlw	0
  3031  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3032  0010BA  0E0A               	movlw	10
  3033  0010BC  6E03               	movwf	___awdiv@divisor,c
  3034  0010BE  EC7A  F00B         	call	___awdiv	;wreg free
  3035  0010C2  5001               	movf	?___awdiv,w,c
  3036  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3037                           
  3038                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3039  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3040  0010C8  0D0A               	mullw	10
  3041  0010CA  50F3               	movf	prodl,w,c
  3042  0010CC  0800               	sublw	0
  3043  0010CE  243D               	addwf	_minute,w,c
  3044  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3045                           
  3046                           ;Main.c: 83: second10 = second / 10;
  3047  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3048  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3049  0010D8  0E00               	movlw	0
  3050  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3051  0010DC  0E0A               	movlw	10
  3052  0010DE  6E03               	movwf	___awdiv@divisor,c
  3053  0010E0  EC7A  F00B         	call	___awdiv	;wreg free
  3054  0010E4  5001               	movf	?___awdiv,w,c
  3055  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3056                           
  3057                           ;Main.c: 84: second1 = second - second10 * 10;
  3058  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3059  0010EA  0D0A               	mullw	10
  3060  0010EC  50F3               	movf	prodl,w,c
  3061  0010EE  0800               	sublw	0
  3062  0010F0  2441               	addwf	_second,w,c
  3063  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3064                           
  3065                           ;Main.c: 86: lcd_write_cmd(0x80);
  3066  0010F4  0E80               	movlw	128
  3067  0010F6  ECA1  F00C         	call	i2_lcd_write_cmd
  3068                           
  3069                           ;Main.c: 87: lcd_write_data('t');
  3070  0010FA  0E74               	movlw	116
  3071  0010FC  EC30  F00B         	call	i2_lcd_write_data
  3072                           
  3073                           ;Main.c: 88: lcd_write_data('i');
  3074  001100  0E69               	movlw	105
  3075  001102  EC30  F00B         	call	i2_lcd_write_data
  3076                           
  3077                           ;Main.c: 89: lcd_write_data('m');
  3078  001106  0E6D               	movlw	109
  3079  001108  EC30  F00B         	call	i2_lcd_write_data
  3080                           
  3081                           ;Main.c: 90: lcd_write_data('e');
  3082  00110C  0E65               	movlw	101
  3083  00110E  EC30  F00B         	call	i2_lcd_write_data
  3084                           
  3085                           ;Main.c: 91: lcd_write_data(' ');
  3086  001112  0E20               	movlw	32
  3087  001114  EC30  F00B         	call	i2_lcd_write_data
  3088                           
  3089                           ;Main.c: 92: lcd_write_data('=');
  3090  001118  0E3D               	movlw	61
  3091  00111A  EC30  F00B         	call	i2_lcd_write_data
  3092                           
  3093                           ;Main.c: 93: lcd_write_data(' ');
  3094  00111E  0E20               	movlw	32
  3095  001120  EC30  F00B         	call	i2_lcd_write_data
  3096                           
  3097                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3098  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3099  001126  ECBC  F00B         	call	_int_2_char
  3100  00112A  EC30  F00B         	call	i2_lcd_write_data
  3101                           
  3102                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3103  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3104  001130  ECBC  F00B         	call	_int_2_char
  3105  001134  EC30  F00B         	call	i2_lcd_write_data
  3106                           
  3107                           ;Main.c: 96: lcd_write_data(':');
  3108  001138  0E3A               	movlw	58
  3109  00113A  EC30  F00B         	call	i2_lcd_write_data
  3110                           
  3111                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3112  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3113  001140  ECBC  F00B         	call	_int_2_char
  3114  001144  EC30  F00B         	call	i2_lcd_write_data
  3115                           
  3116                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3117  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3118  00114A  ECBC  F00B         	call	_int_2_char
  3119  00114E  EC30  F00B         	call	i2_lcd_write_data
  3120                           
  3121                           ;Main.c: 99: lcd_write_data(':');
  3122  001152  0E3A               	movlw	58
  3123  001154  EC30  F00B         	call	i2_lcd_write_data
  3124                           
  3125                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3126  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3127  00115A  ECBC  F00B         	call	_int_2_char
  3128  00115E  EC30  F00B         	call	i2_lcd_write_data
  3129                           
  3130                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3131  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3132  001164  ECBC  F00B         	call	_int_2_char
  3133  001168  EC30  F00B         	call	i2_lcd_write_data
  3134                           
  3135                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3136  00116C  94F2               	bcf	intcon,2,c	;volatile
  3137  00116E                     i2l128:
  3138  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3139  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3140  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3141  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3142  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3143  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3144  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3145  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3146  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3147  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3148  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3149  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3150  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3151  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3152  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3153  0011A8  0011               	retfie		f
  3154  0011AA                     __end_of_ISR_Timer0_Int:
  3155                           	opt stack 0
  3156                           pclatu	equ	0xFFB
  3157                           pclath	equ	0xFFA
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           prodh	equ	0xFF4
  3163                           prodl	equ	0xFF3
  3164                           intcon	equ	0xFF2
  3165                           intcon2	equ	0xFF1
  3166                           postinc0	equ	0xFEE
  3167                           fsr0h	equ	0xFEA
  3168                           fsr0l	equ	0xFE9
  3169                           wreg	equ	0xFE8
  3170                           postdec1	equ	0xFE5
  3171                           plusw1	equ	0xFE3
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           plusw2	equ	0xFDB
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function i2_lcd_write_data *****************
  3182 ;; Defined at:
  3183 ;;		line 43 in file "lcd_utilities.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  data            1    wreg     unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  data            1    2[COMRAM] unsigned char 
  3188 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        3 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		i2_lcd_strobe
  3207 ;; This function is called by:
  3208 ;;		_ISR_Timer0_Int
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text15
  3213  001660                     __ptext15:
  3214                           	opt stack 0
  3215  001660                     i2_lcd_write_data:
  3216                           	opt stack 25
  3217                           
  3218                           ;incstack = 0
  3219                           ;i2lcd_write_data@data stored from wreg
  3220  001660  6E03               	movwf	i2lcd_write_data@data,c
  3221                           
  3222                           ;lcd_utilities.c: 45: char temp1;
  3223                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3224  001662  8C83               	bsf	3971,6,c	;volatile
  3225                           
  3226                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3227  001664  0E3F               	movlw	63
  3228  001666  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3229  001668  0E55               	movlw	85
  3230  00166A                     i2u124_47:
  3231  00166A  2EE8               	decfsz	wreg,f,c
  3232  00166C  D7FE               	goto	i2u124_47
  3233  00166E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3234  001670  D7FC               	goto	i2u124_47
  3235  001672  F000               	nop	
  3236                           
  3237                           ;lcd_utilities.c: 50: temp1 = data;
  3238  001674  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3239                           
  3240                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3241  001678  3804               	swapf	i2lcd_write_data@temp1,w,c
  3242  00167A  0B0F               	andlw	15
  3243  00167C  6E04               	movwf	i2lcd_write_data@temp1,c
  3244                           
  3245                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3246  00167E  5004               	movf	i2lcd_write_data@temp1,w,c
  3247  001680  0B0F               	andlw	15
  3248  001682  6E83               	movwf	3971,c	;volatile
  3249                           
  3250                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3251  001684  0E7D               	movlw	125
  3252  001686  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3253  001688  0EAC               	movlw	172
  3254  00168A                     i2u125_47:
  3255  00168A  2EE8               	decfsz	wreg,f,c
  3256  00168C  D7FE               	goto	i2u125_47
  3257  00168E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3258  001690  D7FC               	goto	i2u125_47
  3259                           
  3260                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3261  001692  8C83               	bsf	3971,6,c	;volatile
  3262                           
  3263                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3264  001694  0E7D               	movlw	125
  3265  001696  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3266  001698  0EAC               	movlw	172
  3267  00169A                     i2u126_47:
  3268  00169A  2EE8               	decfsz	wreg,f,c
  3269  00169C  D7FE               	goto	i2u126_47
  3270  00169E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3271  0016A0  D7FC               	goto	i2u126_47
  3272                           
  3273                           ;lcd_utilities.c: 57: lcd_strobe();
  3274  0016A2  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3275                           
  3276                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3277  0016A6  0E7D               	movlw	125
  3278  0016A8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3279  0016AA  0EAC               	movlw	172
  3280  0016AC                     i2u127_47:
  3281  0016AC  2EE8               	decfsz	wreg,f,c
  3282  0016AE  D7FE               	goto	i2u127_47
  3283  0016B0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3284  0016B2  D7FC               	goto	i2u127_47
  3285                           
  3286                           ;lcd_utilities.c: 60: temp1 = data;
  3287  0016B4  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3288                           
  3289                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3290  0016B8  5004               	movf	i2lcd_write_data@temp1,w,c
  3291  0016BA  0B0F               	andlw	15
  3292  0016BC  6E83               	movwf	3971,c	;volatile
  3293                           
  3294                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3295  0016BE  0E7D               	movlw	125
  3296  0016C0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3297  0016C2  0EAC               	movlw	172
  3298  0016C4                     i2u128_47:
  3299  0016C4  2EE8               	decfsz	wreg,f,c
  3300  0016C6  D7FE               	goto	i2u128_47
  3301  0016C8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3302  0016CA  D7FC               	goto	i2u128_47
  3303                           
  3304                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3305  0016CC  8C83               	bsf	3971,6,c	;volatile
  3306                           
  3307                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3308  0016CE  0E9C               	movlw	156
  3309  0016D0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3310  0016D2  0ED7               	movlw	215
  3311  0016D4                     i2u129_47:
  3312  0016D4  2EE8               	decfsz	wreg,f,c
  3313  0016D6  D7FE               	goto	i2u129_47
  3314  0016D8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3315  0016DA  D7FC               	goto	i2u129_47
  3316  0016DC  F000               	nop	
  3317                           
  3318                           ;lcd_utilities.c: 66: lcd_strobe();
  3319  0016DE  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3320                           
  3321                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3322  0016E2  0E9C               	movlw	156
  3323  0016E4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3324  0016E6  0ED7               	movlw	215
  3325  0016E8                     i2u130_47:
  3326  0016E8  2EE8               	decfsz	wreg,f,c
  3327  0016EA  D7FE               	goto	i2u130_47
  3328  0016EC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3329  0016EE  D7FC               	goto	i2u130_47
  3330  0016F0  F000               	nop	
  3331  0016F2  0012               	return		;funcret
  3332  0016F4                     __end_ofi2_lcd_write_data:
  3333                           	opt stack 0
  3334                           pclatu	equ	0xFFB
  3335                           pclath	equ	0xFFA
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           prodh	equ	0xFF4
  3341                           prodl	equ	0xFF3
  3342                           intcon	equ	0xFF2
  3343                           intcon2	equ	0xFF1
  3344                           postinc0	equ	0xFEE
  3345                           fsr0h	equ	0xFEA
  3346                           fsr0l	equ	0xFE9
  3347                           wreg	equ	0xFE8
  3348                           postdec1	equ	0xFE5
  3349                           plusw1	equ	0xFE3
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           plusw2	equ	0xFDB
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function i2_lcd_write_cmd *****************
  3360 ;; Defined at:
  3361 ;;		line 18 in file "lcd_utilities.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  cmd             1    wreg     unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  cmd             1    2[COMRAM] unsigned char 
  3366 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0
  3377 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3378 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3379 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3380 ;;Total ram usage:        3 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    1
  3383 ;; This function calls:
  3384 ;;		i2_lcd_strobe
  3385 ;; This function is called by:
  3386 ;;		_ISR_Timer0_Int
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text16
  3391  001942                     __ptext16:
  3392                           	opt stack 0
  3393  001942                     i2_lcd_write_cmd:
  3394                           	opt stack 25
  3395                           
  3396                           ;incstack = 0
  3397                           ;i2lcd_write_cmd@cmd stored from wreg
  3398  001942  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3399                           
  3400                           ;lcd_utilities.c: 20: unsigned char temp2;
  3401                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3402  001944  9C83               	bcf	3971,6,c	;volatile
  3403                           
  3404                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3405  001946  0E3F               	movlw	63
  3406  001948  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3407  00194A  0E55               	movlw	85
  3408  00194C                     i2u131_47:
  3409  00194C  2EE8               	decfsz	wreg,f,c
  3410  00194E  D7FE               	goto	i2u131_47
  3411  001950  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3412  001952  D7FC               	goto	i2u131_47
  3413  001954  F000               	nop	
  3414                           
  3415                           ;lcd_utilities.c: 23: temp2 = cmd;
  3416  001956  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3417                           
  3418                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3419  00195A  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3420  00195C  0B0F               	andlw	15
  3421  00195E  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3422                           
  3423                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3424  001960  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3425  001962  0B0F               	andlw	15
  3426  001964  6E83               	movwf	3971,c	;volatile
  3427                           
  3428                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3429  001966  0E7D               	movlw	125
  3430  001968  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3431  00196A  0EAC               	movlw	172
  3432  00196C                     i2u132_47:
  3433  00196C  2EE8               	decfsz	wreg,f,c
  3434  00196E  D7FE               	goto	i2u132_47
  3435  001970  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3436  001972  D7FC               	goto	i2u132_47
  3437                           
  3438                           ;lcd_utilities.c: 28: lcd_strobe();
  3439  001974  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3440                           
  3441                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3442  001978  0E7D               	movlw	125
  3443  00197A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3444  00197C  0EAC               	movlw	172
  3445  00197E                     i2u133_47:
  3446  00197E  2EE8               	decfsz	wreg,f,c
  3447  001980  D7FE               	goto	i2u133_47
  3448  001982  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3449  001984  D7FC               	goto	i2u133_47
  3450                           
  3451                           ;lcd_utilities.c: 32: temp2 = cmd;
  3452  001986  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3453                           
  3454                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3455  00198A  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3456  00198C  0B0F               	andlw	15
  3457  00198E  6E83               	movwf	3971,c	;volatile
  3458                           
  3459                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3460  001990  0E7D               	movlw	125
  3461  001992  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3462  001994  0EAC               	movlw	172
  3463  001996                     i2u134_47:
  3464  001996  2EE8               	decfsz	wreg,f,c
  3465  001998  D7FE               	goto	i2u134_47
  3466  00199A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3467  00199C  D7FC               	goto	i2u134_47
  3468                           
  3469                           ;lcd_utilities.c: 36: lcd_strobe();
  3470  00199E  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3471                           
  3472                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3473  0019A2  0E7D               	movlw	125
  3474  0019A4  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3475  0019A6  0EAC               	movlw	172
  3476  0019A8                     i2u135_47:
  3477  0019A8  2EE8               	decfsz	wreg,f,c
  3478  0019AA  D7FE               	goto	i2u135_47
  3479  0019AC  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3480  0019AE  D7FC               	goto	i2u135_47
  3481  0019B0  0012               	return		;funcret
  3482  0019B2                     __end_ofi2_lcd_write_cmd:
  3483                           	opt stack 0
  3484                           pclatu	equ	0xFFB
  3485                           pclath	equ	0xFFA
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           intcon	equ	0xFF2
  3493                           intcon2	equ	0xFF1
  3494                           postinc0	equ	0xFEE
  3495                           fsr0h	equ	0xFEA
  3496                           fsr0l	equ	0xFE9
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           plusw1	equ	0xFE3
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           plusw2	equ	0xFDB
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function i2_lcd_strobe *****************
  3510 ;; Defined at:
  3511 ;;		line 73 in file "lcd_utilities.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		i2_lcd_write_cmd
  3535 ;;		i2_lcd_write_data
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text17
  3540  001BAC                     __ptext17:
  3541                           	opt stack 0
  3542  001BAC                     i2_lcd_strobe:
  3543                           	opt stack 25
  3544                           
  3545                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3546                           
  3547                           ;incstack = 0
  3548  001BAC  8883               	bsf	3971,4,c	;volatile
  3549                           
  3550                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3551  001BAE  0E7D               	movlw	125
  3552  001BB0  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3553  001BB2  0EAC               	movlw	172
  3554  001BB4                     i2u136_47:
  3555  001BB4  2EE8               	decfsz	wreg,f,c
  3556  001BB6  D7FE               	goto	i2u136_47
  3557  001BB8  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3558  001BBA  D7FC               	goto	i2u136_47
  3559                           
  3560                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3561  001BBC  9883               	bcf	3971,4,c	;volatile
  3562                           
  3563                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3564  001BBE  0E7D               	movlw	125
  3565  001BC0  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3566  001BC2  0EAC               	movlw	172
  3567  001BC4                     i2u137_47:
  3568  001BC4  2EE8               	decfsz	wreg,f,c
  3569  001BC6  D7FE               	goto	i2u137_47
  3570  001BC8  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3571  001BCA  D7FC               	goto	i2u137_47
  3572  001BCC  0012               	return		;funcret
  3573  001BCE                     __end_ofi2_lcd_strobe:
  3574                           	opt stack 0
  3575                           pclatu	equ	0xFFB
  3576                           pclath	equ	0xFFA
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           intcon2	equ	0xFF1
  3585                           postinc0	equ	0xFEE
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           postdec1	equ	0xFE5
  3590                           plusw1	equ	0xFE3
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           plusw2	equ	0xFDB
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _int_2_char *****************
  3601 ;; Defined at:
  3602 ;;		line 15 in file "Main.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  int1            1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  int1            1    0[COMRAM] unsigned char 
  3607 ;;  char1           1    1[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      unsigned char 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0
  3618 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3620 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3621 ;;Total ram usage:        2 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_ISR_Timer0_Int
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text18
  3631  001778                     __ptext18:
  3632                           	opt stack 0
  3633  001778                     _int_2_char:
  3634                           	opt stack 26
  3635                           
  3636                           ;incstack = 0
  3637                           ;int_2_char@int1 stored from wreg
  3638  001778  6E01               	movwf	int_2_char@int1,c
  3639                           
  3640                           ;Main.c: 17: char char1;
  3641                           ;Main.c: 18: switch (int1)
  3642  00177A  D017               	goto	i2l955
  3643  00177C                     i2l933:
  3644  00177C  0E30               	movlw	48
  3645  00177E  D013               	goto	L23
  3646  001780                     i2l935:
  3647  001780  0E31               	movlw	49
  3648  001782  D011               	goto	L23
  3649  001784                     i2l937:
  3650  001784  0E32               	movlw	50
  3651  001786  D00F               	goto	L23
  3652  001788                     i2l939:
  3653  001788  0E33               	movlw	51
  3654  00178A  D00D               	goto	L23
  3655  00178C                     i2l941:
  3656  00178C  0E34               	movlw	52
  3657  00178E  D00B               	goto	L23
  3658  001790                     i2l943:
  3659  001790  0E35               	movlw	53
  3660  001792  D009               	goto	L23
  3661  001794                     i2l945:
  3662  001794  0E36               	movlw	54
  3663  001796  D007               	goto	L23
  3664  001798                     i2l947:
  3665  001798  0E37               	movlw	55
  3666  00179A  D005               	goto	L23
  3667  00179C                     i2l949:
  3668  00179C  0E38               	movlw	56
  3669  00179E  D003               	goto	L23
  3670  0017A0                     i2l951:
  3671  0017A0  0E39               	movlw	57
  3672  0017A2  D001               	goto	L23
  3673  0017A4                     i2l953:
  3674  0017A4  0E3F               	movlw	63
  3675  0017A6                     L23:
  3676  0017A6  6E02               	movwf	int_2_char@char1,c
  3677                           
  3678                           ;Main.c: 31: }
  3679  0017A8  D020               	goto	i2l94
  3680  0017AA                     i2l955:
  3681  0017AA  5001               	movf	int_2_char@int1,w,c
  3682                           
  3683                           ; Switch size 1, requested type "space"
  3684                           ; Number of cases is 10, Range of values is 0 to 9
  3685                           ; switch strategies available:
  3686                           ; Name         Instructions Cycles
  3687                           ; simple_byte           31    16 (average)
  3688                           ;	Chosen strategy is simple_byte
  3689  0017AC  0A00               	xorlw	0	; case 0
  3690  0017AE  B4D8               	btfsc	status,2,c
  3691  0017B0  D7E5               	goto	i2l933
  3692  0017B2  0A01               	xorlw	1	; case 1
  3693  0017B4  B4D8               	btfsc	status,2,c
  3694  0017B6  D7E4               	goto	i2l935
  3695  0017B8  0A03               	xorlw	3	; case 2
  3696  0017BA  B4D8               	btfsc	status,2,c
  3697  0017BC  D7E3               	goto	i2l937
  3698  0017BE  0A01               	xorlw	1	; case 3
  3699  0017C0  B4D8               	btfsc	status,2,c
  3700  0017C2  D7E2               	goto	i2l939
  3701  0017C4  0A07               	xorlw	7	; case 4
  3702  0017C6  B4D8               	btfsc	status,2,c
  3703  0017C8  D7E1               	goto	i2l941
  3704  0017CA  0A01               	xorlw	1	; case 5
  3705  0017CC  B4D8               	btfsc	status,2,c
  3706  0017CE  D7E0               	goto	i2l943
  3707  0017D0  0A03               	xorlw	3	; case 6
  3708  0017D2  B4D8               	btfsc	status,2,c
  3709  0017D4  D7DF               	goto	i2l945
  3710  0017D6  0A01               	xorlw	1	; case 7
  3711  0017D8  B4D8               	btfsc	status,2,c
  3712  0017DA  D7DE               	goto	i2l947
  3713  0017DC  0A0F               	xorlw	15	; case 8
  3714  0017DE  B4D8               	btfsc	status,2,c
  3715  0017E0  D7DD               	goto	i2l949
  3716  0017E2  0A01               	xorlw	1	; case 9
  3717  0017E4  B4D8               	btfsc	status,2,c
  3718  0017E6  D7DC               	goto	i2l951
  3719  0017E8  D7DD               	goto	i2l953
  3720  0017EA                     i2l94:
  3721                           
  3722                           ;Main.c: 32: return(char1);
  3723  0017EA  5002               	movf	int_2_char@char1,w,c
  3724  0017EC  0012               	return		;funcret
  3725  0017EE                     __end_of_int_2_char:
  3726                           	opt stack 0
  3727                           pclatu	equ	0xFFB
  3728                           pclath	equ	0xFFA
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           intcon	equ	0xFF2
  3736                           intcon2	equ	0xFF1
  3737                           postinc0	equ	0xFEE
  3738                           fsr0h	equ	0xFEA
  3739                           fsr0l	equ	0xFE9
  3740                           wreg	equ	0xFE8
  3741                           postdec1	equ	0xFE5
  3742                           plusw1	equ	0xFE3
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           plusw2	equ	0xFDB
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function ___awdiv *****************
  3753 ;; Defined at:
  3754 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  dividend        2    0[COMRAM] int 
  3757 ;;  divisor         2    2[COMRAM] int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  quotient        2    6[COMRAM] int 
  3760 ;;  sign            1    5[COMRAM] unsigned char 
  3761 ;;  counter         1    4[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2    0[COMRAM] int 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3771 ;;      Params:         4       0       0       0       0       0       0       0       0
  3772 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3774 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3775 ;;Total ram usage:        8 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_ISR_Timer0_Int
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text19
  3785  0016F4                     __ptext19:
  3786                           	opt stack 0
  3787  0016F4                     ___awdiv:
  3788                           	opt stack 26
  3789                           
  3790                           ;incstack = 0
  3791  0016F4  0E00               	movlw	0
  3792  0016F6  6E06               	movwf	___awdiv@sign,c
  3793  0016F8  AE04               	btfss	___awdiv@divisor+1,7,c
  3794  0016FA  D006               	goto	i2l1735
  3795  0016FC  6C03               	negf	___awdiv@divisor,c
  3796  0016FE  1E04               	comf	___awdiv@divisor+1,f,c
  3797  001700  B0D8               	btfsc	status,0,c
  3798  001702  2A04               	incf	___awdiv@divisor+1,f,c
  3799  001704  0E01               	movlw	1
  3800  001706  6E06               	movwf	___awdiv@sign,c
  3801  001708                     i2l1735:
  3802  001708  AE02               	btfss	___awdiv@dividend+1,7,c
  3803  00170A  D006               	goto	i2l1741
  3804  00170C  6C01               	negf	___awdiv@dividend,c
  3805  00170E  1E02               	comf	___awdiv@dividend+1,f,c
  3806  001710  B0D8               	btfsc	status,0,c
  3807  001712  2A02               	incf	___awdiv@dividend+1,f,c
  3808  001714  0E01               	movlw	1
  3809  001716  1A06               	xorwf	___awdiv@sign,f,c
  3810  001718                     i2l1741:
  3811  001718  0E00               	movlw	0
  3812  00171A  6E08               	movwf	___awdiv@quotient+1,c
  3813  00171C  0E00               	movlw	0
  3814  00171E  6E07               	movwf	___awdiv@quotient,c
  3815  001720  5003               	movf	___awdiv@divisor,w,c
  3816  001722  1004               	iorwf	___awdiv@divisor+1,w,c
  3817  001724  B4D8               	btfsc	status,2,c
  3818  001726  D01C               	goto	i2l1763
  3819  001728  0E01               	movlw	1
  3820  00172A  6E05               	movwf	___awdiv@counter,c
  3821  00172C  D004               	goto	i2l1749
  3822  00172E                     i2l1747:
  3823  00172E  90D8               	bcf	status,0,c
  3824  001730  3603               	rlcf	___awdiv@divisor,f,c
  3825  001732  3604               	rlcf	___awdiv@divisor+1,f,c
  3826  001734  2A05               	incf	___awdiv@counter,f,c
  3827  001736                     i2l1749:
  3828  001736  AE04               	btfss	___awdiv@divisor+1,7,c
  3829  001738  D7FA               	goto	i2l1747
  3830  00173A                     i2l1751:
  3831  00173A  90D8               	bcf	status,0,c
  3832  00173C  3607               	rlcf	___awdiv@quotient,f,c
  3833  00173E  3608               	rlcf	___awdiv@quotient+1,f,c
  3834  001740  5003               	movf	___awdiv@divisor,w,c
  3835  001742  5C01               	subwf	___awdiv@dividend,w,c
  3836  001744  5004               	movf	___awdiv@divisor+1,w,c
  3837  001746  5802               	subwfb	___awdiv@dividend+1,w,c
  3838  001748  A0D8               	btfss	status,0,c
  3839  00174A  D005               	goto	i2l1759
  3840  00174C  5003               	movf	___awdiv@divisor,w,c
  3841  00174E  5E01               	subwf	___awdiv@dividend,f,c
  3842  001750  5004               	movf	___awdiv@divisor+1,w,c
  3843  001752  5A02               	subwfb	___awdiv@dividend+1,f,c
  3844  001754  8007               	bsf	___awdiv@quotient,0,c
  3845  001756                     i2l1759:
  3846  001756  90D8               	bcf	status,0,c
  3847  001758  3204               	rrcf	___awdiv@divisor+1,f,c
  3848  00175A  3203               	rrcf	___awdiv@divisor,f,c
  3849  00175C  2E05               	decfsz	___awdiv@counter,f,c
  3850  00175E  D7ED               	goto	i2l1751
  3851  001760                     i2l1763:
  3852  001760  5006               	movf	___awdiv@sign,w,c
  3853  001762  B4D8               	btfsc	status,2,c
  3854  001764  D004               	goto	i2l1767
  3855  001766  6C07               	negf	___awdiv@quotient,c
  3856  001768  1E08               	comf	___awdiv@quotient+1,f,c
  3857  00176A  B0D8               	btfsc	status,0,c
  3858  00176C  2A08               	incf	___awdiv@quotient+1,f,c
  3859  00176E                     i2l1767:
  3860  00176E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3861  001772  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3862  001776  0012               	return	
  3863  001778                     __end_of___awdiv:
  3864                           	opt stack 0
  3865                           pclatu	equ	0xFFB
  3866                           pclath	equ	0xFFA
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           intcon	equ	0xFF2
  3874                           intcon2	equ	0xFF1
  3875                           postinc0	equ	0xFEE
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           postdec1	equ	0xFE5
  3880                           plusw1	equ	0xFE3
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           plusw2	equ	0xFDB
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           pclatu	equ	0xFFB
  3890                           pclath	equ	0xFFA
  3891                           tblptru	equ	0xFF8
  3892                           tblptrh	equ	0xFF7
  3893                           tblptrl	equ	0xFF6
  3894                           tablat	equ	0xFF5
  3895                           prodh	equ	0xFF4
  3896                           prodl	equ	0xFF3
  3897                           intcon	equ	0xFF2
  3898                           intcon2	equ	0xFF1
  3899                           postinc0	equ	0xFEE
  3900                           fsr0h	equ	0xFEA
  3901                           fsr0l	equ	0xFE9
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           plusw1	equ	0xFE3
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           plusw2	equ	0xFDB
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914                           	psect	rparam
  3915  0000                     pclatu	equ	0xFFB
  3916                           pclath	equ	0xFFA
  3917                           tblptru	equ	0xFF8
  3918                           tblptrh	equ	0xFF7
  3919                           tblptrl	equ	0xFF6
  3920                           tablat	equ	0xFF5
  3921                           prodh	equ	0xFF4
  3922                           prodl	equ	0xFF3
  3923                           intcon	equ	0xFF2
  3924                           intcon2	equ	0xFF1
  3925                           postinc0	equ	0xFEE
  3926                           fsr0h	equ	0xFEA
  3927                           fsr0l	equ	0xFE9
  3928                           wreg	equ	0xFE8
  3929                           postdec1	equ	0xFE5
  3930                           plusw1	equ	0xFE3
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           plusw2	equ	0xFDB
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940                           	psect	temp
  3941  000042                     btemp:
  3942                           	opt stack 0
  3943  000042                     	ds	1
  3944  0000                     int$flags	set	btemp
  3945                           pclatu	equ	0xFFB
  3946                           pclath	equ	0xFFA
  3947                           tblptru	equ	0xFF8
  3948                           tblptrh	equ	0xFF7
  3949                           tblptrl	equ	0xFF6
  3950                           tablat	equ	0xFF5
  3951                           prodh	equ	0xFF4
  3952                           prodl	equ	0xFF3
  3953                           intcon	equ	0xFF2
  3954                           intcon2	equ	0xFF1
  3955                           postinc0	equ	0xFEE
  3956                           fsr0h	equ	0xFEA
  3957                           fsr0l	equ	0xFE9
  3958                           wreg	equ	0xFE8
  3959                           postdec1	equ	0xFE5
  3960                           plusw1	equ	0xFE3
  3961                           fsr1h	equ	0xFE2
  3962                           fsr1l	equ	0xFE1
  3963                           indf2	equ	0xFDF
  3964                           postinc2	equ	0xFDE
  3965                           plusw2	equ	0xFDB
  3966                           fsr2h	equ	0xFDA
  3967                           fsr2l	equ	0xFD9
  3968                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     49     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_lcd_write_cmd
    _Version->_lcd_write_cmd
    _Version->_lcd_write_data
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5980
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                            _Version
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _Version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1461
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     240
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _Version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      20        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug 10 02:20:31 2016

       ??_SetupTimerInterruptRegisters 001D                           Version@F4348 0024  
                                   l33 1B30                                     l36 1B3C  
                         ___awdiv@sign 0006                __size_of_ISR_Timer0_Int 01A2  
             __size_ofi2_lcd_write_cmd 0070                       ?_SetupAlarmTimeA 0001  
                     ?_SetupAlarmTimeB 0001                       ?_SetupAlarmTimeC 0001  
                                  l110 18CE                                    l184 1B7C  
                                  u810 1B26                                    u921 13E6  
                                  u861 11B4                                    u951 12EE  
                                  u891 14DE                                    u981 1AD4  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4270 101B                                   l2101 1526  
                                 l2023 182A                                   l2015 1804  
                                 l2033 11C8                                   l2131 13FE  
                                 l2019 1814                                   l2045 11F8  
                                 l2037 11D2                                   l2213 1AE8  
                                 l2143 142E                                   l2135 1408  
                                 l2217 1AF2                                   l2243 19DA  
                                 l2093 1500                                   l2173 1306  
                                 l2261 1A16                                   l2255 1A02  
                                 l1481 1874                                   l1473 1864  
                                 l2089 14F6                                   l2185 1336  
                                 l2177 1310                                   l2249 19EE  
                                 l1491 1888                                   l1483 1878  
                                 l1475 1868                                   l1485 187C  
                                 l1477 186C                                   l1493 188E  
                                 l1487 1880                                   l1479 1870  
                                 l1489 1884                                   l1499 1B68  
                                 u1107 15F6                                   u1117 1606  
                                 u1207 1938                                   u1127 1618  
                                 u1217 1B92                                   u1137 1630  
                                 u1227 1BA2                                   u1147 1640  
                                 u1237 1B6E                                   u1157 1654  
                                 u1077 181A                                   u1167 18DC  
                                 u1087 1854                                   u1177 18FC  
                                 u1097 15D6                                   u1187 190E  
                                 u1197 1926                                   i2l94 17EA  
               __end_of_lcd_write_data 1660                                   _main 19B2  
                                 _hour 0039                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0042                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 16F4                           ___param_bank 000010  
                      __end_of_Version 1B18                                  ?_main 0001  
                      __end_of___awdiv 1778                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l128 116E                                  i2l941 178C  
                                i2l933 177C                                  i2l951 17A0  
                                i2l943 1790                                  i2l935 1780  
                                i2l953 17A4                                  i2l945 1794  
                                i2l937 1784                                  i2l947 1798  
                                i2l939 1788                                  i2l955 17AA  
                      ___awdiv@counter 0005                                  i2l949 179C  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                       Version@Version 00B4                                  _hourA 003A  
                                _hourB 003B                                  _hourC 003C  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00B4                        __initialization 1A1C  
                       Version@outchar 00C9                           __end_of_main 1A1C  
                               ??_main 0024                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1BAC  
                               i2l1741 1718                                 i2l1751 173A  
                               i2l1735 1708                                 i2l1747 172E  
                               i2l1763 1760                                 i2l1749 1736  
                               i2l1767 176E                                 i2l1759 1756  
                               i2l1849 108E                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1B8A                       __end_of_lcd_init 1860  
                       char_2_int@int1 001E                              ??_Version 0021  
                            ??___awdiv 0005                         _ISR_Timer0_Int 1008  
                               _getkey 1B18                                 clear_0 1A62  
                     ___awdiv@quotient 0007                                 _minute 003D  
                               _second 0041                           __pdataCOMRAM 0024  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                             __accesstop 0060  
              __end_of__initialization 1A68                          getkey@keycode 00C6  
                        ___rparam_used 000001                        Version@msgindex 00CA  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1A76                             _char_2_int 1860  
                    __end_of_SetupTime 12E4                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 1B8A               __size_of_SetupAlarmTimeA 00F8  
             __size_of_SetupAlarmTimeB 00F8               __size_of_SetupAlarmTimeC 00F8  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                             _int_2_char 1778  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                _Version 1ACA  
                              ___awdiv 16F4                           __psmallconst 101A  
                      __size_of_getkey 003E                        i2_lcd_write_cmd 1942  
                              __pcinit 1A1C                                __ramtop 0800  
                              __ptext0 19B2                                __ptext1 17EE  
                              __ptext2 1ACA                                __ptext3 1BCE  
                              __ptext4 11AA                                __ptext5 12E4  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 15CC                                __ptext9 18D2  
                            _T0CONbits 000FD5                         SetupTime@F4312 009F  
                              _minuteA 003E                                _minuteB 003F  
                              _minuteC 0040                             ??_delay_ms 001F  
                          ?_char_2_int 0001                             ??_lcd_init 0021  
                       __pintcode_body 102E                   end_of_initialization 1A68  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00E4                         SetupTime@hour1 00DE  
                        __Lmediumconst 0000                                int_func 102E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                  SetupAlarmTimeA@hour10 00DD  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00DD                  SetupAlarmTimeC@hour10 00DD  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                    ??_SetupAlarmTimeA 0022                      ??_SetupAlarmTimeB 0022  
                    ??_SetupAlarmTimeC 0022                  __end_of_lcd_write_cmd 1942  
              __end_ofi2_lcd_write_cmd 19B2                    __size_of_char_2_int 0072  
                        __pidataCOMRAM 1BEA                         __end_of_getkey 1B56  
                  start_initialization 1A1C                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0039  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?_Version 0001                               ?___awdiv 0001  
                           ?_SetupTime 0001                            __smallconst 101A  
                         ??_char_2_int 001D                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4322 0060                   SetupAlarmTimeB@F4332 0075  
                            delay_ms@i 001D                              delay_ms@j 0020  
                 SetupAlarmTimeC@F4342 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u130_47 16E8                               i2u131_47 194C  
                             i2u132_47 196C                               i2u124_47 166A  
                             i2u133_47 197E                               i2u125_47 168A  
                             i2u134_47 1996                               i2u126_47 169A  
                             i2u135_47 19A8                               i2u127_47 16AC  
                             i2u136_47 1BB4                               i2u128_47 16C4  
                             i2u137_47 1BC4                               i2u129_47 16D4  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 18D2                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 0022                    lcd_write_data@temp1 0020  
                      _SetupAlarmTimeA 14D4                        _SetupAlarmTimeB 13DC  
                      _SetupAlarmTimeC 12E4                         ??i2_lcd_strobe 0001  
                         ??_lcd_strobe 001D                       SetupTime@Message 00C7  
                            copy_data0 1A30                              copy_data1 1A50  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1BEA  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1BCE  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                          ??_SetupTime 0022                       __size_of_Version 004E  
                     SetupTime@minute1 00E0                       SetupTime@second1 00E2  
                     __size_of___awdiv 0084                     __end_of_lcd_strobe 1BAC  
                     SetupTime@outchar 00DC                     __end_of_int_2_char 17EE  
                     i2_lcd_write_data 1660                               _delay_ms 1B56  
                             __ptext10 1B8A                               __ptext11 1B18  
                             __ptext12 1B56                               __ptext13 1860  
                             __ptext15 1660                               __ptext16 1942  
                             __ptext17 1BAC                               __ptext18 1778  
                             __ptext19 16F4                               _lcd_init 17EE  
                        __size_of_main 006A          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0042                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1BCE                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 15CC  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 18D2  
