

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug 10 04:23:02 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001BEA                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for version@F4277
    44  001BEA  45                 	db	69
    45  001BEB  54                 	db	84
    46  001BEC  54                 	db	84
    47  001BED  20                 	db	32
    48  001BEE  56                 	db	86
    49  001BEF  65                 	db	101
    50  001BF0  72                 	db	114
    51  001BF1  73                 	db	115
    52  001BF2  69                 	db	105
    53  001BF3  6F                 	db	111
    54  001BF4  6E                 	db	110
    55  001BF5  20                 	db	32
    56  001BF6  31                 	db	49
    57  001BF7  2E                 	db	46
    58  001BF8  32                 	db	50
    59  001BF9  20                 	db	32
    60  001BFA  20                 	db	32
    61  001BFB  20                 	db	32
    62  001BFC  20                 	db	32
    63  001BFD  20                 	db	32
    64  001BFE  00                 	db	0
    65                           
    66                           	psect	idataBANK0
    67  001A76                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for SetupAlarmTimeA@F4322
    71  001A76  53                 	db	83
    72  001A77  75                 	db	117
    73  001A78  62                 	db	98
    74  001A79  6A                 	db	106
    75  001A7A  65                 	db	101
    76  001A7B  63                 	db	99
    77  001A7C  74                 	db	116
    78  001A7D  20                 	db	32
    79  001A7E  41                 	db	65
    80  001A7F  20                 	db	32
    81  001A80  54                 	db	84
    82  001A81  69                 	db	105
    83  001A82  6D                 	db	109
    84  001A83  65                 	db	101
    85  001A84  20                 	db	32
    86  001A85  68                 	db	104
    87  001A86  68                 	db	104
    88  001A87  6D                 	db	109
    89  001A88  6D                 	db	109
    90  001A89  3A                 	db	58
    91  001A8A  00                 	db	0
    92                           
    93                           ;initializer for SetupAlarmTimeB@F4332
    94  001A8B  53                 	db	83
    95  001A8C  75                 	db	117
    96  001A8D  62                 	db	98
    97  001A8E  6A                 	db	106
    98  001A8F  65                 	db	101
    99  001A90  63                 	db	99
   100  001A91  74                 	db	116
   101  001A92  20                 	db	32
   102  001A93  42                 	db	66
   103  001A94  20                 	db	32
   104  001A95  54                 	db	84
   105  001A96  69                 	db	105
   106  001A97  6D                 	db	109
   107  001A98  65                 	db	101
   108  001A99  20                 	db	32
   109  001A9A  68                 	db	104
   110  001A9B  68                 	db	104
   111  001A9C  6D                 	db	109
   112  001A9D  6D                 	db	109
   113  001A9E  3A                 	db	58
   114  001A9F  00                 	db	0
   115                           
   116                           ;initializer for SetupAlarmTimeC@F4342
   117  001AA0  53                 	db	83
   118  001AA1  75                 	db	117
   119  001AA2  62                 	db	98
   120  001AA3  6A                 	db	106
   121  001AA4  65                 	db	101
   122  001AA5  63                 	db	99
   123  001AA6  74                 	db	116
   124  001AA7  20                 	db	32
   125  001AA8  43                 	db	67
   126  001AA9  20                 	db	32
   127  001AAA  54                 	db	84
   128  001AAB  69                 	db	105
   129  001AAC  6D                 	db	109
   130  001AAD  65                 	db	101
   131  001AAE  20                 	db	32
   132  001AAF  68                 	db	104
   133  001AB0  68                 	db	104
   134  001AB1  6D                 	db	109
   135  001AB2  6D                 	db	109
   136  001AB3  3A                 	db	58
   137  001AB4  00                 	db	0
   138                           
   139                           ;initializer for SetupTime@F4312
   140  001AB5  53                 	db	83
   141  001AB6  65                 	db	101
   142  001AB7  74                 	db	116
   143  001AB8  20                 	db	32
   144  001AB9  74                 	db	116
   145  001ABA  69                 	db	105
   146  001ABB  6D                 	db	109
   147  001ABC  65                 	db	101
   148  001ABD  20                 	db	32
   149  001ABE  68                 	db	104
   150  001ABF  68                 	db	104
   151  001AC0  6D                 	db	109
   152  001AC1  6D                 	db	109
   153  001AC2  73                 	db	115
   154  001AC3  73                 	db	115
   155  001AC4  3A                 	db	58
   156  001AC5  20                 	db	32
   157  001AC6  20                 	db	32
   158  001AC7  20                 	db	32
   159  001AC8  20                 	db	32
   160  001AC9  00                 	db	0
   161                           
   162                           	psect	smallconst
   163  00101A                     __psmallconst:
   164                           	opt stack 0
   165  00101A  00                 	db	0
   166  00101B                     getkey@F4270:
   167                           	opt stack 0
   168  00101B  31                 	db	49
   169  00101C  32                 	db	50
   170  00101D  33                 	db	51
   171  00101E  46                 	db	70
   172  00101F  34                 	db	52
   173  001020  35                 	db	53
   174  001021  36                 	db	54
   175  001022  45                 	db	69
   176  001023  37                 	db	55
   177  001024  38                 	db	56
   178  001025  39                 	db	57
   179  001026  44                 	db	68
   180  001027  41                 	db	65
   181  001028  30                 	db	48
   182  001029  42                 	db	66
   183  00102A  43                 	db	67
   184  00102B  20                 	db	32
   185  00102C  00                 	db	0
   186  00102D                     __end_ofgetkey@F4270:
   187                           	opt stack 0
   188  0000                     _ADCON1	set	4033
   189  0000                     _CMCON	set	4020
   190  0000                     _INTCON2	set	4081
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTB	set	3969
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTDbits	set	3971
   197  0000                     _RCONbits	set	4048
   198  0000                     _T0CON	set	4053
   199  0000                     _T0CONbits	set	4053
   200  0000                     _TMR0H	set	4055
   201  0000                     _TMR0L	set	4054
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISD	set	3989
   204  00102D  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  001A1C                     __pcinit:
   210                           	opt stack 0
   211  001A1C                     start_initialization:
   212                           	opt stack 0
   213  001A1C                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (84 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218  001A1C  0E76               	movlw	low __pidataBANK0
   219  001A1E  6EF6               	movwf	tblptrl,c
   220  001A20  0E1A               	movlw	high __pidataBANK0
   221  001A22  6EF7               	movwf	tblptrh,c
   222  001A24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223  001A26  6EF8               	movwf	tblptru,c
   224  001A28  EE00  F060         	lfsr	0,__pdataBANK0
   225  001A2C  EE10 F054          	lfsr	1,84
   226  001A30                     copy_data0:
   227  001A30  0009               	tblrd		*+
   228  001A32  CFF5 FFEE          	movff	tablat,postinc0
   229  001A36  50E5               	movf	postdec1,w,c
   230  001A38  50E1               	movf	fsr1l,w,c
   231  001A3A  E1FA               	bnz	copy_data0
   232                           
   233                           ; Initialize objects allocated to COMRAM (21 bytes)
   234                           ; load TBLPTR registers with __pidataCOMRAM
   235  001A3C  0EEA               	movlw	low __pidataCOMRAM
   236  001A3E  6EF6               	movwf	tblptrl,c
   237  001A40  0E1B               	movlw	high __pidataCOMRAM
   238  001A42  6EF7               	movwf	tblptrh,c
   239  001A44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   240  001A46  6EF8               	movwf	tblptru,c
   241  001A48  EE00  F024         	lfsr	0,__pdataCOMRAM
   242  001A4C  EE10 F015          	lfsr	1,21
   243  001A50                     copy_data1:
   244  001A50  0009               	tblrd		*+
   245  001A52  CFF5 FFEE          	movff	tablat,postinc0
   246  001A56  50E5               	movf	postdec1,w,c
   247  001A58  50E1               	movf	fsr1l,w,c
   248  001A5A  E1FA               	bnz	copy_data1
   249                           
   250                           ; Clear objects allocated to COMRAM (9 bytes)
   251  001A5C  EE00  F039         	lfsr	0,__pbssCOMRAM
   252  001A60  0E09               	movlw	9
   253  001A62                     clear_0:
   254  001A62  6AEE               	clrf	postinc0,c
   255  001A64  06E8               	decf	wreg,f,c
   256  001A66  E1FD               	bnz	clear_0
   257  001A68                     end_of_initialization:
   258                           	opt stack 0
   259  001A68                     __end_of__initialization:
   260                           	opt stack 0
   261  001A68  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262  001A6A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263  001A6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  001A6E  6EF8               	movwf	tblptru,c
   265  001A70  0100               	movlb	0
   266  001A72  EFD9  F00C         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  000039                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000039                     _hour:
   280                           	opt stack 0
   281  000039                     	ds	1
   282  00003A                     _hourA:
   283                           	opt stack 0
   284  00003A                     	ds	1
   285  00003B                     _hourB:
   286                           	opt stack 0
   287  00003B                     	ds	1
   288  00003C                     _hourC:
   289                           	opt stack 0
   290  00003C                     	ds	1
   291  00003D                     _minute:
   292                           	opt stack 0
   293  00003D                     	ds	1
   294  00003E                     _minuteA:
   295                           	opt stack 0
   296  00003E                     	ds	1
   297  00003F                     _minuteB:
   298                           	opt stack 0
   299  00003F                     	ds	1
   300  000040                     _minuteC:
   301                           	opt stack 0
   302  000040                     	ds	1
   303  000041                     _second:
   304                           	opt stack 0
   305  000041                     	ds	1
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	dataCOMRAM
   316  000024                     __pdataCOMRAM:
   317                           	opt stack 0
   318  000024                     version@F4277:
   319                           	opt stack 0
   320  000024                     	ds	21
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	dataBANK0
   331  000060                     __pdataBANK0:
   332                           	opt stack 0
   333  000060                     SetupAlarmTimeA@F4322:
   334                           	opt stack 0
   335  000060                     	ds	21
   336  000075                     SetupAlarmTimeB@F4332:
   337                           	opt stack 0
   338  000075                     	ds	21
   339  00008A                     SetupAlarmTimeC@F4342:
   340                           	opt stack 0
   341  00008A                     	ds	21
   342  00009F                     SetupTime@F4312:
   343                           	opt stack 0
   344  00009F                     	ds	21
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackBANK0
   355  0000B4                     __pcstackBANK0:
   356                           	opt stack 0
   357  0000B4                     getkey@lookup:
   358                           	opt stack 0
   359  0000B4                     version@Version:
   360                           	opt stack 0
   361                           
   362                           ; 21 bytes @ 0x0
   363  0000B4                     	ds	18
   364  0000C6                     getkey@keycode:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x12
   368  0000C6                     	ds	1
   369  0000C7                     SetupTime@Message:
   370                           	opt stack 0
   371  0000C7                     SetupAlarmTimeA@Message:
   372                           	opt stack 0
   373  0000C7                     SetupAlarmTimeB@Message:
   374                           	opt stack 0
   375  0000C7                     SetupAlarmTimeC@Message:
   376                           	opt stack 0
   377                           
   378                           ; 21 bytes @ 0x13
   379  0000C7                     	ds	2
   380  0000C9                     version@outchar:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x15
   384  0000C9                     	ds	1
   385  0000CA                     version@msgindex:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x16
   389  0000CA                     	ds	18
   390  0000DC                     SetupTime@outchar:
   391                           	opt stack 0
   392  0000DC                     SetupAlarmTimeA@outchar:
   393                           	opt stack 0
   394  0000DC                     SetupAlarmTimeB@outchar:
   395                           	opt stack 0
   396  0000DC                     SetupAlarmTimeC@outchar:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x28
   400  0000DC                     	ds	1
   401  0000DD                     SetupTime@hour10:
   402                           	opt stack 0
   403  0000DD                     SetupAlarmTimeA@hour10:
   404                           	opt stack 0
   405  0000DD                     SetupAlarmTimeB@hour10:
   406                           	opt stack 0
   407  0000DD                     SetupAlarmTimeC@hour10:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x29
   411  0000DD                     	ds	1
   412  0000DE                     SetupTime@hour1:
   413                           	opt stack 0
   414  0000DE                     SetupAlarmTimeA@hour1:
   415                           	opt stack 0
   416  0000DE                     SetupAlarmTimeB@hour1:
   417                           	opt stack 0
   418  0000DE                     SetupAlarmTimeC@hour1:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x2A
   422  0000DE                     	ds	1
   423  0000DF                     SetupTime@minute10:
   424                           	opt stack 0
   425  0000DF                     SetupAlarmTimeA@minute10:
   426                           	opt stack 0
   427  0000DF                     SetupAlarmTimeB@minute10:
   428                           	opt stack 0
   429  0000DF                     SetupAlarmTimeC@minute10:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x2B
   433  0000DF                     	ds	1
   434  0000E0                     SetupTime@minute1:
   435                           	opt stack 0
   436  0000E0                     SetupAlarmTimeA@minute1:
   437                           	opt stack 0
   438  0000E0                     SetupAlarmTimeB@minute1:
   439                           	opt stack 0
   440  0000E0                     SetupAlarmTimeC@minute1:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x2C
   444  0000E0                     	ds	1
   445  0000E1                     SetupTime@second10:
   446                           	opt stack 0
   447  0000E1                     SetupAlarmTimeA@msgindex:
   448                           	opt stack 0
   449  0000E1                     SetupAlarmTimeB@msgindex:
   450                           	opt stack 0
   451  0000E1                     SetupAlarmTimeC@msgindex:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x2D
   455  0000E1                     	ds	1
   456  0000E2                     SetupTime@second1:
   457                           	opt stack 0
   458  0000E2                     SetupAlarmTimeA@ctemp:
   459                           	opt stack 0
   460  0000E2                     SetupAlarmTimeB@ctemp:
   461                           	opt stack 0
   462  0000E2                     SetupAlarmTimeC@ctemp:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x2E
   466  0000E2                     	ds	1
   467  0000E3                     SetupTime@msgindex:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x2F
   471  0000E3                     	ds	1
   472  0000E4                     SetupTime@ctemp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x30
   476  0000E4                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	opt stack 0
   489  000001                     ??i2_lcd_strobe:
   490  000001                     ?___awdiv:
   491                           	opt stack 0
   492  000001                     int_2_char@int1:
   493                           	opt stack 0
   494  000001                     ___awdiv@dividend:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x0
   498  000001                     	ds	1
   499  000002                     ??i2_lcd_write_cmd:
   500  000002                     ??i2_lcd_write_data:
   501  000002                     int_2_char@char1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505  000002                     	ds	1
   506  000003                     i2lcd_write_cmd@cmd:
   507                           	opt stack 0
   508  000003                     i2lcd_write_data@data:
   509                           	opt stack 0
   510  000003                     ___awdiv@divisor:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000003                     	ds	1
   515  000004                     i2lcd_write_cmd@temp2:
   516                           	opt stack 0
   517  000004                     i2lcd_write_data@temp1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  000004                     	ds	1
   522  000005                     ___awdiv@counter:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x5
   531  000006                     	ds	1
   532  000007                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000007                     	ds	2
   537  000009                     ??_ISR_Timer0_Int:
   538                           
   539                           ; 1 bytes @ 0x8
   540  000009                     	ds	14
   541  000017                     ISR_Timer0_Int@hour1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x16
   545  000017                     	ds	1
   546  000018                     ISR_Timer0_Int@minute1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x17
   550  000018                     	ds	1
   551  000019                     ISR_Timer0_Int@second1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555  000019                     	ds	1
   556  00001A                     ISR_Timer0_Int@hour10:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     ISR_Timer0_Int@minute10:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x1A
   565  00001B                     	ds	1
   566  00001C                     ISR_Timer0_Int@second10:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1B
   570  00001C                     	ds	1
   571  00001D                     ??_lcd_strobe:
   572  00001D                     char_2_int@char1:
   573                           	opt stack 0
   574  00001D                     delay_ms@i:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x1C
   578  00001D                     	ds	1
   579  00001E                     ??_lcd_write_cmd:
   580  00001E                     ??_lcd_write_data:
   581  00001E                     char_2_int@int1:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1D
   585  00001E                     	ds	1
   586  00001F                     ??_delay_ms:
   587  00001F                     lcd_write_cmd@cmd:
   588                           	opt stack 0
   589  00001F                     lcd_write_data@data:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x1E
   593  00001F                     	ds	1
   594  000020                     lcd_write_cmd@temp2:
   595                           	opt stack 0
   596  000020                     lcd_write_data@temp1:
   597                           	opt stack 0
   598  000020                     delay_ms@j:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x1F
   602  000020                     	ds	1
   603  000021                     ??_lcd_init:
   604                           
   605                           ; 1 bytes @ 0x20
   606  000021                     	ds	1
   607  000022                     lcd_init@i:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x21
   611  000022                     	ds	2
   612  000024                     tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           ; 1 bytes @ 0x23
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 311 in file "Main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels required when called:    6
   647 ;; This function calls:
   648 ;;		_SetupAlarmTimeA
   649 ;;		_SetupAlarmTimeB
   650 ;;		_SetupAlarmTimeC
   651 ;;		_SetupTime
   652 ;;		_SetupTimerInterruptRegisters
   653 ;;		_lcd_init
   654 ;;		_version
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  0019B2                     __ptext0:
   662                           	opt stack 0
   663  0019B2                     _main:
   664                           	opt stack 25
   665                           
   666                           ;Main.c: 313: ADCON1 = 0x0F;
   667                           
   668                           ;incstack = 0
   669  0019B2  0E0F               	movlw	15
   670  0019B4  6EC1               	movwf	4033,c	;volatile
   671                           
   672                           ;Main.c: 314: CMCON = 0x07;
   673  0019B6  0E07               	movlw	7
   674  0019B8  6EB4               	movwf	4020,c	;volatile
   675                           
   676                           ;Main.c: 316: lcd_init();
   677  0019BA  ECF7  F00B         	call	_lcd_init	;wreg free
   678                           
   679                           ;Main.c: 317: TRISA = 0b00000000;
   680  0019BE  0E00               	movlw	0
   681  0019C0  6E92               	movwf	3986,c	;volatile
   682                           
   683                           ;Main.c: 319: version();
   684  0019C2  EC65  F00D         	call	_version	;wreg free
   685                           
   686                           ;Main.c: 320: SetupTime();
   687  0019C6  ECD5  F008         	call	_SetupTime	;wreg free
   688                           
   689                           ;Main.c: 321: SetupAlarmTimeA();
   690  0019CA  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   691                           
   692                           ;Main.c: 322: SetupAlarmTimeB();
   693  0019CE  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   694                           
   695                           ;Main.c: 323: SetupAlarmTimeC();
   696  0019D2  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   697                           
   698                           ;Main.c: 324: SetupTimerInterruptRegisters();
   699  0019D6  ECE7  F00D         	call	_SetupTimerInterruptRegisters	;wreg free
   700  0019DA                     l2249:
   701                           
   702                           ;Main.c: 327: {
   703                           ;Main.c: 328: if(hour==hourA && minute==minuteA)
   704  0019DA  503A               	movf	_hourA,w,c
   705  0019DC  1839               	xorwf	_hour,w,c
   706  0019DE  A4D8               	btfss	status,2,c
   707  0019E0  D006               	goto	l2255
   708  0019E2  503E               	movf	_minuteA,w,c
   709  0019E4  183D               	xorwf	_minute,w,c
   710  0019E6  A4D8               	btfss	status,2,c
   711  0019E8  D002               	goto	l2255
   712                           
   713                           ;Main.c: 329: {
   714                           ;Main.c: 330: PORTA = 0b00000011;
   715  0019EA  0E03               	movlw	3
   716  0019EC  D015               	goto	L3
   717  0019EE                     l2255:
   718                           
   719                           ;Main.c: 332: else if(hour==hourB && minute==minuteB)
   720  0019EE  503B               	movf	_hourB,w,c
   721  0019F0  1839               	xorwf	_hour,w,c
   722  0019F2  A4D8               	btfss	status,2,c
   723  0019F4  D006               	goto	l2261
   724  0019F6  503F               	movf	_minuteB,w,c
   725  0019F8  183D               	xorwf	_minute,w,c
   726  0019FA  A4D8               	btfss	status,2,c
   727  0019FC  D002               	goto	l2261
   728                           
   729                           ;Main.c: 333: {
   730                           ;Main.c: 334: PORTA = 0b00000101;
   731  0019FE  0E05               	movlw	5
   732  001A00  D00B               	goto	L3
   733  001A02                     l2261:
   734                           
   735                           ;Main.c: 336: else if(hour==hourC && minute==minuteC)
   736  001A02  503C               	movf	_hourC,w,c
   737  001A04  1839               	xorwf	_hour,w,c
   738  001A06  A4D8               	btfss	status,2,c
   739  001A08  D006               	goto	l2267
   740  001A0A  5040               	movf	_minuteC,w,c
   741  001A0C  183D               	xorwf	_minute,w,c
   742  001A0E  A4D8               	btfss	status,2,c
   743  001A10  D002               	goto	l2267
   744                           
   745                           ;Main.c: 337: {
   746                           ;Main.c: 338: PORTA = 0b00001001;
   747  001A12  0E09               	movlw	9
   748  001A14  D001               	goto	L3
   749  001A16                     l2267:
   750                           
   751                           ;Main.c: 340: {
   752                           ;Main.c: 341: PORTA = 0b00000000;
   753  001A16  0E00               	movlw	0
   754  001A18                     L3:
   755  001A18  6E80               	movwf	3968,c	;volatile
   756  001A1A  D7DF               	goto	l2249
   757  001A1C                     __end_of_main:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _version *****************
   770 ;; Defined at:
   771 ;;		line 12 in file "version.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  Version        21    0[BANK0 ] unsigned char [21]
   776 ;;  msgindex        1   22[BANK0 ] unsigned char 
   777 ;;  outchar         1   21[BANK0 ] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  2   73[None  ] int 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         0      23       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         0      23       0       0       0       0       0       0       0
   791 ;;Total ram usage:       23 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    5
   794 ;; This function calls:
   795 ;;		_lcd_write_cmd
   796 ;;		_lcd_write_data
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text1
   803  001ACA                     __ptext1:
   804                           	opt stack 0
   805  001ACA                     _version:
   806                           	opt stack 25
   807                           
   808                           ;version.c: 14: unsigned char msgindex, outchar;
   809                           ;version.c: 15: char Version[ ] = "ETT Version 1.2     ";
   810                           
   811                           ;incstack = 0
   812  001ACA  EE20  F024         	lfsr	2,version@F4277
   813  001ACE  EE10  F0B4         	lfsr	1,version@Version
   814  001AD2  0E14               	movlw	20
   815  001AD4                     u981:
   816  001AD4  CFDB FFE3          	movff	plusw2,plusw1
   817  001AD8  06E8               	decf	wreg,f,c
   818  001ADA  E2FC               	bc	u981
   819                           
   820                           ;version.c: 17: lcd_write_cmd(0x80);
   821  001ADC  0E80               	movlw	128
   822  001ADE  EC69  F00C         	call	_lcd_write_cmd
   823                           
   824                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   825  001AE2  0E00               	movlw	0
   826  001AE4  0100               	movlb	0	; () banked
   827  001AE6  6FCA               	movwf	version@msgindex& (0+255),b
   828  001AE8                     l2219:
   829                           
   830                           ; BSR set to: 0
   831  001AE8  0E13               	movlw	19
   832  001AEA  0100               	movlb	0	; () banked
   833  001AEC  65CA               	cpfsgt	version@msgindex& (0+255),b
   834  001AEE  D001               	goto	l2223
   835  001AF0  0012               	return	
   836  001AF2                     l2223:
   837                           
   838                           ; BSR set to: 0
   839                           ;version.c: 20: {
   840                           ;version.c: 21: outchar = Version[msgindex];
   841  001AF2  0100               	movlb	0	; () banked
   842  001AF4  51CA               	movf	version@msgindex& (0+255),w,b
   843  001AF6  0D01               	mullw	1
   844  001AF8  0EB4               	movlw	low version@Version
   845  001AFA  24F3               	addwf	prodl,w,c
   846  001AFC  6ED9               	movwf	fsr2l,c
   847  001AFE  0E00               	movlw	high version@Version
   848  001B00  20F4               	addwfc	prodh,w,c
   849  001B02  6EDA               	movwf	fsr2h,c
   850  001B04  50DF               	movf	indf2,w,c
   851  001B06  0100               	movlb	0	; () banked
   852  001B08  6FC9               	movwf	version@outchar& (0+255),b
   853                           
   854                           ; BSR set to: 0
   855                           ;version.c: 22: lcd_write_data(outchar);
   856  001B0A  0100               	movlb	0	; () banked
   857  001B0C  51C9               	movf	version@outchar& (0+255),w,b
   858  001B0E  ECE6  F00A         	call	_lcd_write_data
   859  001B12  0100               	movlb	0	; () banked
   860  001B14  2BCA               	incf	version@msgindex& (0+255),f,b
   861  001B16  D7E8               	goto	l2219
   862  001B18                     __end_of_version:
   863                           	opt stack 0
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           prodh	equ	0xFF4
   869                           prodl	equ	0xFF3
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           plusw1	equ	0xFE3
   874                           fsr1l	equ	0xFE1
   875                           indf2	equ	0xFDF
   876                           plusw2	equ	0xFDB
   877                           fsr2h	equ	0xFDA
   878                           fsr2l	equ	0xFD9
   879                           status	equ	0xFD8
   880                           
   881 ;; *************** function _lcd_init *****************
   882 ;; Defined at:
   883 ;;		line 83 in file "lcd_utilities.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  i               2   33[COMRAM] int 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   897 ;;      Params:         0       0       0       0       0       0       0       0       0
   898 ;;      Locals:         2       0       0       0       0       0       0       0       0
   899 ;;      Temps:          1       0       0       0       0       0       0       0       0
   900 ;;      Totals:         3       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        3 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    5
   904 ;; This function calls:
   905 ;;		_lcd_write_cmd
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text2
   912  0017EE                     __ptext2:
   913                           	opt stack 0
   914  0017EE                     _lcd_init:
   915                           	opt stack 25
   916                           
   917                           ;lcd_utilities.c: 85: int i;
   918                           ;lcd_utilities.c: 86: TRISD = 0x00;
   919                           
   920                           ; BSR set to: 0
   921                           ;incstack = 0
   922  0017EE  0E00               	movlw	0
   923  0017F0  6E95               	movwf	3989,c	;volatile
   924                           
   925                           ;lcd_utilities.c: 87: PORTD = 0x00;
   926  0017F2  0E00               	movlw	0
   927  0017F4  6E83               	movwf	3971,c	;volatile
   928                           
   929                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   930  0017F6  9883               	bcf	3971,4,c	;volatile
   931                           
   932                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   933  0017F8  9C83               	bcf	3971,6,c	;volatile
   934                           
   935                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   936  0017FA  9A83               	bcf	3971,5,c	;volatile
   937                           
   938                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   939  0017FC  0E00               	movlw	0
   940  0017FE  6E23               	movwf	lcd_init@i+1,c
   941  001800  0E00               	movlw	0
   942  001802  6E22               	movwf	lcd_init@i,c
   943  001804                     l2021:
   944  001804  BE23               	btfsc	lcd_init@i+1,7,c
   945  001806  D006               	goto	l2025
   946  001808  5023               	movf	lcd_init@i+1,w,c
   947  00180A  E10F               	bnz	l2029
   948  00180C  0E64               	movlw	100
   949  00180E  5C22               	subwf	lcd_init@i,w,c
   950  001810  B0D8               	btfsc	status,0,c
   951  001812  D00B               	goto	l2029
   952  001814                     l2025:
   953                           
   954                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   955  001814  0E9C               	movlw	156
   956  001816  6E21               	movwf	??_lcd_init& (0+255),c
   957  001818  0ED7               	movlw	215
   958  00181A                     u1077:
   959  00181A  2EE8               	decfsz	wreg,f,c
   960  00181C  D7FE               	goto	u1077
   961  00181E  2E21               	decfsz	??_lcd_init& (0+255),f,c
   962  001820  D7FC               	goto	u1077
   963  001822  F000               	nop	
   964  001824  4A22               	infsnz	lcd_init@i,f,c
   965  001826  2A23               	incf	lcd_init@i+1,f,c
   966  001828  D7ED               	goto	l2021
   967  00182A                     l2029:
   968                           
   969                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   970  00182A  0E33               	movlw	51
   971  00182C  EC69  F00C         	call	_lcd_write_cmd
   972                           
   973                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   974  001830  0E32               	movlw	50
   975  001832  EC69  F00C         	call	_lcd_write_cmd
   976                           
   977                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   978  001836  0E28               	movlw	40
   979  001838  EC69  F00C         	call	_lcd_write_cmd
   980                           
   981                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   982  00183C  0E0E               	movlw	14
   983  00183E  EC69  F00C         	call	_lcd_write_cmd
   984                           
   985                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   986  001842  0E06               	movlw	6
   987  001844  EC69  F00C         	call	_lcd_write_cmd
   988                           
   989                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   990  001848  0E01               	movlw	1
   991  00184A  EC69  F00C         	call	_lcd_write_cmd
   992                           
   993                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   994  00184E  0E9C               	movlw	156
   995  001850  6E21               	movwf	??_lcd_init& (0+255),c
   996  001852  0ED7               	movlw	215
   997  001854                     u1087:
   998  001854  2EE8               	decfsz	wreg,f,c
   999  001856  D7FE               	goto	u1087
  1000  001858  2E21               	decfsz	??_lcd_init& (0+255),f,c
  1001  00185A  D7FC               	goto	u1087
  1002  00185C  F000               	nop	
  1003  00185E  0012               	return		;funcret
  1004  001860                     __end_of_lcd_init:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           prodh	equ	0xFF4
  1011                           prodl	equ	0xFF3
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           postdec1	equ	0xFE5
  1015                           plusw1	equ	0xFE3
  1016                           fsr1l	equ	0xFE1
  1017                           indf2	equ	0xFDF
  1018                           plusw2	equ	0xFDB
  1019                           fsr2h	equ	0xFDA
  1020                           fsr2l	equ	0xFD9
  1021                           status	equ	0xFD8
  1022                           
  1023 ;; *************** function _SetupTimerInterruptRegisters *****************
  1024 ;; Defined at:
  1025 ;;		line 275 in file "Main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    3
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text3
  1054  001BCE                     __ptext3:
  1055                           	opt stack 0
  1056  001BCE                     _SetupTimerInterruptRegisters:
  1057                           	opt stack 27
  1058                           
  1059                           ;Main.c: 277: RCONbits.IPEN =1;
  1060                           
  1061                           ;incstack = 0
  1062  001BCE  8ED0               	bsf	4048,7,c	;volatile
  1063                           
  1064                           ;Main.c: 281: INTCONbits.GIEH =1;
  1065  001BD0  8EF2               	bsf	intcon,7,c	;volatile
  1066                           
  1067                           ;Main.c: 286: T0CON = 0b00000111;
  1068  001BD2  0E07               	movlw	7
  1069  001BD4  6ED5               	movwf	4053,c	;volatile
  1070                           
  1071                           ;Main.c: 294: INTCON2 = 0b10000100;
  1072  001BD6  0E84               	movlw	132
  1073  001BD8  6EF1               	movwf	intcon2,c	;volatile
  1074                           
  1075                           ;Main.c: 299: TMR0H = 0x48;
  1076  001BDA  0E48               	movlw	72
  1077  001BDC  6ED7               	movwf	4055,c	;volatile
  1078                           
  1079                           ;Main.c: 300: TMR0L = 0xE5;
  1080  001BDE  0EE5               	movlw	229
  1081  001BE0  6ED6               	movwf	4054,c	;volatile
  1082                           
  1083                           ;Main.c: 302: T0CONbits.TMR0ON = 1;
  1084  001BE2  8ED5               	bsf	4053,7,c	;volatile
  1085                           
  1086                           ;Main.c: 303: INTCONbits.TMR0IE = 1;
  1087  001BE4  8AF2               	bsf	intcon,5,c	;volatile
  1088                           
  1089                           ;Main.c: 306: INTCONbits.TMR0IF = 0;
  1090  001BE6  94F2               	bcf	intcon,2,c	;volatile
  1091  001BE8  0012               	return		;funcret
  1092  001BEA                     __end_of_SetupTimerInterruptRegisters:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           prodh	equ	0xFF4
  1099                           prodl	equ	0xFF3
  1100                           intcon	equ	0xFF2
  1101                           intcon2	equ	0xFF1
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           plusw1	equ	0xFE3
  1106                           fsr1l	equ	0xFE1
  1107                           indf2	equ	0xFDF
  1108                           plusw2	equ	0xFDB
  1109                           fsr2h	equ	0xFDA
  1110                           fsr2l	equ	0xFD9
  1111                           status	equ	0xFD8
  1112                           
  1113 ;; *************** function _SetupTime *****************
  1114 ;; Defined at:
  1115 ;;		line 107 in file "Main.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1120 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1121 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1122 ;;  second1         1   46[BANK0 ] unsigned char 
  1123 ;;  second10        1   45[BANK0 ] unsigned char 
  1124 ;;  minute1         1   44[BANK0 ] unsigned char 
  1125 ;;  minute10        1   43[BANK0 ] unsigned char 
  1126 ;;  hour1           1   42[BANK0 ] unsigned char 
  1127 ;;  hour10          1   41[BANK0 ] unsigned char 
  1128 ;;  outchar         1   40[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1142 ;;Total ram usage:       30 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    5
  1145 ;; This function calls:
  1146 ;;		_char_2_int
  1147 ;;		_delay_ms
  1148 ;;		_getkey
  1149 ;;		_lcd_write_cmd
  1150 ;;		_lcd_write_data
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text4
  1157  0011AA                     __ptext4:
  1158                           	opt stack 0
  1159  0011AA                     _SetupTime:
  1160                           	opt stack 25
  1161                           
  1162                           ;Main.c: 109: unsigned char msgindex, outchar, ctemp;
  1163                           ;Main.c: 110: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1164                           ;Main.c: 111: char Message[ ] = "Set time hhmmss:    ";
  1165                           
  1166                           ;incstack = 0
  1167  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4312
  1168  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1169  0011B2  0E14               	movlw	20
  1170  0011B4                     u861:
  1171  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1172  0011B8  06E8               	decf	wreg,f,c
  1173  0011BA  E2FC               	bc	u861
  1174                           
  1175                           ;Main.c: 113: lcd_write_cmd(0x80);
  1176  0011BC  0E80               	movlw	128
  1177  0011BE  EC69  F00C         	call	_lcd_write_cmd
  1178                           
  1179                           ;Main.c: 115: for (msgindex = 0; msgindex < 20; msgindex++)
  1180  0011C2  0E00               	movlw	0
  1181  0011C4  0100               	movlb	0	; () banked
  1182  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1183  0011C8                     l2039:
  1184                           
  1185                           ; BSR set to: 0
  1186  0011C8  0E13               	movlw	19
  1187  0011CA  0100               	movlb	0	; () banked
  1188  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1189  0011CE  D001               	goto	l2043
  1190  0011D0  D013               	goto	l2051
  1191  0011D2                     l2043:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;Main.c: 116: {
  1195                           ;Main.c: 117: outchar = Message[msgindex];
  1196  0011D2  0100               	movlb	0	; () banked
  1197  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1198  0011D6  0D01               	mullw	1
  1199  0011D8  0EC7               	movlw	low SetupTime@Message
  1200  0011DA  24F3               	addwf	prodl,w,c
  1201  0011DC  6ED9               	movwf	fsr2l,c
  1202  0011DE  0E00               	movlw	high SetupTime@Message
  1203  0011E0  20F4               	addwfc	prodh,w,c
  1204  0011E2  6EDA               	movwf	fsr2h,c
  1205  0011E4  50DF               	movf	indf2,w,c
  1206  0011E6  0100               	movlb	0	; () banked
  1207  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;Main.c: 118: lcd_write_data(outchar);
  1211  0011EA  0100               	movlb	0	; () banked
  1212  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1213  0011EE  ECE6  F00A         	call	_lcd_write_data
  1214  0011F2  0100               	movlb	0	; () banked
  1215  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1216  0011F6  D7E8               	goto	l2039
  1217  0011F8                     l2051:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;Main.c: 119: }
  1221                           ;Main.c: 121: lcd_write_cmd(0xC0);
  1222  0011F8  0EC0               	movlw	192
  1223  0011FA  EC69  F00C         	call	_lcd_write_cmd
  1224                           
  1225                           ;Main.c: 123: ctemp=getkey();
  1226  0011FE  EC8C  F00D         	call	_getkey	;wreg free
  1227  001202  0100               	movlb	0	; () banked
  1228  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;Main.c: 124: lcd_write_data(ctemp);
  1232  001206  0100               	movlb	0	; () banked
  1233  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1234  00120A  ECE6  F00A         	call	_lcd_write_data
  1235                           
  1236                           ;Main.c: 125: hour10 = char_2_int (ctemp);
  1237  00120E  0100               	movlb	0	; () banked
  1238  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1239  001212  EC30  F00C         	call	_char_2_int
  1240  001216  0100               	movlb	0	; () banked
  1241  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;Main.c: 127: ctemp=getkey();
  1245  00121A  EC8C  F00D         	call	_getkey	;wreg free
  1246  00121E  0100               	movlb	0	; () banked
  1247  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1248                           
  1249                           ;Main.c: 128: lcd_write_data(ctemp);
  1250  001222  0100               	movlb	0	; () banked
  1251  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1252  001226  ECE6  F00A         	call	_lcd_write_data
  1253                           
  1254                           ;Main.c: 129: hour1 = char_2_int (ctemp);
  1255  00122A  0100               	movlb	0	; () banked
  1256  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1257  00122E  EC30  F00C         	call	_char_2_int
  1258  001232  0100               	movlb	0	; () banked
  1259  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;Main.c: 131: ctemp=getkey();
  1263  001236  EC8C  F00D         	call	_getkey	;wreg free
  1264  00123A  0100               	movlb	0	; () banked
  1265  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;Main.c: 132: lcd_write_data(ctemp);
  1269  00123E  0100               	movlb	0	; () banked
  1270  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1271  001242  ECE6  F00A         	call	_lcd_write_data
  1272                           
  1273                           ;Main.c: 133: minute10 = char_2_int (ctemp);
  1274  001246  0100               	movlb	0	; () banked
  1275  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1276  00124A  EC30  F00C         	call	_char_2_int
  1277  00124E  0100               	movlb	0	; () banked
  1278  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;Main.c: 135: ctemp=getkey();
  1282  001252  EC8C  F00D         	call	_getkey	;wreg free
  1283  001256  0100               	movlb	0	; () banked
  1284  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1285                           
  1286                           ;Main.c: 136: lcd_write_data(ctemp);
  1287  00125A  0100               	movlb	0	; () banked
  1288  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1289  00125E  ECE6  F00A         	call	_lcd_write_data
  1290                           
  1291                           ;Main.c: 137: minute1 = char_2_int (ctemp);
  1292  001262  0100               	movlb	0	; () banked
  1293  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1294  001266  EC30  F00C         	call	_char_2_int
  1295  00126A  0100               	movlb	0	; () banked
  1296  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;Main.c: 139: ctemp=getkey();
  1300  00126E  EC8C  F00D         	call	_getkey	;wreg free
  1301  001272  0100               	movlb	0	; () banked
  1302  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;Main.c: 140: lcd_write_data(ctemp);
  1306  001276  0100               	movlb	0	; () banked
  1307  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1308  00127A  ECE6  F00A         	call	_lcd_write_data
  1309                           
  1310                           ;Main.c: 141: second10 = char_2_int (ctemp);
  1311  00127E  0100               	movlb	0	; () banked
  1312  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1313  001282  EC30  F00C         	call	_char_2_int
  1314  001286  0100               	movlb	0	; () banked
  1315  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;Main.c: 143: ctemp=getkey();
  1319  00128A  EC8C  F00D         	call	_getkey	;wreg free
  1320  00128E  0100               	movlb	0	; () banked
  1321  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1322                           
  1323                           ;Main.c: 144: lcd_write_data(ctemp);
  1324  001292  0100               	movlb	0	; () banked
  1325  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1326  001296  ECE6  F00A         	call	_lcd_write_data
  1327                           
  1328                           ;Main.c: 145: second1 = char_2_int (ctemp);
  1329  00129A  0100               	movlb	0	; () banked
  1330  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1331  00129E  EC30  F00C         	call	_char_2_int
  1332  0012A2  0100               	movlb	0	; () banked
  1333  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;Main.c: 147: hour = hour10 * 10 + hour1;
  1337  0012A6  0100               	movlb	0	; () banked
  1338  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1339  0012AA  0D0A               	mullw	10
  1340  0012AC  50F3               	movf	prodl,w,c
  1341  0012AE  0100               	movlb	0	; () banked
  1342  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1343  0012B2  6E39               	movwf	_hour,c
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;Main.c: 148: minute = minute10 * 10 + minute1;
  1347  0012B4  0100               	movlb	0	; () banked
  1348  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1349  0012B8  0D0A               	mullw	10
  1350  0012BA  50F3               	movf	prodl,w,c
  1351  0012BC  0100               	movlb	0	; () banked
  1352  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1353  0012C0  6E3D               	movwf	_minute,c
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;Main.c: 149: second = second10 * 10 + second1;
  1357  0012C2  0100               	movlb	0	; () banked
  1358  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1359  0012C6  0D0A               	mullw	10
  1360  0012C8  50F3               	movf	prodl,w,c
  1361  0012CA  0100               	movlb	0	; () banked
  1362  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1363  0012CE  6E41               	movwf	_second,c
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;Main.c: 151: delay_ms(500);
  1367  0012D0  0E01               	movlw	1
  1368  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1369  0012D4  0EF4               	movlw	244
  1370  0012D6  6E1D               	movwf	delay_ms@i,c
  1371  0012D8  ECAB  F00D         	call	_delay_ms	;wreg free
  1372                           
  1373                           ;Main.c: 152: lcd_write_cmd(0x01);
  1374  0012DC  0E01               	movlw	1
  1375  0012DE  EC69  F00C         	call	_lcd_write_cmd
  1376  0012E2  0012               	return		;funcret
  1377  0012E4                     __end_of_SetupTime:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           tblptrh	equ	0xFF7
  1381                           tblptrl	equ	0xFF6
  1382                           tablat	equ	0xFF5
  1383                           prodh	equ	0xFF4
  1384                           prodl	equ	0xFF3
  1385                           intcon	equ	0xFF2
  1386                           intcon2	equ	0xFF1
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           postdec1	equ	0xFE5
  1390                           plusw1	equ	0xFE3
  1391                           fsr1l	equ	0xFE1
  1392                           indf2	equ	0xFDF
  1393                           plusw2	equ	0xFDB
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _SetupAlarmTimeC *****************
  1399 ;; Defined at:
  1400 ;;		line 235 in file "Main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1405 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1406 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1407 ;;  minute1         1   44[BANK0 ] unsigned char 
  1408 ;;  minute10        1   43[BANK0 ] unsigned char 
  1409 ;;  hour1           1   42[BANK0 ] unsigned char 
  1410 ;;  hour10          1   41[BANK0 ] unsigned char 
  1411 ;;  outchar         1   40[BANK0 ] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0
  1422 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1424 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1425 ;;Total ram usage:       28 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    5
  1428 ;; This function calls:
  1429 ;;		_char_2_int
  1430 ;;		_delay_ms
  1431 ;;		_getkey
  1432 ;;		_lcd_write_cmd
  1433 ;;		_lcd_write_data
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text5
  1440  0012E4                     __ptext5:
  1441                           	opt stack 0
  1442  0012E4                     _SetupAlarmTimeC:
  1443                           	opt stack 25
  1444                           
  1445                           ;Main.c: 237: unsigned char msgindex, outchar, ctemp;
  1446                           ;Main.c: 238: unsigned char hour10, hour1, minute10, minute1;
  1447                           ;Main.c: 239: char Message[ ] = "Subject C Time hhmm:";
  1448                           
  1449                           ;incstack = 0
  1450  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4342
  1451  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1452  0012EC  0E14               	movlw	20
  1453  0012EE                     u951:
  1454  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1455  0012F2  06E8               	decf	wreg,f,c
  1456  0012F4  E2FC               	bc	u951
  1457                           
  1458                           ;Main.c: 241: PORTA = 0b00001000;
  1459  0012F6  0E08               	movlw	8
  1460  0012F8  6E80               	movwf	3968,c	;volatile
  1461                           
  1462                           ;Main.c: 243: lcd_write_cmd(0x80);
  1463  0012FA  0E80               	movlw	128
  1464  0012FC  EC69  F00C         	call	_lcd_write_cmd
  1465                           
  1466                           ;Main.c: 245: for (msgindex = 0; msgindex < 20; msgindex++)
  1467  001300  0E00               	movlw	0
  1468  001302  0100               	movlb	0	; () banked
  1469  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1470  001306                     l2179:
  1471                           
  1472                           ; BSR set to: 0
  1473  001306  0E13               	movlw	19
  1474  001308  0100               	movlb	0	; () banked
  1475  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1476  00130C  D001               	goto	l2183
  1477  00130E  D013               	goto	l2191
  1478  001310                     l2183:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;Main.c: 246: {
  1482                           ;Main.c: 247: outchar = Message[msgindex];
  1483  001310  0100               	movlb	0	; () banked
  1484  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1485  001314  0D01               	mullw	1
  1486  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1487  001318  24F3               	addwf	prodl,w,c
  1488  00131A  6ED9               	movwf	fsr2l,c
  1489  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1490  00131E  20F4               	addwfc	prodh,w,c
  1491  001320  6EDA               	movwf	fsr2h,c
  1492  001322  50DF               	movf	indf2,w,c
  1493  001324  0100               	movlb	0	; () banked
  1494  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;Main.c: 248: lcd_write_data(outchar);
  1498  001328  0100               	movlb	0	; () banked
  1499  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1500  00132C  ECE6  F00A         	call	_lcd_write_data
  1501  001330  0100               	movlb	0	; () banked
  1502  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1503  001334  D7E8               	goto	l2179
  1504  001336                     l2191:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Main.c: 249: }
  1508                           ;Main.c: 251: lcd_write_cmd(0xC0);
  1509  001336  0EC0               	movlw	192
  1510  001338  EC69  F00C         	call	_lcd_write_cmd
  1511                           
  1512                           ;Main.c: 253: ctemp=getkey();
  1513  00133C  EC8C  F00D         	call	_getkey	;wreg free
  1514  001340  0100               	movlb	0	; () banked
  1515  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;Main.c: 254: lcd_write_data(ctemp);
  1519  001344  0100               	movlb	0	; () banked
  1520  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1521  001348  ECE6  F00A         	call	_lcd_write_data
  1522                           
  1523                           ;Main.c: 255: hour10 = char_2_int (ctemp);
  1524  00134C  0100               	movlb	0	; () banked
  1525  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1526  001350  EC30  F00C         	call	_char_2_int
  1527  001354  0100               	movlb	0	; () banked
  1528  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;Main.c: 257: ctemp=getkey();
  1532  001358  EC8C  F00D         	call	_getkey	;wreg free
  1533  00135C  0100               	movlb	0	; () banked
  1534  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1535                           
  1536                           ;Main.c: 258: lcd_write_data(ctemp);
  1537  001360  0100               	movlb	0	; () banked
  1538  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1539  001364  ECE6  F00A         	call	_lcd_write_data
  1540                           
  1541                           ;Main.c: 259: hour1 = char_2_int (ctemp);
  1542  001368  0100               	movlb	0	; () banked
  1543  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1544  00136C  EC30  F00C         	call	_char_2_int
  1545  001370  0100               	movlb	0	; () banked
  1546  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;Main.c: 261: ctemp=getkey();
  1550  001374  EC8C  F00D         	call	_getkey	;wreg free
  1551  001378  0100               	movlb	0	; () banked
  1552  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;Main.c: 262: lcd_write_data(ctemp);
  1556  00137C  0100               	movlb	0	; () banked
  1557  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1558  001380  ECE6  F00A         	call	_lcd_write_data
  1559                           
  1560                           ;Main.c: 263: minute10 = char_2_int (ctemp);
  1561  001384  0100               	movlb	0	; () banked
  1562  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1563  001388  EC30  F00C         	call	_char_2_int
  1564  00138C  0100               	movlb	0	; () banked
  1565  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;Main.c: 265: ctemp=getkey();
  1569  001390  EC8C  F00D         	call	_getkey	;wreg free
  1570  001394  0100               	movlb	0	; () banked
  1571  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1572                           
  1573                           ;Main.c: 266: lcd_write_data(ctemp);
  1574  001398  0100               	movlb	0	; () banked
  1575  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1576  00139C  ECE6  F00A         	call	_lcd_write_data
  1577                           
  1578                           ;Main.c: 267: minute1 = char_2_int (ctemp);
  1579  0013A0  0100               	movlb	0	; () banked
  1580  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1581  0013A4  EC30  F00C         	call	_char_2_int
  1582  0013A8  0100               	movlb	0	; () banked
  1583  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;Main.c: 269: hourC = hour10 * 10 + hour1;
  1587  0013AC  0100               	movlb	0	; () banked
  1588  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1589  0013B0  0D0A               	mullw	10
  1590  0013B2  50F3               	movf	prodl,w,c
  1591  0013B4  0100               	movlb	0	; () banked
  1592  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1593  0013B8  6E3C               	movwf	_hourC,c
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Main.c: 270: minuteC = minute10 * 10 + minute1;
  1597  0013BA  0100               	movlb	0	; () banked
  1598  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1599  0013BE  0D0A               	mullw	10
  1600  0013C0  50F3               	movf	prodl,w,c
  1601  0013C2  0100               	movlb	0	; () banked
  1602  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1603  0013C6  6E40               	movwf	_minuteC,c
  1604                           
  1605                           ;Main.c: 272: delay_ms(500);
  1606  0013C8  0E01               	movlw	1
  1607  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1608  0013CC  0EF4               	movlw	244
  1609  0013CE  6E1D               	movwf	delay_ms@i,c
  1610  0013D0  ECAB  F00D         	call	_delay_ms	;wreg free
  1611                           
  1612                           ;Main.c: 273: lcd_write_cmd(0x01);
  1613  0013D4  0E01               	movlw	1
  1614  0013D6  EC69  F00C         	call	_lcd_write_cmd
  1615  0013DA  0012               	return		;funcret
  1616  0013DC                     __end_of_SetupAlarmTimeC:
  1617                           	opt stack 0
  1618                           tblptru	equ	0xFF8
  1619                           tblptrh	equ	0xFF7
  1620                           tblptrl	equ	0xFF6
  1621                           tablat	equ	0xFF5
  1622                           prodh	equ	0xFF4
  1623                           prodl	equ	0xFF3
  1624                           intcon	equ	0xFF2
  1625                           intcon2	equ	0xFF1
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postdec1	equ	0xFE5
  1629                           plusw1	equ	0xFE3
  1630                           fsr1l	equ	0xFE1
  1631                           indf2	equ	0xFDF
  1632                           plusw2	equ	0xFDB
  1633                           fsr2h	equ	0xFDA
  1634                           fsr2l	equ	0xFD9
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _SetupAlarmTimeB *****************
  1638 ;; Defined at:
  1639 ;;		line 195 in file "Main.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1644 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1645 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1646 ;;  minute1         1   44[BANK0 ] unsigned char 
  1647 ;;  minute10        1   43[BANK0 ] unsigned char 
  1648 ;;  hour1           1   42[BANK0 ] unsigned char 
  1649 ;;  hour10          1   41[BANK0 ] unsigned char 
  1650 ;;  outchar         1   40[BANK0 ] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0
  1661 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1663 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1664 ;;Total ram usage:       28 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    5
  1667 ;; This function calls:
  1668 ;;		_char_2_int
  1669 ;;		_delay_ms
  1670 ;;		_getkey
  1671 ;;		_lcd_write_cmd
  1672 ;;		_lcd_write_data
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text6
  1679  0013DC                     __ptext6:
  1680                           	opt stack 0
  1681  0013DC                     _SetupAlarmTimeB:
  1682                           	opt stack 25
  1683                           
  1684                           ;Main.c: 197: unsigned char msgindex, outchar, ctemp;
  1685                           ;Main.c: 198: unsigned char hour10, hour1, minute10, minute1;
  1686                           ;Main.c: 199: char Message[ ] = "Subject B Time hhmm:";
  1687                           
  1688                           ;incstack = 0
  1689  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4332
  1690  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1691  0013E4  0E14               	movlw	20
  1692  0013E6                     u921:
  1693  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1694  0013EA  06E8               	decf	wreg,f,c
  1695  0013EC  E2FC               	bc	u921
  1696                           
  1697                           ;Main.c: 201: PORTA = 0b00000100;
  1698  0013EE  0E04               	movlw	4
  1699  0013F0  6E80               	movwf	3968,c	;volatile
  1700                           
  1701                           ;Main.c: 203: lcd_write_cmd(0x80);
  1702  0013F2  0E80               	movlw	128
  1703  0013F4  EC69  F00C         	call	_lcd_write_cmd
  1704                           
  1705                           ;Main.c: 205: for (msgindex = 0; msgindex < 20; msgindex++)
  1706  0013F8  0E00               	movlw	0
  1707  0013FA  0100               	movlb	0	; () banked
  1708  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1709  0013FE                     l2137:
  1710                           
  1711                           ; BSR set to: 0
  1712  0013FE  0E13               	movlw	19
  1713  001400  0100               	movlb	0	; () banked
  1714  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1715  001404  D001               	goto	l2141
  1716  001406  D013               	goto	l2149
  1717  001408                     l2141:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;Main.c: 206: {
  1721                           ;Main.c: 207: outchar = Message[msgindex];
  1722  001408  0100               	movlb	0	; () banked
  1723  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1724  00140C  0D01               	mullw	1
  1725  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1726  001410  24F3               	addwf	prodl,w,c
  1727  001412  6ED9               	movwf	fsr2l,c
  1728  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1729  001416  20F4               	addwfc	prodh,w,c
  1730  001418  6EDA               	movwf	fsr2h,c
  1731  00141A  50DF               	movf	indf2,w,c
  1732  00141C  0100               	movlb	0	; () banked
  1733  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;Main.c: 208: lcd_write_data(outchar);
  1737  001420  0100               	movlb	0	; () banked
  1738  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1739  001424  ECE6  F00A         	call	_lcd_write_data
  1740  001428  0100               	movlb	0	; () banked
  1741  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1742  00142C  D7E8               	goto	l2137
  1743  00142E                     l2149:
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;Main.c: 209: }
  1747                           ;Main.c: 211: lcd_write_cmd(0xC0);
  1748  00142E  0EC0               	movlw	192
  1749  001430  EC69  F00C         	call	_lcd_write_cmd
  1750                           
  1751                           ;Main.c: 213: ctemp=getkey();
  1752  001434  EC8C  F00D         	call	_getkey	;wreg free
  1753  001438  0100               	movlb	0	; () banked
  1754  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Main.c: 214: lcd_write_data(ctemp);
  1758  00143C  0100               	movlb	0	; () banked
  1759  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1760  001440  ECE6  F00A         	call	_lcd_write_data
  1761                           
  1762                           ;Main.c: 215: hour10 = char_2_int (ctemp);
  1763  001444  0100               	movlb	0	; () banked
  1764  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1765  001448  EC30  F00C         	call	_char_2_int
  1766  00144C  0100               	movlb	0	; () banked
  1767  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;Main.c: 217: ctemp=getkey();
  1771  001450  EC8C  F00D         	call	_getkey	;wreg free
  1772  001454  0100               	movlb	0	; () banked
  1773  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1774                           
  1775                           ;Main.c: 218: lcd_write_data(ctemp);
  1776  001458  0100               	movlb	0	; () banked
  1777  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1778  00145C  ECE6  F00A         	call	_lcd_write_data
  1779                           
  1780                           ;Main.c: 219: hour1 = char_2_int (ctemp);
  1781  001460  0100               	movlb	0	; () banked
  1782  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1783  001464  EC30  F00C         	call	_char_2_int
  1784  001468  0100               	movlb	0	; () banked
  1785  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;Main.c: 221: ctemp=getkey();
  1789  00146C  EC8C  F00D         	call	_getkey	;wreg free
  1790  001470  0100               	movlb	0	; () banked
  1791  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;Main.c: 222: lcd_write_data(ctemp);
  1795  001474  0100               	movlb	0	; () banked
  1796  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1797  001478  ECE6  F00A         	call	_lcd_write_data
  1798                           
  1799                           ;Main.c: 223: minute10 = char_2_int (ctemp);
  1800  00147C  0100               	movlb	0	; () banked
  1801  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1802  001480  EC30  F00C         	call	_char_2_int
  1803  001484  0100               	movlb	0	; () banked
  1804  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;Main.c: 225: ctemp=getkey();
  1808  001488  EC8C  F00D         	call	_getkey	;wreg free
  1809  00148C  0100               	movlb	0	; () banked
  1810  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1811                           
  1812                           ;Main.c: 226: lcd_write_data(ctemp);
  1813  001490  0100               	movlb	0	; () banked
  1814  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1815  001494  ECE6  F00A         	call	_lcd_write_data
  1816                           
  1817                           ;Main.c: 227: minute1 = char_2_int (ctemp);
  1818  001498  0100               	movlb	0	; () banked
  1819  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1820  00149C  EC30  F00C         	call	_char_2_int
  1821  0014A0  0100               	movlb	0	; () banked
  1822  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;Main.c: 229: hourB = hour10 * 10 + hour1;
  1826  0014A4  0100               	movlb	0	; () banked
  1827  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1828  0014A8  0D0A               	mullw	10
  1829  0014AA  50F3               	movf	prodl,w,c
  1830  0014AC  0100               	movlb	0	; () banked
  1831  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1832  0014B0  6E3B               	movwf	_hourB,c
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;Main.c: 230: minuteB = minute10 * 10 + minute1;
  1836  0014B2  0100               	movlb	0	; () banked
  1837  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1838  0014B6  0D0A               	mullw	10
  1839  0014B8  50F3               	movf	prodl,w,c
  1840  0014BA  0100               	movlb	0	; () banked
  1841  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1842  0014BE  6E3F               	movwf	_minuteB,c
  1843                           
  1844                           ;Main.c: 232: delay_ms(500);
  1845  0014C0  0E01               	movlw	1
  1846  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1847  0014C4  0EF4               	movlw	244
  1848  0014C6  6E1D               	movwf	delay_ms@i,c
  1849  0014C8  ECAB  F00D         	call	_delay_ms	;wreg free
  1850                           
  1851                           ;Main.c: 233: lcd_write_cmd(0x01);
  1852  0014CC  0E01               	movlw	1
  1853  0014CE  EC69  F00C         	call	_lcd_write_cmd
  1854  0014D2  0012               	return		;funcret
  1855  0014D4                     __end_of_SetupAlarmTimeB:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodh	equ	0xFF4
  1862                           prodl	equ	0xFF3
  1863                           intcon	equ	0xFF2
  1864                           intcon2	equ	0xFF1
  1865                           postinc0	equ	0xFEE
  1866                           wreg	equ	0xFE8
  1867                           postdec1	equ	0xFE5
  1868                           plusw1	equ	0xFE3
  1869                           fsr1l	equ	0xFE1
  1870                           indf2	equ	0xFDF
  1871                           plusw2	equ	0xFDB
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _SetupAlarmTimeA *****************
  1877 ;; Defined at:
  1878 ;;		line 155 in file "Main.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1883 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1884 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1885 ;;  minute1         1   44[BANK0 ] unsigned char 
  1886 ;;  minute10        1   43[BANK0 ] unsigned char 
  1887 ;;  hour1           1   42[BANK0 ] unsigned char 
  1888 ;;  hour10          1   41[BANK0 ] unsigned char 
  1889 ;;  outchar         1   40[BANK0 ] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0
  1900 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1902 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1903 ;;Total ram usage:       28 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    5
  1906 ;; This function calls:
  1907 ;;		_char_2_int
  1908 ;;		_delay_ms
  1909 ;;		_getkey
  1910 ;;		_lcd_write_cmd
  1911 ;;		_lcd_write_data
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text7
  1918  0014D4                     __ptext7:
  1919                           	opt stack 0
  1920  0014D4                     _SetupAlarmTimeA:
  1921                           	opt stack 25
  1922                           
  1923                           ;Main.c: 157: unsigned char msgindex, outchar, ctemp;
  1924                           ;Main.c: 158: unsigned char hour10, hour1, minute10, minute1;
  1925                           ;Main.c: 159: char Message[ ] = "Subject A Time hhmm:";
  1926                           
  1927                           ;incstack = 0
  1928  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4322
  1929  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  1930  0014DC  0E14               	movlw	20
  1931  0014DE                     u891:
  1932  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  1933  0014E2  06E8               	decf	wreg,f,c
  1934  0014E4  E2FC               	bc	u891
  1935                           
  1936                           ;Main.c: 161: PORTA = 0b00000010;
  1937  0014E6  0E02               	movlw	2
  1938  0014E8  6E80               	movwf	3968,c	;volatile
  1939                           
  1940                           ;Main.c: 163: lcd_write_cmd(0x80);
  1941  0014EA  0E80               	movlw	128
  1942  0014EC  EC69  F00C         	call	_lcd_write_cmd
  1943                           
  1944                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1945  0014F0  0E00               	movlw	0
  1946  0014F2  0100               	movlb	0	; () banked
  1947  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  1948  0014F6                     l2095:
  1949                           
  1950                           ; BSR set to: 0
  1951  0014F6  0E13               	movlw	19
  1952  0014F8  0100               	movlb	0	; () banked
  1953  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  1954  0014FC  D001               	goto	l2099
  1955  0014FE  D013               	goto	l2107
  1956  001500                     l2099:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;Main.c: 166: {
  1960                           ;Main.c: 167: outchar = Message[msgindex];
  1961  001500  0100               	movlb	0	; () banked
  1962  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  1963  001504  0D01               	mullw	1
  1964  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  1965  001508  24F3               	addwf	prodl,w,c
  1966  00150A  6ED9               	movwf	fsr2l,c
  1967  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  1968  00150E  20F4               	addwfc	prodh,w,c
  1969  001510  6EDA               	movwf	fsr2h,c
  1970  001512  50DF               	movf	indf2,w,c
  1971  001514  0100               	movlb	0	; () banked
  1972  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;Main.c: 168: lcd_write_data(outchar);
  1976  001518  0100               	movlb	0	; () banked
  1977  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  1978  00151C  ECE6  F00A         	call	_lcd_write_data
  1979  001520  0100               	movlb	0	; () banked
  1980  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  1981  001524  D7E8               	goto	l2095
  1982  001526                     l2107:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;Main.c: 169: }
  1986                           ;Main.c: 171: lcd_write_cmd(0xC0);
  1987  001526  0EC0               	movlw	192
  1988  001528  EC69  F00C         	call	_lcd_write_cmd
  1989                           
  1990                           ;Main.c: 173: ctemp=getkey();
  1991  00152C  EC8C  F00D         	call	_getkey	;wreg free
  1992  001530  0100               	movlb	0	; () banked
  1993  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;Main.c: 174: lcd_write_data(ctemp);
  1997  001534  0100               	movlb	0	; () banked
  1998  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  1999  001538  ECE6  F00A         	call	_lcd_write_data
  2000                           
  2001                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  2002  00153C  0100               	movlb	0	; () banked
  2003  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2004  001540  EC30  F00C         	call	_char_2_int
  2005  001544  0100               	movlb	0	; () banked
  2006  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;Main.c: 177: ctemp=getkey();
  2010  001548  EC8C  F00D         	call	_getkey	;wreg free
  2011  00154C  0100               	movlb	0	; () banked
  2012  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2013                           
  2014                           ;Main.c: 178: lcd_write_data(ctemp);
  2015  001550  0100               	movlb	0	; () banked
  2016  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2017  001554  ECE6  F00A         	call	_lcd_write_data
  2018                           
  2019                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  2020  001558  0100               	movlb	0	; () banked
  2021  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2022  00155C  EC30  F00C         	call	_char_2_int
  2023  001560  0100               	movlb	0	; () banked
  2024  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;Main.c: 181: ctemp=getkey();
  2028  001564  EC8C  F00D         	call	_getkey	;wreg free
  2029  001568  0100               	movlb	0	; () banked
  2030  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;Main.c: 182: lcd_write_data(ctemp);
  2034  00156C  0100               	movlb	0	; () banked
  2035  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2036  001570  ECE6  F00A         	call	_lcd_write_data
  2037                           
  2038                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  2039  001574  0100               	movlb	0	; () banked
  2040  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2041  001578  EC30  F00C         	call	_char_2_int
  2042  00157C  0100               	movlb	0	; () banked
  2043  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;Main.c: 185: ctemp=getkey();
  2047  001580  EC8C  F00D         	call	_getkey	;wreg free
  2048  001584  0100               	movlb	0	; () banked
  2049  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2050                           
  2051                           ;Main.c: 186: lcd_write_data(ctemp);
  2052  001588  0100               	movlb	0	; () banked
  2053  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2054  00158C  ECE6  F00A         	call	_lcd_write_data
  2055                           
  2056                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  2057  001590  0100               	movlb	0	; () banked
  2058  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2059  001594  EC30  F00C         	call	_char_2_int
  2060  001598  0100               	movlb	0	; () banked
  2061  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  2065  00159C  0100               	movlb	0	; () banked
  2066  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2067  0015A0  0D0A               	mullw	10
  2068  0015A2  50F3               	movf	prodl,w,c
  2069  0015A4  0100               	movlb	0	; () banked
  2070  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2071  0015A8  6E3A               	movwf	_hourA,c
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  2075  0015AA  0100               	movlb	0	; () banked
  2076  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2077  0015AE  0D0A               	mullw	10
  2078  0015B0  50F3               	movf	prodl,w,c
  2079  0015B2  0100               	movlb	0	; () banked
  2080  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2081  0015B6  6E3E               	movwf	_minuteA,c
  2082                           
  2083                           ;Main.c: 192: delay_ms(500);
  2084  0015B8  0E01               	movlw	1
  2085  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2086  0015BC  0EF4               	movlw	244
  2087  0015BE  6E1D               	movwf	delay_ms@i,c
  2088  0015C0  ECAB  F00D         	call	_delay_ms	;wreg free
  2089                           
  2090                           ;Main.c: 193: lcd_write_cmd(0x01);
  2091  0015C4  0E01               	movlw	1
  2092  0015C6  EC69  F00C         	call	_lcd_write_cmd
  2093  0015CA  0012               	return		;funcret
  2094  0015CC                     __end_of_SetupAlarmTimeA:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           prodh	equ	0xFF4
  2101                           prodl	equ	0xFF3
  2102                           intcon	equ	0xFF2
  2103                           intcon2	equ	0xFF1
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           postdec1	equ	0xFE5
  2107                           plusw1	equ	0xFE3
  2108                           fsr1l	equ	0xFE1
  2109                           indf2	equ	0xFDF
  2110                           plusw2	equ	0xFDB
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _lcd_write_data *****************
  2116 ;; Defined at:
  2117 ;;		line 43 in file "lcd_utilities.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  data            1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  data            1   30[COMRAM] unsigned char 
  2122 ;;  temp1           1   31[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0
  2133 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2134 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2135 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2136 ;;Total ram usage:        3 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    4
  2139 ;; This function calls:
  2140 ;;		_lcd_strobe
  2141 ;; This function is called by:
  2142 ;;		_SetupTime
  2143 ;;		_SetupAlarmTimeA
  2144 ;;		_SetupAlarmTimeB
  2145 ;;		_SetupAlarmTimeC
  2146 ;;		_version
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text8
  2151  0015CC                     __ptext8:
  2152                           	opt stack 0
  2153  0015CC                     _lcd_write_data:
  2154                           	opt stack 25
  2155                           
  2156                           ;incstack = 0
  2157                           ;lcd_write_data@data stored from wreg
  2158  0015CC  6E1F               	movwf	lcd_write_data@data,c
  2159                           
  2160                           ;lcd_utilities.c: 45: char temp1;
  2161                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2162  0015CE  8C83               	bsf	3971,6,c	;volatile
  2163                           
  2164                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2165  0015D0  0E3F               	movlw	63
  2166  0015D2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2167  0015D4  0E55               	movlw	85
  2168  0015D6                     u1097:
  2169  0015D6  2EE8               	decfsz	wreg,f,c
  2170  0015D8  D7FE               	goto	u1097
  2171  0015DA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2172  0015DC  D7FC               	goto	u1097
  2173  0015DE  F000               	nop	
  2174                           
  2175                           ;lcd_utilities.c: 50: temp1 = data;
  2176  0015E0  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2177                           
  2178                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2179  0015E4  3820               	swapf	lcd_write_data@temp1,w,c
  2180  0015E6  0B0F               	andlw	15
  2181  0015E8  6E20               	movwf	lcd_write_data@temp1,c
  2182                           
  2183                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2184  0015EA  5020               	movf	lcd_write_data@temp1,w,c
  2185  0015EC  0B0F               	andlw	15
  2186  0015EE  6E83               	movwf	3971,c	;volatile
  2187                           
  2188                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2189  0015F0  0E7D               	movlw	125
  2190  0015F2  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2191  0015F4  0EAC               	movlw	172
  2192  0015F6                     u1107:
  2193  0015F6  2EE8               	decfsz	wreg,f,c
  2194  0015F8  D7FE               	goto	u1107
  2195  0015FA  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2196  0015FC  D7FC               	goto	u1107
  2197                           
  2198                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2199  0015FE  8C83               	bsf	3971,6,c	;volatile
  2200                           
  2201                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2202  001600  0E7D               	movlw	125
  2203  001602  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2204  001604  0EAC               	movlw	172
  2205  001606                     u1117:
  2206  001606  2EE8               	decfsz	wreg,f,c
  2207  001608  D7FE               	goto	u1117
  2208  00160A  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2209  00160C  D7FC               	goto	u1117
  2210                           
  2211                           ;lcd_utilities.c: 57: lcd_strobe();
  2212  00160E  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2213                           
  2214                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2215  001612  0E7D               	movlw	125
  2216  001614  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2217  001616  0EAC               	movlw	172
  2218  001618                     u1127:
  2219  001618  2EE8               	decfsz	wreg,f,c
  2220  00161A  D7FE               	goto	u1127
  2221  00161C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2222  00161E  D7FC               	goto	u1127
  2223                           
  2224                           ;lcd_utilities.c: 60: temp1 = data;
  2225  001620  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  2226                           
  2227                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2228  001624  5020               	movf	lcd_write_data@temp1,w,c
  2229  001626  0B0F               	andlw	15
  2230  001628  6E83               	movwf	3971,c	;volatile
  2231                           
  2232                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2233  00162A  0E7D               	movlw	125
  2234  00162C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2235  00162E  0EAC               	movlw	172
  2236  001630                     u1137:
  2237  001630  2EE8               	decfsz	wreg,f,c
  2238  001632  D7FE               	goto	u1137
  2239  001634  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2240  001636  D7FC               	goto	u1137
  2241                           
  2242                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2243  001638  8C83               	bsf	3971,6,c	;volatile
  2244                           
  2245                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2246  00163A  0E9C               	movlw	156
  2247  00163C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2248  00163E  0ED7               	movlw	215
  2249  001640                     u1147:
  2250  001640  2EE8               	decfsz	wreg,f,c
  2251  001642  D7FE               	goto	u1147
  2252  001644  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2253  001646  D7FC               	goto	u1147
  2254  001648  F000               	nop	
  2255                           
  2256                           ;lcd_utilities.c: 66: lcd_strobe();
  2257  00164A  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2258                           
  2259                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2260  00164E  0E9C               	movlw	156
  2261  001650  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2262  001652  0ED7               	movlw	215
  2263  001654                     u1157:
  2264  001654  2EE8               	decfsz	wreg,f,c
  2265  001656  D7FE               	goto	u1157
  2266  001658  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2267  00165A  D7FC               	goto	u1157
  2268  00165C  F000               	nop	
  2269  00165E  0012               	return		;funcret
  2270  001660                     __end_of_lcd_write_data:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           intcon2	equ	0xFF1
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           plusw1	equ	0xFE3
  2284                           fsr1l	equ	0xFE1
  2285                           indf2	equ	0xFDF
  2286                           plusw2	equ	0xFDB
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _lcd_write_cmd *****************
  2292 ;; Defined at:
  2293 ;;		line 18 in file "lcd_utilities.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  cmd             1    wreg     unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  cmd             1   30[COMRAM] unsigned char 
  2298 ;;  temp2           1   31[COMRAM] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0
  2309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2310 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2312 ;;Total ram usage:        3 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    4
  2315 ;; This function calls:
  2316 ;;		_lcd_strobe
  2317 ;; This function is called by:
  2318 ;;		_lcd_init
  2319 ;;		_SetupTime
  2320 ;;		_SetupAlarmTimeA
  2321 ;;		_SetupAlarmTimeB
  2322 ;;		_SetupAlarmTimeC
  2323 ;;		_version
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text9
  2328  0018D2                     __ptext9:
  2329                           	opt stack 0
  2330  0018D2                     _lcd_write_cmd:
  2331                           	opt stack 25
  2332                           
  2333                           ;incstack = 0
  2334                           ;lcd_write_cmd@cmd stored from wreg
  2335  0018D2  6E1F               	movwf	lcd_write_cmd@cmd,c
  2336                           
  2337                           ;lcd_utilities.c: 20: unsigned char temp2;
  2338                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2339  0018D4  9C83               	bcf	3971,6,c	;volatile
  2340                           
  2341                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2342  0018D6  0E3F               	movlw	63
  2343  0018D8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2344  0018DA  0E55               	movlw	85
  2345  0018DC                     u1167:
  2346  0018DC  2EE8               	decfsz	wreg,f,c
  2347  0018DE  D7FE               	goto	u1167
  2348  0018E0  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2349  0018E2  D7FC               	goto	u1167
  2350  0018E4  F000               	nop	
  2351                           
  2352                           ;lcd_utilities.c: 23: temp2 = cmd;
  2353  0018E6  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2354                           
  2355                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2356  0018EA  3820               	swapf	lcd_write_cmd@temp2,w,c
  2357  0018EC  0B0F               	andlw	15
  2358  0018EE  6E20               	movwf	lcd_write_cmd@temp2,c
  2359                           
  2360                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2361  0018F0  5020               	movf	lcd_write_cmd@temp2,w,c
  2362  0018F2  0B0F               	andlw	15
  2363  0018F4  6E83               	movwf	3971,c	;volatile
  2364                           
  2365                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2366  0018F6  0E7D               	movlw	125
  2367  0018F8  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2368  0018FA  0EAC               	movlw	172
  2369  0018FC                     u1177:
  2370  0018FC  2EE8               	decfsz	wreg,f,c
  2371  0018FE  D7FE               	goto	u1177
  2372  001900  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2373  001902  D7FC               	goto	u1177
  2374                           
  2375                           ;lcd_utilities.c: 28: lcd_strobe();
  2376  001904  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2377                           
  2378                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2379  001908  0E7D               	movlw	125
  2380  00190A  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2381  00190C  0EAC               	movlw	172
  2382  00190E                     u1187:
  2383  00190E  2EE8               	decfsz	wreg,f,c
  2384  001910  D7FE               	goto	u1187
  2385  001912  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2386  001914  D7FC               	goto	u1187
  2387                           
  2388                           ;lcd_utilities.c: 32: temp2 = cmd;
  2389  001916  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2390                           
  2391                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2392  00191A  5020               	movf	lcd_write_cmd@temp2,w,c
  2393  00191C  0B0F               	andlw	15
  2394  00191E  6E83               	movwf	3971,c	;volatile
  2395                           
  2396                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2397  001920  0E7D               	movlw	125
  2398  001922  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2399  001924  0EAC               	movlw	172
  2400  001926                     u1197:
  2401  001926  2EE8               	decfsz	wreg,f,c
  2402  001928  D7FE               	goto	u1197
  2403  00192A  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2404  00192C  D7FC               	goto	u1197
  2405                           
  2406                           ;lcd_utilities.c: 36: lcd_strobe();
  2407  00192E  ECC5  F00D         	call	_lcd_strobe	;wreg free
  2408                           
  2409                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2410  001932  0E7D               	movlw	125
  2411  001934  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2412  001936  0EAC               	movlw	172
  2413  001938                     u1207:
  2414  001938  2EE8               	decfsz	wreg,f,c
  2415  00193A  D7FE               	goto	u1207
  2416  00193C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2417  00193E  D7FC               	goto	u1207
  2418  001940  0012               	return		;funcret
  2419  001942                     __end_of_lcd_write_cmd:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           intcon	equ	0xFF2
  2428                           intcon2	equ	0xFF1
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           postdec1	equ	0xFE5
  2432                           plusw1	equ	0xFE3
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           plusw2	equ	0xFDB
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _lcd_strobe *****************
  2441 ;; Defined at:
  2442 ;;		line 73 in file "lcd_utilities.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    3
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_lcd_write_cmd
  2467 ;;		_lcd_write_data
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text10
  2472  001B8A                     __ptext10:
  2473                           	opt stack 0
  2474  001B8A                     _lcd_strobe:
  2475                           	opt stack 25
  2476                           
  2477                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2478                           
  2479                           ;incstack = 0
  2480  001B8A  8883               	bsf	3971,4,c	;volatile
  2481                           
  2482                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2483  001B8C  0E7D               	movlw	125
  2484  001B8E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2485  001B90  0EAC               	movlw	172
  2486  001B92                     u1217:
  2487  001B92  2EE8               	decfsz	wreg,f,c
  2488  001B94  D7FE               	goto	u1217
  2489  001B96  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2490  001B98  D7FC               	goto	u1217
  2491                           
  2492                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2493  001B9A  9883               	bcf	3971,4,c	;volatile
  2494                           
  2495                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2496  001B9C  0E7D               	movlw	125
  2497  001B9E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2498  001BA0  0EAC               	movlw	172
  2499  001BA2                     u1227:
  2500  001BA2  2EE8               	decfsz	wreg,f,c
  2501  001BA4  D7FE               	goto	u1227
  2502  001BA6  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2503  001BA8  D7FC               	goto	u1227
  2504  001BAA  0012               	return		;funcret
  2505  001BAC                     __end_of_lcd_strobe:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           intcon	equ	0xFF2
  2514                           intcon2	equ	0xFF1
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           postdec1	equ	0xFE5
  2518                           plusw1	equ	0xFE3
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           plusw2	equ	0xFDB
  2522                           fsr2h	equ	0xFDA
  2523                           fsr2l	equ	0xFD9
  2524                           status	equ	0xFD8
  2525                           
  2526 ;; *************** function _getkey *****************
  2527 ;; Defined at:
  2528 ;;		line 17 in file "keypad_utilities.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2533 ;;  keycode         1   18[BANK0 ] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2546 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2547 ;;Total ram usage:       19 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    3
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_SetupTime
  2554 ;;		_SetupAlarmTimeA
  2555 ;;		_SetupAlarmTimeB
  2556 ;;		_SetupAlarmTimeC
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text11
  2561  001B18                     __ptext11:
  2562                           	opt stack 0
  2563  001B18                     _getkey:
  2564                           	opt stack 26
  2565                           
  2566                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2567                           
  2568                           ;incstack = 0
  2569  001B18  0E1B               	movlw	low getkey@F4270
  2570  001B1A  6EF6               	movwf	tblptrl,c
  2571  001B1C                     	if	1	;There is more than 1 active tblptr byte
  2572  001B1C  0E10               	movlw	high getkey@F4270
  2573  001B1E  6EF7               	movwf	tblptrh,c
  2574  001B20                     	endif
  2575  001B20                     	if	0	;There are less than 3 active tblptr bytes
  2576  001B20                     	endif
  2577  001B20  EE20  F0B4         	lfsr	2,getkey@lookup
  2578  001B24  0E11               	movlw	17
  2579  001B26                     u810:
  2580  001B26  0009               	tblrd		*+
  2581  001B28  CFF5 FFDE          	movff	tablat,postinc2
  2582  001B2C  06E8               	decf	wreg,f,c
  2583  001B2E  E2FB               	bc	u810
  2584  001B30                     l33:
  2585  001B30  AA81               	btfss	3969,5,c	;volatile
  2586  001B32  D7FE               	goto	l33
  2587                           
  2588                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2589  001B34  5081               	movf	3969,w,c	;volatile
  2590  001B36  0B0F               	andlw	15
  2591  001B38  0100               	movlb	0	; () banked
  2592  001B3A  6FC6               	movwf	getkey@keycode& (0+255),b
  2593  001B3C                     l36:
  2594  001B3C  BA81               	btfsc	3969,5,c	;volatile
  2595  001B3E  D7FE               	goto	l36
  2596                           
  2597                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2598  001B40  0100               	movlb	0	; () banked
  2599  001B42  51C6               	movf	getkey@keycode& (0+255),w,b
  2600  001B44  0D01               	mullw	1
  2601  001B46  0EB4               	movlw	low getkey@lookup
  2602  001B48  24F3               	addwf	prodl,w,c
  2603  001B4A  6ED9               	movwf	fsr2l,c
  2604  001B4C  0E00               	movlw	high getkey@lookup
  2605  001B4E  20F4               	addwfc	prodh,w,c
  2606  001B50  6EDA               	movwf	fsr2h,c
  2607  001B52  50DF               	movf	indf2,w,c
  2608  001B54  0012               	return	
  2609  001B56                     __end_of_getkey:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           prodh	equ	0xFF4
  2616                           prodl	equ	0xFF3
  2617                           intcon	equ	0xFF2
  2618                           intcon2	equ	0xFF1
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           postdec1	equ	0xFE5
  2622                           plusw1	equ	0xFE3
  2623                           fsr1l	equ	0xFE1
  2624                           indf2	equ	0xFDF
  2625                           postinc2	equ	0xFDE
  2626                           plusw2	equ	0xFDB
  2627                           fsr2h	equ	0xFDA
  2628                           fsr2l	equ	0xFD9
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _delay_ms *****************
  2632 ;; Defined at:
  2633 ;;		line 10 in file "delays_utilities.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  i               2   28[COMRAM] unsigned int 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  j               2   31[COMRAM] unsigned int 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2647 ;;      Params:         2       0       0       0       0       0       0       0       0
  2648 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2649 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2650 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2651 ;;Total ram usage:        5 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    3
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_SetupTime
  2658 ;;		_SetupAlarmTimeA
  2659 ;;		_SetupAlarmTimeB
  2660 ;;		_SetupAlarmTimeC
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text12
  2665  001B56                     __ptext12:
  2666                           	opt stack 0
  2667  001B56                     _delay_ms:
  2668                           	opt stack 26
  2669                           
  2670                           ;delays_utilities.c: 12: if(i!=0)
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;incstack = 0
  2674  001B56  501D               	movf	delay_ms@i,w,c
  2675  001B58  101E               	iorwf	delay_ms@i+1,w,c
  2676  001B5A  B4D8               	btfsc	status,2,c
  2677  001B5C  0012               	return	
  2678                           
  2679                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2680  001B5E  0E00               	movlw	0
  2681  001B60  6E21               	movwf	delay_ms@j+1,c
  2682  001B62  0E00               	movlw	0
  2683  001B64  6E20               	movwf	delay_ms@j,c
  2684  001B66  D00A               	goto	l179
  2685  001B68                     l1505:
  2686  001B68  0E10               	movlw	16
  2687  001B6A  6E1F               	movwf	??_delay_ms& (0+255),c
  2688  001B6C  0E94               	movlw	148
  2689  001B6E                     u1237:
  2690  001B6E  2EE8               	decfsz	wreg,f,c
  2691  001B70  D7FE               	goto	u1237
  2692  001B72  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2693  001B74  D7FC               	goto	u1237
  2694  001B76  D000               	nop2	
  2695  001B78  4A20               	infsnz	delay_ms@j,f,c
  2696  001B7A  2A21               	incf	delay_ms@j+1,f,c
  2697  001B7C                     l179:
  2698  001B7C  501D               	movf	delay_ms@i,w,c
  2699  001B7E  5C20               	subwf	delay_ms@j,w,c
  2700  001B80  501E               	movf	delay_ms@i+1,w,c
  2701  001B82  5821               	subwfb	delay_ms@j+1,w,c
  2702  001B84  B0D8               	btfsc	status,0,c
  2703  001B86  0012               	return	
  2704  001B88  D7EF               	goto	l1505
  2705  001B8A                     __end_of_delay_ms:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           intcon2	equ	0xFF1
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           plusw1	equ	0xFE3
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           plusw2	equ	0xFDB
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _char_2_int *****************
  2728 ;; Defined at:
  2729 ;;		line 35 in file "Main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  char1           1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  char1           1   28[COMRAM] unsigned char 
  2734 ;;  int1            1   29[COMRAM] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      unsigned char 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0
  2745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2747 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    3
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_SetupTime
  2755 ;;		_SetupAlarmTimeA
  2756 ;;		_SetupAlarmTimeB
  2757 ;;		_SetupAlarmTimeC
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text13
  2762  001860                     __ptext13:
  2763                           	opt stack 0
  2764  001860                     _char_2_int:
  2765                           	opt stack 26
  2766                           
  2767                           ;incstack = 0
  2768                           ;char_2_int@char1 stored from wreg
  2769  001860  6E1D               	movwf	char_2_int@char1,c
  2770                           
  2771                           ;Main.c: 37: unsigned char int1;
  2772                           ;Main.c: 38: switch (char1)
  2773  001862  D015               	goto	l1499
  2774  001864                     l1479:
  2775  001864  0E01               	movlw	1
  2776  001866  D011               	goto	L13
  2777  001868                     l1481:
  2778  001868  0E02               	movlw	2
  2779  00186A  D00F               	goto	L13
  2780  00186C                     l1483:
  2781  00186C  0E03               	movlw	3
  2782  00186E  D00D               	goto	L13
  2783  001870                     l1485:
  2784  001870  0E04               	movlw	4
  2785  001872  D00B               	goto	L13
  2786  001874                     l1487:
  2787  001874  0E05               	movlw	5
  2788  001876  D009               	goto	L13
  2789  001878                     l1489:
  2790  001878  0E06               	movlw	6
  2791  00187A  D007               	goto	L13
  2792  00187C                     l1491:
  2793  00187C  0E07               	movlw	7
  2794  00187E  D005               	goto	L13
  2795  001880                     l1493:
  2796  001880  0E08               	movlw	8
  2797  001882  D003               	goto	L13
  2798  001884                     l1495:
  2799  001884  0E09               	movlw	9
  2800  001886  D001               	goto	L13
  2801  001888                     l1497:
  2802  001888  0E00               	movlw	0
  2803  00188A                     L13:
  2804  00188A  6E1E               	movwf	char_2_int@int1,c
  2805                           
  2806                           ;Main.c: 51: }
  2807  00188C  D020               	goto	l112
  2808  00188E                     l1499:
  2809  00188E  501D               	movf	char_2_int@char1,w,c
  2810                           
  2811                           ; Switch size 1, requested type "space"
  2812                           ; Number of cases is 10, Range of values is 48 to 57
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte           31    16 (average)
  2816                           ;	Chosen strategy is simple_byte
  2817  001890  0A30               	xorlw	48	; case 48
  2818  001892  B4D8               	btfsc	status,2,c
  2819  001894  D7F9               	goto	l1497
  2820  001896  0A01               	xorlw	1	; case 49
  2821  001898  B4D8               	btfsc	status,2,c
  2822  00189A  D7E4               	goto	l1479
  2823  00189C  0A03               	xorlw	3	; case 50
  2824  00189E  B4D8               	btfsc	status,2,c
  2825  0018A0  D7E3               	goto	l1481
  2826  0018A2  0A01               	xorlw	1	; case 51
  2827  0018A4  B4D8               	btfsc	status,2,c
  2828  0018A6  D7E2               	goto	l1483
  2829  0018A8  0A07               	xorlw	7	; case 52
  2830  0018AA  B4D8               	btfsc	status,2,c
  2831  0018AC  D7E1               	goto	l1485
  2832  0018AE  0A01               	xorlw	1	; case 53
  2833  0018B0  B4D8               	btfsc	status,2,c
  2834  0018B2  D7E0               	goto	l1487
  2835  0018B4  0A03               	xorlw	3	; case 54
  2836  0018B6  B4D8               	btfsc	status,2,c
  2837  0018B8  D7DF               	goto	l1489
  2838  0018BA  0A01               	xorlw	1	; case 55
  2839  0018BC  B4D8               	btfsc	status,2,c
  2840  0018BE  D7DE               	goto	l1491
  2841  0018C0  0A0F               	xorlw	15	; case 56
  2842  0018C2  B4D8               	btfsc	status,2,c
  2843  0018C4  D7DD               	goto	l1493
  2844  0018C6  0A01               	xorlw	1	; case 57
  2845  0018C8  B4D8               	btfsc	status,2,c
  2846  0018CA  D7DC               	goto	l1495
  2847  0018CC  D7DD               	goto	l1497
  2848  0018CE                     l112:
  2849                           
  2850                           ;Main.c: 52: return(int1);
  2851  0018CE  501E               	movf	char_2_int@int1,w,c
  2852  0018D0  0012               	return		;funcret
  2853  0018D2                     __end_of_char_2_int:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           intcon2	equ	0xFF1
  2863                           postinc0	equ	0xFEE
  2864                           wreg	equ	0xFE8
  2865                           postdec1	equ	0xFE5
  2866                           plusw1	equ	0xFE3
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           plusw2	equ	0xFDB
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _ISR_Timer0_Int *****************
  2876 ;; Defined at:
  2877 ;;		line 55 in file "Main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  second10        1   27[COMRAM] unsigned char 
  2882 ;;  minute10        1   26[COMRAM] unsigned char 
  2883 ;;  hour10          1   25[COMRAM] unsigned char 
  2884 ;;  second1         1   24[COMRAM] unsigned char 
  2885 ;;  minute1         1   23[COMRAM] unsigned char 
  2886 ;;  hour1           1   22[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2898 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2899 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:       20 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		___awdiv
  2905 ;;		_int_2_char
  2906 ;;		i2_lcd_write_cmd
  2907 ;;		i2_lcd_write_data
  2908 ;; This function is called by:
  2909 ;;		Interrupt level 2
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	intcode
  2914  001008                     __pintcode:
  2915                           	opt stack 0
  2916  001008                     _ISR_Timer0_Int:
  2917                           	opt stack 25
  2918                           
  2919                           ;incstack = 0
  2920  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2921  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2922  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2923  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2924                           pclatu	equ	0xFFB
  2925                           pclath	equ	0xFFA
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           intcon2	equ	0xFF1
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           postdec1	equ	0xFE5
  2937                           plusw1	equ	0xFE3
  2938                           fsr1l	equ	0xFE1
  2939                           indf2	equ	0xFDF
  2940                           postinc2	equ	0xFDE
  2941                           plusw2	equ	0xFDB
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946                           	psect	intcode_body
  2947  00102E                     __pintcode_body:
  2948                           	opt stack 25
  2949  00102E                     int_func:
  2950                           	opt stack 25
  2951  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2952  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2953  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2954  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2955  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2956  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2957  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2958  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2959  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2960  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2961  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2962  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2963  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2964                           
  2965                           ;Main.c: 57: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2966                           ;Main.c: 58: if (INTCONbits.TMR0IF == 1)
  2967  001060  A4F2               	btfss	intcon,2,c	;volatile
  2968  001062  D085               	goto	i2l130
  2969                           
  2970                           ;Main.c: 59: {
  2971                           ;Main.c: 63: second = second + 1;
  2972  001064  2841               	incf	_second,w,c
  2973  001066  6E41               	movwf	_second,c
  2974                           
  2975                           ;Main.c: 64: if ( second > 59 )
  2976  001068  0E3B               	movlw	59
  2977  00106A  6441               	cpfsgt	_second,c
  2978  00106C  D010               	goto	i2l1855
  2979                           
  2980                           ;Main.c: 65: {
  2981                           ;Main.c: 66: second = 0;
  2982  00106E  0E00               	movlw	0
  2983  001070  6E41               	movwf	_second,c
  2984                           
  2985                           ;Main.c: 67: minute = minute + 1;
  2986  001072  283D               	incf	_minute,w,c
  2987  001074  6E3D               	movwf	_minute,c
  2988                           
  2989                           ;Main.c: 68: if ( minute > 59 )
  2990  001076  0E3B               	movlw	59
  2991  001078  643D               	cpfsgt	_minute,c
  2992  00107A  D009               	goto	i2l1855
  2993                           
  2994                           ;Main.c: 69: {
  2995                           ;Main.c: 70: minute = 0;
  2996  00107C  0E00               	movlw	0
  2997  00107E  6E3D               	movwf	_minute,c
  2998                           
  2999                           ;Main.c: 71: hour = hour + 1;
  3000  001080  2839               	incf	_hour,w,c
  3001  001082  6E39               	movwf	_hour,c
  3002                           
  3003                           ;Main.c: 72: if ( hour > 23 )
  3004  001084  0E17               	movlw	23
  3005  001086  6439               	cpfsgt	_hour,c
  3006  001088  D002               	goto	i2l1855
  3007                           
  3008                           ;Main.c: 73: hour = 0;
  3009  00108A  0E00               	movlw	0
  3010  00108C  6E39               	movwf	_hour,c
  3011  00108E                     i2l1855:
  3012                           
  3013                           ;Main.c: 74: }
  3014                           ;Main.c: 75: }
  3015                           ;Main.c: 77: hour10 = hour / 10;
  3016  00108E  C039  F001         	movff	_hour,___awdiv@dividend
  3017  001092  6A02               	clrf	___awdiv@dividend+1,c
  3018  001094  0E00               	movlw	0
  3019  001096  6E04               	movwf	___awdiv@divisor+1,c
  3020  001098  0E0A               	movlw	10
  3021  00109A  6E03               	movwf	___awdiv@divisor,c
  3022  00109C  EC7A  F00B         	call	___awdiv	;wreg free
  3023  0010A0  5001               	movf	?___awdiv,w,c
  3024  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3025                           
  3026                           ;Main.c: 78: hour1 = hour - hour10 * 10;
  3027  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3028  0010A6  0D0A               	mullw	10
  3029  0010A8  50F3               	movf	prodl,w,c
  3030  0010AA  0800               	sublw	0
  3031  0010AC  2439               	addwf	_hour,w,c
  3032  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3033                           
  3034                           ;Main.c: 80: minute10 = minute / 10;
  3035  0010B0  C03D  F001         	movff	_minute,___awdiv@dividend
  3036  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3037  0010B6  0E00               	movlw	0
  3038  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3039  0010BA  0E0A               	movlw	10
  3040  0010BC  6E03               	movwf	___awdiv@divisor,c
  3041  0010BE  EC7A  F00B         	call	___awdiv	;wreg free
  3042  0010C2  5001               	movf	?___awdiv,w,c
  3043  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3044                           
  3045                           ;Main.c: 81: minute1 = minute - minute10 * 10;
  3046  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3047  0010C8  0D0A               	mullw	10
  3048  0010CA  50F3               	movf	prodl,w,c
  3049  0010CC  0800               	sublw	0
  3050  0010CE  243D               	addwf	_minute,w,c
  3051  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3052                           
  3053                           ;Main.c: 83: second10 = second / 10;
  3054  0010D2  C041  F001         	movff	_second,___awdiv@dividend
  3055  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3056  0010D8  0E00               	movlw	0
  3057  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3058  0010DC  0E0A               	movlw	10
  3059  0010DE  6E03               	movwf	___awdiv@divisor,c
  3060  0010E0  EC7A  F00B         	call	___awdiv	;wreg free
  3061  0010E4  5001               	movf	?___awdiv,w,c
  3062  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3063                           
  3064                           ;Main.c: 84: second1 = second - second10 * 10;
  3065  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3066  0010EA  0D0A               	mullw	10
  3067  0010EC  50F3               	movf	prodl,w,c
  3068  0010EE  0800               	sublw	0
  3069  0010F0  2441               	addwf	_second,w,c
  3070  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3071                           
  3072                           ;Main.c: 86: lcd_write_cmd(0x80);
  3073  0010F4  0E80               	movlw	128
  3074  0010F6  ECA1  F00C         	call	i2_lcd_write_cmd
  3075                           
  3076                           ;Main.c: 87: lcd_write_data('t');
  3077  0010FA  0E74               	movlw	116
  3078  0010FC  EC30  F00B         	call	i2_lcd_write_data
  3079                           
  3080                           ;Main.c: 88: lcd_write_data('i');
  3081  001100  0E69               	movlw	105
  3082  001102  EC30  F00B         	call	i2_lcd_write_data
  3083                           
  3084                           ;Main.c: 89: lcd_write_data('m');
  3085  001106  0E6D               	movlw	109
  3086  001108  EC30  F00B         	call	i2_lcd_write_data
  3087                           
  3088                           ;Main.c: 90: lcd_write_data('e');
  3089  00110C  0E65               	movlw	101
  3090  00110E  EC30  F00B         	call	i2_lcd_write_data
  3091                           
  3092                           ;Main.c: 91: lcd_write_data(' ');
  3093  001112  0E20               	movlw	32
  3094  001114  EC30  F00B         	call	i2_lcd_write_data
  3095                           
  3096                           ;Main.c: 92: lcd_write_data('=');
  3097  001118  0E3D               	movlw	61
  3098  00111A  EC30  F00B         	call	i2_lcd_write_data
  3099                           
  3100                           ;Main.c: 93: lcd_write_data(' ');
  3101  00111E  0E20               	movlw	32
  3102  001120  EC30  F00B         	call	i2_lcd_write_data
  3103                           
  3104                           ;Main.c: 94: lcd_write_data(int_2_char (hour10));
  3105  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3106  001126  ECBC  F00B         	call	_int_2_char
  3107  00112A  EC30  F00B         	call	i2_lcd_write_data
  3108                           
  3109                           ;Main.c: 95: lcd_write_data(int_2_char (hour1));
  3110  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3111  001130  ECBC  F00B         	call	_int_2_char
  3112  001134  EC30  F00B         	call	i2_lcd_write_data
  3113                           
  3114                           ;Main.c: 96: lcd_write_data(':');
  3115  001138  0E3A               	movlw	58
  3116  00113A  EC30  F00B         	call	i2_lcd_write_data
  3117                           
  3118                           ;Main.c: 97: lcd_write_data(int_2_char (minute10));
  3119  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3120  001140  ECBC  F00B         	call	_int_2_char
  3121  001144  EC30  F00B         	call	i2_lcd_write_data
  3122                           
  3123                           ;Main.c: 98: lcd_write_data(int_2_char (minute1));
  3124  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3125  00114A  ECBC  F00B         	call	_int_2_char
  3126  00114E  EC30  F00B         	call	i2_lcd_write_data
  3127                           
  3128                           ;Main.c: 99: lcd_write_data(':');
  3129  001152  0E3A               	movlw	58
  3130  001154  EC30  F00B         	call	i2_lcd_write_data
  3131                           
  3132                           ;Main.c: 100: lcd_write_data(int_2_char (second10));
  3133  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3134  00115A  ECBC  F00B         	call	_int_2_char
  3135  00115E  EC30  F00B         	call	i2_lcd_write_data
  3136                           
  3137                           ;Main.c: 101: lcd_write_data(int_2_char (second1));
  3138  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3139  001164  ECBC  F00B         	call	_int_2_char
  3140  001168  EC30  F00B         	call	i2_lcd_write_data
  3141                           
  3142                           ;Main.c: 103: INTCONbits.TMR0IF = 0;
  3143  00116C  94F2               	bcf	intcon,2,c	;volatile
  3144  00116E                     i2l130:
  3145  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3146  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3147  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3148  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3149  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3150  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3151  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3152  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3153  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3154  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3155  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3156  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3157  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3158  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3159  0011A6  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3160  0011A8  0011               	retfie		f
  3161  0011AA                     __end_of_ISR_Timer0_Int:
  3162                           	opt stack 0
  3163                           pclatu	equ	0xFFB
  3164                           pclath	equ	0xFFA
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           intcon2	equ	0xFF1
  3173                           postinc0	equ	0xFEE
  3174                           fsr0h	equ	0xFEA
  3175                           fsr0l	equ	0xFE9
  3176                           wreg	equ	0xFE8
  3177                           postdec1	equ	0xFE5
  3178                           plusw1	equ	0xFE3
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           indf2	equ	0xFDF
  3182                           postinc2	equ	0xFDE
  3183                           plusw2	equ	0xFDB
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function i2_lcd_write_data *****************
  3189 ;; Defined at:
  3190 ;;		line 43 in file "lcd_utilities.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  data            1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  data            1    2[COMRAM] unsigned char 
  3195 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        3 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		i2_lcd_strobe
  3214 ;; This function is called by:
  3215 ;;		_ISR_Timer0_Int
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text15
  3220  001660                     __ptext15:
  3221                           	opt stack 0
  3222  001660                     i2_lcd_write_data:
  3223                           	opt stack 25
  3224                           
  3225                           ;incstack = 0
  3226                           ;i2lcd_write_data@data stored from wreg
  3227  001660  6E03               	movwf	i2lcd_write_data@data,c
  3228                           
  3229                           ;lcd_utilities.c: 45: char temp1;
  3230                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3231  001662  8C83               	bsf	3971,6,c	;volatile
  3232                           
  3233                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3234  001664  0E3F               	movlw	63
  3235  001666  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3236  001668  0E55               	movlw	85
  3237  00166A                     i2u124_47:
  3238  00166A  2EE8               	decfsz	wreg,f,c
  3239  00166C  D7FE               	goto	i2u124_47
  3240  00166E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3241  001670  D7FC               	goto	i2u124_47
  3242  001672  F000               	nop	
  3243                           
  3244                           ;lcd_utilities.c: 50: temp1 = data;
  3245  001674  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3246                           
  3247                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3248  001678  3804               	swapf	i2lcd_write_data@temp1,w,c
  3249  00167A  0B0F               	andlw	15
  3250  00167C  6E04               	movwf	i2lcd_write_data@temp1,c
  3251                           
  3252                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3253  00167E  5004               	movf	i2lcd_write_data@temp1,w,c
  3254  001680  0B0F               	andlw	15
  3255  001682  6E83               	movwf	3971,c	;volatile
  3256                           
  3257                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3258  001684  0E7D               	movlw	125
  3259  001686  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3260  001688  0EAC               	movlw	172
  3261  00168A                     i2u125_47:
  3262  00168A  2EE8               	decfsz	wreg,f,c
  3263  00168C  D7FE               	goto	i2u125_47
  3264  00168E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3265  001690  D7FC               	goto	i2u125_47
  3266                           
  3267                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3268  001692  8C83               	bsf	3971,6,c	;volatile
  3269                           
  3270                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3271  001694  0E7D               	movlw	125
  3272  001696  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3273  001698  0EAC               	movlw	172
  3274  00169A                     i2u126_47:
  3275  00169A  2EE8               	decfsz	wreg,f,c
  3276  00169C  D7FE               	goto	i2u126_47
  3277  00169E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3278  0016A0  D7FC               	goto	i2u126_47
  3279                           
  3280                           ;lcd_utilities.c: 57: lcd_strobe();
  3281  0016A2  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3282                           
  3283                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3284  0016A6  0E7D               	movlw	125
  3285  0016A8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3286  0016AA  0EAC               	movlw	172
  3287  0016AC                     i2u127_47:
  3288  0016AC  2EE8               	decfsz	wreg,f,c
  3289  0016AE  D7FE               	goto	i2u127_47
  3290  0016B0  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3291  0016B2  D7FC               	goto	i2u127_47
  3292                           
  3293                           ;lcd_utilities.c: 60: temp1 = data;
  3294  0016B4  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3295                           
  3296                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3297  0016B8  5004               	movf	i2lcd_write_data@temp1,w,c
  3298  0016BA  0B0F               	andlw	15
  3299  0016BC  6E83               	movwf	3971,c	;volatile
  3300                           
  3301                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3302  0016BE  0E7D               	movlw	125
  3303  0016C0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3304  0016C2  0EAC               	movlw	172
  3305  0016C4                     i2u128_47:
  3306  0016C4  2EE8               	decfsz	wreg,f,c
  3307  0016C6  D7FE               	goto	i2u128_47
  3308  0016C8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3309  0016CA  D7FC               	goto	i2u128_47
  3310                           
  3311                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3312  0016CC  8C83               	bsf	3971,6,c	;volatile
  3313                           
  3314                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3315  0016CE  0E9C               	movlw	156
  3316  0016D0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3317  0016D2  0ED7               	movlw	215
  3318  0016D4                     i2u129_47:
  3319  0016D4  2EE8               	decfsz	wreg,f,c
  3320  0016D6  D7FE               	goto	i2u129_47
  3321  0016D8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3322  0016DA  D7FC               	goto	i2u129_47
  3323  0016DC  F000               	nop	
  3324                           
  3325                           ;lcd_utilities.c: 66: lcd_strobe();
  3326  0016DE  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3327                           
  3328                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3329  0016E2  0E9C               	movlw	156
  3330  0016E4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3331  0016E6  0ED7               	movlw	215
  3332  0016E8                     i2u130_47:
  3333  0016E8  2EE8               	decfsz	wreg,f,c
  3334  0016EA  D7FE               	goto	i2u130_47
  3335  0016EC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3336  0016EE  D7FC               	goto	i2u130_47
  3337  0016F0  F000               	nop	
  3338  0016F2  0012               	return		;funcret
  3339  0016F4                     __end_ofi2_lcd_write_data:
  3340                           	opt stack 0
  3341                           pclatu	equ	0xFFB
  3342                           pclath	equ	0xFFA
  3343                           tblptru	equ	0xFF8
  3344                           tblptrh	equ	0xFF7
  3345                           tblptrl	equ	0xFF6
  3346                           tablat	equ	0xFF5
  3347                           prodh	equ	0xFF4
  3348                           prodl	equ	0xFF3
  3349                           intcon	equ	0xFF2
  3350                           intcon2	equ	0xFF1
  3351                           postinc0	equ	0xFEE
  3352                           fsr0h	equ	0xFEA
  3353                           fsr0l	equ	0xFE9
  3354                           wreg	equ	0xFE8
  3355                           postdec1	equ	0xFE5
  3356                           plusw1	equ	0xFE3
  3357                           fsr1h	equ	0xFE2
  3358                           fsr1l	equ	0xFE1
  3359                           indf2	equ	0xFDF
  3360                           postinc2	equ	0xFDE
  3361                           plusw2	equ	0xFDB
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function i2_lcd_write_cmd *****************
  3367 ;; Defined at:
  3368 ;;		line 18 in file "lcd_utilities.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  cmd             1    wreg     unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  cmd             1    2[COMRAM] unsigned char 
  3373 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0
  3384 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3385 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3386 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3387 ;;Total ram usage:        3 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    1
  3390 ;; This function calls:
  3391 ;;		i2_lcd_strobe
  3392 ;; This function is called by:
  3393 ;;		_ISR_Timer0_Int
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text16
  3398  001942                     __ptext16:
  3399                           	opt stack 0
  3400  001942                     i2_lcd_write_cmd:
  3401                           	opt stack 25
  3402                           
  3403                           ;incstack = 0
  3404                           ;i2lcd_write_cmd@cmd stored from wreg
  3405  001942  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3406                           
  3407                           ;lcd_utilities.c: 20: unsigned char temp2;
  3408                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3409  001944  9C83               	bcf	3971,6,c	;volatile
  3410                           
  3411                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3412  001946  0E3F               	movlw	63
  3413  001948  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3414  00194A  0E55               	movlw	85
  3415  00194C                     i2u131_47:
  3416  00194C  2EE8               	decfsz	wreg,f,c
  3417  00194E  D7FE               	goto	i2u131_47
  3418  001950  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3419  001952  D7FC               	goto	i2u131_47
  3420  001954  F000               	nop	
  3421                           
  3422                           ;lcd_utilities.c: 23: temp2 = cmd;
  3423  001956  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3424                           
  3425                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3426  00195A  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3427  00195C  0B0F               	andlw	15
  3428  00195E  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3429                           
  3430                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3431  001960  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3432  001962  0B0F               	andlw	15
  3433  001964  6E83               	movwf	3971,c	;volatile
  3434                           
  3435                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3436  001966  0E7D               	movlw	125
  3437  001968  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3438  00196A  0EAC               	movlw	172
  3439  00196C                     i2u132_47:
  3440  00196C  2EE8               	decfsz	wreg,f,c
  3441  00196E  D7FE               	goto	i2u132_47
  3442  001970  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3443  001972  D7FC               	goto	i2u132_47
  3444                           
  3445                           ;lcd_utilities.c: 28: lcd_strobe();
  3446  001974  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3447                           
  3448                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3449  001978  0E7D               	movlw	125
  3450  00197A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3451  00197C  0EAC               	movlw	172
  3452  00197E                     i2u133_47:
  3453  00197E  2EE8               	decfsz	wreg,f,c
  3454  001980  D7FE               	goto	i2u133_47
  3455  001982  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3456  001984  D7FC               	goto	i2u133_47
  3457                           
  3458                           ;lcd_utilities.c: 32: temp2 = cmd;
  3459  001986  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3460                           
  3461                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3462  00198A  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3463  00198C  0B0F               	andlw	15
  3464  00198E  6E83               	movwf	3971,c	;volatile
  3465                           
  3466                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3467  001990  0E7D               	movlw	125
  3468  001992  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3469  001994  0EAC               	movlw	172
  3470  001996                     i2u134_47:
  3471  001996  2EE8               	decfsz	wreg,f,c
  3472  001998  D7FE               	goto	i2u134_47
  3473  00199A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3474  00199C  D7FC               	goto	i2u134_47
  3475                           
  3476                           ;lcd_utilities.c: 36: lcd_strobe();
  3477  00199E  ECD6  F00D         	call	i2_lcd_strobe	;wreg free
  3478                           
  3479                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3480  0019A2  0E7D               	movlw	125
  3481  0019A4  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3482  0019A6  0EAC               	movlw	172
  3483  0019A8                     i2u135_47:
  3484  0019A8  2EE8               	decfsz	wreg,f,c
  3485  0019AA  D7FE               	goto	i2u135_47
  3486  0019AC  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3487  0019AE  D7FC               	goto	i2u135_47
  3488  0019B0  0012               	return		;funcret
  3489  0019B2                     __end_ofi2_lcd_write_cmd:
  3490                           	opt stack 0
  3491                           pclatu	equ	0xFFB
  3492                           pclath	equ	0xFFA
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           intcon2	equ	0xFF1
  3501                           postinc0	equ	0xFEE
  3502                           fsr0h	equ	0xFEA
  3503                           fsr0l	equ	0xFE9
  3504                           wreg	equ	0xFE8
  3505                           postdec1	equ	0xFE5
  3506                           plusw1	equ	0xFE3
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           plusw2	equ	0xFDB
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function i2_lcd_strobe *****************
  3517 ;; Defined at:
  3518 ;;		line 73 in file "lcd_utilities.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3534 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3535 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        1 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		i2_lcd_write_cmd
  3542 ;;		i2_lcd_write_data
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text17
  3547  001BAC                     __ptext17:
  3548                           	opt stack 0
  3549  001BAC                     i2_lcd_strobe:
  3550                           	opt stack 25
  3551                           
  3552                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3553                           
  3554                           ;incstack = 0
  3555  001BAC  8883               	bsf	3971,4,c	;volatile
  3556                           
  3557                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3558  001BAE  0E7D               	movlw	125
  3559  001BB0  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3560  001BB2  0EAC               	movlw	172
  3561  001BB4                     i2u136_47:
  3562  001BB4  2EE8               	decfsz	wreg,f,c
  3563  001BB6  D7FE               	goto	i2u136_47
  3564  001BB8  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3565  001BBA  D7FC               	goto	i2u136_47
  3566                           
  3567                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3568  001BBC  9883               	bcf	3971,4,c	;volatile
  3569                           
  3570                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3571  001BBE  0E7D               	movlw	125
  3572  001BC0  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3573  001BC2  0EAC               	movlw	172
  3574  001BC4                     i2u137_47:
  3575  001BC4  2EE8               	decfsz	wreg,f,c
  3576  001BC6  D7FE               	goto	i2u137_47
  3577  001BC8  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3578  001BCA  D7FC               	goto	i2u137_47
  3579  001BCC  0012               	return		;funcret
  3580  001BCE                     __end_ofi2_lcd_strobe:
  3581                           	opt stack 0
  3582                           pclatu	equ	0xFFB
  3583                           pclath	equ	0xFFA
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           prodh	equ	0xFF4
  3589                           prodl	equ	0xFF3
  3590                           intcon	equ	0xFF2
  3591                           intcon2	equ	0xFF1
  3592                           postinc0	equ	0xFEE
  3593                           fsr0h	equ	0xFEA
  3594                           fsr0l	equ	0xFE9
  3595                           wreg	equ	0xFE8
  3596                           postdec1	equ	0xFE5
  3597                           plusw1	equ	0xFE3
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           plusw2	equ	0xFDB
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8
  3606                           
  3607 ;; *************** function _int_2_char *****************
  3608 ;; Defined at:
  3609 ;;		line 15 in file "Main.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  int1            1    wreg     unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  int1            1    0[COMRAM] unsigned char 
  3614 ;;  char1           1    1[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0
  3625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3627 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3628 ;;Total ram usage:        2 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_ISR_Timer0_Int
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text18
  3638  001778                     __ptext18:
  3639                           	opt stack 0
  3640  001778                     _int_2_char:
  3641                           	opt stack 26
  3642                           
  3643                           ;incstack = 0
  3644                           ;int_2_char@int1 stored from wreg
  3645  001778  6E01               	movwf	int_2_char@int1,c
  3646                           
  3647                           ;Main.c: 17: char char1;
  3648                           ;Main.c: 18: switch (int1)
  3649  00177A  D017               	goto	i2l961
  3650  00177C                     i2l939:
  3651  00177C  0E30               	movlw	48
  3652  00177E  D013               	goto	L23
  3653  001780                     i2l941:
  3654  001780  0E31               	movlw	49
  3655  001782  D011               	goto	L23
  3656  001784                     i2l943:
  3657  001784  0E32               	movlw	50
  3658  001786  D00F               	goto	L23
  3659  001788                     i2l945:
  3660  001788  0E33               	movlw	51
  3661  00178A  D00D               	goto	L23
  3662  00178C                     i2l947:
  3663  00178C  0E34               	movlw	52
  3664  00178E  D00B               	goto	L23
  3665  001790                     i2l949:
  3666  001790  0E35               	movlw	53
  3667  001792  D009               	goto	L23
  3668  001794                     i2l951:
  3669  001794  0E36               	movlw	54
  3670  001796  D007               	goto	L23
  3671  001798                     i2l953:
  3672  001798  0E37               	movlw	55
  3673  00179A  D005               	goto	L23
  3674  00179C                     i2l955:
  3675  00179C  0E38               	movlw	56
  3676  00179E  D003               	goto	L23
  3677  0017A0                     i2l957:
  3678  0017A0  0E39               	movlw	57
  3679  0017A2  D001               	goto	L23
  3680  0017A4                     i2l959:
  3681  0017A4  0E3F               	movlw	63
  3682  0017A6                     L23:
  3683  0017A6  6E02               	movwf	int_2_char@char1,c
  3684                           
  3685                           ;Main.c: 31: }
  3686  0017A8  D020               	goto	i2l96
  3687  0017AA                     i2l961:
  3688  0017AA  5001               	movf	int_2_char@int1,w,c
  3689                           
  3690                           ; Switch size 1, requested type "space"
  3691                           ; Number of cases is 10, Range of values is 0 to 9
  3692                           ; switch strategies available:
  3693                           ; Name         Instructions Cycles
  3694                           ; simple_byte           31    16 (average)
  3695                           ;	Chosen strategy is simple_byte
  3696  0017AC  0A00               	xorlw	0	; case 0
  3697  0017AE  B4D8               	btfsc	status,2,c
  3698  0017B0  D7E5               	goto	i2l939
  3699  0017B2  0A01               	xorlw	1	; case 1
  3700  0017B4  B4D8               	btfsc	status,2,c
  3701  0017B6  D7E4               	goto	i2l941
  3702  0017B8  0A03               	xorlw	3	; case 2
  3703  0017BA  B4D8               	btfsc	status,2,c
  3704  0017BC  D7E3               	goto	i2l943
  3705  0017BE  0A01               	xorlw	1	; case 3
  3706  0017C0  B4D8               	btfsc	status,2,c
  3707  0017C2  D7E2               	goto	i2l945
  3708  0017C4  0A07               	xorlw	7	; case 4
  3709  0017C6  B4D8               	btfsc	status,2,c
  3710  0017C8  D7E1               	goto	i2l947
  3711  0017CA  0A01               	xorlw	1	; case 5
  3712  0017CC  B4D8               	btfsc	status,2,c
  3713  0017CE  D7E0               	goto	i2l949
  3714  0017D0  0A03               	xorlw	3	; case 6
  3715  0017D2  B4D8               	btfsc	status,2,c
  3716  0017D4  D7DF               	goto	i2l951
  3717  0017D6  0A01               	xorlw	1	; case 7
  3718  0017D8  B4D8               	btfsc	status,2,c
  3719  0017DA  D7DE               	goto	i2l953
  3720  0017DC  0A0F               	xorlw	15	; case 8
  3721  0017DE  B4D8               	btfsc	status,2,c
  3722  0017E0  D7DD               	goto	i2l955
  3723  0017E2  0A01               	xorlw	1	; case 9
  3724  0017E4  B4D8               	btfsc	status,2,c
  3725  0017E6  D7DC               	goto	i2l957
  3726  0017E8  D7DD               	goto	i2l959
  3727  0017EA                     i2l96:
  3728                           
  3729                           ;Main.c: 32: return(char1);
  3730  0017EA  5002               	movf	int_2_char@char1,w,c
  3731  0017EC  0012               	return		;funcret
  3732  0017EE                     __end_of_int_2_char:
  3733                           	opt stack 0
  3734                           pclatu	equ	0xFFB
  3735                           pclath	equ	0xFFA
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           intcon	equ	0xFF2
  3743                           intcon2	equ	0xFF1
  3744                           postinc0	equ	0xFEE
  3745                           fsr0h	equ	0xFEA
  3746                           fsr0l	equ	0xFE9
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           plusw1	equ	0xFE3
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           plusw2	equ	0xFDB
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function ___awdiv *****************
  3760 ;; Defined at:
  3761 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  dividend        2    0[COMRAM] int 
  3764 ;;  divisor         2    2[COMRAM] int 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  quotient        2    6[COMRAM] int 
  3767 ;;  sign            1    5[COMRAM] unsigned char 
  3768 ;;  counter         1    4[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    0[COMRAM] int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         4       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        8 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_ISR_Timer0_Int
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text19
  3792  0016F4                     __ptext19:
  3793                           	opt stack 0
  3794  0016F4                     ___awdiv:
  3795                           	opt stack 26
  3796                           
  3797                           ;incstack = 0
  3798  0016F4  0E00               	movlw	0
  3799  0016F6  6E06               	movwf	___awdiv@sign,c
  3800  0016F8  AE04               	btfss	___awdiv@divisor+1,7,c
  3801  0016FA  D006               	goto	i2l1741
  3802  0016FC  6C03               	negf	___awdiv@divisor,c
  3803  0016FE  1E04               	comf	___awdiv@divisor+1,f,c
  3804  001700  B0D8               	btfsc	status,0,c
  3805  001702  2A04               	incf	___awdiv@divisor+1,f,c
  3806  001704  0E01               	movlw	1
  3807  001706  6E06               	movwf	___awdiv@sign,c
  3808  001708                     i2l1741:
  3809  001708  AE02               	btfss	___awdiv@dividend+1,7,c
  3810  00170A  D006               	goto	i2l1747
  3811  00170C  6C01               	negf	___awdiv@dividend,c
  3812  00170E  1E02               	comf	___awdiv@dividend+1,f,c
  3813  001710  B0D8               	btfsc	status,0,c
  3814  001712  2A02               	incf	___awdiv@dividend+1,f,c
  3815  001714  0E01               	movlw	1
  3816  001716  1A06               	xorwf	___awdiv@sign,f,c
  3817  001718                     i2l1747:
  3818  001718  0E00               	movlw	0
  3819  00171A  6E08               	movwf	___awdiv@quotient+1,c
  3820  00171C  0E00               	movlw	0
  3821  00171E  6E07               	movwf	___awdiv@quotient,c
  3822  001720  5003               	movf	___awdiv@divisor,w,c
  3823  001722  1004               	iorwf	___awdiv@divisor+1,w,c
  3824  001724  B4D8               	btfsc	status,2,c
  3825  001726  D01C               	goto	i2l1769
  3826  001728  0E01               	movlw	1
  3827  00172A  6E05               	movwf	___awdiv@counter,c
  3828  00172C  D004               	goto	i2l1755
  3829  00172E                     i2l1753:
  3830  00172E  90D8               	bcf	status,0,c
  3831  001730  3603               	rlcf	___awdiv@divisor,f,c
  3832  001732  3604               	rlcf	___awdiv@divisor+1,f,c
  3833  001734  2A05               	incf	___awdiv@counter,f,c
  3834  001736                     i2l1755:
  3835  001736  AE04               	btfss	___awdiv@divisor+1,7,c
  3836  001738  D7FA               	goto	i2l1753
  3837  00173A                     i2l1757:
  3838  00173A  90D8               	bcf	status,0,c
  3839  00173C  3607               	rlcf	___awdiv@quotient,f,c
  3840  00173E  3608               	rlcf	___awdiv@quotient+1,f,c
  3841  001740  5003               	movf	___awdiv@divisor,w,c
  3842  001742  5C01               	subwf	___awdiv@dividend,w,c
  3843  001744  5004               	movf	___awdiv@divisor+1,w,c
  3844  001746  5802               	subwfb	___awdiv@dividend+1,w,c
  3845  001748  A0D8               	btfss	status,0,c
  3846  00174A  D005               	goto	i2l1765
  3847  00174C  5003               	movf	___awdiv@divisor,w,c
  3848  00174E  5E01               	subwf	___awdiv@dividend,f,c
  3849  001750  5004               	movf	___awdiv@divisor+1,w,c
  3850  001752  5A02               	subwfb	___awdiv@dividend+1,f,c
  3851  001754  8007               	bsf	___awdiv@quotient,0,c
  3852  001756                     i2l1765:
  3853  001756  90D8               	bcf	status,0,c
  3854  001758  3204               	rrcf	___awdiv@divisor+1,f,c
  3855  00175A  3203               	rrcf	___awdiv@divisor,f,c
  3856  00175C  2E05               	decfsz	___awdiv@counter,f,c
  3857  00175E  D7ED               	goto	i2l1757
  3858  001760                     i2l1769:
  3859  001760  5006               	movf	___awdiv@sign,w,c
  3860  001762  B4D8               	btfsc	status,2,c
  3861  001764  D004               	goto	i2l1773
  3862  001766  6C07               	negf	___awdiv@quotient,c
  3863  001768  1E08               	comf	___awdiv@quotient+1,f,c
  3864  00176A  B0D8               	btfsc	status,0,c
  3865  00176C  2A08               	incf	___awdiv@quotient+1,f,c
  3866  00176E                     i2l1773:
  3867  00176E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3868  001772  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3869  001776  0012               	return	
  3870  001778                     __end_of___awdiv:
  3871                           	opt stack 0
  3872                           pclatu	equ	0xFFB
  3873                           pclath	equ	0xFFA
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           intcon	equ	0xFF2
  3881                           intcon2	equ	0xFF1
  3882                           postinc0	equ	0xFEE
  3883                           fsr0h	equ	0xFEA
  3884                           fsr0l	equ	0xFE9
  3885                           wreg	equ	0xFE8
  3886                           postdec1	equ	0xFE5
  3887                           plusw1	equ	0xFE3
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           indf2	equ	0xFDF
  3891                           postinc2	equ	0xFDE
  3892                           plusw2	equ	0xFDB
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           pclatu	equ	0xFFB
  3897                           pclath	equ	0xFFA
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           intcon2	equ	0xFF1
  3906                           postinc0	equ	0xFEE
  3907                           fsr0h	equ	0xFEA
  3908                           fsr0l	equ	0xFE9
  3909                           wreg	equ	0xFE8
  3910                           postdec1	equ	0xFE5
  3911                           plusw1	equ	0xFE3
  3912                           fsr1h	equ	0xFE2
  3913                           fsr1l	equ	0xFE1
  3914                           indf2	equ	0xFDF
  3915                           postinc2	equ	0xFDE
  3916                           plusw2	equ	0xFDB
  3917                           fsr2h	equ	0xFDA
  3918                           fsr2l	equ	0xFD9
  3919                           status	equ	0xFD8
  3920                           
  3921                           	psect	rparam
  3922  0000                     pclatu	equ	0xFFB
  3923                           pclath	equ	0xFFA
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           prodh	equ	0xFF4
  3929                           prodl	equ	0xFF3
  3930                           intcon	equ	0xFF2
  3931                           intcon2	equ	0xFF1
  3932                           postinc0	equ	0xFEE
  3933                           fsr0h	equ	0xFEA
  3934                           fsr0l	equ	0xFE9
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           plusw1	equ	0xFE3
  3938                           fsr1h	equ	0xFE2
  3939                           fsr1l	equ	0xFE1
  3940                           indf2	equ	0xFDF
  3941                           postinc2	equ	0xFDE
  3942                           plusw2	equ	0xFDB
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947                           	psect	temp
  3948  000042                     btemp:
  3949                           	opt stack 0
  3950  000042                     	ds	1
  3951  0000                     int$flags	set	btemp
  3952                           pclatu	equ	0xFFB
  3953                           pclath	equ	0xFFA
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           prodh	equ	0xFF4
  3959                           prodl	equ	0xFF3
  3960                           intcon	equ	0xFF2
  3961                           intcon2	equ	0xFF1
  3962                           postinc0	equ	0xFEE
  3963                           fsr0h	equ	0xFEA
  3964                           fsr0l	equ	0xFE9
  3965                           wreg	equ	0xFE8
  3966                           postdec1	equ	0xFE5
  3967                           plusw1	equ	0xFE3
  3968                           fsr1h	equ	0xFE2
  3969                           fsr1l	equ	0xFE1
  3970                           indf2	equ	0xFDF
  3971                           postinc2	equ	0xFDE
  3972                           plusw2	equ	0xFDB
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      65
    BANK0           160     49     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5980
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1461
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1263
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     240
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      20        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug 10 04:23:02 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1B30  
                                   l36 1B3C                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l112 18CE  
                                  l179 1B7C                                    u810 1B26  
                                  u921 13E6                                    u861 11B4  
                                  u951 12EE                                    u891 14DE  
                                  u981 1AD4                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4270 101B  
                                 l2021 1804                                   l2025 1814  
                                 l2107 1526                                   l2051 11F8  
                                 l2043 11D2                                   l2141 1408  
                                 l2029 182A                                   l2039 11C8  
                                 l2223 1AF2                                   l1505 1B68  
                                 l2137 13FE                                   l2219 1AE8  
                                 l2149 142E                                   l2261 1A02  
                                 l2095 14F6                                   l2191 1336  
                                 l2183 1310                                   l2255 19EE  
                                 l1481 1868                                   l2249 19DA  
                                 l1491 187C                                   l1483 186C  
                                 l2099 1500                                   l2179 1306  
                                 l2267 1A16                                   l1493 1880  
                                 l1485 1870                                   l1495 1884  
                                 l1487 1874                                   l1479 1864  
                                 l1497 1888                                   l1489 1878  
                                 l1499 188E                                   u1107 15F6  
                                 u1117 1606                                   u1207 1938  
                                 u1127 1618                                   u1217 1B92  
                                 u1137 1630                                   u1227 1BA2  
                                 u1147 1640                                   u1237 1B6E  
                                 u1157 1654                                   u1077 181A  
                                 u1167 18DC                                   u1087 1854  
                                 u1177 18FC                                   u1097 15D6  
                                 u1187 190E                                   u1197 1926  
                                 i2l96 17EA                 __end_of_lcd_write_data 1660  
                                 _main 19B2                                   _hour 0039  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0042  
                                 pclat 000FFA                                   prodh 000FF4  
                                 prodl 000FF3                         ?_lcd_write_cmd 0001  
                                 start 1016               __end_ofi2_lcd_write_data 16F4  
                         ___param_bank 000010                                  ?_main 0001  
                      __end_of___awdiv 1778                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l130 116E                                  i2l941 1780  
                                i2l951 1794                                  i2l943 1784  
                                i2l953 1798                                  i2l945 1788  
                                i2l961 17AA                                  i2l955 179C  
                                i2l947 178C                                  i2l939 177C  
                      ___awdiv@counter 0005                                  i2l957 17A0  
                                i2l949 1790                                  i2l959 17A4  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003A                                  _hourB 003B  
                                _hourC 003C                                  tablat 000FF5  
                                plusw1 000FE3                                  plusw2 000FDB  
                      ?_lcd_write_data 0001                        __end_of_version 1B18  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 00B4                        __initialization 1A1C  
                         __end_of_main 1A1C                                 ??_main 0024  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                           version@F4277 0024  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1BAC  
                               i2l1741 1708                                 i2l1753 172E  
                               i2l1755 1736                                 i2l1747 1718  
                               i2l1773 176E                                 i2l1765 1756  
                               i2l1757 173A                                 i2l1855 108E  
                               i2l1769 1760                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1B8A                       __end_of_lcd_init 1860  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1B18  
                               clear_0 1A62                       ___awdiv@quotient 0007  
                               _minute 003D                                 _second 0041  
                         __pdataCOMRAM 0024                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 0021                             __accesstop 0060  
              __end_of__initialization 1A68                          getkey@keycode 00C6  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1A76  
                           _char_2_int 1860                      __end_of_SetupTime 12E4  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 001D  
                     ??_lcd_write_data 001E                             _lcd_strobe 1B8A  
             __size_of_SetupAlarmTimeA 00F8               __size_of_SetupAlarmTimeB 00F8  
             __size_of_SetupAlarmTimeC 00F8                              ?_lcd_init 0001  
                   lcd_write_data@data 001F                     lcd_write_cmd@temp2 0020  
                           _int_2_char 1778                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              ___awdiv 16F4                           __psmallconst 101A  
                      __size_of_getkey 003E                        i2_lcd_write_cmd 1942  
                              __pcinit 1A1C                                __ramtop 0800  
                              __ptext0 19B2                                __ptext1 1ACA  
                              __ptext2 17EE                                __ptext3 1BCE  
                              __ptext4 11AA                                __ptext5 12E4  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 15CC                                __ptext9 18D2  
                            _T0CONbits 000FD5                         SetupTime@F4312 009F  
                              _minuteA 003E                                _minuteB 003F  
                              _minuteC 0040                             ??_delay_ms 001F  
                          ?_char_2_int 0001                                _version 1ACA  
                           ??_lcd_init 0021                         __pintcode_body 102E  
                 end_of_initialization 1A68                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00E4  
                       SetupTime@hour1 00DE                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00DD                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00DD  
                SetupAlarmTimeC@hour10 00DD                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                      ??_SetupAlarmTimeA 0022  
                    ??_SetupAlarmTimeB 0022                      ??_SetupAlarmTimeC 0022  
                __end_of_lcd_write_cmd 1942                __end_ofi2_lcd_write_cmd 19B2  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1BEA  
                       __end_of_getkey 1B56                    start_initialization 1A1C  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00CA                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0039  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4322 0060                   SetupAlarmTimeB@F4332 0075  
                            delay_ms@i 001D                              delay_ms@j 0020  
                 SetupAlarmTimeC@F4342 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u130_47 16E8                               i2u131_47 194C  
                             i2u132_47 196C                               i2u124_47 166A  
                             i2u133_47 197E                               i2u125_47 168A  
                             i2u134_47 1996                               i2u126_47 169A  
                             i2u135_47 19A8                               i2u127_47 16AC  
                             i2u136_47 1BB4                               i2u128_47 16C4  
                             i2u137_47 1BC4                               i2u129_47 16D4  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 18D2                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 0022                    lcd_write_data@temp1 0020  
                      _SetupAlarmTimeA 14D4                        _SetupAlarmTimeB 13DC  
                      _SetupAlarmTimeC 12E4                         ??i2_lcd_strobe 0001  
                       version@Version 00B4                           ??_lcd_strobe 001D  
                     SetupTime@Message 00C7                              copy_data0 1A30  
                            copy_data1 1A50                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 1BEA  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1BCE                __size_of_lcd_write_data 0094  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                         version@outchar 00C9  
                          ??_SetupTime 0022                       SetupTime@minute1 00E0  
                     SetupTime@second1 00E2                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 1BAC                       SetupTime@outchar 00DC  
                   __end_of_int_2_char 17EE                       i2_lcd_write_data 1660  
                             _delay_ms 1B56                               __ptext10 1B8A  
                             __ptext11 1B18                               __ptext12 1B56  
                             __ptext13 1860                               __ptext15 1660  
                             __ptext16 1942                               __ptext17 1BAC  
                             __ptext18 1778                               __ptext19 16F4  
                             _lcd_init 17EE                       __size_of_version 004E  
                        __size_of_main 006A          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0042                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1BCE                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 15CC  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 18D2  
