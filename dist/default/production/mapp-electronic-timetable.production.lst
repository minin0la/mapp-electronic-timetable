

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 15 16:16:02 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  001CCA                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for version@F4277
    45  001CCA  45                 	db	69
    46  001CCB  54                 	db	84
    47  001CCC  54                 	db	84
    48  001CCD  20                 	db	32
    49  001CCE  56                 	db	86
    50  001CCF  65                 	db	101
    51  001CD0  72                 	db	114
    52  001CD1  73                 	db	115
    53  001CD2  69                 	db	105
    54  001CD3  6F                 	db	111
    55  001CD4  6E                 	db	110
    56  001CD5  20                 	db	32
    57  001CD6  31                 	db	49
    58  001CD7  2E                 	db	46
    59  001CD8  33                 	db	51
    60  001CD9  20                 	db	32
    61  001CDA  20                 	db	32
    62  001CDB  20                 	db	32
    63  001CDC  20                 	db	32
    64  001CDD  20                 	db	32
    65  001CDE  00                 	db	0
    66                           
    67                           	psect	idataBANK0
    68  001B4C                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for SetupAlarmTimeA@F4325
    72  001B4C  53                 	db	83
    73  001B4D  75                 	db	117
    74  001B4E  62                 	db	98
    75  001B4F  6A                 	db	106
    76  001B50  65                 	db	101
    77  001B51  63                 	db	99
    78  001B52  74                 	db	116
    79  001B53  20                 	db	32
    80  001B54  41                 	db	65
    81  001B55  20                 	db	32
    82  001B56  54                 	db	84
    83  001B57  69                 	db	105
    84  001B58  6D                 	db	109
    85  001B59  65                 	db	101
    86  001B5A  20                 	db	32
    87  001B5B  68                 	db	104
    88  001B5C  68                 	db	104
    89  001B5D  6D                 	db	109
    90  001B5E  6D                 	db	109
    91  001B5F  3A                 	db	58
    92  001B60  00                 	db	0
    93                           
    94                           ;initializer for SetupAlarmTimeB@F4335
    95  001B61  53                 	db	83
    96  001B62  75                 	db	117
    97  001B63  62                 	db	98
    98  001B64  6A                 	db	106
    99  001B65  65                 	db	101
   100  001B66  63                 	db	99
   101  001B67  74                 	db	116
   102  001B68  20                 	db	32
   103  001B69  42                 	db	66
   104  001B6A  20                 	db	32
   105  001B6B  54                 	db	84
   106  001B6C  69                 	db	105
   107  001B6D  6D                 	db	109
   108  001B6E  65                 	db	101
   109  001B6F  20                 	db	32
   110  001B70  68                 	db	104
   111  001B71  68                 	db	104
   112  001B72  6D                 	db	109
   113  001B73  6D                 	db	109
   114  001B74  3A                 	db	58
   115  001B75  00                 	db	0
   116                           
   117                           ;initializer for SetupAlarmTimeC@F4345
   118  001B76  53                 	db	83
   119  001B77  75                 	db	117
   120  001B78  62                 	db	98
   121  001B79  6A                 	db	106
   122  001B7A  65                 	db	101
   123  001B7B  63                 	db	99
   124  001B7C  74                 	db	116
   125  001B7D  20                 	db	32
   126  001B7E  43                 	db	67
   127  001B7F  20                 	db	32
   128  001B80  54                 	db	84
   129  001B81  69                 	db	105
   130  001B82  6D                 	db	109
   131  001B83  65                 	db	101
   132  001B84  20                 	db	32
   133  001B85  68                 	db	104
   134  001B86  68                 	db	104
   135  001B87  6D                 	db	109
   136  001B88  6D                 	db	109
   137  001B89  3A                 	db	58
   138  001B8A  00                 	db	0
   139                           
   140                           ;initializer for SetupTime@F4315
   141  001B8B  53                 	db	83
   142  001B8C  65                 	db	101
   143  001B8D  74                 	db	116
   144  001B8E  20                 	db	32
   145  001B8F  74                 	db	116
   146  001B90  69                 	db	105
   147  001B91  6D                 	db	109
   148  001B92  65                 	db	101
   149  001B93  20                 	db	32
   150  001B94  68                 	db	104
   151  001B95  68                 	db	104
   152  001B96  6D                 	db	109
   153  001B97  6D                 	db	109
   154  001B98  73                 	db	115
   155  001B99  73                 	db	115
   156  001B9A  3A                 	db	58
   157  001B9B  20                 	db	32
   158  001B9C  20                 	db	32
   159  001B9D  20                 	db	32
   160  001B9E  20                 	db	32
   161  001B9F  00                 	db	0
   162                           
   163                           	psect	smallconst
   164  00101A                     __psmallconst:
   165                           	opt stack 0
   166  00101A  00                 	db	0
   167  00101B                     getkey@F4270:
   168                           	opt stack 0
   169  00101B  31                 	db	49
   170  00101C  32                 	db	50
   171  00101D  33                 	db	51
   172  00101E  46                 	db	70
   173  00101F  34                 	db	52
   174  001020  35                 	db	53
   175  001021  36                 	db	54
   176  001022  45                 	db	69
   177  001023  37                 	db	55
   178  001024  38                 	db	56
   179  001025  39                 	db	57
   180  001026  44                 	db	68
   181  001027  41                 	db	65
   182  001028  30                 	db	48
   183  001029  42                 	db	66
   184  00102A  43                 	db	67
   185  00102B  20                 	db	32
   186  00102C  00                 	db	0
   187  00102D                     __end_ofgetkey@F4270:
   188                           	opt stack 0
   189  0000                     _ADCON1	set	4033
   190  0000                     _CMCON	set	4020
   191  0000                     _INTCON2	set	4081
   192  0000                     _INTCONbits	set	4082
   193  0000                     _PORTA	set	3968
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTB	set	3969
   196  0000                     _PORTBbits	set	3969
   197  0000                     _PORTD	set	3971
   198  0000                     _PORTDbits	set	3971
   199  0000                     _RCONbits	set	4048
   200  0000                     _T0CON	set	4053
   201  0000                     _T0CONbits	set	4053
   202  0000                     _TMR0H	set	4055
   203  0000                     _TMR0L	set	4054
   204  0000                     _TRISA	set	3986
   205  0000                     _TRISD	set	3989
   206  00102D  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211  001AF2                     __pcinit:
   212                           	opt stack 0
   213  001AF2                     start_initialization:
   214                           	opt stack 0
   215  001AF2                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (84 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220  001AF2  0E4C               	movlw	low __pidataBANK0
   221  001AF4  6EF6               	movwf	tblptrl,c
   222  001AF6  0E1B               	movlw	high __pidataBANK0
   223  001AF8  6EF7               	movwf	tblptrh,c
   224  001AFA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225  001AFC  6EF8               	movwf	tblptru,c
   226  001AFE  EE00  F060         	lfsr	0,__pdataBANK0
   227  001B02  EE10 F054          	lfsr	1,84
   228  001B06                     copy_data0:
   229  001B06  0009               	tblrd		*+
   230  001B08  CFF5 FFEE          	movff	tablat,postinc0
   231  001B0C  50E5               	movf	postdec1,w,c
   232  001B0E  50E1               	movf	fsr1l,w,c
   233  001B10  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (21 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  001B12  0ECA               	movlw	low __pidataCOMRAM
   238  001B14  6EF6               	movwf	tblptrl,c
   239  001B16  0E1C               	movlw	high __pidataCOMRAM
   240  001B18  6EF7               	movwf	tblptrh,c
   241  001B1A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  001B1C  6EF8               	movwf	tblptru,c
   243  001B1E  EE00  F01F         	lfsr	0,__pdataCOMRAM
   244  001B22  EE10 F015          	lfsr	1,21
   245  001B26                     copy_data1:
   246  001B26  0009               	tblrd		*+
   247  001B28  CFF5 FFEE          	movff	tablat,postinc0
   248  001B2C  50E5               	movf	postdec1,w,c
   249  001B2E  50E1               	movf	fsr1l,w,c
   250  001B30  E1FA               	bnz	copy_data1
   251                           
   252                           ; Clear objects allocated to COMRAM (15 bytes)
   253  001B32  EE00  F034         	lfsr	0,__pbssCOMRAM
   254  001B36  0E0F               	movlw	15
   255  001B38                     clear_0:
   256  001B38  6AEE               	clrf	postinc0,c
   257  001B3A  06E8               	decf	wreg,f,c
   258  001B3C  E1FD               	bnz	clear_0
   259  001B3E                     end_of_initialization:
   260                           	opt stack 0
   261  001B3E                     __end_of__initialization:
   262                           	opt stack 0
   263  001B3E  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  001B40  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  001B42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  001B44  6EF8               	movwf	tblptru,c
   267  001B46  0100               	movlb	0
   268  001B48  EFE6  F00A         	goto	_main	;jump to C main() function
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssCOMRAM
   279  000034                     __pbssCOMRAM:
   280                           	opt stack 0
   281  000034                     _AlarmAOff:
   282                           	opt stack 0
   283  000034                     	ds	2
   284  000036                     _AlarmBOff:
   285                           	opt stack 0
   286  000036                     	ds	2
   287  000038                     _AlarmCOff:
   288                           	opt stack 0
   289  000038                     	ds	2
   290  00003A                     _hour:
   291                           	opt stack 0
   292  00003A                     	ds	1
   293  00003B                     _hourA:
   294                           	opt stack 0
   295  00003B                     	ds	1
   296  00003C                     _hourB:
   297                           	opt stack 0
   298  00003C                     	ds	1
   299  00003D                     _hourC:
   300                           	opt stack 0
   301  00003D                     	ds	1
   302  00003E                     _minute:
   303                           	opt stack 0
   304  00003E                     	ds	1
   305  00003F                     _minuteA:
   306                           	opt stack 0
   307  00003F                     	ds	1
   308  000040                     _minuteB:
   309                           	opt stack 0
   310  000040                     	ds	1
   311  000041                     _minuteC:
   312                           	opt stack 0
   313  000041                     	ds	1
   314  000042                     _second:
   315                           	opt stack 0
   316  000042                     	ds	1
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	dataCOMRAM
   327  00001F                     __pdataCOMRAM:
   328                           	opt stack 0
   329  00001F                     version@F4277:
   330                           	opt stack 0
   331  00001F                     	ds	21
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	dataBANK0
   342  000060                     __pdataBANK0:
   343                           	opt stack 0
   344  000060                     SetupAlarmTimeA@F4325:
   345                           	opt stack 0
   346  000060                     	ds	21
   347  000075                     SetupAlarmTimeB@F4335:
   348                           	opt stack 0
   349  000075                     	ds	21
   350  00008A                     SetupAlarmTimeC@F4345:
   351                           	opt stack 0
   352  00008A                     	ds	21
   353  00009F                     SetupTime@F4315:
   354                           	opt stack 0
   355  00009F                     	ds	21
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	cstackBANK0
   366  0000B4                     __pcstackBANK0:
   367                           	opt stack 0
   368  0000B4                     ??_delay_ms:
   369  0000B4                     lcd_write_cmd@cmd:
   370                           	opt stack 0
   371  0000B4                     lcd_write_data@data:
   372                           	opt stack 0
   373  0000B4                     getkey@lookup:
   374                           	opt stack 0
   375                           
   376                           ; 18 bytes @ 0x0
   377  0000B4                     	ds	1
   378  0000B5                     lcd_write_cmd@temp2:
   379                           	opt stack 0
   380  0000B5                     lcd_write_data@temp1:
   381                           	opt stack 0
   382  0000B5                     delay_ms@j:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x1
   386  0000B5                     	ds	1
   387  0000B6                     ??_lcd_init:
   388  0000B6                     version@Version:
   389                           	opt stack 0
   390                           
   391                           ; 21 bytes @ 0x2
   392  0000B6                     	ds	1
   393  0000B7                     lcd_init@i:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x3
   397  0000B7                     	ds	15
   398  0000C6                     getkey@keycode:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x12
   402  0000C6                     	ds	1
   403  0000C7                     SetupTime@Message:
   404                           	opt stack 0
   405  0000C7                     SetupAlarmTimeA@Message:
   406                           	opt stack 0
   407  0000C7                     SetupAlarmTimeB@Message:
   408                           	opt stack 0
   409  0000C7                     SetupAlarmTimeC@Message:
   410                           	opt stack 0
   411                           
   412                           ; 21 bytes @ 0x13
   413  0000C7                     	ds	4
   414  0000CB                     version@outchar:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x17
   418  0000CB                     	ds	1
   419  0000CC                     version@msgindex:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x18
   423  0000CC                     	ds	16
   424  0000DC                     SetupTime@outchar:
   425                           	opt stack 0
   426  0000DC                     SetupAlarmTimeA@outchar:
   427                           	opt stack 0
   428  0000DC                     SetupAlarmTimeB@outchar:
   429                           	opt stack 0
   430  0000DC                     SetupAlarmTimeC@outchar:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x28
   434  0000DC                     	ds	1
   435  0000DD                     SetupTime@hour10:
   436                           	opt stack 0
   437  0000DD                     SetupAlarmTimeA@hour10:
   438                           	opt stack 0
   439  0000DD                     SetupAlarmTimeB@hour10:
   440                           	opt stack 0
   441  0000DD                     SetupAlarmTimeC@hour10:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x29
   445  0000DD                     	ds	1
   446  0000DE                     SetupTime@hour1:
   447                           	opt stack 0
   448  0000DE                     SetupAlarmTimeA@hour1:
   449                           	opt stack 0
   450  0000DE                     SetupAlarmTimeB@hour1:
   451                           	opt stack 0
   452  0000DE                     SetupAlarmTimeC@hour1:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x2A
   456  0000DE                     	ds	1
   457  0000DF                     SetupTime@minute10:
   458                           	opt stack 0
   459  0000DF                     SetupAlarmTimeA@minute10:
   460                           	opt stack 0
   461  0000DF                     SetupAlarmTimeB@minute10:
   462                           	opt stack 0
   463  0000DF                     SetupAlarmTimeC@minute10:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2B
   467  0000DF                     	ds	1
   468  0000E0                     SetupTime@minute1:
   469                           	opt stack 0
   470  0000E0                     SetupAlarmTimeA@minute1:
   471                           	opt stack 0
   472  0000E0                     SetupAlarmTimeB@minute1:
   473                           	opt stack 0
   474  0000E0                     SetupAlarmTimeC@minute1:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x2C
   478  0000E0                     	ds	1
   479  0000E1                     SetupTime@second10:
   480                           	opt stack 0
   481  0000E1                     SetupAlarmTimeA@msgindex:
   482                           	opt stack 0
   483  0000E1                     SetupAlarmTimeB@msgindex:
   484                           	opt stack 0
   485  0000E1                     SetupAlarmTimeC@msgindex:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x2D
   489  0000E1                     	ds	1
   490  0000E2                     SetupTime@second1:
   491                           	opt stack 0
   492  0000E2                     SetupAlarmTimeA@ctemp:
   493                           	opt stack 0
   494  0000E2                     SetupAlarmTimeB@ctemp:
   495                           	opt stack 0
   496  0000E2                     SetupAlarmTimeC@ctemp:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x2E
   500  0000E2                     	ds	1
   501  0000E3                     SetupTime@msgindex:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x2F
   505  0000E3                     	ds	1
   506  0000E4                     SetupTime@ctemp:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x30
   510  0000E4                     	ds	1
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	cstackCOMRAM
   521  000001                     __pcstackCOMRAM:
   522                           	opt stack 0
   523  000001                     ??i2_lcd_strobe:
   524  000001                     ?___awdiv:
   525                           	opt stack 0
   526  000001                     int_2_char@int1:
   527                           	opt stack 0
   528  000001                     ___awdiv@dividend:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x0
   532  000001                     	ds	1
   533  000002                     ??i2_lcd_write_cmd:
   534  000002                     ??i2_lcd_write_data:
   535  000002                     int_2_char@char1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x1
   539  000002                     	ds	1
   540  000003                     i2lcd_write_cmd@cmd:
   541                           	opt stack 0
   542  000003                     i2lcd_write_data@data:
   543                           	opt stack 0
   544  000003                     ___awdiv@divisor:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x2
   548  000003                     	ds	1
   549  000004                     i2lcd_write_cmd@temp2:
   550                           	opt stack 0
   551  000004                     i2lcd_write_data@temp1:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x3
   555  000004                     	ds	1
   556  000005                     ___awdiv@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x4
   560  000005                     	ds	1
   561  000006                     ___awdiv@sign:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x5
   565  000006                     	ds	1
   566  000007                     ___awdiv@quotient:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570  000007                     	ds	2
   571  000009                     ??_ISR_Timer0_Int:
   572                           
   573                           ; 1 bytes @ 0x8
   574  000009                     	ds	14
   575  000017                     ISR_Timer0_Int@hour1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x16
   579  000017                     	ds	1
   580  000018                     ISR_Timer0_Int@minute1:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x17
   584  000018                     	ds	1
   585  000019                     ISR_Timer0_Int@second1:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x18
   589  000019                     	ds	1
   590  00001A                     ISR_Timer0_Int@hour10:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x19
   594  00001A                     	ds	1
   595  00001B                     ISR_Timer0_Int@minute10:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1A
   599  00001B                     	ds	1
   600  00001C                     ISR_Timer0_Int@second10:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x1B
   604  00001C                     	ds	1
   605  00001D                     ??_lcd_strobe:
   606  00001D                     char_2_int@char1:
   607                           	opt stack 0
   608  00001D                     delay_ms@i:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x1C
   612  00001D                     	ds	1
   613  00001E                     ??_lcd_write_cmd:
   614  00001E                     ??_lcd_write_data:
   615  00001E                     char_2_int@int1:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1D
   619  00001E                     	ds	1
   620  00001F                     tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           postinc0	equ	0xFEE
   625                           wreg	equ	0xFE8
   626                           postdec1	equ	0xFE5
   627                           fsr1l	equ	0xFE1
   628                           
   629                           ; 1 bytes @ 0x1E
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 329 in file "Main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels required when called:    6
   655 ;; This function calls:
   656 ;;		_Setup
   657 ;;		_SetupAlarmTimeA
   658 ;;		_SetupAlarmTimeB
   659 ;;		_SetupAlarmTimeC
   660 ;;		_SetupTime
   661 ;;		_SetupTimerInterruptRegisters
   662 ;;		_lcd_init
   663 ;;		_version
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text0
   670  0015CC                     __ptext0:
   671                           	opt stack 0
   672  0015CC                     _main:
   673                           	opt stack 25
   674                           
   675                           ;Main.c: 331: ADCON1 = 0x0F;
   676                           
   677                           ;incstack = 0
   678  0015CC  0E0F               	movlw	15
   679  0015CE  6EC1               	movwf	4033,c	;volatile
   680                           
   681                           ;Main.c: 332: CMCON = 0x07;
   682  0015D0  0E07               	movlw	7
   683  0015D2  6EB4               	movwf	4020,c	;volatile
   684                           
   685                           ;Main.c: 334: lcd_init();
   686  0015D4  EC19  F00C         	call	_lcd_init	;wreg free
   687                           
   688                           ;Main.c: 335: TRISA = 0b00110000;
   689  0015D8  0E30               	movlw	48
   690  0015DA  6E92               	movwf	3986,c	;volatile
   691                           
   692                           ;Main.c: 337: version();
   693  0015DC  ECD0  F00D         	call	_version	;wreg free
   694                           
   695                           ;Main.c: 338: Setup();
   696  0015E0  EC42  F00D         	call	_Setup	;wreg free
   697                           
   698                           ;Main.c: 339: SetupTime();
   699  0015E4  ECD5  F008         	call	_SetupTime	;wreg free
   700                           
   701                           ;Main.c: 340: SetupAlarmTimeA();
   702  0015E8  EC6A  F00A         	call	_SetupAlarmTimeA	;wreg free
   703                           
   704                           ;Main.c: 341: SetupAlarmTimeB();
   705  0015EC  ECEE  F009         	call	_SetupAlarmTimeB	;wreg free
   706                           
   707                           ;Main.c: 342: SetupAlarmTimeC();
   708  0015F0  EC72  F009         	call	_SetupAlarmTimeC	;wreg free
   709                           
   710                           ;Main.c: 343: SetupTimerInterruptRegisters();
   711  0015F4  EC57  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   712  0015F8                     l2379:
   713                           
   714                           ;Main.c: 346: {
   715                           ;Main.c: 347: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   716  0015F8  503B               	movf	_hourA,w,c
   717  0015FA  183A               	xorwf	_hour,w,c
   718  0015FC  A4D8               	btfss	status,2,c
   719  0015FE  D011               	goto	l2391
   720  001600  503F               	movf	_minuteA,w,c
   721  001602  183E               	xorwf	_minute,w,c
   722  001604  A4D8               	btfss	status,2,c
   723  001606  D00D               	goto	l2391
   724  001608  5034               	movf	_AlarmAOff,w,c
   725  00160A  1035               	iorwf	_AlarmAOff+1,w,c
   726  00160C  A4D8               	btfss	status,2,c
   727  00160E  D009               	goto	l2391
   728                           
   729                           ;Main.c: 348: {
   730                           ;Main.c: 349: PORTA = 0b00000011;
   731  001610  0E03               	movlw	3
   732  001612  6E80               	movwf	3968,c	;volatile
   733                           
   734                           ;Main.c: 350: if (PORTAbits.RA5 == 0)
   735  001614  BA80               	btfsc	3968,5,c	;volatile
   736  001616  D7F0               	goto	l2379
   737                           
   738                           ;Main.c: 351: {
   739                           ;Main.c: 352: AlarmAOff = 1;
   740  001618  0E00               	movlw	0
   741  00161A  6E35               	movwf	_AlarmAOff+1,c
   742  00161C  0E01               	movlw	1
   743  00161E  6E34               	movwf	_AlarmAOff,c
   744                           
   745                           ;Main.c: 353: }
   746                           ;Main.c: 354: }
   747  001620  D7EB               	goto	l2379
   748  001622                     l2391:
   749                           
   750                           ;Main.c: 355: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   751  001622  503C               	movf	_hourB,w,c
   752  001624  183A               	xorwf	_hour,w,c
   753  001626  A4D8               	btfss	status,2,c
   754  001628  D011               	goto	l2403
   755  00162A  5040               	movf	_minuteB,w,c
   756  00162C  183E               	xorwf	_minute,w,c
   757  00162E  A4D8               	btfss	status,2,c
   758  001630  D00D               	goto	l2403
   759  001632  5036               	movf	_AlarmBOff,w,c
   760  001634  1037               	iorwf	_AlarmBOff+1,w,c
   761  001636  A4D8               	btfss	status,2,c
   762  001638  D009               	goto	l2403
   763                           
   764                           ;Main.c: 356: {
   765                           ;Main.c: 357: PORTA = 0b00000101;
   766  00163A  0E05               	movlw	5
   767  00163C  6E80               	movwf	3968,c	;volatile
   768                           
   769                           ;Main.c: 358: if (PORTAbits.RA5 == 0)
   770  00163E  BA80               	btfsc	3968,5,c	;volatile
   771  001640  D7DB               	goto	l2379
   772                           
   773                           ;Main.c: 359: {
   774                           ;Main.c: 360: AlarmBOff = 1;
   775  001642  0E00               	movlw	0
   776  001644  6E37               	movwf	_AlarmBOff+1,c
   777  001646  0E01               	movlw	1
   778  001648  6E36               	movwf	_AlarmBOff,c
   779                           
   780                           ;Main.c: 361: }
   781                           ;Main.c: 362: }
   782  00164A  D7D6               	goto	l2379
   783  00164C                     l2403:
   784                           
   785                           ;Main.c: 363: else if(hour==hourC && minute==minuteC && AlarmCOff== 0)
   786  00164C  503D               	movf	_hourC,w,c
   787  00164E  183A               	xorwf	_hour,w,c
   788  001650  A4D8               	btfss	status,2,c
   789  001652  D011               	goto	l2415
   790  001654  5041               	movf	_minuteC,w,c
   791  001656  183E               	xorwf	_minute,w,c
   792  001658  A4D8               	btfss	status,2,c
   793  00165A  D00D               	goto	l2415
   794  00165C  5038               	movf	_AlarmCOff,w,c
   795  00165E  1039               	iorwf	_AlarmCOff+1,w,c
   796  001660  A4D8               	btfss	status,2,c
   797  001662  D009               	goto	l2415
   798                           
   799                           ;Main.c: 364: {
   800                           ;Main.c: 365: PORTA = 0b00001001;
   801  001664  0E09               	movlw	9
   802  001666  6E80               	movwf	3968,c	;volatile
   803                           
   804                           ;Main.c: 366: if (PORTAbits.RA5 == 0)
   805  001668  BA80               	btfsc	3968,5,c	;volatile
   806  00166A  D7C6               	goto	l2379
   807                           
   808                           ;Main.c: 367: {
   809                           ;Main.c: 368: AlarmCOff = 1;
   810  00166C  0E00               	movlw	0
   811  00166E  6E39               	movwf	_AlarmCOff+1,c
   812  001670  0E01               	movlw	1
   813  001672  6E38               	movwf	_AlarmCOff,c
   814                           
   815                           ;Main.c: 369: }
   816                           ;Main.c: 370: }
   817  001674  D7C1               	goto	l2379
   818  001676                     l2415:
   819                           
   820                           ;Main.c: 371: else
   821                           ;Main.c: 372: {
   822                           ;Main.c: 373: PORTA = 0b00000000;
   823  001676  0E00               	movlw	0
   824  001678  6E80               	movwf	3968,c	;volatile
   825  00167A  D7BE               	goto	l2379
   826  00167C                     __end_of_main:
   827                           	opt stack 0
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           postdec1	equ	0xFE5
   835                           fsr1l	equ	0xFE1
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function _version *****************
   839 ;; Defined at:
   840 ;;		line 12 in file "version.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  Version        21    2[BANK0 ] unsigned char [21]
   845 ;;  msgindex        1   24[BANK0 ] unsigned char 
   846 ;;  outchar         1   23[BANK0 ] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2   73[None  ] int 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0      23       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         0      23       0       0       0       0       0       0       0
   860 ;;Total ram usage:       23 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    5
   863 ;; This function calls:
   864 ;;		_lcd_write_cmd
   865 ;;		_lcd_write_data
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text1
   872  001BA0                     __ptext1:
   873                           	opt stack 0
   874  001BA0                     _version:
   875                           	opt stack 25
   876                           
   877                           ;version.c: 14: unsigned char msgindex, outchar;
   878                           ;version.c: 15: char Version[ ] = "ETT Version 1.3     ";
   879                           
   880                           ;incstack = 0
   881  001BA0  EE20  F01F         	lfsr	2,version@F4277
   882  001BA4  EE10  F0B6         	lfsr	1,version@Version
   883  001BA8  0E14               	movlw	20
   884  001BAA                     u1121:
   885  001BAA  CFDB FFE3          	movff	plusw2,plusw1
   886  001BAE  06E8               	decf	wreg,f,c
   887  001BB0  E2FC               	bc	u1121
   888                           
   889                           ;version.c: 17: lcd_write_cmd(0x80);
   890  001BB2  0E80               	movlw	128
   891  001BB4  EC59  F00C         	call	_lcd_write_cmd
   892                           
   893                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   894  001BB8  0E00               	movlw	0
   895  001BBA  0100               	movlb	0	; () banked
   896  001BBC  6FCC               	movwf	version@msgindex& (0+255),b
   897  001BBE                     l2347:
   898                           
   899                           ; BSR set to: 0
   900  001BBE  0E13               	movlw	19
   901  001BC0  0100               	movlb	0	; () banked
   902  001BC2  65CC               	cpfsgt	version@msgindex& (0+255),b
   903  001BC4  D001               	goto	l2351
   904  001BC6  0012               	return	
   905  001BC8                     l2351:
   906                           
   907                           ; BSR set to: 0
   908                           ;version.c: 20: {
   909                           ;version.c: 21: outchar = Version[msgindex];
   910  001BC8  0100               	movlb	0	; () banked
   911  001BCA  51CC               	movf	version@msgindex& (0+255),w,b
   912  001BCC  0D01               	mullw	1
   913  001BCE  0EB6               	movlw	low version@Version
   914  001BD0  24F3               	addwf	prodl,w,c
   915  001BD2  6ED9               	movwf	fsr2l,c
   916  001BD4  0E00               	movlw	high version@Version
   917  001BD6  20F4               	addwfc	prodh,w,c
   918  001BD8  6EDA               	movwf	fsr2h,c
   919  001BDA  50DF               	movf	indf2,w,c
   920  001BDC  0100               	movlb	0	; () banked
   921  001BDE  6FCB               	movwf	version@outchar& (0+255),b
   922                           
   923                           ; BSR set to: 0
   924                           ;version.c: 22: lcd_write_data(outchar);
   925  001BE0  0100               	movlb	0	; () banked
   926  001BE2  51CB               	movf	version@outchar& (0+255),w,b
   927  001BE4  EC3E  F00B         	call	_lcd_write_data
   928  001BE8  0100               	movlb	0	; () banked
   929  001BEA  2BCC               	incf	version@msgindex& (0+255),f,b
   930  001BEC  D7E8               	goto	l2347
   931  001BEE                     __end_of_version:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           postdec1	equ	0xFE5
   942                           plusw1	equ	0xFE3
   943                           fsr1l	equ	0xFE1
   944                           indf2	equ	0xFDF
   945                           plusw2	equ	0xFDB
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function _lcd_init *****************
   951 ;; Defined at:
   952 ;;		line 83 in file "lcd_utilities.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  i               2    3[BANK0 ] int 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         0       0       0       0       0       0       0       0       0
   967 ;;      Locals:         0       2       0       0       0       0       0       0       0
   968 ;;      Temps:          0       1       0       0       0       0       0       0       0
   969 ;;      Totals:         0       3       0       0       0       0       0       0       0
   970 ;;Total ram usage:        3 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    5
   973 ;; This function calls:
   974 ;;		_lcd_write_cmd
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text2
   981  001832                     __ptext2:
   982                           	opt stack 0
   983  001832                     _lcd_init:
   984                           	opt stack 25
   985                           
   986                           ;lcd_utilities.c: 85: int i;
   987                           ;lcd_utilities.c: 86: TRISD = 0x00;
   988                           
   989                           ; BSR set to: 0
   990                           ;incstack = 0
   991  001832  0E00               	movlw	0
   992  001834  6E95               	movwf	3989,c	;volatile
   993                           
   994                           ;lcd_utilities.c: 87: PORTD = 0x00;
   995  001836  0E00               	movlw	0
   996  001838  6E83               	movwf	3971,c	;volatile
   997                           
   998                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   999  00183A  9883               	bcf	3971,4,c	;volatile
  1000                           
  1001                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1002  00183C  9C83               	bcf	3971,6,c	;volatile
  1003                           
  1004                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1005  00183E  9A83               	bcf	3971,5,c	;volatile
  1006                           
  1007                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1008  001840  0E00               	movlw	0
  1009  001842  0100               	movlb	0	; () banked
  1010  001844  6FB8               	movwf	(lcd_init@i+1)& (0+255),b
  1011  001846  0E00               	movlw	0
  1012  001848  6FB7               	movwf	lcd_init@i& (0+255),b
  1013  00184A                     l2127:
  1014                           
  1015                           ; BSR set to: 0
  1016  00184A  0100               	movlb	0	; () banked
  1017  00184C  BFB8               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1018  00184E  D008               	goto	l2131
  1019  001850  0100               	movlb	0	; () banked
  1020  001852  51B8               	movf	(lcd_init@i+1)& (0+255),w,b
  1021  001854  E112               	bnz	l2135
  1022  001856  0E64               	movlw	100
  1023  001858  0100               	movlb	0	; () banked
  1024  00185A  5DB7               	subwf	lcd_init@i& (0+255),w,b
  1025  00185C  B0D8               	btfsc	status,0,c
  1026  00185E  D00D               	goto	l2135
  1027  001860                     l2131:
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1031  001860  0E9C               	movlw	156
  1032  001862  0100               	movlb	0	; () banked
  1033  001864  6FB6               	movwf	??_lcd_init& (0+255),b
  1034  001866  0ED7               	movlw	215
  1035  001868                     u1277:
  1036  001868  2EE8               	decfsz	wreg,f,c
  1037  00186A  D7FE               	goto	u1277
  1038  00186C  2FB6               	decfsz	??_lcd_init& (0+255),f,b
  1039  00186E  D7FC               	goto	u1277
  1040  001870  F000               	nop	
  1041  001872  0100               	movlb	0	; () banked
  1042  001874  4BB7               	infsnz	lcd_init@i& (0+255),f,b
  1043  001876  2BB8               	incf	(lcd_init@i+1)& (0+255),f,b
  1044  001878  D7E8               	goto	l2127
  1045  00187A                     l2135:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1049  00187A  0E33               	movlw	51
  1050  00187C  EC59  F00C         	call	_lcd_write_cmd
  1051                           
  1052                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1053  001880  0E32               	movlw	50
  1054  001882  EC59  F00C         	call	_lcd_write_cmd
  1055                           
  1056                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1057  001886  0E28               	movlw	40
  1058  001888  EC59  F00C         	call	_lcd_write_cmd
  1059                           
  1060                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1061  00188C  0E0E               	movlw	14
  1062  00188E  EC59  F00C         	call	_lcd_write_cmd
  1063                           
  1064                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1065  001892  0E06               	movlw	6
  1066  001894  EC59  F00C         	call	_lcd_write_cmd
  1067                           
  1068                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1069  001898  0E01               	movlw	1
  1070  00189A  EC59  F00C         	call	_lcd_write_cmd
  1071                           
  1072                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1073  00189E  0E9C               	movlw	156
  1074  0018A0  0100               	movlb	0	; () banked
  1075  0018A2  6FB6               	movwf	??_lcd_init& (0+255),b
  1076  0018A4  0ED7               	movlw	215
  1077  0018A6                     u1287:
  1078  0018A6  2EE8               	decfsz	wreg,f,c
  1079  0018A8  D7FE               	goto	u1287
  1080  0018AA  2FB6               	decfsz	??_lcd_init& (0+255),f,b
  1081  0018AC  D7FC               	goto	u1287
  1082  0018AE  F000               	nop	
  1083  0018B0  0012               	return		;funcret
  1084  0018B2                     __end_of_lcd_init:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           prodh	equ	0xFF4
  1091                           prodl	equ	0xFF3
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postdec1	equ	0xFE5
  1095                           plusw1	equ	0xFE3
  1096                           fsr1l	equ	0xFE1
  1097                           indf2	equ	0xFDF
  1098                           plusw2	equ	0xFDB
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _SetupTimerInterruptRegisters *****************
  1104 ;; Defined at:
  1105 ;;		line 276 in file "Main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    3
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text3
  1134  001CAE                     __ptext3:
  1135                           	opt stack 0
  1136  001CAE                     _SetupTimerInterruptRegisters:
  1137                           	opt stack 27
  1138                           
  1139                           ;Main.c: 278: RCONbits.IPEN =1;
  1140                           
  1141                           ;incstack = 0
  1142  001CAE  8ED0               	bsf	4048,7,c	;volatile
  1143                           
  1144                           ;Main.c: 282: INTCONbits.GIEH =1;
  1145  001CB0  8EF2               	bsf	intcon,7,c	;volatile
  1146                           
  1147                           ;Main.c: 287: T0CON = 0b00000111;
  1148  001CB2  0E07               	movlw	7
  1149  001CB4  6ED5               	movwf	4053,c	;volatile
  1150                           
  1151                           ;Main.c: 295: INTCON2 = 0b10000100;
  1152  001CB6  0E84               	movlw	132
  1153  001CB8  6EF1               	movwf	intcon2,c	;volatile
  1154                           
  1155                           ;Main.c: 300: TMR0H = 0x48;
  1156  001CBA  0E48               	movlw	72
  1157  001CBC  6ED7               	movwf	4055,c	;volatile
  1158                           
  1159                           ;Main.c: 301: TMR0L = 0xE5;
  1160  001CBE  0EE5               	movlw	229
  1161  001CC0  6ED6               	movwf	4054,c	;volatile
  1162                           
  1163                           ;Main.c: 303: T0CONbits.TMR0ON = 1;
  1164  001CC2  8ED5               	bsf	4053,7,c	;volatile
  1165                           
  1166                           ;Main.c: 304: INTCONbits.TMR0IE = 1;
  1167  001CC4  8AF2               	bsf	intcon,5,c	;volatile
  1168                           
  1169                           ;Main.c: 307: INTCONbits.TMR0IF = 0;
  1170  001CC6  94F2               	bcf	intcon,2,c	;volatile
  1171  001CC8  0012               	return		;funcret
  1172  001CCA                     __end_of_SetupTimerInterruptRegisters:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           intcon	equ	0xFF2
  1181                           intcon2	equ	0xFF1
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec1	equ	0xFE5
  1185                           plusw1	equ	0xFE3
  1186                           fsr1l	equ	0xFE1
  1187                           indf2	equ	0xFDF
  1188                           plusw2	equ	0xFDB
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function _SetupTime *****************
  1194 ;; Defined at:
  1195 ;;		line 108 in file "Main.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1200 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1201 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1202 ;;  second1         1   46[BANK0 ] unsigned char 
  1203 ;;  second10        1   45[BANK0 ] unsigned char 
  1204 ;;  minute1         1   44[BANK0 ] unsigned char 
  1205 ;;  minute10        1   43[BANK0 ] unsigned char 
  1206 ;;  hour1           1   42[BANK0 ] unsigned char 
  1207 ;;  hour10          1   41[BANK0 ] unsigned char 
  1208 ;;  outchar         1   40[BANK0 ] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1218 ;;      Params:         0       0       0       0       0       0       0       0       0
  1219 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1221 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1222 ;;Total ram usage:       30 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    5
  1225 ;; This function calls:
  1226 ;;		_char_2_int
  1227 ;;		_delay_ms
  1228 ;;		_getkey
  1229 ;;		_lcd_write_cmd
  1230 ;;		_lcd_write_data
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text4
  1237  0011AA                     __ptext4:
  1238                           	opt stack 0
  1239  0011AA                     _SetupTime:
  1240                           	opt stack 25
  1241                           
  1242                           ;Main.c: 110: unsigned char msgindex, outchar, ctemp;
  1243                           ;Main.c: 111: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1244                           ;Main.c: 112: char Message[ ] = "Set time hhmmss:    ";
  1245                           
  1246                           ;incstack = 0
  1247  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4315
  1248  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1249  0011B2  0E14               	movlw	20
  1250  0011B4                     u1001:
  1251  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1252  0011B8  06E8               	decf	wreg,f,c
  1253  0011BA  E2FC               	bc	u1001
  1254                           
  1255                           ;Main.c: 114: lcd_write_cmd(0x80);
  1256  0011BC  0E80               	movlw	128
  1257  0011BE  EC59  F00C         	call	_lcd_write_cmd
  1258                           
  1259                           ;Main.c: 116: for (msgindex = 0; msgindex < 20; msgindex++)
  1260  0011C2  0E00               	movlw	0
  1261  0011C4  0100               	movlb	0	; () banked
  1262  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1263  0011C8                     l2145:
  1264                           
  1265                           ; BSR set to: 0
  1266  0011C8  0E13               	movlw	19
  1267  0011CA  0100               	movlb	0	; () banked
  1268  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1269  0011CE  D001               	goto	l2149
  1270  0011D0  D013               	goto	l2157
  1271  0011D2                     l2149:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;Main.c: 117: {
  1275                           ;Main.c: 118: outchar = Message[msgindex];
  1276  0011D2  0100               	movlb	0	; () banked
  1277  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1278  0011D6  0D01               	mullw	1
  1279  0011D8  0EC7               	movlw	low SetupTime@Message
  1280  0011DA  24F3               	addwf	prodl,w,c
  1281  0011DC  6ED9               	movwf	fsr2l,c
  1282  0011DE  0E00               	movlw	high SetupTime@Message
  1283  0011E0  20F4               	addwfc	prodh,w,c
  1284  0011E2  6EDA               	movwf	fsr2h,c
  1285  0011E4  50DF               	movf	indf2,w,c
  1286  0011E6  0100               	movlb	0	; () banked
  1287  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;Main.c: 119: lcd_write_data(outchar);
  1291  0011EA  0100               	movlb	0	; () banked
  1292  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1293  0011EE  EC3E  F00B         	call	_lcd_write_data
  1294  0011F2  0100               	movlb	0	; () banked
  1295  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1296  0011F6  D7E8               	goto	l2145
  1297  0011F8                     l2157:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;Main.c: 120: }
  1301                           ;Main.c: 122: lcd_write_cmd(0xC0);
  1302  0011F8  0EC0               	movlw	192
  1303  0011FA  EC59  F00C         	call	_lcd_write_cmd
  1304                           
  1305                           ;Main.c: 124: ctemp=getkey();
  1306  0011FE  ECF7  F00D         	call	_getkey	;wreg free
  1307  001202  0100               	movlb	0	; () banked
  1308  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;Main.c: 125: lcd_write_data(ctemp);
  1312  001206  0100               	movlb	0	; () banked
  1313  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1314  00120A  EC3E  F00B         	call	_lcd_write_data
  1315                           
  1316                           ;Main.c: 126: hour10 = char_2_int (ctemp);
  1317  00120E  0100               	movlb	0	; () banked
  1318  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1319  001212  ECD1  F00C         	call	_char_2_int
  1320  001216  0100               	movlb	0	; () banked
  1321  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;Main.c: 128: ctemp=getkey();
  1325  00121A  ECF7  F00D         	call	_getkey	;wreg free
  1326  00121E  0100               	movlb	0	; () banked
  1327  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1328                           
  1329                           ;Main.c: 129: lcd_write_data(ctemp);
  1330  001222  0100               	movlb	0	; () banked
  1331  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1332  001226  EC3E  F00B         	call	_lcd_write_data
  1333                           
  1334                           ;Main.c: 130: hour1 = char_2_int (ctemp);
  1335  00122A  0100               	movlb	0	; () banked
  1336  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1337  00122E  ECD1  F00C         	call	_char_2_int
  1338  001232  0100               	movlb	0	; () banked
  1339  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;Main.c: 132: ctemp=getkey();
  1343  001236  ECF7  F00D         	call	_getkey	;wreg free
  1344  00123A  0100               	movlb	0	; () banked
  1345  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;Main.c: 133: lcd_write_data(ctemp);
  1349  00123E  0100               	movlb	0	; () banked
  1350  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1351  001242  EC3E  F00B         	call	_lcd_write_data
  1352                           
  1353                           ;Main.c: 134: minute10 = char_2_int (ctemp);
  1354  001246  0100               	movlb	0	; () banked
  1355  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1356  00124A  ECD1  F00C         	call	_char_2_int
  1357  00124E  0100               	movlb	0	; () banked
  1358  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;Main.c: 136: ctemp=getkey();
  1362  001252  ECF7  F00D         	call	_getkey	;wreg free
  1363  001256  0100               	movlb	0	; () banked
  1364  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1365                           
  1366                           ;Main.c: 137: lcd_write_data(ctemp);
  1367  00125A  0100               	movlb	0	; () banked
  1368  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1369  00125E  EC3E  F00B         	call	_lcd_write_data
  1370                           
  1371                           ;Main.c: 138: minute1 = char_2_int (ctemp);
  1372  001262  0100               	movlb	0	; () banked
  1373  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1374  001266  ECD1  F00C         	call	_char_2_int
  1375  00126A  0100               	movlb	0	; () banked
  1376  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;Main.c: 140: ctemp=getkey();
  1380  00126E  ECF7  F00D         	call	_getkey	;wreg free
  1381  001272  0100               	movlb	0	; () banked
  1382  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;Main.c: 141: lcd_write_data(ctemp);
  1386  001276  0100               	movlb	0	; () banked
  1387  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1388  00127A  EC3E  F00B         	call	_lcd_write_data
  1389                           
  1390                           ;Main.c: 142: second10 = char_2_int (ctemp);
  1391  00127E  0100               	movlb	0	; () banked
  1392  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1393  001282  ECD1  F00C         	call	_char_2_int
  1394  001286  0100               	movlb	0	; () banked
  1395  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;Main.c: 144: ctemp=getkey();
  1399  00128A  ECF7  F00D         	call	_getkey	;wreg free
  1400  00128E  0100               	movlb	0	; () banked
  1401  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1402                           
  1403                           ;Main.c: 145: lcd_write_data(ctemp);
  1404  001292  0100               	movlb	0	; () banked
  1405  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1406  001296  EC3E  F00B         	call	_lcd_write_data
  1407                           
  1408                           ;Main.c: 146: second1 = char_2_int (ctemp);
  1409  00129A  0100               	movlb	0	; () banked
  1410  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1411  00129E  ECD1  F00C         	call	_char_2_int
  1412  0012A2  0100               	movlb	0	; () banked
  1413  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;Main.c: 148: hour = hour10 * 10 + hour1;
  1417  0012A6  0100               	movlb	0	; () banked
  1418  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1419  0012AA  0D0A               	mullw	10
  1420  0012AC  50F3               	movf	prodl,w,c
  1421  0012AE  0100               	movlb	0	; () banked
  1422  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1423  0012B2  6E3A               	movwf	_hour,c
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;Main.c: 149: minute = minute10 * 10 + minute1;
  1427  0012B4  0100               	movlb	0	; () banked
  1428  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1429  0012B8  0D0A               	mullw	10
  1430  0012BA  50F3               	movf	prodl,w,c
  1431  0012BC  0100               	movlb	0	; () banked
  1432  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1433  0012C0  6E3E               	movwf	_minute,c
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;Main.c: 150: second = second10 * 10 + second1;
  1437  0012C2  0100               	movlb	0	; () banked
  1438  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1439  0012C6  0D0A               	mullw	10
  1440  0012C8  50F3               	movf	prodl,w,c
  1441  0012CA  0100               	movlb	0	; () banked
  1442  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1443  0012CE  6E42               	movwf	_second,c
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;Main.c: 152: delay_ms(500);
  1447  0012D0  0E01               	movlw	1
  1448  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1449  0012D4  0EF4               	movlw	244
  1450  0012D6  6E1D               	movwf	delay_ms@i,c
  1451  0012D8  EC16  F00E         	call	_delay_ms	;wreg free
  1452                           
  1453                           ;Main.c: 153: lcd_write_cmd(0x01);
  1454  0012DC  0E01               	movlw	1
  1455  0012DE  EC59  F00C         	call	_lcd_write_cmd
  1456  0012E2  0012               	return		;funcret
  1457  0012E4                     __end_of_SetupTime:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           prodh	equ	0xFF4
  1464                           prodl	equ	0xFF3
  1465                           intcon	equ	0xFF2
  1466                           intcon2	equ	0xFF1
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           plusw1	equ	0xFE3
  1471                           fsr1l	equ	0xFE1
  1472                           indf2	equ	0xFDF
  1473                           plusw2	equ	0xFDB
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _SetupAlarmTimeC *****************
  1479 ;; Defined at:
  1480 ;;		line 236 in file "Main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1485 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1486 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1487 ;;  minute1         1   44[BANK0 ] unsigned char 
  1488 ;;  minute10        1   43[BANK0 ] unsigned char 
  1489 ;;  hour1           1   42[BANK0 ] unsigned char 
  1490 ;;  hour10          1   41[BANK0 ] unsigned char 
  1491 ;;  outchar         1   40[BANK0 ] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1505 ;;Total ram usage:       28 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    5
  1508 ;; This function calls:
  1509 ;;		_char_2_int
  1510 ;;		_delay_ms
  1511 ;;		_getkey
  1512 ;;		_lcd_write_cmd
  1513 ;;		_lcd_write_data
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text5
  1520  0012E4                     __ptext5:
  1521                           	opt stack 0
  1522  0012E4                     _SetupAlarmTimeC:
  1523                           	opt stack 25
  1524                           
  1525                           ;Main.c: 238: unsigned char msgindex, outchar, ctemp;
  1526                           ;Main.c: 239: unsigned char hour10, hour1, minute10, minute1;
  1527                           ;Main.c: 240: char Message[ ] = "Subject C Time hhmm:";
  1528                           
  1529                           ;incstack = 0
  1530  0012E4  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4345
  1531  0012E8  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1532  0012EC  0E14               	movlw	20
  1533  0012EE                     u1091:
  1534  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1535  0012F2  06E8               	decf	wreg,f,c
  1536  0012F4  E2FC               	bc	u1091
  1537                           
  1538                           ;Main.c: 242: PORTA = 0b00001000;
  1539  0012F6  0E08               	movlw	8
  1540  0012F8  6E80               	movwf	3968,c	;volatile
  1541                           
  1542                           ;Main.c: 244: lcd_write_cmd(0x80);
  1543  0012FA  0E80               	movlw	128
  1544  0012FC  EC59  F00C         	call	_lcd_write_cmd
  1545                           
  1546                           ;Main.c: 246: for (msgindex = 0; msgindex < 20; msgindex++)
  1547  001300  0E00               	movlw	0
  1548  001302  0100               	movlb	0	; () banked
  1549  001304  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1550  001306                     l2285:
  1551                           
  1552                           ; BSR set to: 0
  1553  001306  0E13               	movlw	19
  1554  001308  0100               	movlb	0	; () banked
  1555  00130A  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1556  00130C  D001               	goto	l2289
  1557  00130E  D013               	goto	l2297
  1558  001310                     l2289:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;Main.c: 247: {
  1562                           ;Main.c: 248: outchar = Message[msgindex];
  1563  001310  0100               	movlb	0	; () banked
  1564  001312  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1565  001314  0D01               	mullw	1
  1566  001316  0EC7               	movlw	low SetupAlarmTimeC@Message
  1567  001318  24F3               	addwf	prodl,w,c
  1568  00131A  6ED9               	movwf	fsr2l,c
  1569  00131C  0E00               	movlw	high SetupAlarmTimeC@Message
  1570  00131E  20F4               	addwfc	prodh,w,c
  1571  001320  6EDA               	movwf	fsr2h,c
  1572  001322  50DF               	movf	indf2,w,c
  1573  001324  0100               	movlb	0	; () banked
  1574  001326  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;Main.c: 249: lcd_write_data(outchar);
  1578  001328  0100               	movlb	0	; () banked
  1579  00132A  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1580  00132C  EC3E  F00B         	call	_lcd_write_data
  1581  001330  0100               	movlb	0	; () banked
  1582  001332  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1583  001334  D7E8               	goto	l2285
  1584  001336                     l2297:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;Main.c: 250: }
  1588                           ;Main.c: 252: lcd_write_cmd(0xC0);
  1589  001336  0EC0               	movlw	192
  1590  001338  EC59  F00C         	call	_lcd_write_cmd
  1591                           
  1592                           ;Main.c: 254: ctemp=getkey();
  1593  00133C  ECF7  F00D         	call	_getkey	;wreg free
  1594  001340  0100               	movlb	0	; () banked
  1595  001342  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;Main.c: 255: lcd_write_data(ctemp);
  1599  001344  0100               	movlb	0	; () banked
  1600  001346  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1601  001348  EC3E  F00B         	call	_lcd_write_data
  1602                           
  1603                           ;Main.c: 256: hour10 = char_2_int (ctemp);
  1604  00134C  0100               	movlb	0	; () banked
  1605  00134E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1606  001350  ECD1  F00C         	call	_char_2_int
  1607  001354  0100               	movlb	0	; () banked
  1608  001356  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;Main.c: 258: ctemp=getkey();
  1612  001358  ECF7  F00D         	call	_getkey	;wreg free
  1613  00135C  0100               	movlb	0	; () banked
  1614  00135E  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1615                           
  1616                           ;Main.c: 259: lcd_write_data(ctemp);
  1617  001360  0100               	movlb	0	; () banked
  1618  001362  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1619  001364  EC3E  F00B         	call	_lcd_write_data
  1620                           
  1621                           ;Main.c: 260: hour1 = char_2_int (ctemp);
  1622  001368  0100               	movlb	0	; () banked
  1623  00136A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1624  00136C  ECD1  F00C         	call	_char_2_int
  1625  001370  0100               	movlb	0	; () banked
  1626  001372  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;Main.c: 262: ctemp=getkey();
  1630  001374  ECF7  F00D         	call	_getkey	;wreg free
  1631  001378  0100               	movlb	0	; () banked
  1632  00137A  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;Main.c: 263: lcd_write_data(ctemp);
  1636  00137C  0100               	movlb	0	; () banked
  1637  00137E  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1638  001380  EC3E  F00B         	call	_lcd_write_data
  1639                           
  1640                           ;Main.c: 264: minute10 = char_2_int (ctemp);
  1641  001384  0100               	movlb	0	; () banked
  1642  001386  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1643  001388  ECD1  F00C         	call	_char_2_int
  1644  00138C  0100               	movlb	0	; () banked
  1645  00138E  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;Main.c: 266: ctemp=getkey();
  1649  001390  ECF7  F00D         	call	_getkey	;wreg free
  1650  001394  0100               	movlb	0	; () banked
  1651  001396  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1652                           
  1653                           ;Main.c: 267: lcd_write_data(ctemp);
  1654  001398  0100               	movlb	0	; () banked
  1655  00139A  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1656  00139C  EC3E  F00B         	call	_lcd_write_data
  1657                           
  1658                           ;Main.c: 268: minute1 = char_2_int (ctemp);
  1659  0013A0  0100               	movlb	0	; () banked
  1660  0013A2  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1661  0013A4  ECD1  F00C         	call	_char_2_int
  1662  0013A8  0100               	movlb	0	; () banked
  1663  0013AA  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;Main.c: 270: hourC = hour10 * 10 + hour1;
  1667  0013AC  0100               	movlb	0	; () banked
  1668  0013AE  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1669  0013B0  0D0A               	mullw	10
  1670  0013B2  50F3               	movf	prodl,w,c
  1671  0013B4  0100               	movlb	0	; () banked
  1672  0013B6  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1673  0013B8  6E3D               	movwf	_hourC,c
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;Main.c: 271: minuteC = minute10 * 10 + minute1;
  1677  0013BA  0100               	movlb	0	; () banked
  1678  0013BC  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1679  0013BE  0D0A               	mullw	10
  1680  0013C0  50F3               	movf	prodl,w,c
  1681  0013C2  0100               	movlb	0	; () banked
  1682  0013C4  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1683  0013C6  6E41               	movwf	_minuteC,c
  1684                           
  1685                           ;Main.c: 273: delay_ms(500);
  1686  0013C8  0E01               	movlw	1
  1687  0013CA  6E1E               	movwf	delay_ms@i+1,c
  1688  0013CC  0EF4               	movlw	244
  1689  0013CE  6E1D               	movwf	delay_ms@i,c
  1690  0013D0  EC16  F00E         	call	_delay_ms	;wreg free
  1691                           
  1692                           ;Main.c: 274: lcd_write_cmd(0x01);
  1693  0013D4  0E01               	movlw	1
  1694  0013D6  EC59  F00C         	call	_lcd_write_cmd
  1695  0013DA  0012               	return		;funcret
  1696  0013DC                     __end_of_SetupAlarmTimeC:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           prodh	equ	0xFF4
  1703                           prodl	equ	0xFF3
  1704                           intcon	equ	0xFF2
  1705                           intcon2	equ	0xFF1
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           plusw1	equ	0xFE3
  1710                           fsr1l	equ	0xFE1
  1711                           indf2	equ	0xFDF
  1712                           plusw2	equ	0xFDB
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _SetupAlarmTimeB *****************
  1718 ;; Defined at:
  1719 ;;		line 196 in file "Main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1724 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1725 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1726 ;;  minute1         1   44[BANK0 ] unsigned char 
  1727 ;;  minute10        1   43[BANK0 ] unsigned char 
  1728 ;;  hour1           1   42[BANK0 ] unsigned char 
  1729 ;;  hour10          1   41[BANK0 ] unsigned char 
  1730 ;;  outchar         1   40[BANK0 ] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1744 ;;Total ram usage:       28 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    5
  1747 ;; This function calls:
  1748 ;;		_char_2_int
  1749 ;;		_delay_ms
  1750 ;;		_getkey
  1751 ;;		_lcd_write_cmd
  1752 ;;		_lcd_write_data
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text6
  1759  0013DC                     __ptext6:
  1760                           	opt stack 0
  1761  0013DC                     _SetupAlarmTimeB:
  1762                           	opt stack 25
  1763                           
  1764                           ;Main.c: 198: unsigned char msgindex, outchar, ctemp;
  1765                           ;Main.c: 199: unsigned char hour10, hour1, minute10, minute1;
  1766                           ;Main.c: 200: char Message[ ] = "Subject B Time hhmm:";
  1767                           
  1768                           ;incstack = 0
  1769  0013DC  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4335
  1770  0013E0  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1771  0013E4  0E14               	movlw	20
  1772  0013E6                     u1061:
  1773  0013E6  CFDB FFE3          	movff	plusw2,plusw1
  1774  0013EA  06E8               	decf	wreg,f,c
  1775  0013EC  E2FC               	bc	u1061
  1776                           
  1777                           ;Main.c: 202: PORTA = 0b00000100;
  1778  0013EE  0E04               	movlw	4
  1779  0013F0  6E80               	movwf	3968,c	;volatile
  1780                           
  1781                           ;Main.c: 204: lcd_write_cmd(0x80);
  1782  0013F2  0E80               	movlw	128
  1783  0013F4  EC59  F00C         	call	_lcd_write_cmd
  1784                           
  1785                           ;Main.c: 206: for (msgindex = 0; msgindex < 20; msgindex++)
  1786  0013F8  0E00               	movlw	0
  1787  0013FA  0100               	movlb	0	; () banked
  1788  0013FC  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1789  0013FE                     l2243:
  1790                           
  1791                           ; BSR set to: 0
  1792  0013FE  0E13               	movlw	19
  1793  001400  0100               	movlb	0	; () banked
  1794  001402  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1795  001404  D001               	goto	l2247
  1796  001406  D013               	goto	l2255
  1797  001408                     l2247:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;Main.c: 207: {
  1801                           ;Main.c: 208: outchar = Message[msgindex];
  1802  001408  0100               	movlb	0	; () banked
  1803  00140A  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1804  00140C  0D01               	mullw	1
  1805  00140E  0EC7               	movlw	low SetupAlarmTimeB@Message
  1806  001410  24F3               	addwf	prodl,w,c
  1807  001412  6ED9               	movwf	fsr2l,c
  1808  001414  0E00               	movlw	high SetupAlarmTimeB@Message
  1809  001416  20F4               	addwfc	prodh,w,c
  1810  001418  6EDA               	movwf	fsr2h,c
  1811  00141A  50DF               	movf	indf2,w,c
  1812  00141C  0100               	movlb	0	; () banked
  1813  00141E  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;Main.c: 209: lcd_write_data(outchar);
  1817  001420  0100               	movlb	0	; () banked
  1818  001422  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1819  001424  EC3E  F00B         	call	_lcd_write_data
  1820  001428  0100               	movlb	0	; () banked
  1821  00142A  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1822  00142C  D7E8               	goto	l2243
  1823  00142E                     l2255:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;Main.c: 210: }
  1827                           ;Main.c: 212: lcd_write_cmd(0xC0);
  1828  00142E  0EC0               	movlw	192
  1829  001430  EC59  F00C         	call	_lcd_write_cmd
  1830                           
  1831                           ;Main.c: 214: ctemp=getkey();
  1832  001434  ECF7  F00D         	call	_getkey	;wreg free
  1833  001438  0100               	movlb	0	; () banked
  1834  00143A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;Main.c: 215: lcd_write_data(ctemp);
  1838  00143C  0100               	movlb	0	; () banked
  1839  00143E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1840  001440  EC3E  F00B         	call	_lcd_write_data
  1841                           
  1842                           ;Main.c: 216: hour10 = char_2_int (ctemp);
  1843  001444  0100               	movlb	0	; () banked
  1844  001446  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1845  001448  ECD1  F00C         	call	_char_2_int
  1846  00144C  0100               	movlb	0	; () banked
  1847  00144E  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;Main.c: 218: ctemp=getkey();
  1851  001450  ECF7  F00D         	call	_getkey	;wreg free
  1852  001454  0100               	movlb	0	; () banked
  1853  001456  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1854                           
  1855                           ;Main.c: 219: lcd_write_data(ctemp);
  1856  001458  0100               	movlb	0	; () banked
  1857  00145A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1858  00145C  EC3E  F00B         	call	_lcd_write_data
  1859                           
  1860                           ;Main.c: 220: hour1 = char_2_int (ctemp);
  1861  001460  0100               	movlb	0	; () banked
  1862  001462  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1863  001464  ECD1  F00C         	call	_char_2_int
  1864  001468  0100               	movlb	0	; () banked
  1865  00146A  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;Main.c: 222: ctemp=getkey();
  1869  00146C  ECF7  F00D         	call	_getkey	;wreg free
  1870  001470  0100               	movlb	0	; () banked
  1871  001472  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;Main.c: 223: lcd_write_data(ctemp);
  1875  001474  0100               	movlb	0	; () banked
  1876  001476  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1877  001478  EC3E  F00B         	call	_lcd_write_data
  1878                           
  1879                           ;Main.c: 224: minute10 = char_2_int (ctemp);
  1880  00147C  0100               	movlb	0	; () banked
  1881  00147E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1882  001480  ECD1  F00C         	call	_char_2_int
  1883  001484  0100               	movlb	0	; () banked
  1884  001486  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;Main.c: 226: ctemp=getkey();
  1888  001488  ECF7  F00D         	call	_getkey	;wreg free
  1889  00148C  0100               	movlb	0	; () banked
  1890  00148E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1891                           
  1892                           ;Main.c: 227: lcd_write_data(ctemp);
  1893  001490  0100               	movlb	0	; () banked
  1894  001492  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1895  001494  EC3E  F00B         	call	_lcd_write_data
  1896                           
  1897                           ;Main.c: 228: minute1 = char_2_int (ctemp);
  1898  001498  0100               	movlb	0	; () banked
  1899  00149A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1900  00149C  ECD1  F00C         	call	_char_2_int
  1901  0014A0  0100               	movlb	0	; () banked
  1902  0014A2  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;Main.c: 230: hourB = hour10 * 10 + hour1;
  1906  0014A4  0100               	movlb	0	; () banked
  1907  0014A6  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  1908  0014A8  0D0A               	mullw	10
  1909  0014AA  50F3               	movf	prodl,w,c
  1910  0014AC  0100               	movlb	0	; () banked
  1911  0014AE  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  1912  0014B0  6E3C               	movwf	_hourB,c
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;Main.c: 231: minuteB = minute10 * 10 + minute1;
  1916  0014B2  0100               	movlb	0	; () banked
  1917  0014B4  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  1918  0014B6  0D0A               	mullw	10
  1919  0014B8  50F3               	movf	prodl,w,c
  1920  0014BA  0100               	movlb	0	; () banked
  1921  0014BC  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  1922  0014BE  6E40               	movwf	_minuteB,c
  1923                           
  1924                           ;Main.c: 233: delay_ms(500);
  1925  0014C0  0E01               	movlw	1
  1926  0014C2  6E1E               	movwf	delay_ms@i+1,c
  1927  0014C4  0EF4               	movlw	244
  1928  0014C6  6E1D               	movwf	delay_ms@i,c
  1929  0014C8  EC16  F00E         	call	_delay_ms	;wreg free
  1930                           
  1931                           ;Main.c: 234: lcd_write_cmd(0x01);
  1932  0014CC  0E01               	movlw	1
  1933  0014CE  EC59  F00C         	call	_lcd_write_cmd
  1934  0014D2  0012               	return		;funcret
  1935  0014D4                     __end_of_SetupAlarmTimeB:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           prodh	equ	0xFF4
  1942                           prodl	equ	0xFF3
  1943                           intcon	equ	0xFF2
  1944                           intcon2	equ	0xFF1
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           postdec1	equ	0xFE5
  1948                           plusw1	equ	0xFE3
  1949                           fsr1l	equ	0xFE1
  1950                           indf2	equ	0xFDF
  1951                           plusw2	equ	0xFDB
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _SetupAlarmTimeA *****************
  1957 ;; Defined at:
  1958 ;;		line 156 in file "Main.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1963 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1964 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1965 ;;  minute1         1   44[BANK0 ] unsigned char 
  1966 ;;  minute10        1   43[BANK0 ] unsigned char 
  1967 ;;  hour1           1   42[BANK0 ] unsigned char 
  1968 ;;  hour10          1   41[BANK0 ] unsigned char 
  1969 ;;  outchar         1   40[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0
  1980 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1982 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1983 ;;Total ram usage:       28 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    5
  1986 ;; This function calls:
  1987 ;;		_char_2_int
  1988 ;;		_delay_ms
  1989 ;;		_getkey
  1990 ;;		_lcd_write_cmd
  1991 ;;		_lcd_write_data
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text7
  1998  0014D4                     __ptext7:
  1999                           	opt stack 0
  2000  0014D4                     _SetupAlarmTimeA:
  2001                           	opt stack 25
  2002                           
  2003                           ;Main.c: 158: unsigned char msgindex, outchar, ctemp;
  2004                           ;Main.c: 159: unsigned char hour10, hour1, minute10, minute1;
  2005                           ;Main.c: 160: char Message[ ] = "Subject A Time hhmm:";
  2006                           
  2007                           ;incstack = 0
  2008  0014D4  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4325
  2009  0014D8  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  2010  0014DC  0E14               	movlw	20
  2011  0014DE                     u1031:
  2012  0014DE  CFDB FFE3          	movff	plusw2,plusw1
  2013  0014E2  06E8               	decf	wreg,f,c
  2014  0014E4  E2FC               	bc	u1031
  2015                           
  2016                           ;Main.c: 162: PORTA = 0b00000010;
  2017  0014E6  0E02               	movlw	2
  2018  0014E8  6E80               	movwf	3968,c	;volatile
  2019                           
  2020                           ;Main.c: 164: lcd_write_cmd(0x80);
  2021  0014EA  0E80               	movlw	128
  2022  0014EC  EC59  F00C         	call	_lcd_write_cmd
  2023                           
  2024                           ;Main.c: 166: for (msgindex = 0; msgindex < 20; msgindex++)
  2025  0014F0  0E00               	movlw	0
  2026  0014F2  0100               	movlb	0	; () banked
  2027  0014F4  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2028  0014F6                     l2201:
  2029                           
  2030                           ; BSR set to: 0
  2031  0014F6  0E13               	movlw	19
  2032  0014F8  0100               	movlb	0	; () banked
  2033  0014FA  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2034  0014FC  D001               	goto	l2205
  2035  0014FE  D013               	goto	l2213
  2036  001500                     l2205:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;Main.c: 167: {
  2040                           ;Main.c: 168: outchar = Message[msgindex];
  2041  001500  0100               	movlb	0	; () banked
  2042  001502  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2043  001504  0D01               	mullw	1
  2044  001506  0EC7               	movlw	low SetupAlarmTimeA@Message
  2045  001508  24F3               	addwf	prodl,w,c
  2046  00150A  6ED9               	movwf	fsr2l,c
  2047  00150C  0E00               	movlw	high SetupAlarmTimeA@Message
  2048  00150E  20F4               	addwfc	prodh,w,c
  2049  001510  6EDA               	movwf	fsr2h,c
  2050  001512  50DF               	movf	indf2,w,c
  2051  001514  0100               	movlb	0	; () banked
  2052  001516  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;Main.c: 169: lcd_write_data(outchar);
  2056  001518  0100               	movlb	0	; () banked
  2057  00151A  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2058  00151C  EC3E  F00B         	call	_lcd_write_data
  2059  001520  0100               	movlb	0	; () banked
  2060  001522  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2061  001524  D7E8               	goto	l2201
  2062  001526                     l2213:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;Main.c: 170: }
  2066                           ;Main.c: 172: lcd_write_cmd(0xC0);
  2067  001526  0EC0               	movlw	192
  2068  001528  EC59  F00C         	call	_lcd_write_cmd
  2069                           
  2070                           ;Main.c: 174: ctemp=getkey();
  2071  00152C  ECF7  F00D         	call	_getkey	;wreg free
  2072  001530  0100               	movlb	0	; () banked
  2073  001532  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;Main.c: 175: lcd_write_data(ctemp);
  2077  001534  0100               	movlb	0	; () banked
  2078  001536  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2079  001538  EC3E  F00B         	call	_lcd_write_data
  2080                           
  2081                           ;Main.c: 176: hour10 = char_2_int (ctemp);
  2082  00153C  0100               	movlb	0	; () banked
  2083  00153E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2084  001540  ECD1  F00C         	call	_char_2_int
  2085  001544  0100               	movlb	0	; () banked
  2086  001546  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;Main.c: 178: ctemp=getkey();
  2090  001548  ECF7  F00D         	call	_getkey	;wreg free
  2091  00154C  0100               	movlb	0	; () banked
  2092  00154E  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2093                           
  2094                           ;Main.c: 179: lcd_write_data(ctemp);
  2095  001550  0100               	movlb	0	; () banked
  2096  001552  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2097  001554  EC3E  F00B         	call	_lcd_write_data
  2098                           
  2099                           ;Main.c: 180: hour1 = char_2_int (ctemp);
  2100  001558  0100               	movlb	0	; () banked
  2101  00155A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2102  00155C  ECD1  F00C         	call	_char_2_int
  2103  001560  0100               	movlb	0	; () banked
  2104  001562  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;Main.c: 182: ctemp=getkey();
  2108  001564  ECF7  F00D         	call	_getkey	;wreg free
  2109  001568  0100               	movlb	0	; () banked
  2110  00156A  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;Main.c: 183: lcd_write_data(ctemp);
  2114  00156C  0100               	movlb	0	; () banked
  2115  00156E  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2116  001570  EC3E  F00B         	call	_lcd_write_data
  2117                           
  2118                           ;Main.c: 184: minute10 = char_2_int (ctemp);
  2119  001574  0100               	movlb	0	; () banked
  2120  001576  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2121  001578  ECD1  F00C         	call	_char_2_int
  2122  00157C  0100               	movlb	0	; () banked
  2123  00157E  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;Main.c: 186: ctemp=getkey();
  2127  001580  ECF7  F00D         	call	_getkey	;wreg free
  2128  001584  0100               	movlb	0	; () banked
  2129  001586  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2130                           
  2131                           ;Main.c: 187: lcd_write_data(ctemp);
  2132  001588  0100               	movlb	0	; () banked
  2133  00158A  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2134  00158C  EC3E  F00B         	call	_lcd_write_data
  2135                           
  2136                           ;Main.c: 188: minute1 = char_2_int (ctemp);
  2137  001590  0100               	movlb	0	; () banked
  2138  001592  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2139  001594  ECD1  F00C         	call	_char_2_int
  2140  001598  0100               	movlb	0	; () banked
  2141  00159A  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;Main.c: 190: hourA = hour10 * 10 + hour1;
  2145  00159C  0100               	movlb	0	; () banked
  2146  00159E  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2147  0015A0  0D0A               	mullw	10
  2148  0015A2  50F3               	movf	prodl,w,c
  2149  0015A4  0100               	movlb	0	; () banked
  2150  0015A6  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2151  0015A8  6E3B               	movwf	_hourA,c
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;Main.c: 191: minuteA = minute10 * 10 + minute1;
  2155  0015AA  0100               	movlb	0	; () banked
  2156  0015AC  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2157  0015AE  0D0A               	mullw	10
  2158  0015B0  50F3               	movf	prodl,w,c
  2159  0015B2  0100               	movlb	0	; () banked
  2160  0015B4  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2161  0015B6  6E3F               	movwf	_minuteA,c
  2162                           
  2163                           ;Main.c: 193: delay_ms(500);
  2164  0015B8  0E01               	movlw	1
  2165  0015BA  6E1E               	movwf	delay_ms@i+1,c
  2166  0015BC  0EF4               	movlw	244
  2167  0015BE  6E1D               	movwf	delay_ms@i,c
  2168  0015C0  EC16  F00E         	call	_delay_ms	;wreg free
  2169                           
  2170                           ;Main.c: 194: lcd_write_cmd(0x01);
  2171  0015C4  0E01               	movlw	1
  2172  0015C6  EC59  F00C         	call	_lcd_write_cmd
  2173  0015CA  0012               	return		;funcret
  2174  0015CC                     __end_of_SetupAlarmTimeA:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           prodh	equ	0xFF4
  2181                           prodl	equ	0xFF3
  2182                           intcon	equ	0xFF2
  2183                           intcon2	equ	0xFF1
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           plusw1	equ	0xFE3
  2188                           fsr1l	equ	0xFE1
  2189                           indf2	equ	0xFDF
  2190                           plusw2	equ	0xFDB
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _lcd_write_data *****************
  2196 ;; Defined at:
  2197 ;;		line 43 in file "lcd_utilities.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  data            1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  data            1    0[BANK0 ] unsigned char 
  2202 ;;  temp1           1    1[BANK0 ] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2212 ;;      Params:         0       0       0       0       0       0       0       0       0
  2213 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2215 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2216 ;;Total ram usage:        3 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    4
  2219 ;; This function calls:
  2220 ;;		_lcd_strobe
  2221 ;; This function is called by:
  2222 ;;		_SetupTime
  2223 ;;		_SetupAlarmTimeA
  2224 ;;		_SetupAlarmTimeB
  2225 ;;		_SetupAlarmTimeC
  2226 ;;		_version
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text8
  2231  00167C                     __ptext8:
  2232                           	opt stack 0
  2233  00167C                     _lcd_write_data:
  2234                           	opt stack 25
  2235                           
  2236                           ;incstack = 0
  2237                           ;lcd_write_data@data stored from wreg
  2238  00167C  0100               	movlb	0	; () banked
  2239  00167E  6FB4               	movwf	lcd_write_data@data& (0+255),b
  2240                           
  2241                           ;lcd_utilities.c: 45: char temp1;
  2242                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2243  001680  8C83               	bsf	3971,6,c	;volatile
  2244                           
  2245                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2246  001682  0E3F               	movlw	63
  2247  001684  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2248  001686  0E55               	movlw	85
  2249  001688                     u1297:
  2250  001688  2EE8               	decfsz	wreg,f,c
  2251  00168A  D7FE               	goto	u1297
  2252  00168C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2253  00168E  D7FC               	goto	u1297
  2254  001690  F000               	nop	
  2255                           
  2256                           ;lcd_utilities.c: 50: temp1 = data;
  2257  001692  C0B4  F0B5         	movff	lcd_write_data@data,lcd_write_data@temp1
  2258                           
  2259                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2260  001696  0100               	movlb	0	; () banked
  2261  001698  39B5               	swapf	lcd_write_data@temp1& (0+255),w,b
  2262  00169A  0B0F               	andlw	15
  2263  00169C  0100               	movlb	0	; () banked
  2264  00169E  6FB5               	movwf	lcd_write_data@temp1& (0+255),b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2268  0016A0  0100               	movlb	0	; () banked
  2269  0016A2  51B5               	movf	lcd_write_data@temp1& (0+255),w,b
  2270  0016A4  0B0F               	andlw	15
  2271  0016A6  6E83               	movwf	3971,c	;volatile
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2275  0016A8  0E7D               	movlw	125
  2276  0016AA  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2277  0016AC  0EAC               	movlw	172
  2278  0016AE                     u1307:
  2279  0016AE  2EE8               	decfsz	wreg,f,c
  2280  0016B0  D7FE               	goto	u1307
  2281  0016B2  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2282  0016B4  D7FC               	goto	u1307
  2283                           
  2284                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2285  0016B6  8C83               	bsf	3971,6,c	;volatile
  2286                           
  2287                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2288  0016B8  0E7D               	movlw	125
  2289  0016BA  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2290  0016BC  0EAC               	movlw	172
  2291  0016BE                     u1317:
  2292  0016BE  2EE8               	decfsz	wreg,f,c
  2293  0016C0  D7FE               	goto	u1317
  2294  0016C2  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2295  0016C4  D7FC               	goto	u1317
  2296                           
  2297                           ;lcd_utilities.c: 57: lcd_strobe();
  2298  0016C6  EC35  F00E         	call	_lcd_strobe	;wreg free
  2299                           
  2300                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2301  0016CA  0E7D               	movlw	125
  2302  0016CC  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2303  0016CE  0EAC               	movlw	172
  2304  0016D0                     u1327:
  2305  0016D0  2EE8               	decfsz	wreg,f,c
  2306  0016D2  D7FE               	goto	u1327
  2307  0016D4  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2308  0016D6  D7FC               	goto	u1327
  2309                           
  2310                           ;lcd_utilities.c: 60: temp1 = data;
  2311  0016D8  C0B4  F0B5         	movff	lcd_write_data@data,lcd_write_data@temp1
  2312                           
  2313                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2314  0016DC  0100               	movlb	0	; () banked
  2315  0016DE  51B5               	movf	lcd_write_data@temp1& (0+255),w,b
  2316  0016E0  0B0F               	andlw	15
  2317  0016E2  6E83               	movwf	3971,c	;volatile
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2321  0016E4  0E7D               	movlw	125
  2322  0016E6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2323  0016E8  0EAC               	movlw	172
  2324  0016EA                     u1337:
  2325  0016EA  2EE8               	decfsz	wreg,f,c
  2326  0016EC  D7FE               	goto	u1337
  2327  0016EE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2328  0016F0  D7FC               	goto	u1337
  2329                           
  2330                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2331  0016F2  8C83               	bsf	3971,6,c	;volatile
  2332                           
  2333                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2334  0016F4  0E9C               	movlw	156
  2335  0016F6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2336  0016F8  0ED7               	movlw	215
  2337  0016FA                     u1347:
  2338  0016FA  2EE8               	decfsz	wreg,f,c
  2339  0016FC  D7FE               	goto	u1347
  2340  0016FE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2341  001700  D7FC               	goto	u1347
  2342  001702  F000               	nop	
  2343                           
  2344                           ;lcd_utilities.c: 66: lcd_strobe();
  2345  001704  EC35  F00E         	call	_lcd_strobe	;wreg free
  2346                           
  2347                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2348  001708  0E9C               	movlw	156
  2349  00170A  6E1E               	movwf	??_lcd_write_data& (0+255),c
  2350  00170C  0ED7               	movlw	215
  2351  00170E                     u1357:
  2352  00170E  2EE8               	decfsz	wreg,f,c
  2353  001710  D7FE               	goto	u1357
  2354  001712  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  2355  001714  D7FC               	goto	u1357
  2356  001716  F000               	nop	
  2357  001718  0012               	return		;funcret
  2358  00171A                     __end_of_lcd_write_data:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           prodh	equ	0xFF4
  2365                           prodl	equ	0xFF3
  2366                           intcon	equ	0xFF2
  2367                           intcon2	equ	0xFF1
  2368                           postinc0	equ	0xFEE
  2369                           wreg	equ	0xFE8
  2370                           postdec1	equ	0xFE5
  2371                           plusw1	equ	0xFE3
  2372                           fsr1l	equ	0xFE1
  2373                           indf2	equ	0xFDF
  2374                           plusw2	equ	0xFDB
  2375                           fsr2h	equ	0xFDA
  2376                           fsr2l	equ	0xFD9
  2377                           status	equ	0xFD8
  2378                           
  2379 ;; *************** function _lcd_write_cmd *****************
  2380 ;; Defined at:
  2381 ;;		line 18 in file "lcd_utilities.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  cmd             1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  cmd             1    0[BANK0 ] unsigned char 
  2386 ;;  temp2           1    1[BANK0 ] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0
  2397 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2399 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2400 ;;Total ram usage:        3 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		_lcd_strobe
  2405 ;; This function is called by:
  2406 ;;		_lcd_init
  2407 ;;		_SetupTime
  2408 ;;		_SetupAlarmTimeA
  2409 ;;		_SetupAlarmTimeB
  2410 ;;		_SetupAlarmTimeC
  2411 ;;		_version
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text9
  2416  0018B2                     __ptext9:
  2417                           	opt stack 0
  2418  0018B2                     _lcd_write_cmd:
  2419                           	opt stack 25
  2420                           
  2421                           ;incstack = 0
  2422                           ;lcd_write_cmd@cmd stored from wreg
  2423  0018B2  0100               	movlb	0	; () banked
  2424  0018B4  6FB4               	movwf	lcd_write_cmd@cmd& (0+255),b
  2425                           
  2426                           ;lcd_utilities.c: 20: unsigned char temp2;
  2427                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2428  0018B6  9C83               	bcf	3971,6,c	;volatile
  2429                           
  2430                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2431  0018B8  0E3F               	movlw	63
  2432  0018BA  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2433  0018BC  0E55               	movlw	85
  2434  0018BE                     u1367:
  2435  0018BE  2EE8               	decfsz	wreg,f,c
  2436  0018C0  D7FE               	goto	u1367
  2437  0018C2  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2438  0018C4  D7FC               	goto	u1367
  2439  0018C6  F000               	nop	
  2440                           
  2441                           ;lcd_utilities.c: 23: temp2 = cmd;
  2442  0018C8  C0B4  F0B5         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2443                           
  2444                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2445  0018CC  0100               	movlb	0	; () banked
  2446  0018CE  39B5               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  2447  0018D0  0B0F               	andlw	15
  2448  0018D2  0100               	movlb	0	; () banked
  2449  0018D4  6FB5               	movwf	lcd_write_cmd@temp2& (0+255),b
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2453  0018D6  0100               	movlb	0	; () banked
  2454  0018D8  51B5               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2455  0018DA  0B0F               	andlw	15
  2456  0018DC  6E83               	movwf	3971,c	;volatile
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2460  0018DE  0E7D               	movlw	125
  2461  0018E0  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2462  0018E2  0EAC               	movlw	172
  2463  0018E4                     u1377:
  2464  0018E4  2EE8               	decfsz	wreg,f,c
  2465  0018E6  D7FE               	goto	u1377
  2466  0018E8  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2467  0018EA  D7FC               	goto	u1377
  2468                           
  2469                           ;lcd_utilities.c: 28: lcd_strobe();
  2470  0018EC  EC35  F00E         	call	_lcd_strobe	;wreg free
  2471                           
  2472                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2473  0018F0  0E7D               	movlw	125
  2474  0018F2  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2475  0018F4  0EAC               	movlw	172
  2476  0018F6                     u1387:
  2477  0018F6  2EE8               	decfsz	wreg,f,c
  2478  0018F8  D7FE               	goto	u1387
  2479  0018FA  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2480  0018FC  D7FC               	goto	u1387
  2481                           
  2482                           ;lcd_utilities.c: 32: temp2 = cmd;
  2483  0018FE  C0B4  F0B5         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2484                           
  2485                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2486  001902  0100               	movlb	0	; () banked
  2487  001904  51B5               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2488  001906  0B0F               	andlw	15
  2489  001908  6E83               	movwf	3971,c	;volatile
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2493  00190A  0E7D               	movlw	125
  2494  00190C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2495  00190E  0EAC               	movlw	172
  2496  001910                     u1397:
  2497  001910  2EE8               	decfsz	wreg,f,c
  2498  001912  D7FE               	goto	u1397
  2499  001914  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2500  001916  D7FC               	goto	u1397
  2501                           
  2502                           ;lcd_utilities.c: 36: lcd_strobe();
  2503  001918  EC35  F00E         	call	_lcd_strobe	;wreg free
  2504                           
  2505                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2506  00191C  0E7D               	movlw	125
  2507  00191E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  2508  001920  0EAC               	movlw	172
  2509  001922                     u1407:
  2510  001922  2EE8               	decfsz	wreg,f,c
  2511  001924  D7FE               	goto	u1407
  2512  001926  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  2513  001928  D7FC               	goto	u1407
  2514  00192A  0012               	return		;funcret
  2515  00192C                     __end_of_lcd_write_cmd:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           intcon	equ	0xFF2
  2524                           intcon2	equ	0xFF1
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           postdec1	equ	0xFE5
  2528                           plusw1	equ	0xFE3
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           plusw2	equ	0xFDB
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _lcd_strobe *****************
  2537 ;; Defined at:
  2538 ;;		line 73 in file "lcd_utilities.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2554 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2555 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    3
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_lcd_write_cmd
  2563 ;;		_lcd_write_data
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text10
  2568  001C6A                     __ptext10:
  2569                           	opt stack 0
  2570  001C6A                     _lcd_strobe:
  2571                           	opt stack 25
  2572                           
  2573                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2574                           
  2575                           ;incstack = 0
  2576  001C6A  8883               	bsf	3971,4,c	;volatile
  2577                           
  2578                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2579  001C6C  0E7D               	movlw	125
  2580  001C6E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2581  001C70  0EAC               	movlw	172
  2582  001C72                     u1417:
  2583  001C72  2EE8               	decfsz	wreg,f,c
  2584  001C74  D7FE               	goto	u1417
  2585  001C76  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2586  001C78  D7FC               	goto	u1417
  2587                           
  2588                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2589  001C7A  9883               	bcf	3971,4,c	;volatile
  2590                           
  2591                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2592  001C7C  0E7D               	movlw	125
  2593  001C7E  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2594  001C80  0EAC               	movlw	172
  2595  001C82                     u1427:
  2596  001C82  2EE8               	decfsz	wreg,f,c
  2597  001C84  D7FE               	goto	u1427
  2598  001C86  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2599  001C88  D7FC               	goto	u1427
  2600  001C8A  0012               	return		;funcret
  2601  001C8C                     __end_of_lcd_strobe:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           intcon2	equ	0xFF1
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           postdec1	equ	0xFE5
  2614                           plusw1	equ	0xFE3
  2615                           fsr1l	equ	0xFE1
  2616                           indf2	equ	0xFDF
  2617                           plusw2	equ	0xFDB
  2618                           fsr2h	equ	0xFDA
  2619                           fsr2l	equ	0xFD9
  2620                           status	equ	0xFD8
  2621                           
  2622 ;; *************** function _getkey *****************
  2623 ;; Defined at:
  2624 ;;		line 17 in file "keypad_utilities.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2629 ;;  keycode         1   18[BANK0 ] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      unsigned char 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0
  2640 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2642 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2643 ;;Total ram usage:       19 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    3
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_SetupTime
  2650 ;;		_SetupAlarmTimeA
  2651 ;;		_SetupAlarmTimeB
  2652 ;;		_SetupAlarmTimeC
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text11
  2657  001BEE                     __ptext11:
  2658                           	opt stack 0
  2659  001BEE                     _getkey:
  2660                           	opt stack 26
  2661                           
  2662                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2663                           
  2664                           ;incstack = 0
  2665  001BEE  0E1B               	movlw	low getkey@F4270
  2666  001BF0  6EF6               	movwf	tblptrl,c
  2667  001BF2                     	if	1	;There is more than 1 active tblptr byte
  2668  001BF2  0E10               	movlw	high getkey@F4270
  2669  001BF4  6EF7               	movwf	tblptrh,c
  2670  001BF6                     	endif
  2671  001BF6                     	if	0	;There are less than 3 active tblptr bytes
  2672  001BF6                     	endif
  2673  001BF6  EE20  F0B4         	lfsr	2,getkey@lookup
  2674  001BFA  0E11               	movlw	17
  2675  001BFC                     u930:
  2676  001BFC  0009               	tblrd		*+
  2677  001BFE  CFF5 FFDE          	movff	tablat,postinc2
  2678  001C02  06E8               	decf	wreg,f,c
  2679  001C04  E2FB               	bc	u930
  2680  001C06                     l33:
  2681  001C06  AA81               	btfss	3969,5,c	;volatile
  2682  001C08  D7FE               	goto	l33
  2683                           
  2684                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2685  001C0A  5081               	movf	3969,w,c	;volatile
  2686  001C0C  0B0F               	andlw	15
  2687  001C0E  0100               	movlb	0	; () banked
  2688  001C10  6FC6               	movwf	getkey@keycode& (0+255),b
  2689  001C12                     l36:
  2690  001C12  BA81               	btfsc	3969,5,c	;volatile
  2691  001C14  D7FE               	goto	l36
  2692                           
  2693                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2694  001C16  0100               	movlb	0	; () banked
  2695  001C18  51C6               	movf	getkey@keycode& (0+255),w,b
  2696  001C1A  0D01               	mullw	1
  2697  001C1C  0EB4               	movlw	low getkey@lookup
  2698  001C1E  24F3               	addwf	prodl,w,c
  2699  001C20  6ED9               	movwf	fsr2l,c
  2700  001C22  0E00               	movlw	high getkey@lookup
  2701  001C24  20F4               	addwfc	prodh,w,c
  2702  001C26  6EDA               	movwf	fsr2h,c
  2703  001C28  50DF               	movf	indf2,w,c
  2704  001C2A  0012               	return	
  2705  001C2C                     __end_of_getkey:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           intcon2	equ	0xFF1
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           plusw1	equ	0xFE3
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           plusw2	equ	0xFDB
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _char_2_int *****************
  2728 ;; Defined at:
  2729 ;;		line 36 in file "Main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  char1           1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  char1           1   28[COMRAM] unsigned char 
  2734 ;;  int1            1   29[COMRAM] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      unsigned char 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0
  2745 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2747 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    3
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_SetupTime
  2755 ;;		_SetupAlarmTimeA
  2756 ;;		_SetupAlarmTimeB
  2757 ;;		_SetupAlarmTimeC
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text12
  2762  0019A2                     __ptext12:
  2763                           	opt stack 0
  2764  0019A2                     _char_2_int:
  2765                           	opt stack 26
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;incstack = 0
  2769                           ;char_2_int@char1 stored from wreg
  2770  0019A2  6E1D               	movwf	char_2_int@char1,c
  2771                           
  2772                           ;Main.c: 38: unsigned char int1;
  2773                           ;Main.c: 39: switch (char1)
  2774  0019A4  D015               	goto	l1555
  2775  0019A6                     l1535:
  2776  0019A6  0E01               	movlw	1
  2777  0019A8  D011               	goto	L10
  2778  0019AA                     l1537:
  2779  0019AA  0E02               	movlw	2
  2780  0019AC  D00F               	goto	L10
  2781  0019AE                     l1539:
  2782  0019AE  0E03               	movlw	3
  2783  0019B0  D00D               	goto	L10
  2784  0019B2                     l1541:
  2785  0019B2  0E04               	movlw	4
  2786  0019B4  D00B               	goto	L10
  2787  0019B6                     l1543:
  2788  0019B6  0E05               	movlw	5
  2789  0019B8  D009               	goto	L10
  2790  0019BA                     l1545:
  2791  0019BA  0E06               	movlw	6
  2792  0019BC  D007               	goto	L10
  2793  0019BE                     l1547:
  2794  0019BE  0E07               	movlw	7
  2795  0019C0  D005               	goto	L10
  2796  0019C2                     l1549:
  2797  0019C2  0E08               	movlw	8
  2798  0019C4  D003               	goto	L10
  2799  0019C6                     l1551:
  2800  0019C6  0E09               	movlw	9
  2801  0019C8  D001               	goto	L10
  2802  0019CA                     l1553:
  2803  0019CA  0E00               	movlw	0
  2804  0019CC                     L10:
  2805  0019CC  6E1E               	movwf	char_2_int@int1,c
  2806                           
  2807                           ;Main.c: 52: }
  2808  0019CE  D020               	goto	l120
  2809  0019D0                     l1555:
  2810  0019D0  501D               	movf	char_2_int@char1,w,c
  2811                           
  2812                           ; Switch size 1, requested type "space"
  2813                           ; Number of cases is 10, Range of values is 48 to 57
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte           31    16 (average)
  2817                           ;	Chosen strategy is simple_byte
  2818  0019D2  0A30               	xorlw	48	; case 48
  2819  0019D4  B4D8               	btfsc	status,2,c
  2820  0019D6  D7F9               	goto	l1553
  2821  0019D8  0A01               	xorlw	1	; case 49
  2822  0019DA  B4D8               	btfsc	status,2,c
  2823  0019DC  D7E4               	goto	l1535
  2824  0019DE  0A03               	xorlw	3	; case 50
  2825  0019E0  B4D8               	btfsc	status,2,c
  2826  0019E2  D7E3               	goto	l1537
  2827  0019E4  0A01               	xorlw	1	; case 51
  2828  0019E6  B4D8               	btfsc	status,2,c
  2829  0019E8  D7E2               	goto	l1539
  2830  0019EA  0A07               	xorlw	7	; case 52
  2831  0019EC  B4D8               	btfsc	status,2,c
  2832  0019EE  D7E1               	goto	l1541
  2833  0019F0  0A01               	xorlw	1	; case 53
  2834  0019F2  B4D8               	btfsc	status,2,c
  2835  0019F4  D7E0               	goto	l1543
  2836  0019F6  0A03               	xorlw	3	; case 54
  2837  0019F8  B4D8               	btfsc	status,2,c
  2838  0019FA  D7DF               	goto	l1545
  2839  0019FC  0A01               	xorlw	1	; case 55
  2840  0019FE  B4D8               	btfsc	status,2,c
  2841  001A00  D7DE               	goto	l1547
  2842  001A02  0A0F               	xorlw	15	; case 56
  2843  001A04  B4D8               	btfsc	status,2,c
  2844  001A06  D7DD               	goto	l1549
  2845  001A08  0A01               	xorlw	1	; case 57
  2846  001A0A  B4D8               	btfsc	status,2,c
  2847  001A0C  D7DC               	goto	l1551
  2848  001A0E  D7DD               	goto	l1553
  2849  001A10                     l120:
  2850                           
  2851                           ;Main.c: 53: return(int1);
  2852  001A10  501E               	movf	char_2_int@int1,w,c
  2853  001A12  0012               	return		;funcret
  2854  001A14                     __end_of_char_2_int:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           intcon	equ	0xFF2
  2863                           intcon2	equ	0xFF1
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           postdec1	equ	0xFE5
  2867                           plusw1	equ	0xFE3
  2868                           fsr1l	equ	0xFE1
  2869                           indf2	equ	0xFDF
  2870                           postinc2	equ	0xFDE
  2871                           plusw2	equ	0xFDB
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _Setup *****************
  2877 ;; Defined at:
  2878 ;;		line 312 in file "Main.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		_delay_ms
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text13
  2907  001A84                     __ptext13:
  2908                           	opt stack 0
  2909  001A84                     _Setup:
  2910                           	opt stack 26
  2911                           
  2912                           ;Main.c: 314: PORTA = 0b00000001;
  2913                           
  2914                           ;incstack = 0
  2915  001A84  0E01               	movlw	1
  2916  001A86  6E80               	movwf	3968,c	;volatile
  2917                           
  2918                           ;Main.c: 315: delay_ms(500);
  2919  001A88  0E01               	movlw	1
  2920  001A8A  6E1E               	movwf	delay_ms@i+1,c
  2921  001A8C  0EF4               	movlw	244
  2922  001A8E  6E1D               	movwf	delay_ms@i,c
  2923  001A90  EC16  F00E         	call	_delay_ms	;wreg free
  2924                           
  2925                           ;Main.c: 316: PORTA = 0b00000010;
  2926  001A94  0E02               	movlw	2
  2927  001A96  6E80               	movwf	3968,c	;volatile
  2928                           
  2929                           ;Main.c: 317: delay_ms(500);
  2930  001A98  0E01               	movlw	1
  2931  001A9A  6E1E               	movwf	delay_ms@i+1,c
  2932  001A9C  0EF4               	movlw	244
  2933  001A9E  6E1D               	movwf	delay_ms@i,c
  2934  001AA0  EC16  F00E         	call	_delay_ms	;wreg free
  2935                           
  2936                           ;Main.c: 318: PORTA = 0b00000100;
  2937  001AA4  0E04               	movlw	4
  2938  001AA6  6E80               	movwf	3968,c	;volatile
  2939                           
  2940                           ;Main.c: 319: delay_ms(500);
  2941  001AA8  0E01               	movlw	1
  2942  001AAA  6E1E               	movwf	delay_ms@i+1,c
  2943  001AAC  0EF4               	movlw	244
  2944  001AAE  6E1D               	movwf	delay_ms@i,c
  2945  001AB0  EC16  F00E         	call	_delay_ms	;wreg free
  2946                           
  2947                           ;Main.c: 320: PORTA = 0b00001000;
  2948  001AB4  0E08               	movlw	8
  2949  001AB6  6E80               	movwf	3968,c	;volatile
  2950                           
  2951                           ;Main.c: 321: delay_ms(500);
  2952  001AB8  0E01               	movlw	1
  2953  001ABA  6E1E               	movwf	delay_ms@i+1,c
  2954  001ABC  0EF4               	movlw	244
  2955  001ABE  6E1D               	movwf	delay_ms@i,c
  2956  001AC0  EC16  F00E         	call	_delay_ms	;wreg free
  2957                           
  2958                           ;Main.c: 322: PORTA = 0b00001111;
  2959  001AC4  0E0F               	movlw	15
  2960  001AC6  6E80               	movwf	3968,c	;volatile
  2961                           
  2962                           ;Main.c: 323: delay_ms(500);
  2963  001AC8  0E01               	movlw	1
  2964  001ACA  6E1E               	movwf	delay_ms@i+1,c
  2965  001ACC  0EF4               	movlw	244
  2966  001ACE  6E1D               	movwf	delay_ms@i,c
  2967  001AD0  EC16  F00E         	call	_delay_ms	;wreg free
  2968                           
  2969                           ;Main.c: 324: PORTA = 0b00000000;
  2970  001AD4  0E00               	movlw	0
  2971  001AD6  6E80               	movwf	3968,c	;volatile
  2972                           
  2973                           ;Main.c: 325: AlarmAOff = 0;
  2974  001AD8  0E00               	movlw	0
  2975  001ADA  6E35               	movwf	_AlarmAOff+1,c
  2976  001ADC  0E00               	movlw	0
  2977  001ADE  6E34               	movwf	_AlarmAOff,c
  2978                           
  2979                           ;Main.c: 326: AlarmBOff = 0;
  2980  001AE0  0E00               	movlw	0
  2981  001AE2  6E37               	movwf	_AlarmBOff+1,c
  2982  001AE4  0E00               	movlw	0
  2983  001AE6  6E36               	movwf	_AlarmBOff,c
  2984                           
  2985                           ;Main.c: 327: AlarmCOff = 0;
  2986  001AE8  0E00               	movlw	0
  2987  001AEA  6E39               	movwf	_AlarmCOff+1,c
  2988  001AEC  0E00               	movlw	0
  2989  001AEE  6E38               	movwf	_AlarmCOff,c
  2990  001AF0  0012               	return		;funcret
  2991  001AF2                     __end_of_Setup:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           intcon2	equ	0xFF1
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           plusw1	equ	0xFE3
  3005                           fsr1l	equ	0xFE1
  3006                           indf2	equ	0xFDF
  3007                           postinc2	equ	0xFDE
  3008                           plusw2	equ	0xFDB
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _delay_ms *****************
  3014 ;; Defined at:
  3015 ;;		line 10 in file "delays_utilities.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  i               2   28[COMRAM] unsigned int 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  j               2    1[BANK0 ] unsigned int 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0
  3030 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3032 ;;      Totals:         2       3       0       0       0       0       0       0       0
  3033 ;;Total ram usage:        5 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    3
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_SetupTime
  3040 ;;		_SetupAlarmTimeA
  3041 ;;		_SetupAlarmTimeB
  3042 ;;		_SetupAlarmTimeC
  3043 ;;		_Setup
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text14
  3048  001C2C                     __ptext14:
  3049                           	opt stack 0
  3050  001C2C                     _delay_ms:
  3051                           	opt stack 26
  3052                           
  3053                           ;delays_utilities.c: 12: if(i!=0)
  3054                           
  3055                           ;incstack = 0
  3056  001C2C  501D               	movf	delay_ms@i,w,c
  3057  001C2E  101E               	iorwf	delay_ms@i+1,w,c
  3058  001C30  B4D8               	btfsc	status,2,c
  3059  001C32  0012               	return	
  3060                           
  3061                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  3062  001C34  0E00               	movlw	0
  3063  001C36  0100               	movlb	0	; () banked
  3064  001C38  6FB6               	movwf	(delay_ms@j+1)& (0+255),b
  3065  001C3A  0E00               	movlw	0
  3066  001C3C  6FB5               	movwf	delay_ms@j& (0+255),b
  3067  001C3E  D00C               	goto	l193
  3068  001C40                     l2115:
  3069                           
  3070                           ; BSR set to: 0
  3071  001C40  0E10               	movlw	16
  3072  001C42  0100               	movlb	0	; () banked
  3073  001C44  6FB4               	movwf	??_delay_ms& (0+255),b
  3074  001C46  0E94               	movlw	148
  3075  001C48                     u1437:
  3076  001C48  2EE8               	decfsz	wreg,f,c
  3077  001C4A  D7FE               	goto	u1437
  3078  001C4C  2FB4               	decfsz	??_delay_ms& (0+255),f,b
  3079  001C4E  D7FC               	goto	u1437
  3080  001C50  D000               	nop2	
  3081  001C52  0100               	movlb	0	; () banked
  3082  001C54  4BB5               	infsnz	delay_ms@j& (0+255),f,b
  3083  001C56  2BB6               	incf	(delay_ms@j+1)& (0+255),f,b
  3084  001C58                     l193:
  3085                           
  3086                           ; BSR set to: 0
  3087  001C58  501D               	movf	delay_ms@i,w,c
  3088  001C5A  0100               	movlb	0	; () banked
  3089  001C5C  5DB5               	subwf	delay_ms@j& (0+255),w,b
  3090  001C5E  501E               	movf	delay_ms@i+1,w,c
  3091  001C60  0100               	movlb	0	; () banked
  3092  001C62  59B6               	subwfb	(delay_ms@j+1)& (0+255),w,b
  3093  001C64  B0D8               	btfsc	status,0,c
  3094  001C66  0012               	return	
  3095  001C68  D7EB               	goto	l2115
  3096  001C6A                     __end_of_delay_ms:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           prodh	equ	0xFF4
  3103                           prodl	equ	0xFF3
  3104                           intcon	equ	0xFF2
  3105                           intcon2	equ	0xFF1
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           plusw1	equ	0xFE3
  3110                           fsr1l	equ	0xFE1
  3111                           indf2	equ	0xFDF
  3112                           postinc2	equ	0xFDE
  3113                           plusw2	equ	0xFDB
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _ISR_Timer0_Int *****************
  3119 ;; Defined at:
  3120 ;;		line 56 in file "Main.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  second10        1   27[COMRAM] unsigned char 
  3125 ;;  minute10        1   26[COMRAM] unsigned char 
  3126 ;;  hour10          1   25[COMRAM] unsigned char 
  3127 ;;  second1         1   24[COMRAM] unsigned char 
  3128 ;;  minute1         1   23[COMRAM] unsigned char 
  3129 ;;  hour1           1   22[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3139 ;;      Params:         0       0       0       0       0       0       0       0       0
  3140 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3141 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3142 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3143 ;;Total ram usage:       20 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		___awdiv
  3148 ;;		_int_2_char
  3149 ;;		i2_lcd_write_cmd
  3150 ;;		i2_lcd_write_data
  3151 ;; This function is called by:
  3152 ;;		Interrupt level 2
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	intcode
  3157  001008                     __pintcode:
  3158                           	opt stack 0
  3159  001008                     _ISR_Timer0_Int:
  3160                           	opt stack 25
  3161                           
  3162                           ;incstack = 0
  3163  001008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3164  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3165  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3166  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3167                           pclatu	equ	0xFFB
  3168                           pclath	equ	0xFFA
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           postdec1	equ	0xFE5
  3180                           plusw1	equ	0xFE3
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           plusw2	equ	0xFDB
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189                           	psect	intcode_body
  3190  00102E                     __pintcode_body:
  3191                           	opt stack 25
  3192  00102E                     int_func:
  3193                           	opt stack 25
  3194  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3195  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3196  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3197  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3198  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3199  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3200  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3201  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3202  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3203  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3204  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3205  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3206  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3207                           
  3208                           ;Main.c: 58: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3209                           ;Main.c: 59: if (INTCONbits.TMR0IF == 1)
  3210  001060  A4F2               	btfss	intcon,2,c	;volatile
  3211  001062  D085               	goto	i2l138
  3212                           
  3213                           ;Main.c: 60: {
  3214                           ;Main.c: 64: second = second + 1;
  3215  001064  2842               	incf	_second,w,c
  3216  001066  6E42               	movwf	_second,c
  3217                           
  3218                           ;Main.c: 65: if ( second > 59 )
  3219  001068  0E3B               	movlw	59
  3220  00106A  6442               	cpfsgt	_second,c
  3221  00106C  D010               	goto	i2l1933
  3222                           
  3223                           ;Main.c: 66: {
  3224                           ;Main.c: 67: second = 0;
  3225  00106E  0E00               	movlw	0
  3226  001070  6E42               	movwf	_second,c
  3227                           
  3228                           ;Main.c: 68: minute = minute + 1;
  3229  001072  283E               	incf	_minute,w,c
  3230  001074  6E3E               	movwf	_minute,c
  3231                           
  3232                           ;Main.c: 69: if ( minute > 59 )
  3233  001076  0E3B               	movlw	59
  3234  001078  643E               	cpfsgt	_minute,c
  3235  00107A  D009               	goto	i2l1933
  3236                           
  3237                           ;Main.c: 70: {
  3238                           ;Main.c: 71: minute = 0;
  3239  00107C  0E00               	movlw	0
  3240  00107E  6E3E               	movwf	_minute,c
  3241                           
  3242                           ;Main.c: 72: hour = hour + 1;
  3243  001080  283A               	incf	_hour,w,c
  3244  001082  6E3A               	movwf	_hour,c
  3245                           
  3246                           ;Main.c: 73: if ( hour > 23 )
  3247  001084  0E17               	movlw	23
  3248  001086  643A               	cpfsgt	_hour,c
  3249  001088  D002               	goto	i2l1933
  3250                           
  3251                           ;Main.c: 74: hour = 0;
  3252  00108A  0E00               	movlw	0
  3253  00108C  6E3A               	movwf	_hour,c
  3254  00108E                     i2l1933:
  3255                           
  3256                           ;Main.c: 75: }
  3257                           ;Main.c: 76: }
  3258                           ;Main.c: 78: hour10 = hour / 10;
  3259  00108E  C03A  F001         	movff	_hour,___awdiv@dividend
  3260  001092  6A02               	clrf	___awdiv@dividend+1,c
  3261  001094  0E00               	movlw	0
  3262  001096  6E04               	movwf	___awdiv@divisor+1,c
  3263  001098  0E0A               	movlw	10
  3264  00109A  6E03               	movwf	___awdiv@divisor,c
  3265  00109C  ECD7  F00B         	call	___awdiv	;wreg free
  3266  0010A0  5001               	movf	?___awdiv,w,c
  3267  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3268                           
  3269                           ;Main.c: 79: hour1 = hour - hour10 * 10;
  3270  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3271  0010A6  0D0A               	mullw	10
  3272  0010A8  50F3               	movf	prodl,w,c
  3273  0010AA  0800               	sublw	0
  3274  0010AC  243A               	addwf	_hour,w,c
  3275  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3276                           
  3277                           ;Main.c: 81: minute10 = minute / 10;
  3278  0010B0  C03E  F001         	movff	_minute,___awdiv@dividend
  3279  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3280  0010B6  0E00               	movlw	0
  3281  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3282  0010BA  0E0A               	movlw	10
  3283  0010BC  6E03               	movwf	___awdiv@divisor,c
  3284  0010BE  ECD7  F00B         	call	___awdiv	;wreg free
  3285  0010C2  5001               	movf	?___awdiv,w,c
  3286  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3287                           
  3288                           ;Main.c: 82: minute1 = minute - minute10 * 10;
  3289  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3290  0010C8  0D0A               	mullw	10
  3291  0010CA  50F3               	movf	prodl,w,c
  3292  0010CC  0800               	sublw	0
  3293  0010CE  243E               	addwf	_minute,w,c
  3294  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3295                           
  3296                           ;Main.c: 84: second10 = second / 10;
  3297  0010D2  C042  F001         	movff	_second,___awdiv@dividend
  3298  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3299  0010D8  0E00               	movlw	0
  3300  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3301  0010DC  0E0A               	movlw	10
  3302  0010DE  6E03               	movwf	___awdiv@divisor,c
  3303  0010E0  ECD7  F00B         	call	___awdiv	;wreg free
  3304  0010E4  5001               	movf	?___awdiv,w,c
  3305  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3306                           
  3307                           ;Main.c: 85: second1 = second - second10 * 10;
  3308  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3309  0010EA  0D0A               	mullw	10
  3310  0010EC  50F3               	movf	prodl,w,c
  3311  0010EE  0800               	sublw	0
  3312  0010F0  2442               	addwf	_second,w,c
  3313  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3314                           
  3315                           ;Main.c: 87: lcd_write_cmd(0x80);
  3316  0010F4  0E80               	movlw	128
  3317  0010F6  EC0A  F00D         	call	i2_lcd_write_cmd
  3318                           
  3319                           ;Main.c: 88: lcd_write_data('T');
  3320  0010FA  0E54               	movlw	84
  3321  0010FC  EC8D  F00B         	call	i2_lcd_write_data
  3322                           
  3323                           ;Main.c: 89: lcd_write_data('i');
  3324  001100  0E69               	movlw	105
  3325  001102  EC8D  F00B         	call	i2_lcd_write_data
  3326                           
  3327                           ;Main.c: 90: lcd_write_data('m');
  3328  001106  0E6D               	movlw	109
  3329  001108  EC8D  F00B         	call	i2_lcd_write_data
  3330                           
  3331                           ;Main.c: 91: lcd_write_data('e');
  3332  00110C  0E65               	movlw	101
  3333  00110E  EC8D  F00B         	call	i2_lcd_write_data
  3334                           
  3335                           ;Main.c: 92: lcd_write_data(' ');
  3336  001112  0E20               	movlw	32
  3337  001114  EC8D  F00B         	call	i2_lcd_write_data
  3338                           
  3339                           ;Main.c: 93: lcd_write_data('=');
  3340  001118  0E3D               	movlw	61
  3341  00111A  EC8D  F00B         	call	i2_lcd_write_data
  3342                           
  3343                           ;Main.c: 94: lcd_write_data(' ');
  3344  00111E  0E20               	movlw	32
  3345  001120  EC8D  F00B         	call	i2_lcd_write_data
  3346                           
  3347                           ;Main.c: 95: lcd_write_data(int_2_char (hour10));
  3348  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3349  001126  EC96  F00C         	call	_int_2_char
  3350  00112A  EC8D  F00B         	call	i2_lcd_write_data
  3351                           
  3352                           ;Main.c: 96: lcd_write_data(int_2_char (hour1));
  3353  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3354  001130  EC96  F00C         	call	_int_2_char
  3355  001134  EC8D  F00B         	call	i2_lcd_write_data
  3356                           
  3357                           ;Main.c: 97: lcd_write_data(':');
  3358  001138  0E3A               	movlw	58
  3359  00113A  EC8D  F00B         	call	i2_lcd_write_data
  3360                           
  3361                           ;Main.c: 98: lcd_write_data(int_2_char (minute10));
  3362  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3363  001140  EC96  F00C         	call	_int_2_char
  3364  001144  EC8D  F00B         	call	i2_lcd_write_data
  3365                           
  3366                           ;Main.c: 99: lcd_write_data(int_2_char (minute1));
  3367  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3368  00114A  EC96  F00C         	call	_int_2_char
  3369  00114E  EC8D  F00B         	call	i2_lcd_write_data
  3370                           
  3371                           ;Main.c: 100: lcd_write_data(':');
  3372  001152  0E3A               	movlw	58
  3373  001154  EC8D  F00B         	call	i2_lcd_write_data
  3374                           
  3375                           ;Main.c: 101: lcd_write_data(int_2_char (second10));
  3376  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3377  00115A  EC96  F00C         	call	_int_2_char
  3378  00115E  EC8D  F00B         	call	i2_lcd_write_data
  3379                           
  3380                           ;Main.c: 102: lcd_write_data(int_2_char (second1));
  3381  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3382  001164  EC96  F00C         	call	_int_2_char
  3383  001168  EC8D  F00B         	call	i2_lcd_write_data
  3384                           
  3385                           ;Main.c: 104: INTCONbits.TMR0IF = 0;
  3386  00116C  94F2               	bcf	intcon,2,c	;volatile
  3387  00116E                     i2l138:
  3388  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3389  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3390  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3391  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3392  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3393  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3394  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3395  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3396  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3397  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3398  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3399  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3400  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3401  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3402  0011A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3403  0011A8  0011               	retfie		f
  3404  0011AA                     __end_of_ISR_Timer0_Int:
  3405                           	opt stack 0
  3406                           pclatu	equ	0xFFB
  3407                           pclath	equ	0xFFA
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           intcon2	equ	0xFF1
  3416                           postinc0	equ	0xFEE
  3417                           fsr0h	equ	0xFEA
  3418                           fsr0l	equ	0xFE9
  3419                           wreg	equ	0xFE8
  3420                           postdec1	equ	0xFE5
  3421                           plusw1	equ	0xFE3
  3422                           fsr1h	equ	0xFE2
  3423                           fsr1l	equ	0xFE1
  3424                           indf2	equ	0xFDF
  3425                           postinc2	equ	0xFDE
  3426                           plusw2	equ	0xFDB
  3427                           fsr2h	equ	0xFDA
  3428                           fsr2l	equ	0xFD9
  3429                           status	equ	0xFD8
  3430                           
  3431 ;; *************** function i2_lcd_write_data *****************
  3432 ;; Defined at:
  3433 ;;		line 43 in file "lcd_utilities.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  data            1    wreg     unsigned char 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  data            1    2[COMRAM] unsigned char 
  3438 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        3 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    1
  3455 ;; This function calls:
  3456 ;;		i2_lcd_strobe
  3457 ;; This function is called by:
  3458 ;;		_ISR_Timer0_Int
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text16
  3463  00171A                     __ptext16:
  3464                           	opt stack 0
  3465  00171A                     i2_lcd_write_data:
  3466                           	opt stack 25
  3467                           
  3468                           ;incstack = 0
  3469                           ;i2lcd_write_data@data stored from wreg
  3470  00171A  6E03               	movwf	i2lcd_write_data@data,c
  3471                           
  3472                           ;lcd_utilities.c: 45: char temp1;
  3473                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3474  00171C  8C83               	bsf	3971,6,c	;volatile
  3475                           
  3476                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3477  00171E  0E3F               	movlw	63
  3478  001720  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3479  001722  0E55               	movlw	85
  3480  001724                     i2u144_47:
  3481  001724  2EE8               	decfsz	wreg,f,c
  3482  001726  D7FE               	goto	i2u144_47
  3483  001728  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3484  00172A  D7FC               	goto	i2u144_47
  3485  00172C  F000               	nop	
  3486                           
  3487                           ;lcd_utilities.c: 50: temp1 = data;
  3488  00172E  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3489                           
  3490                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3491  001732  3804               	swapf	i2lcd_write_data@temp1,w,c
  3492  001734  0B0F               	andlw	15
  3493  001736  6E04               	movwf	i2lcd_write_data@temp1,c
  3494                           
  3495                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3496  001738  5004               	movf	i2lcd_write_data@temp1,w,c
  3497  00173A  0B0F               	andlw	15
  3498  00173C  6E83               	movwf	3971,c	;volatile
  3499                           
  3500                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3501  00173E  0E7D               	movlw	125
  3502  001740  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3503  001742  0EAC               	movlw	172
  3504  001744                     i2u145_47:
  3505  001744  2EE8               	decfsz	wreg,f,c
  3506  001746  D7FE               	goto	i2u145_47
  3507  001748  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3508  00174A  D7FC               	goto	i2u145_47
  3509                           
  3510                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3511  00174C  8C83               	bsf	3971,6,c	;volatile
  3512                           
  3513                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3514  00174E  0E7D               	movlw	125
  3515  001750  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3516  001752  0EAC               	movlw	172
  3517  001754                     i2u146_47:
  3518  001754  2EE8               	decfsz	wreg,f,c
  3519  001756  D7FE               	goto	i2u146_47
  3520  001758  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3521  00175A  D7FC               	goto	i2u146_47
  3522                           
  3523                           ;lcd_utilities.c: 57: lcd_strobe();
  3524  00175C  EC46  F00E         	call	i2_lcd_strobe	;wreg free
  3525                           
  3526                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3527  001760  0E7D               	movlw	125
  3528  001762  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3529  001764  0EAC               	movlw	172
  3530  001766                     i2u147_47:
  3531  001766  2EE8               	decfsz	wreg,f,c
  3532  001768  D7FE               	goto	i2u147_47
  3533  00176A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3534  00176C  D7FC               	goto	i2u147_47
  3535                           
  3536                           ;lcd_utilities.c: 60: temp1 = data;
  3537  00176E  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3538                           
  3539                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3540  001772  5004               	movf	i2lcd_write_data@temp1,w,c
  3541  001774  0B0F               	andlw	15
  3542  001776  6E83               	movwf	3971,c	;volatile
  3543                           
  3544                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3545  001778  0E7D               	movlw	125
  3546  00177A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3547  00177C  0EAC               	movlw	172
  3548  00177E                     i2u148_47:
  3549  00177E  2EE8               	decfsz	wreg,f,c
  3550  001780  D7FE               	goto	i2u148_47
  3551  001782  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3552  001784  D7FC               	goto	i2u148_47
  3553                           
  3554                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3555  001786  8C83               	bsf	3971,6,c	;volatile
  3556                           
  3557                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3558  001788  0E9C               	movlw	156
  3559  00178A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3560  00178C  0ED7               	movlw	215
  3561  00178E                     i2u149_47:
  3562  00178E  2EE8               	decfsz	wreg,f,c
  3563  001790  D7FE               	goto	i2u149_47
  3564  001792  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3565  001794  D7FC               	goto	i2u149_47
  3566  001796  F000               	nop	
  3567                           
  3568                           ;lcd_utilities.c: 66: lcd_strobe();
  3569  001798  EC46  F00E         	call	i2_lcd_strobe	;wreg free
  3570                           
  3571                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3572  00179C  0E9C               	movlw	156
  3573  00179E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3574  0017A0  0ED7               	movlw	215
  3575  0017A2                     i2u150_47:
  3576  0017A2  2EE8               	decfsz	wreg,f,c
  3577  0017A4  D7FE               	goto	i2u150_47
  3578  0017A6  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3579  0017A8  D7FC               	goto	i2u150_47
  3580  0017AA  F000               	nop	
  3581  0017AC  0012               	return		;funcret
  3582  0017AE                     __end_ofi2_lcd_write_data:
  3583                           	opt stack 0
  3584                           pclatu	equ	0xFFB
  3585                           pclath	equ	0xFFA
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           intcon	equ	0xFF2
  3593                           intcon2	equ	0xFF1
  3594                           postinc0	equ	0xFEE
  3595                           fsr0h	equ	0xFEA
  3596                           fsr0l	equ	0xFE9
  3597                           wreg	equ	0xFE8
  3598                           postdec1	equ	0xFE5
  3599                           plusw1	equ	0xFE3
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           indf2	equ	0xFDF
  3603                           postinc2	equ	0xFDE
  3604                           plusw2	equ	0xFDB
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function i2_lcd_write_cmd *****************
  3610 ;; Defined at:
  3611 ;;		line 18 in file "lcd_utilities.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  cmd             1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  cmd             1    2[COMRAM] unsigned char 
  3616 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0
  3627 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3629 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3630 ;;Total ram usage:        3 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    1
  3633 ;; This function calls:
  3634 ;;		i2_lcd_strobe
  3635 ;; This function is called by:
  3636 ;;		_ISR_Timer0_Int
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text17
  3641  001A14                     __ptext17:
  3642                           	opt stack 0
  3643  001A14                     i2_lcd_write_cmd:
  3644                           	opt stack 25
  3645                           
  3646                           ;incstack = 0
  3647                           ;i2lcd_write_cmd@cmd stored from wreg
  3648  001A14  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3649                           
  3650                           ;lcd_utilities.c: 20: unsigned char temp2;
  3651                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3652  001A16  9C83               	bcf	3971,6,c	;volatile
  3653                           
  3654                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3655  001A18  0E3F               	movlw	63
  3656  001A1A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3657  001A1C  0E55               	movlw	85
  3658  001A1E                     i2u151_47:
  3659  001A1E  2EE8               	decfsz	wreg,f,c
  3660  001A20  D7FE               	goto	i2u151_47
  3661  001A22  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3662  001A24  D7FC               	goto	i2u151_47
  3663  001A26  F000               	nop	
  3664                           
  3665                           ;lcd_utilities.c: 23: temp2 = cmd;
  3666  001A28  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3667                           
  3668                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3669  001A2C  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3670  001A2E  0B0F               	andlw	15
  3671  001A30  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3672                           
  3673                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3674  001A32  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3675  001A34  0B0F               	andlw	15
  3676  001A36  6E83               	movwf	3971,c	;volatile
  3677                           
  3678                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3679  001A38  0E7D               	movlw	125
  3680  001A3A  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3681  001A3C  0EAC               	movlw	172
  3682  001A3E                     i2u152_47:
  3683  001A3E  2EE8               	decfsz	wreg,f,c
  3684  001A40  D7FE               	goto	i2u152_47
  3685  001A42  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3686  001A44  D7FC               	goto	i2u152_47
  3687                           
  3688                           ;lcd_utilities.c: 28: lcd_strobe();
  3689  001A46  EC46  F00E         	call	i2_lcd_strobe	;wreg free
  3690                           
  3691                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3692  001A4A  0E7D               	movlw	125
  3693  001A4C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3694  001A4E  0EAC               	movlw	172
  3695  001A50                     i2u153_47:
  3696  001A50  2EE8               	decfsz	wreg,f,c
  3697  001A52  D7FE               	goto	i2u153_47
  3698  001A54  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3699  001A56  D7FC               	goto	i2u153_47
  3700                           
  3701                           ;lcd_utilities.c: 32: temp2 = cmd;
  3702  001A58  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3703                           
  3704                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3705  001A5C  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3706  001A5E  0B0F               	andlw	15
  3707  001A60  6E83               	movwf	3971,c	;volatile
  3708                           
  3709                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3710  001A62  0E7D               	movlw	125
  3711  001A64  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3712  001A66  0EAC               	movlw	172
  3713  001A68                     i2u154_47:
  3714  001A68  2EE8               	decfsz	wreg,f,c
  3715  001A6A  D7FE               	goto	i2u154_47
  3716  001A6C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3717  001A6E  D7FC               	goto	i2u154_47
  3718                           
  3719                           ;lcd_utilities.c: 36: lcd_strobe();
  3720  001A70  EC46  F00E         	call	i2_lcd_strobe	;wreg free
  3721                           
  3722                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3723  001A74  0E7D               	movlw	125
  3724  001A76  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3725  001A78  0EAC               	movlw	172
  3726  001A7A                     i2u155_47:
  3727  001A7A  2EE8               	decfsz	wreg,f,c
  3728  001A7C  D7FE               	goto	i2u155_47
  3729  001A7E  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3730  001A80  D7FC               	goto	i2u155_47
  3731  001A82  0012               	return		;funcret
  3732  001A84                     __end_ofi2_lcd_write_cmd:
  3733                           	opt stack 0
  3734                           pclatu	equ	0xFFB
  3735                           pclath	equ	0xFFA
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           intcon	equ	0xFF2
  3743                           intcon2	equ	0xFF1
  3744                           postinc0	equ	0xFEE
  3745                           fsr0h	equ	0xFEA
  3746                           fsr0l	equ	0xFE9
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           plusw1	equ	0xFE3
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           plusw2	equ	0xFDB
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function i2_lcd_strobe *****************
  3760 ;; Defined at:
  3761 ;;		line 73 in file "lcd_utilities.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3777 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3778 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3779 ;;Total ram usage:        1 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		i2_lcd_write_cmd
  3785 ;;		i2_lcd_write_data
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text18
  3790  001C8C                     __ptext18:
  3791                           	opt stack 0
  3792  001C8C                     i2_lcd_strobe:
  3793                           	opt stack 25
  3794                           
  3795                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3796                           
  3797                           ;incstack = 0
  3798  001C8C  8883               	bsf	3971,4,c	;volatile
  3799                           
  3800                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3801  001C8E  0E7D               	movlw	125
  3802  001C90  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3803  001C92  0EAC               	movlw	172
  3804  001C94                     i2u156_47:
  3805  001C94  2EE8               	decfsz	wreg,f,c
  3806  001C96  D7FE               	goto	i2u156_47
  3807  001C98  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3808  001C9A  D7FC               	goto	i2u156_47
  3809                           
  3810                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3811  001C9C  9883               	bcf	3971,4,c	;volatile
  3812                           
  3813                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3814  001C9E  0E7D               	movlw	125
  3815  001CA0  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3816  001CA2  0EAC               	movlw	172
  3817  001CA4                     i2u157_47:
  3818  001CA4  2EE8               	decfsz	wreg,f,c
  3819  001CA6  D7FE               	goto	i2u157_47
  3820  001CA8  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3821  001CAA  D7FC               	goto	i2u157_47
  3822  001CAC  0012               	return		;funcret
  3823  001CAE                     __end_ofi2_lcd_strobe:
  3824                           	opt stack 0
  3825                           pclatu	equ	0xFFB
  3826                           pclath	equ	0xFFA
  3827                           tblptru	equ	0xFF8
  3828                           tblptrh	equ	0xFF7
  3829                           tblptrl	equ	0xFF6
  3830                           tablat	equ	0xFF5
  3831                           prodh	equ	0xFF4
  3832                           prodl	equ	0xFF3
  3833                           intcon	equ	0xFF2
  3834                           intcon2	equ	0xFF1
  3835                           postinc0	equ	0xFEE
  3836                           fsr0h	equ	0xFEA
  3837                           fsr0l	equ	0xFE9
  3838                           wreg	equ	0xFE8
  3839                           postdec1	equ	0xFE5
  3840                           plusw1	equ	0xFE3
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           plusw2	equ	0xFDB
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _int_2_char *****************
  3851 ;; Defined at:
  3852 ;;		line 16 in file "Main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  int1            1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  int1            1    0[COMRAM] unsigned char 
  3857 ;;  char1           1    1[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0
  3868 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3870 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3871 ;;Total ram usage:        2 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_ISR_Timer0_Int
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text19
  3881  00192C                     __ptext19:
  3882                           	opt stack 0
  3883  00192C                     _int_2_char:
  3884                           	opt stack 26
  3885                           
  3886                           ;incstack = 0
  3887                           ;int_2_char@int1 stored from wreg
  3888  00192C  6E01               	movwf	int_2_char@int1,c
  3889                           
  3890                           ;Main.c: 18: char char1;
  3891                           ;Main.c: 19: switch (int1)
  3892  00192E  D017               	goto	i2l975
  3893  001930                     i2l953:
  3894  001930  0E30               	movlw	48
  3895  001932  D013               	goto	L20
  3896  001934                     i2l955:
  3897  001934  0E31               	movlw	49
  3898  001936  D011               	goto	L20
  3899  001938                     i2l957:
  3900  001938  0E32               	movlw	50
  3901  00193A  D00F               	goto	L20
  3902  00193C                     i2l959:
  3903  00193C  0E33               	movlw	51
  3904  00193E  D00D               	goto	L20
  3905  001940                     i2l961:
  3906  001940  0E34               	movlw	52
  3907  001942  D00B               	goto	L20
  3908  001944                     i2l963:
  3909  001944  0E35               	movlw	53
  3910  001946  D009               	goto	L20
  3911  001948                     i2l965:
  3912  001948  0E36               	movlw	54
  3913  00194A  D007               	goto	L20
  3914  00194C                     i2l967:
  3915  00194C  0E37               	movlw	55
  3916  00194E  D005               	goto	L20
  3917  001950                     i2l969:
  3918  001950  0E38               	movlw	56
  3919  001952  D003               	goto	L20
  3920  001954                     i2l971:
  3921  001954  0E39               	movlw	57
  3922  001956  D001               	goto	L20
  3923  001958                     i2l973:
  3924  001958  0E3F               	movlw	63
  3925  00195A                     L20:
  3926  00195A  6E02               	movwf	int_2_char@char1,c
  3927                           
  3928                           ;Main.c: 32: }
  3929  00195C  D020               	goto	i2l104
  3930  00195E                     i2l975:
  3931  00195E  5001               	movf	int_2_char@int1,w,c
  3932                           
  3933                           ; Switch size 1, requested type "space"
  3934                           ; Number of cases is 10, Range of values is 0 to 9
  3935                           ; switch strategies available:
  3936                           ; Name         Instructions Cycles
  3937                           ; simple_byte           31    16 (average)
  3938                           ;	Chosen strategy is simple_byte
  3939  001960  0A00               	xorlw	0	; case 0
  3940  001962  B4D8               	btfsc	status,2,c
  3941  001964  D7E5               	goto	i2l953
  3942  001966  0A01               	xorlw	1	; case 1
  3943  001968  B4D8               	btfsc	status,2,c
  3944  00196A  D7E4               	goto	i2l955
  3945  00196C  0A03               	xorlw	3	; case 2
  3946  00196E  B4D8               	btfsc	status,2,c
  3947  001970  D7E3               	goto	i2l957
  3948  001972  0A01               	xorlw	1	; case 3
  3949  001974  B4D8               	btfsc	status,2,c
  3950  001976  D7E2               	goto	i2l959
  3951  001978  0A07               	xorlw	7	; case 4
  3952  00197A  B4D8               	btfsc	status,2,c
  3953  00197C  D7E1               	goto	i2l961
  3954  00197E  0A01               	xorlw	1	; case 5
  3955  001980  B4D8               	btfsc	status,2,c
  3956  001982  D7E0               	goto	i2l963
  3957  001984  0A03               	xorlw	3	; case 6
  3958  001986  B4D8               	btfsc	status,2,c
  3959  001988  D7DF               	goto	i2l965
  3960  00198A  0A01               	xorlw	1	; case 7
  3961  00198C  B4D8               	btfsc	status,2,c
  3962  00198E  D7DE               	goto	i2l967
  3963  001990  0A0F               	xorlw	15	; case 8
  3964  001992  B4D8               	btfsc	status,2,c
  3965  001994  D7DD               	goto	i2l969
  3966  001996  0A01               	xorlw	1	; case 9
  3967  001998  B4D8               	btfsc	status,2,c
  3968  00199A  D7DC               	goto	i2l971
  3969  00199C  D7DD               	goto	i2l973
  3970  00199E                     i2l104:
  3971                           
  3972                           ;Main.c: 33: return(char1);
  3973  00199E  5002               	movf	int_2_char@char1,w,c
  3974  0019A0  0012               	return		;funcret
  3975  0019A2                     __end_of_int_2_char:
  3976                           	opt stack 0
  3977                           pclatu	equ	0xFFB
  3978                           pclath	equ	0xFFA
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           prodh	equ	0xFF4
  3984                           prodl	equ	0xFF3
  3985                           intcon	equ	0xFF2
  3986                           intcon2	equ	0xFF1
  3987                           postinc0	equ	0xFEE
  3988                           fsr0h	equ	0xFEA
  3989                           fsr0l	equ	0xFE9
  3990                           wreg	equ	0xFE8
  3991                           postdec1	equ	0xFE5
  3992                           plusw1	equ	0xFE3
  3993                           fsr1h	equ	0xFE2
  3994                           fsr1l	equ	0xFE1
  3995                           indf2	equ	0xFDF
  3996                           postinc2	equ	0xFDE
  3997                           plusw2	equ	0xFDB
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function ___awdiv *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  dividend        2    0[COMRAM] int 
  4007 ;;  divisor         2    2[COMRAM] int 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  quotient        2    6[COMRAM] int 
  4010 ;;  sign            1    5[COMRAM] unsigned char 
  4011 ;;  counter         1    4[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  2    0[COMRAM] int 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4021 ;;      Params:         4       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4024 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4025 ;;Total ram usage:        8 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_ISR_Timer0_Int
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text20
  4035  0017AE                     __ptext20:
  4036                           	opt stack 0
  4037  0017AE                     ___awdiv:
  4038                           	opt stack 26
  4039                           
  4040                           ;incstack = 0
  4041  0017AE  0E00               	movlw	0
  4042  0017B0  6E06               	movwf	___awdiv@sign,c
  4043  0017B2  AE04               	btfss	___awdiv@divisor+1,7,c
  4044  0017B4  D006               	goto	i2l1819
  4045  0017B6  6C03               	negf	___awdiv@divisor,c
  4046  0017B8  1E04               	comf	___awdiv@divisor+1,f,c
  4047  0017BA  B0D8               	btfsc	status,0,c
  4048  0017BC  2A04               	incf	___awdiv@divisor+1,f,c
  4049  0017BE  0E01               	movlw	1
  4050  0017C0  6E06               	movwf	___awdiv@sign,c
  4051  0017C2                     i2l1819:
  4052  0017C2  AE02               	btfss	___awdiv@dividend+1,7,c
  4053  0017C4  D006               	goto	i2l1825
  4054  0017C6  6C01               	negf	___awdiv@dividend,c
  4055  0017C8  1E02               	comf	___awdiv@dividend+1,f,c
  4056  0017CA  B0D8               	btfsc	status,0,c
  4057  0017CC  2A02               	incf	___awdiv@dividend+1,f,c
  4058  0017CE  0E01               	movlw	1
  4059  0017D0  1A06               	xorwf	___awdiv@sign,f,c
  4060  0017D2                     i2l1825:
  4061  0017D2  0E00               	movlw	0
  4062  0017D4  6E08               	movwf	___awdiv@quotient+1,c
  4063  0017D6  0E00               	movlw	0
  4064  0017D8  6E07               	movwf	___awdiv@quotient,c
  4065  0017DA  5003               	movf	___awdiv@divisor,w,c
  4066  0017DC  1004               	iorwf	___awdiv@divisor+1,w,c
  4067  0017DE  B4D8               	btfsc	status,2,c
  4068  0017E0  D01C               	goto	i2l1847
  4069  0017E2  0E01               	movlw	1
  4070  0017E4  6E05               	movwf	___awdiv@counter,c
  4071  0017E6  D004               	goto	i2l1833
  4072  0017E8                     i2l1831:
  4073  0017E8  90D8               	bcf	status,0,c
  4074  0017EA  3603               	rlcf	___awdiv@divisor,f,c
  4075  0017EC  3604               	rlcf	___awdiv@divisor+1,f,c
  4076  0017EE  2A05               	incf	___awdiv@counter,f,c
  4077  0017F0                     i2l1833:
  4078  0017F0  AE04               	btfss	___awdiv@divisor+1,7,c
  4079  0017F2  D7FA               	goto	i2l1831
  4080  0017F4                     i2l1835:
  4081  0017F4  90D8               	bcf	status,0,c
  4082  0017F6  3607               	rlcf	___awdiv@quotient,f,c
  4083  0017F8  3608               	rlcf	___awdiv@quotient+1,f,c
  4084  0017FA  5003               	movf	___awdiv@divisor,w,c
  4085  0017FC  5C01               	subwf	___awdiv@dividend,w,c
  4086  0017FE  5004               	movf	___awdiv@divisor+1,w,c
  4087  001800  5802               	subwfb	___awdiv@dividend+1,w,c
  4088  001802  A0D8               	btfss	status,0,c
  4089  001804  D005               	goto	i2l1843
  4090  001806  5003               	movf	___awdiv@divisor,w,c
  4091  001808  5E01               	subwf	___awdiv@dividend,f,c
  4092  00180A  5004               	movf	___awdiv@divisor+1,w,c
  4093  00180C  5A02               	subwfb	___awdiv@dividend+1,f,c
  4094  00180E  8007               	bsf	___awdiv@quotient,0,c
  4095  001810                     i2l1843:
  4096  001810  90D8               	bcf	status,0,c
  4097  001812  3204               	rrcf	___awdiv@divisor+1,f,c
  4098  001814  3203               	rrcf	___awdiv@divisor,f,c
  4099  001816  2E05               	decfsz	___awdiv@counter,f,c
  4100  001818  D7ED               	goto	i2l1835
  4101  00181A                     i2l1847:
  4102  00181A  5006               	movf	___awdiv@sign,w,c
  4103  00181C  B4D8               	btfsc	status,2,c
  4104  00181E  D004               	goto	i2l1851
  4105  001820  6C07               	negf	___awdiv@quotient,c
  4106  001822  1E08               	comf	___awdiv@quotient+1,f,c
  4107  001824  B0D8               	btfsc	status,0,c
  4108  001826  2A08               	incf	___awdiv@quotient+1,f,c
  4109  001828                     i2l1851:
  4110  001828  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4111  00182C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4112  001830  0012               	return	
  4113  001832                     __end_of___awdiv:
  4114                           	opt stack 0
  4115                           pclatu	equ	0xFFB
  4116                           pclath	equ	0xFFA
  4117                           tblptru	equ	0xFF8
  4118                           tblptrh	equ	0xFF7
  4119                           tblptrl	equ	0xFF6
  4120                           tablat	equ	0xFF5
  4121                           prodh	equ	0xFF4
  4122                           prodl	equ	0xFF3
  4123                           intcon	equ	0xFF2
  4124                           intcon2	equ	0xFF1
  4125                           postinc0	equ	0xFEE
  4126                           fsr0h	equ	0xFEA
  4127                           fsr0l	equ	0xFE9
  4128                           wreg	equ	0xFE8
  4129                           postdec1	equ	0xFE5
  4130                           plusw1	equ	0xFE3
  4131                           fsr1h	equ	0xFE2
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           postinc2	equ	0xFDE
  4135                           plusw2	equ	0xFDB
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           intcon2	equ	0xFF1
  4149                           postinc0	equ	0xFEE
  4150                           fsr0h	equ	0xFEA
  4151                           fsr0l	equ	0xFE9
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           plusw1	equ	0xFE3
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           plusw2	equ	0xFDB
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164                           	psect	rparam
  4165  0000                     pclatu	equ	0xFFB
  4166                           pclath	equ	0xFFA
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           prodh	equ	0xFF4
  4172                           prodl	equ	0xFF3
  4173                           intcon	equ	0xFF2
  4174                           intcon2	equ	0xFF1
  4175                           postinc0	equ	0xFEE
  4176                           fsr0h	equ	0xFEA
  4177                           fsr0l	equ	0xFE9
  4178                           wreg	equ	0xFE8
  4179                           postdec1	equ	0xFE5
  4180                           plusw1	equ	0xFE3
  4181                           fsr1h	equ	0xFE2
  4182                           fsr1l	equ	0xFE1
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           plusw2	equ	0xFDB
  4186                           fsr2h	equ	0xFDA
  4187                           fsr2l	equ	0xFD9
  4188                           status	equ	0xFD8
  4189                           
  4190                           	psect	temp
  4191  000043                     btemp:
  4192                           	opt stack 0
  4193  000043                     	ds	1
  4194  0000                     int$flags	set	btemp
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           intcon2	equ	0xFF1
  4205                           postinc0	equ	0xFEE
  4206                           fsr0h	equ	0xFEA
  4207                           fsr0l	equ	0xFE9
  4208                           wreg	equ	0xFE8
  4209                           postdec1	equ	0xFE5
  4210                           plusw1	equ	0xFE3
  4211                           fsr1h	equ	0xFE2
  4212                           fsr1l	equ	0xFE1
  4213                           indf2	equ	0xFDF
  4214                           postinc2	equ	0xFDE
  4215                           plusw2	equ	0xFDB
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        105
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      66
    BANK0           160     49     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_char_2_int
    _SetupTime->_delay_ms
    _SetupTime->_lcd_write_cmd
    _SetupTime->_lcd_write_data
    _SetupAlarmTimeC->_char_2_int
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeC->_lcd_write_cmd
    _SetupAlarmTimeC->_lcd_write_data
    _SetupAlarmTimeB->_char_2_int
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeB->_lcd_write_cmd
    _SetupAlarmTimeB->_lcd_write_data
    _SetupAlarmTimeA->_char_2_int
    _SetupAlarmTimeA->_delay_ms
    _SetupAlarmTimeA->_lcd_write_cmd
    _SetupAlarmTimeA->_lcd_write_data
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe
    _Setup->_delay_ms

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey
    _Setup->_delay_ms

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7945
                              _Setup
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             23    23      0     498
                                              2 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              2 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1806
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1608
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1608
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1608
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     585
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     585
                                             28 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _delay_ms
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C7      20        0.0%
DATA                 0      0      C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 15 16:16:02 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1C06  
                                   l36 1C12                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l120 1A10  
                                  l193 1C58                                    u930 1BFC  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4270 101B                                   l2201 14F6  
                                 l2115 1C40                                   l2131 1860  
                                 l2213 1526                                   l2205 1500  
                                 l2135 187A                                   l2127 184A  
                                 l2145 11C8                                   l2243 13FE  
                                 l2403 164C                                   l1541 19B2  
                                 l2157 11F8                                   l2149 11D2  
                                 l1551 19C6                                   l1543 19B6  
                                 l1535 19A6                                   l2255 142E  
                                 l2247 1408                                   l2351 1BC8  
                                 l2415 1676                                   l1553 19CA  
                                 l1545 19BA                                   l1537 19AA  
                                 l1547 19BE                                   l1539 19AE  
                                 l1555 19D0                                   l2347 1BBE  
                                 l1549 19C2                                   l2285 1306  
                                 l2391 1622                                   l2297 1336  
                                 l2289 1310                                   l2379 15F8  
                                 u1001 11B4                                   u1031 14DE  
                                 u1121 1BAA                                   u1061 13E6  
                                 u1307 16AE                                   u1091 12EE  
                                 u1317 16BE                                   u1407 1922  
                                 u1327 16D0                                   u1417 1C72  
                                 u1337 16EA                                   u1427 1C82  
                                 u1347 16FA                                   u1437 1C48  
                                 u1357 170E                                   u1277 1868  
                                 u1367 18BE                                   u1287 18A6  
                                 u1377 18E4                                   u1297 1688  
                                 u1387 18F6                                   u1397 1910  
               __end_of_lcd_write_data 171A                                   _main 15CC  
                                 _hour 003A                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0043                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 17AE                           ___param_bank 000010  
                                ?_main 0001                        __end_of___awdiv 1832  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l104 199E  
                                i2l138 116E                                  i2l961 1940  
                                i2l953 1930                                  i2l971 1954  
                                i2l963 1944                                  i2l955 1934  
                      ___awdiv@counter 0005                                  i2l973 1958  
                                i2l965 1948                                  i2l957 1938  
                                i2l967 194C                                  i2l959 193C  
                                i2l975 195E                                  i2l969 1950  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISA 000F92  
                                _TRISD 000F95                       lcd_write_cmd@cmd 00B4  
                                _Setup 1A84                                  _hourA 003B  
                                _hourB 003C                                  _hourC 003D  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                      __end_of_version 1BEE                                  status 000FD8  
                __size_ofi2_lcd_strobe 0022                           getkey@lookup 00B4  
                      __initialization 1AF2                           __end_of_main 167C  
                               ??_main 001F                          __activetblptr 000002  
                               ?_Setup 0001                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                           version@F4277 001F  
                     ___awdiv@dividend 0001                           i2_lcd_strobe 1C8C  
                               i2l1831 17E8                                 i2l1833 17F0  
                               i2l1825 17D2                                 i2l1851 1828  
                               i2l1843 1810                                 i2l1835 17F4  
                               i2l1819 17C2                                 i2l1933 108E  
                               i2l1847 181A                        ??_lcd_write_cmd 001E  
                     __end_of_delay_ms 1C6A                       __end_of_lcd_init 18B2  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1BEE  
                               clear_0 1B38                       ___awdiv@quotient 0007  
                               _minute 003E                                 _second 0042  
                         __pdataCOMRAM 001F                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 001F                             __accesstop 0060  
              __end_of__initialization 1B3E                          getkey@keycode 00C6  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                          __end_of_Setup 1AF2  
                         __pidataBANK0 1B4C                                ??_Setup 001F  
                           _char_2_int 19A2                      __end_of_SetupTime 12E4  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 001D  
                     ??_lcd_write_data 001E                             _lcd_strobe 1C6A  
             __size_of_SetupAlarmTimeA 00F8               __size_of_SetupAlarmTimeB 00F8  
             __size_of_SetupAlarmTimeC 00F8                              ?_lcd_init 0001  
                   lcd_write_data@data 00B4                     lcd_write_cmd@temp2 00B5  
                           _int_2_char 192C                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              ___awdiv 17AE                           __psmallconst 101A  
                      __size_of_getkey 003E                        i2_lcd_write_cmd 1A14  
                              __pcinit 1AF2                                __ramtop 0800  
                              __ptext0 15CC                                __ptext1 1BA0  
                              __ptext2 1832                                __ptext3 1CAE  
                              __ptext4 11AA                                __ptext5 12E4  
                              __ptext6 13DC                                __ptext7 14D4  
                              __ptext8 167C                                __ptext9 18B2  
                            _T0CONbits 000FD5                         SetupTime@F4315 009F  
                              _minuteA 003F                                _minuteB 0040  
                              _minuteC 0041                             ??_delay_ms 00B4  
                          ?_char_2_int 0001                                _version 1BA0  
                           ??_lcd_init 00B6                         __pintcode_body 102E  
                 end_of_initialization 1B3E                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00E4  
                       SetupTime@hour1 00DE                          __Lmediumconst 0000  
                              int_func 102E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                SetupAlarmTimeA@hour10 00DD                              _PORTAbits 000F80  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTimeB@hour10 00DD                  SetupAlarmTimeC@hour10 00DD  
                          ?_lcd_strobe 0001                            ?_int_2_char 0001  
                            _AlarmAOff 0034                              _AlarmBOff 0036  
                            _AlarmCOff 0038                      ??_SetupAlarmTimeA 001F  
                    ??_SetupAlarmTimeB 001F                      ??_SetupAlarmTimeC 001F  
                __end_of_lcd_write_cmd 192C                __end_ofi2_lcd_write_cmd 1A84  
                  __size_of_char_2_int 0072                          __pidataCOMRAM 1CCA  
                       __end_of_getkey 1C2C                    start_initialization 1AF2  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                      version@msgindex 00CC                              _SetupTime 11AA  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      SetupTime@minute10 00DF  
                    SetupTime@second10 00E1                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00E3                            __pbssCOMRAM 0034  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 00B4  
                    __size_of_delay_ms 003E                      __size_of_lcd_init 0080  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                       __size_of_Setup 006E                               ?_version 0001  
                        ?i2_lcd_strobe 0001                   SetupAlarmTimeA@F4325 0060  
                 SetupAlarmTimeB@F4335 0075                              delay_ms@i 001D  
                            delay_ms@j 00B5                   SetupAlarmTimeC@F4345 008A  
                  ISR_Timer0_Int@hour1 0017                               i2u150_47 17A2  
                             i2u151_47 1A1E                               i2u152_47 1A3E  
                             i2u144_47 1724                               i2u153_47 1A50  
                             i2u145_47 1744                               i2u154_47 1A68  
                             i2u146_47 1754                               i2u155_47 1A7A  
                             i2u147_47 1766                               i2u156_47 1C94  
                             i2u148_47 177E                               i2u157_47 1CA4  
                             i2u149_47 178E                               _RCONbits 000FD0  
                 SetupAlarmTimeA@ctemp 00E2                   SetupAlarmTimeA@hour1 00DE  
                 SetupAlarmTimeB@ctemp 00E2                     __end_of_char_2_int 1A14  
                 SetupAlarmTimeB@hour1 00DE                   SetupAlarmTimeC@ctemp 00E2  
                 SetupAlarmTimeC@hour1 00DE                              lcd_init@i 00B7  
                  lcd_write_data@temp1 00B5                        _SetupAlarmTimeA 14D4  
                      _SetupAlarmTimeB 13DC                        _SetupAlarmTimeC 12E4  
                       ??i2_lcd_strobe 0001                         version@Version 00B6  
                         ??_lcd_strobe 001D                       SetupTime@Message 00C7  
                            copy_data0 1B06                              copy_data1 1B26  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1CCA  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 1CAE  
              __size_of_lcd_write_data 009E                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                       version@outchar 00CB                            ??_SetupTime 001F  
                     SetupTime@minute1 00E0                       SetupTime@second1 00E2  
                     __size_of___awdiv 0084                     __end_of_lcd_strobe 1C8C  
                     SetupTime@outchar 00DC                     __end_of_int_2_char 19A2  
                     i2_lcd_write_data 171A                               _delay_ms 1C2C  
                             __ptext10 1C6A                               __ptext11 1BEE  
                             __ptext20 17AE                               __ptext12 19A2  
                             __ptext13 1A84                               __ptext14 1C2C  
                             __ptext16 171A                               __ptext17 1A14  
                             __ptext18 1C8C                               __ptext19 192C  
                             _lcd_init 1832                       __size_of_version 004E  
                        __size_of_main 00B0          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0043                __end_of_SetupAlarmTimeA 15CC  
              __end_of_SetupAlarmTimeB 14D4                __end_of_SetupAlarmTimeC 13DC  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 007A  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1CAE                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 167C  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 18B2  
