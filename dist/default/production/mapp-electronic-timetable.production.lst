

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jul 27 12:38:53 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataBANK0
    37  0018B4                     __pidataBANK0:
    38                           	opt stack 0
    39                           
    40                           ;initializer for SetupAlarmTime@F4492
    41  0018B4  53                 	db	83
    42  0018B5  65                 	db	101
    43  0018B6  74                 	db	116
    44  0018B7  20                 	db	32
    45  0018B8  61                 	db	97
    46  0018B9  6C                 	db	108
    47  0018BA  61                 	db	97
    48  0018BB  72                 	db	114
    49  0018BC  6D                 	db	109
    50  0018BD  20                 	db	32
    51  0018BE  74                 	db	116
    52  0018BF  69                 	db	105
    53  0018C0  6D                 	db	109
    54  0018C1  65                 	db	101
    55  0018C2  20                 	db	32
    56  0018C3  68                 	db	104
    57  0018C4  68                 	db	104
    58  0018C5  6D                 	db	109
    59  0018C6  6D                 	db	109
    60  0018C7  3A                 	db	58
    61  0018C8  00                 	db	0
    62                           
    63                           ;initializer for SetupTime@F4482
    64  0018C9  53                 	db	83
    65  0018CA  65                 	db	101
    66  0018CB  74                 	db	116
    67  0018CC  20                 	db	32
    68  0018CD  74                 	db	116
    69  0018CE  69                 	db	105
    70  0018CF  6D                 	db	109
    71  0018D0  65                 	db	101
    72  0018D1  20                 	db	32
    73  0018D2  68                 	db	104
    74  0018D3  68                 	db	104
    75  0018D4  6D                 	db	109
    76  0018D5  6D                 	db	109
    77  0018D6  73                 	db	115
    78  0018D7  73                 	db	115
    79  0018D8  3A                 	db	58
    80  0018D9  20                 	db	32
    81  0018DA  20                 	db	32
    82  0018DB  20                 	db	32
    83  0018DC  20                 	db	32
    84  0018DD  00                 	db	0
    85                           
    86                           	psect	smallconst
    87  00101A                     __psmallconst:
    88                           	opt stack 0
    89  00101A  00                 	db	0
    90  00101B                     getkey@F4444:
    91                           	opt stack 0
    92  00101B  31                 	db	49
    93  00101C  32                 	db	50
    94  00101D  33                 	db	51
    95  00101E  46                 	db	70
    96  00101F  34                 	db	52
    97  001020  35                 	db	53
    98  001021  36                 	db	54
    99  001022  45                 	db	69
   100  001023  37                 	db	55
   101  001024  38                 	db	56
   102  001025  39                 	db	57
   103  001026  44                 	db	68
   104  001027  41                 	db	65
   105  001028  30                 	db	48
   106  001029  42                 	db	66
   107  00102A  43                 	db	67
   108  00102B  20                 	db	32
   109  00102C  00                 	db	0
   110  00102D                     __end_ofgetkey@F4444:
   111                           	opt stack 0
   112  0000                     _ADCON1	set	4033
   113  0000                     _CMCON	set	4020
   114  0000                     _INTCON2	set	4081
   115  0000                     _INTCONbits	set	4082
   116  0000                     _PORTB	set	3969
   117  0000                     _PORTBbits	set	3969
   118  0000                     _PORTCbits	set	3970
   119  0000                     _PORTD	set	3971
   120  0000                     _PORTDbits	set	3971
   121  0000                     _RCONbits	set	4048
   122  0000                     _T0CON	set	4053
   123  0000                     _T0CONbits	set	4053
   124  0000                     _TMR0H	set	4055
   125  0000                     _TMR0L	set	4054
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISD	set	3989
   128  00102D  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133  001848                     __pcinit:
   134                           	opt stack 0
   135  001848                     start_initialization:
   136                           	opt stack 0
   137  001848                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to COMRAM (5 bytes)
   141  001848  6A35               	clrf	(__pbssCOMRAM+4)& (0+255),c
   142  00184A  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
   143  00184C  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
   144  00184E  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   145  001850  6A31               	clrf	__pbssCOMRAM& (0+255),c
   146                           
   147                           ; Initialize objects allocated to BANK0 (42 bytes)
   148                           ; load TBLPTR registers with __pidataBANK0
   149  001852  0EB4               	movlw	low __pidataBANK0
   150  001854  6EF6               	movwf	tblptrl,c
   151  001856  0E18               	movlw	high __pidataBANK0
   152  001858  6EF7               	movwf	tblptrh,c
   153  00185A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   154  00185C  6EF8               	movwf	tblptru,c
   155  00185E  EE00  F060         	lfsr	0,__pdataBANK0
   156  001862  EE10 F02A          	lfsr	1,42
   157  001866                     copy_data0:
   158  001866  0009               	tblrd		*+
   159  001868  CFF5 FFEE          	movff	tablat,postinc0
   160  00186C  50E5               	movf	postdec1,w,c
   161  00186E  50E1               	movf	fsr1l,w,c
   162  001870  E1FA               	bnz	copy_data0
   163  001872                     end_of_initialization:
   164                           	opt stack 0
   165  001872                     __end_of__initialization:
   166                           	opt stack 0
   167  001872  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   168  001874  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   169  001876  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  001878  6EF8               	movwf	tblptru,c
   171  00187A  0100               	movlb	0
   172  00187C  EFDF  F00B         	goto	_main	;jump to C main() function
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           postinc0	equ	0xFEE
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	bssCOMRAM
   182  000031                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000031                     _hour:
   185                           	opt stack 0
   186  000031                     	ds	1
   187  000032                     _hourA:
   188                           	opt stack 0
   189  000032                     	ds	1
   190  000033                     _minute:
   191                           	opt stack 0
   192  000033                     	ds	1
   193  000034                     _minuteA:
   194                           	opt stack 0
   195  000034                     	ds	1
   196  000035                     _second:
   197                           	opt stack 0
   198  000035                     	ds	1
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           
   207                           	psect	dataBANK0
   208  000060                     __pdataBANK0:
   209                           	opt stack 0
   210  000060                     SetupAlarmTime@F4492:
   211                           	opt stack 0
   212  000060                     	ds	21
   213  000075                     SetupTime@F4482:
   214                           	opt stack 0
   215  000075                     	ds	21
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224                           	psect	cstackBANK0
   225  00008A                     __pcstackBANK0:
   226                           	opt stack 0
   227  00008A                     SetupTime@Message:
   228                           	opt stack 0
   229  00008A                     SetupAlarmTime@Message:
   230                           	opt stack 0
   231                           
   232                           ; 21 bytes @ 0x0
   233  00008A                     	ds	21
   234  00009F                     SetupTime@outchar:
   235                           	opt stack 0
   236  00009F                     SetupAlarmTime@outchar:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x15
   240  00009F                     	ds	1
   241  0000A0                     SetupTime@hour10:
   242                           	opt stack 0
   243  0000A0                     SetupAlarmTime@hour10:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x16
   247  0000A0                     	ds	1
   248  0000A1                     SetupTime@hour1:
   249                           	opt stack 0
   250  0000A1                     SetupAlarmTime@hour1:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x17
   254  0000A1                     	ds	1
   255  0000A2                     SetupTime@minute10:
   256                           	opt stack 0
   257  0000A2                     SetupAlarmTime@minute10:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x18
   261  0000A2                     	ds	1
   262  0000A3                     SetupTime@minute1:
   263                           	opt stack 0
   264  0000A3                     SetupAlarmTime@minute1:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x19
   268  0000A3                     	ds	1
   269  0000A4                     SetupTime@second10:
   270                           	opt stack 0
   271  0000A4                     SetupAlarmTime@msgindex:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x1A
   275  0000A4                     	ds	1
   276  0000A5                     SetupTime@second1:
   277                           	opt stack 0
   278  0000A5                     SetupAlarmTime@ctemp:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x1B
   282  0000A5                     	ds	1
   283  0000A6                     SetupTime@msgindex:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x1C
   287  0000A6                     	ds	1
   288  0000A7                     SetupTime@ctemp:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x1D
   292  0000A7                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301                           	psect	cstackCOMRAM
   302  000001                     __pcstackCOMRAM:
   303                           	opt stack 0
   304  000001                     ??i2_lcd_strobe:
   305  000001                     ?___awdiv:
   306                           	opt stack 0
   307  000001                     int_2_char@int1:
   308                           	opt stack 0
   309  000001                     ___awdiv@dividend:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x0
   313  000001                     	ds	1
   314  000002                     ??i2_lcd_write_cmd:
   315  000002                     ??i2_lcd_write_data:
   316  000002                     int_2_char@char1:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x1
   320  000002                     	ds	1
   321  000003                     i2lcd_write_cmd@cmd:
   322                           	opt stack 0
   323  000003                     i2lcd_write_data@data:
   324                           	opt stack 0
   325  000003                     ___awdiv@divisor:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x2
   329  000003                     	ds	1
   330  000004                     i2lcd_write_cmd@temp2:
   331                           	opt stack 0
   332  000004                     i2lcd_write_data@temp1:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x3
   336  000004                     	ds	1
   337  000005                     ___awdiv@counter:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     ___awdiv@sign:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346  000006                     	ds	1
   347  000007                     ___awdiv@quotient:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  000007                     	ds	2
   352  000009                     ??_ISR_Timer0_Int:
   353                           
   354                           ; 0 bytes @ 0x8
   355  000009                     	ds	14
   356  000017                     ISR_Timer0_Int@hour1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x16
   360  000017                     	ds	1
   361  000018                     ISR_Timer0_Int@minute1:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x17
   365  000018                     	ds	1
   366  000019                     ISR_Timer0_Int@second1:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x18
   370  000019                     	ds	1
   371  00001A                     ISR_Timer0_Int@hour10:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x19
   375  00001A                     	ds	1
   376  00001B                     ISR_Timer0_Int@minute10:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x1A
   380  00001B                     	ds	1
   381  00001C                     ISR_Timer0_Int@second10:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x1B
   385  00001C                     	ds	1
   386  00001D                     ??_lcd_strobe:
   387  00001D                     char_2_int@char1:
   388                           	opt stack 0
   389  00001D                     delay_ms@i:
   390                           	opt stack 0
   391  00001D                     getkey@lookup:
   392                           	opt stack 0
   393                           
   394                           ; 18 bytes @ 0x1C
   395  00001D                     	ds	1
   396  00001E                     ??_lcd_write_cmd:
   397  00001E                     ??_lcd_write_data:
   398  00001E                     char_2_int@int1:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x1D
   402  00001E                     	ds	1
   403  00001F                     ??_delay_ms:
   404  00001F                     lcd_write_cmd@cmd:
   405                           	opt stack 0
   406  00001F                     lcd_write_data@data:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x1E
   410  00001F                     	ds	1
   411  000020                     lcd_write_cmd@temp2:
   412                           	opt stack 0
   413  000020                     lcd_write_data@temp1:
   414                           	opt stack 0
   415  000020                     delay_ms@j:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x1F
   419  000020                     	ds	1
   420  000021                     ??_lcd_init:
   421                           
   422                           ; 0 bytes @ 0x20
   423  000021                     	ds	1
   424  000022                     lcd_init@i:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x21
   428  000022                     	ds	13
   429  00002F                     getkey@keycode:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x2E
   433  00002F                     	ds	1
   434  000030                     main@displayUpdated:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x2F
   438  000030                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 244 in file "Main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  displayUpdat    1   47[COMRAM] unsigned char 
   457 ;; Return value:  Size  Location     Type
   458 ;;		None               void
   459 ;; Registers used:
   460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   466 ;;      Params:         0       0       0       0       0       0       0       0       0
   467 ;;      Locals:         1       0       0       0       0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0
   469 ;;      Totals:         1       0       0       0       0       0       0       0       0
   470 ;;Total ram usage:        1 bytes
   471 ;; Hardware stack levels required when called:    6
   472 ;; This function calls:
   473 ;;		_SetupAlarmTime
   474 ;;		_SetupTime
   475 ;;		_SetupTimerInterruptRegisters
   476 ;;		_displayAlarmOff
   477 ;;		_displayAlarmOn
   478 ;;		_lcd_init
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text0
   485  0017BE                     __ptext0:
   486                           	opt stack 0
   487  0017BE                     _main:
   488                           	opt stack 25
   489                           
   490                           ;Main.c: 246: unsigned char displayUpdated;
   491                           ;Main.c: 247: displayUpdated = 1;
   492                           
   493                           ;incstack = 0
   494  0017BE  0E01               	movlw	1
   495  0017C0  6E30               	movwf	main@displayUpdated,c
   496                           
   497                           ;Main.c: 249: ADCON1 = 0x0F;
   498  0017C2  0E0F               	movlw	15
   499  0017C4  6EC1               	movwf	4033,c	;volatile
   500                           
   501                           ;Main.c: 250: CMCON = 0x07;
   502  0017C6  0E07               	movlw	7
   503  0017C8  6EB4               	movwf	4020,c	;volatile
   504                           
   505                           ;Main.c: 252: lcd_init();
   506  0017CA  ECFD  F00A         	call	_lcd_init	;wreg free
   507                           
   508                           ;Main.c: 254: SetupTime();
   509  0017CE  ECD5  F008         	call	_SetupTime	;wreg free
   510                           
   511                           ;Main.c: 255: SetupAlarmTime();
   512  0017D2  EC72  F009         	call	_SetupAlarmTime	;wreg free
   513                           
   514                           ;Main.c: 256: SetupTimerInterruptRegisters();
   515  0017D6  EC91  F00C         	call	_SetupTimerInterruptRegisters	;wreg free
   516                           
   517                           ;Main.c: 257: TRISC = 0b00000000;
   518  0017DA  0E00               	movlw	0
   519  0017DC  6E94               	movwf	3988,c	;volatile
   520  0017DE                     l1668:
   521                           
   522                           ;Main.c: 260: {
   523                           ;Main.c: 261: if(hour==hourA && minute==minuteA)
   524  0017DE  5032               	movf	_hourA,w,c
   525  0017E0  1831               	xorwf	_hour,w,c
   526  0017E2  A4D8               	btfss	status,2,c
   527  0017E4  D00C               	goto	l1678
   528  0017E6  5034               	movf	_minuteA,w,c
   529  0017E8  1833               	xorwf	_minute,w,c
   530  0017EA  A4D8               	btfss	status,2,c
   531  0017EC  D008               	goto	l1678
   532                           
   533                           ;Main.c: 262: {
   534                           ;Main.c: 263: if(displayUpdated == 2)
   535  0017EE  0E02               	movlw	2
   536  0017F0  1830               	xorwf	main@displayUpdated,w,c
   537  0017F2  A4D8               	btfss	status,2,c
   538  0017F4  D7F4               	goto	l1668
   539                           
   540                           ;Main.c: 264: {
   541                           ;Main.c: 265: displayAlarmOn();
   542  0017F6  EC9F  F00C         	call	_displayAlarmOn	;wreg free
   543                           
   544                           ;Main.c: 266: displayUpdated = 1;
   545  0017FA  0E01               	movlw	1
   546  0017FC  D006               	goto	L1
   547  0017FE                     l1678:
   548                           
   549                           ;Main.c: 269: else
   550                           ;Main.c: 270: {
   551                           ;Main.c: 271: if(displayUpdated == 1)
   552  0017FE  0430               	decf	main@displayUpdated,w,c
   553  001800  A4D8               	btfss	status,2,c
   554  001802  D7ED               	goto	l1668
   555                           
   556                           ;Main.c: 272: {
   557                           ;Main.c: 273: displayAlarmOff();
   558  001804  ECA2  F00C         	call	_displayAlarmOff	;wreg free
   559                           
   560                           ;Main.c: 274: displayUpdated = 2;
   561  001808  0E02               	movlw	2
   562  00180A                     L1:
   563  00180A  6E30               	movwf	main@displayUpdated,c
   564  00180C  D7E8               	goto	l1668
   565  00180E                     __end_of_main:
   566                           	opt stack 0
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           postdec1	equ	0xFE5
   573                           fsr1l	equ	0xFE1
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _lcd_init *****************
   577 ;; Defined at:
   578 ;;		line 83 in file "lcd_utilities.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  i               2   33[COMRAM] int 
   583 ;; Return value:  Size  Location     Type
   584 ;;		None               void
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         2       0       0       0       0       0       0       0       0
   594 ;;      Temps:          1       0       0       0       0       0       0       0       0
   595 ;;      Totals:         3       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        3 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    5
   599 ;; This function calls:
   600 ;;		_lcd_write_cmd
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607  0015FA                     __ptext1:
   608                           	opt stack 0
   609  0015FA                     _lcd_init:
   610                           	opt stack 25
   611                           
   612                           ;lcd_utilities.c: 85: int i;
   613                           ;lcd_utilities.c: 86: TRISD = 0x00;
   614                           
   615                           ;incstack = 0
   616  0015FA  0E00               	movlw	0
   617  0015FC  6E95               	movwf	3989,c	;volatile
   618                           
   619                           ;lcd_utilities.c: 87: PORTD = 0x00;
   620  0015FE  0E00               	movlw	0
   621  001600  6E83               	movwf	3971,c	;volatile
   622                           
   623                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   624  001602  9883               	bcf	3971,4,c	;volatile
   625                           
   626                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   627  001604  9C83               	bcf	3971,6,c	;volatile
   628                           
   629                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   630  001606  9A83               	bcf	3971,5,c	;volatile
   631                           
   632                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   633  001608  0E00               	movlw	0
   634  00160A  6E23               	movwf	lcd_init@i+1,c
   635  00160C  0E00               	movlw	0
   636  00160E  6E22               	movwf	lcd_init@i,c
   637  001610                     l1382:
   638  001610  BE23               	btfsc	lcd_init@i+1,7,c
   639  001612  D006               	goto	l1386
   640  001614  5023               	movf	lcd_init@i+1,w,c
   641  001616  E10F               	bnz	l1390
   642  001618  0E64               	movlw	100
   643  00161A  5C22               	subwf	lcd_init@i,w,c
   644  00161C  B0D8               	btfsc	status,0,c
   645  00161E  D00B               	goto	l1390
   646  001620                     l1386:
   647                           
   648                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   649  001620  0E9C               	movlw	156
   650  001622  6E21               	movwf	??_lcd_init& (0+255),c
   651  001624  0ED7               	movlw	215
   652  001626                     u597:
   653  001626  2EE8               	decfsz	wreg,f,c
   654  001628  D7FE               	goto	u597
   655  00162A  2E21               	decfsz	??_lcd_init& (0+255),f,c
   656  00162C  D7FC               	goto	u597
   657  00162E  F000               	nop	
   658  001630  4A22               	infsnz	lcd_init@i,f,c
   659  001632  2A23               	incf	lcd_init@i+1,f,c
   660  001634  D7ED               	goto	l1382
   661  001636                     l1390:
   662                           
   663                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   664  001636  0E33               	movlw	51
   665  001638  EC6F  F00B         	call	_lcd_write_cmd
   666                           
   667                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   668  00163C  0E32               	movlw	50
   669  00163E  EC6F  F00B         	call	_lcd_write_cmd
   670                           
   671                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   672  001642  0E28               	movlw	40
   673  001644  EC6F  F00B         	call	_lcd_write_cmd
   674                           
   675                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   676  001648  0E0E               	movlw	14
   677  00164A  EC6F  F00B         	call	_lcd_write_cmd
   678                           
   679                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   680  00164E  0E06               	movlw	6
   681  001650  EC6F  F00B         	call	_lcd_write_cmd
   682                           
   683                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   684  001654  0E01               	movlw	1
   685  001656  EC6F  F00B         	call	_lcd_write_cmd
   686                           
   687                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   688  00165A  0E9C               	movlw	156
   689  00165C  6E21               	movwf	??_lcd_init& (0+255),c
   690  00165E  0ED7               	movlw	215
   691  001660                     u607:
   692  001660  2EE8               	decfsz	wreg,f,c
   693  001662  D7FE               	goto	u607
   694  001664  2E21               	decfsz	??_lcd_init& (0+255),f,c
   695  001666  D7FC               	goto	u607
   696  001668  F000               	nop	
   697  00166A  0012               	return		;funcret
   698  00166C                     __end_of_lcd_init:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           postinc0	equ	0xFEE
   705                           wreg	equ	0xFE8
   706                           postdec1	equ	0xFE5
   707                           fsr1l	equ	0xFE1
   708                           status	equ	0xFD8
   709                           
   710 ;; *************** function _displayAlarmOn *****************
   711 ;; Defined at:
   712 ;;		line 232 in file "Main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		None
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         0       0       0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text2
   741  00193E                     __ptext2:
   742                           	opt stack 0
   743  00193E                     _displayAlarmOn:
   744                           	opt stack 27
   745                           
   746                           ;Main.c: 234: PORTCbits.RC0 = 1;
   747                           
   748                           ;incstack = 0
   749  00193E  8082               	bsf	3970,0,c	;volatile
   750                           
   751                           ;Main.c: 235: PORTCbits.RC1 = 1;
   752  001940  8282               	bsf	3970,1,c	;volatile
   753  001942  0012               	return		;funcret
   754  001944                     __end_of_displayAlarmOn:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _displayAlarmOff *****************
   767 ;; Defined at:
   768 ;;		line 238 in file "Main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;		None               void
   775 ;; Registers used:
   776 ;;		None
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         0       0       0       0       0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    3
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text3
   797  001944                     __ptext3:
   798                           	opt stack 0
   799  001944                     _displayAlarmOff:
   800                           	opt stack 27
   801                           
   802                           ;Main.c: 240: PORTCbits.RC0 = 0;
   803                           
   804                           ;incstack = 0
   805  001944  9082               	bcf	3970,0,c	;volatile
   806                           
   807                           ;Main.c: 241: PORTCbits.RC1 = 0;
   808  001946  9282               	bcf	3970,1,c	;volatile
   809  001948  0012               	return		;funcret
   810  00194A                     __end_of_displayAlarmOff:
   811                           	opt stack 0
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1l	equ	0xFE1
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _SetupTimerInterruptRegisters *****************
   823 ;; Defined at:
   824 ;;		line 196 in file "Main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;		None               void
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   838 ;;      Params:         0       0       0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    3
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text4
   853  001922                     __ptext4:
   854                           	opt stack 0
   855  001922                     _SetupTimerInterruptRegisters:
   856                           	opt stack 27
   857                           
   858                           ;Main.c: 198: RCONbits.IPEN =1;
   859                           
   860                           ;incstack = 0
   861  001922  8ED0               	bsf	4048,7,c	;volatile
   862                           
   863                           ;Main.c: 202: INTCONbits.GIEH =1;
   864  001924  8EF2               	bsf	intcon,7,c	;volatile
   865                           
   866                           ;Main.c: 207: T0CON = 0b00000111;
   867  001926  0E07               	movlw	7
   868  001928  6ED5               	movwf	4053,c	;volatile
   869                           
   870                           ;Main.c: 215: INTCON2 = 0b10000100;
   871  00192A  0E84               	movlw	132
   872  00192C  6EF1               	movwf	intcon2,c	;volatile
   873                           
   874                           ;Main.c: 220: TMR0H = 0x48;
   875  00192E  0E48               	movlw	72
   876  001930  6ED7               	movwf	4055,c	;volatile
   877                           
   878                           ;Main.c: 221: TMR0L = 0xE5;
   879  001932  0EE5               	movlw	229
   880  001934  6ED6               	movwf	4054,c	;volatile
   881                           
   882                           ;Main.c: 223: T0CONbits.TMR0ON = 1;
   883  001936  8ED5               	bsf	4053,7,c	;volatile
   884                           
   885                           ;Main.c: 224: INTCONbits.TMR0IE = 1;
   886  001938  8AF2               	bsf	intcon,5,c	;volatile
   887                           
   888                           ;Main.c: 227: INTCONbits.TMR0IF = 0;
   889  00193A  94F2               	bcf	intcon,2,c	;volatile
   890  00193C  0012               	return		;funcret
   891  00193E                     __end_of_SetupTimerInterruptRegisters:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           intcon	equ	0xFF2
   898                           intcon2	equ	0xFF1
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           postdec1	equ	0xFE5
   902                           fsr1l	equ	0xFE1
   903                           status	equ	0xFD8
   904                           
   905 ;; *************** function _SetupTime *****************
   906 ;; Defined at:
   907 ;;		line 109 in file "Main.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  Message        21    0[BANK0 ] unsigned char [21]
   912 ;;  ctemp           1   29[BANK0 ] unsigned char 
   913 ;;  msgindex        1   28[BANK0 ] unsigned char 
   914 ;;  second1         1   27[BANK0 ] unsigned char 
   915 ;;  second10        1   26[BANK0 ] unsigned char 
   916 ;;  minute1         1   25[BANK0 ] unsigned char 
   917 ;;  minute10        1   24[BANK0 ] unsigned char 
   918 ;;  hour1           1   23[BANK0 ] unsigned char 
   919 ;;  hour10          1   22[BANK0 ] unsigned char 
   920 ;;  outchar         1   21[BANK0 ] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   930 ;;      Params:         0       0       0       0       0       0       0       0       0
   931 ;;      Locals:         0      30       0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0
   933 ;;      Totals:         0      30       0       0       0       0       0       0       0
   934 ;;Total ram usage:       30 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    5
   937 ;; This function calls:
   938 ;;		_char_2_int
   939 ;;		_delay_ms
   940 ;;		_getkey
   941 ;;		_lcd_write_cmd
   942 ;;		_lcd_write_data
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text5
   949  0011AA                     __ptext5:
   950                           	opt stack 0
   951  0011AA                     _SetupTime:
   952                           	opt stack 25
   953                           
   954                           ;Main.c: 111: unsigned char msgindex, outchar, ctemp;
   955                           ;Main.c: 112: unsigned char hour10, hour1, minute10, minute1, second10, second1;
   956                           ;Main.c: 113: char Message[ ] = "Set time hhmmss:    ";
   957                           
   958                           ;incstack = 0
   959  0011AA  EE20  F075         	lfsr	2,SetupTime@F4482
   960  0011AE  EE10  F08A         	lfsr	1,SetupTime@Message
   961  0011B2  0E14               	movlw	20
   962  0011B4                     u391:
   963  0011B4  CFDB FFE3          	movff	plusw2,plusw1
   964  0011B8  06E8               	decf	wreg,f,c
   965  0011BA  E2FC               	bc	u391
   966                           
   967                           ;Main.c: 115: lcd_write_cmd(0x80);
   968  0011BC  0E80               	movlw	128
   969  0011BE  EC6F  F00B         	call	_lcd_write_cmd
   970                           
   971                           ;Main.c: 117: for (msgindex = 0; msgindex < 20; msgindex++)
   972  0011C2  0E00               	movlw	0
   973  0011C4  0100               	movlb	0	; () banked
   974  0011C6  6FA6               	movwf	SetupTime@msgindex& (0+255),b
   975  0011C8                     l1400:
   976                           
   977                           ; BSR set to: 0
   978  0011C8  0E13               	movlw	19
   979  0011CA  0100               	movlb	0	; () banked
   980  0011CC  65A6               	cpfsgt	SetupTime@msgindex& (0+255),b
   981  0011CE  D001               	goto	l1404
   982  0011D0  D013               	goto	l1412
   983  0011D2                     l1404:
   984                           
   985                           ; BSR set to: 0
   986                           ;Main.c: 118: {
   987                           ;Main.c: 119: outchar = Message[msgindex];
   988  0011D2  0100               	movlb	0	; () banked
   989  0011D4  51A6               	movf	SetupTime@msgindex& (0+255),w,b
   990  0011D6  0D01               	mullw	1
   991  0011D8  0E8A               	movlw	low SetupTime@Message
   992  0011DA  24F3               	addwf	prodl,w,c
   993  0011DC  6ED9               	movwf	fsr2l,c
   994  0011DE  0E00               	movlw	high SetupTime@Message
   995  0011E0  20F4               	addwfc	prodh,w,c
   996  0011E2  6EDA               	movwf	fsr2h,c
   997  0011E4  50DF               	movf	indf2,w,c
   998  0011E6  0100               	movlb	0	; () banked
   999  0011E8  6F9F               	movwf	SetupTime@outchar& (0+255),b
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;Main.c: 120: lcd_write_data(outchar);
  1003  0011EA  0100               	movlb	0	; () banked
  1004  0011EC  519F               	movf	SetupTime@outchar& (0+255),w,b
  1005  0011EE  ECEC  F009         	call	_lcd_write_data
  1006  0011F2  0100               	movlb	0	; () banked
  1007  0011F4  2BA6               	incf	SetupTime@msgindex& (0+255),f,b
  1008  0011F6  D7E8               	goto	l1400
  1009  0011F8                     l1412:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;Main.c: 121: }
  1013                           ;Main.c: 123: lcd_write_cmd(0xC0);
  1014  0011F8  0EC0               	movlw	192
  1015  0011FA  EC6F  F00B         	call	_lcd_write_cmd
  1016                           
  1017                           ;Main.c: 125: ctemp=getkey();
  1018  0011FE  EC07  F00C         	call	_getkey	;wreg free
  1019  001202  0100               	movlb	0	; () banked
  1020  001204  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;Main.c: 126: lcd_write_data(ctemp);
  1024  001206  0100               	movlb	0	; () banked
  1025  001208  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1026  00120A  ECEC  F009         	call	_lcd_write_data
  1027                           
  1028                           ;Main.c: 127: hour10 = char_2_int (ctemp);
  1029  00120E  0100               	movlb	0	; () banked
  1030  001210  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1031  001212  EC36  F00B         	call	_char_2_int
  1032  001216  0100               	movlb	0	; () banked
  1033  001218  6FA0               	movwf	SetupTime@hour10& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;Main.c: 129: ctemp=getkey();
  1037  00121A  EC07  F00C         	call	_getkey	;wreg free
  1038  00121E  0100               	movlb	0	; () banked
  1039  001220  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1040                           
  1041                           ;Main.c: 130: lcd_write_data(ctemp);
  1042  001222  0100               	movlb	0	; () banked
  1043  001224  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1044  001226  ECEC  F009         	call	_lcd_write_data
  1045                           
  1046                           ;Main.c: 131: hour1 = char_2_int (ctemp);
  1047  00122A  0100               	movlb	0	; () banked
  1048  00122C  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1049  00122E  EC36  F00B         	call	_char_2_int
  1050  001232  0100               	movlb	0	; () banked
  1051  001234  6FA1               	movwf	SetupTime@hour1& (0+255),b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;Main.c: 133: ctemp=getkey();
  1055  001236  EC07  F00C         	call	_getkey	;wreg free
  1056  00123A  0100               	movlb	0	; () banked
  1057  00123C  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;Main.c: 134: lcd_write_data(ctemp);
  1061  00123E  0100               	movlb	0	; () banked
  1062  001240  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1063  001242  ECEC  F009         	call	_lcd_write_data
  1064                           
  1065                           ;Main.c: 135: minute10 = char_2_int (ctemp);
  1066  001246  0100               	movlb	0	; () banked
  1067  001248  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1068  00124A  EC36  F00B         	call	_char_2_int
  1069  00124E  0100               	movlb	0	; () banked
  1070  001250  6FA2               	movwf	SetupTime@minute10& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;Main.c: 137: ctemp=getkey();
  1074  001252  EC07  F00C         	call	_getkey	;wreg free
  1075  001256  0100               	movlb	0	; () banked
  1076  001258  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1077                           
  1078                           ;Main.c: 138: lcd_write_data(ctemp);
  1079  00125A  0100               	movlb	0	; () banked
  1080  00125C  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1081  00125E  ECEC  F009         	call	_lcd_write_data
  1082                           
  1083                           ;Main.c: 139: minute1 = char_2_int (ctemp);
  1084  001262  0100               	movlb	0	; () banked
  1085  001264  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1086  001266  EC36  F00B         	call	_char_2_int
  1087  00126A  0100               	movlb	0	; () banked
  1088  00126C  6FA3               	movwf	SetupTime@minute1& (0+255),b
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;Main.c: 141: ctemp=getkey();
  1092  00126E  EC07  F00C         	call	_getkey	;wreg free
  1093  001272  0100               	movlb	0	; () banked
  1094  001274  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;Main.c: 142: lcd_write_data(ctemp);
  1098  001276  0100               	movlb	0	; () banked
  1099  001278  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1100  00127A  ECEC  F009         	call	_lcd_write_data
  1101                           
  1102                           ;Main.c: 143: second10 = char_2_int (ctemp);
  1103  00127E  0100               	movlb	0	; () banked
  1104  001280  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1105  001282  EC36  F00B         	call	_char_2_int
  1106  001286  0100               	movlb	0	; () banked
  1107  001288  6FA4               	movwf	SetupTime@second10& (0+255),b
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;Main.c: 145: ctemp=getkey();
  1111  00128A  EC07  F00C         	call	_getkey	;wreg free
  1112  00128E  0100               	movlb	0	; () banked
  1113  001290  6FA7               	movwf	SetupTime@ctemp& (0+255),b
  1114                           
  1115                           ;Main.c: 146: lcd_write_data(ctemp);
  1116  001292  0100               	movlb	0	; () banked
  1117  001294  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1118  001296  ECEC  F009         	call	_lcd_write_data
  1119                           
  1120                           ;Main.c: 147: second1 = char_2_int (ctemp);
  1121  00129A  0100               	movlb	0	; () banked
  1122  00129C  51A7               	movf	SetupTime@ctemp& (0+255),w,b
  1123  00129E  EC36  F00B         	call	_char_2_int
  1124  0012A2  0100               	movlb	0	; () banked
  1125  0012A4  6FA5               	movwf	SetupTime@second1& (0+255),b
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;Main.c: 149: hour = hour10 * 10 + hour1;
  1129  0012A6  0100               	movlb	0	; () banked
  1130  0012A8  51A0               	movf	SetupTime@hour10& (0+255),w,b
  1131  0012AA  0D0A               	mullw	10
  1132  0012AC  50F3               	movf	prodl,w,c
  1133  0012AE  0100               	movlb	0	; () banked
  1134  0012B0  25A1               	addwf	SetupTime@hour1& (0+255),w,b
  1135  0012B2  6E31               	movwf	_hour,c
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;Main.c: 150: minute = minute10 * 10 + minute1;
  1139  0012B4  0100               	movlb	0	; () banked
  1140  0012B6  51A2               	movf	SetupTime@minute10& (0+255),w,b
  1141  0012B8  0D0A               	mullw	10
  1142  0012BA  50F3               	movf	prodl,w,c
  1143  0012BC  0100               	movlb	0	; () banked
  1144  0012BE  25A3               	addwf	SetupTime@minute1& (0+255),w,b
  1145  0012C0  6E33               	movwf	_minute,c
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;Main.c: 151: second = second10 * 10 + second1;
  1149  0012C2  0100               	movlb	0	; () banked
  1150  0012C4  51A4               	movf	SetupTime@second10& (0+255),w,b
  1151  0012C6  0D0A               	mullw	10
  1152  0012C8  50F3               	movf	prodl,w,c
  1153  0012CA  0100               	movlb	0	; () banked
  1154  0012CC  25A5               	addwf	SetupTime@second1& (0+255),w,b
  1155  0012CE  6E35               	movwf	_second,c
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;Main.c: 153: delay_ms(500);
  1159  0012D0  0E01               	movlw	1
  1160  0012D2  6E1E               	movwf	delay_ms@i+1,c
  1161  0012D4  0EF4               	movlw	244
  1162  0012D6  6E1D               	movwf	delay_ms@i,c
  1163  0012D8  EC40  F00C         	call	_delay_ms	;wreg free
  1164                           
  1165                           ;Main.c: 154: lcd_write_cmd(0x01);
  1166  0012DC  0E01               	movlw	1
  1167  0012DE  EC6F  F00B         	call	_lcd_write_cmd
  1168  0012E2  0012               	return		;funcret
  1169  0012E4                     __end_of_SetupTime:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           intcon2	equ	0xFF1
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec1	equ	0xFE5
  1182                           plusw1	equ	0xFE3
  1183                           fsr1l	equ	0xFE1
  1184                           indf2	equ	0xFDF
  1185                           plusw2	equ	0xFDB
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _SetupAlarmTime *****************
  1191 ;; Defined at:
  1192 ;;		line 157 in file "Main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  Message        21    0[BANK0 ] unsigned char [21]
  1197 ;;  ctemp           1   27[BANK0 ] unsigned char 
  1198 ;;  msgindex        1   26[BANK0 ] unsigned char 
  1199 ;;  minute1         1   25[BANK0 ] unsigned char 
  1200 ;;  minute10        1   24[BANK0 ] unsigned char 
  1201 ;;  hour1           1   23[BANK0 ] unsigned char 
  1202 ;;  hour10          1   22[BANK0 ] unsigned char 
  1203 ;;  outchar         1   21[BANK0 ] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1217 ;;Total ram usage:       28 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    5
  1220 ;; This function calls:
  1221 ;;		_char_2_int
  1222 ;;		_delay_ms
  1223 ;;		_getkey
  1224 ;;		_lcd_write_cmd
  1225 ;;		_lcd_write_data
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text6
  1232  0012E4                     __ptext6:
  1233                           	opt stack 0
  1234  0012E4                     _SetupAlarmTime:
  1235                           	opt stack 25
  1236                           
  1237                           ;Main.c: 159: unsigned char msgindex, outchar, ctemp;
  1238                           ;Main.c: 160: unsigned char hour10, hour1, minute10, minute1;
  1239                           ;Main.c: 161: char Message[ ] = "Set alarm time hhmm:";
  1240                           
  1241                           ;incstack = 0
  1242  0012E4  EE20  F060         	lfsr	2,SetupAlarmTime@F4492
  1243  0012E8  EE10  F08A         	lfsr	1,SetupAlarmTime@Message
  1244  0012EC  0E14               	movlw	20
  1245  0012EE                     u421:
  1246  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  1247  0012F2  06E8               	decf	wreg,f,c
  1248  0012F4  E2FC               	bc	u421
  1249                           
  1250                           ;Main.c: 163: lcd_write_cmd(0x80);
  1251  0012F6  0E80               	movlw	128
  1252  0012F8  EC6F  F00B         	call	_lcd_write_cmd
  1253                           
  1254                           ;Main.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1255  0012FC  0E00               	movlw	0
  1256  0012FE  0100               	movlb	0	; () banked
  1257  001300  6FA4               	movwf	SetupAlarmTime@msgindex& (0+255),b
  1258  001302                     l1454:
  1259                           
  1260                           ; BSR set to: 0
  1261  001302  0E13               	movlw	19
  1262  001304  0100               	movlb	0	; () banked
  1263  001306  65A4               	cpfsgt	SetupAlarmTime@msgindex& (0+255),b
  1264  001308  D001               	goto	l1458
  1265  00130A  D013               	goto	l1466
  1266  00130C                     l1458:
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;Main.c: 166: {
  1270                           ;Main.c: 167: outchar = Message[msgindex];
  1271  00130C  0100               	movlb	0	; () banked
  1272  00130E  51A4               	movf	SetupAlarmTime@msgindex& (0+255),w,b
  1273  001310  0D01               	mullw	1
  1274  001312  0E8A               	movlw	low SetupAlarmTime@Message
  1275  001314  24F3               	addwf	prodl,w,c
  1276  001316  6ED9               	movwf	fsr2l,c
  1277  001318  0E00               	movlw	high SetupAlarmTime@Message
  1278  00131A  20F4               	addwfc	prodh,w,c
  1279  00131C  6EDA               	movwf	fsr2h,c
  1280  00131E  50DF               	movf	indf2,w,c
  1281  001320  0100               	movlb	0	; () banked
  1282  001322  6F9F               	movwf	SetupAlarmTime@outchar& (0+255),b
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;Main.c: 168: lcd_write_data(outchar);
  1286  001324  0100               	movlb	0	; () banked
  1287  001326  519F               	movf	SetupAlarmTime@outchar& (0+255),w,b
  1288  001328  ECEC  F009         	call	_lcd_write_data
  1289  00132C  0100               	movlb	0	; () banked
  1290  00132E  2BA4               	incf	SetupAlarmTime@msgindex& (0+255),f,b
  1291  001330  D7E8               	goto	l1454
  1292  001332                     l1466:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;Main.c: 169: }
  1296                           ;Main.c: 171: lcd_write_cmd(0xC0);
  1297  001332  0EC0               	movlw	192
  1298  001334  EC6F  F00B         	call	_lcd_write_cmd
  1299                           
  1300                           ;Main.c: 173: ctemp=getkey();
  1301  001338  EC07  F00C         	call	_getkey	;wreg free
  1302  00133C  0100               	movlb	0	; () banked
  1303  00133E  6FA5               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;Main.c: 174: lcd_write_data(ctemp);
  1307  001340  0100               	movlb	0	; () banked
  1308  001342  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1309  001344  ECEC  F009         	call	_lcd_write_data
  1310                           
  1311                           ;Main.c: 175: hour10 = char_2_int (ctemp);
  1312  001348  0100               	movlb	0	; () banked
  1313  00134A  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1314  00134C  EC36  F00B         	call	_char_2_int
  1315  001350  0100               	movlb	0	; () banked
  1316  001352  6FA0               	movwf	SetupAlarmTime@hour10& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;Main.c: 177: ctemp=getkey();
  1320  001354  EC07  F00C         	call	_getkey	;wreg free
  1321  001358  0100               	movlb	0	; () banked
  1322  00135A  6FA5               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1323                           
  1324                           ;Main.c: 178: lcd_write_data(ctemp);
  1325  00135C  0100               	movlb	0	; () banked
  1326  00135E  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1327  001360  ECEC  F009         	call	_lcd_write_data
  1328                           
  1329                           ;Main.c: 179: hour1 = char_2_int (ctemp);
  1330  001364  0100               	movlb	0	; () banked
  1331  001366  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1332  001368  EC36  F00B         	call	_char_2_int
  1333  00136C  0100               	movlb	0	; () banked
  1334  00136E  6FA1               	movwf	SetupAlarmTime@hour1& (0+255),b
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;Main.c: 181: ctemp=getkey();
  1338  001370  EC07  F00C         	call	_getkey	;wreg free
  1339  001374  0100               	movlb	0	; () banked
  1340  001376  6FA5               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;Main.c: 182: lcd_write_data(ctemp);
  1344  001378  0100               	movlb	0	; () banked
  1345  00137A  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1346  00137C  ECEC  F009         	call	_lcd_write_data
  1347                           
  1348                           ;Main.c: 183: minute10 = char_2_int (ctemp);
  1349  001380  0100               	movlb	0	; () banked
  1350  001382  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1351  001384  EC36  F00B         	call	_char_2_int
  1352  001388  0100               	movlb	0	; () banked
  1353  00138A  6FA2               	movwf	SetupAlarmTime@minute10& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;Main.c: 185: ctemp=getkey();
  1357  00138C  EC07  F00C         	call	_getkey	;wreg free
  1358  001390  0100               	movlb	0	; () banked
  1359  001392  6FA5               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1360                           
  1361                           ;Main.c: 186: lcd_write_data(ctemp);
  1362  001394  0100               	movlb	0	; () banked
  1363  001396  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1364  001398  ECEC  F009         	call	_lcd_write_data
  1365                           
  1366                           ;Main.c: 187: minute1 = char_2_int (ctemp);
  1367  00139C  0100               	movlb	0	; () banked
  1368  00139E  51A5               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1369  0013A0  EC36  F00B         	call	_char_2_int
  1370  0013A4  0100               	movlb	0	; () banked
  1371  0013A6  6FA3               	movwf	SetupAlarmTime@minute1& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;Main.c: 189: hourA = hour10 * 10 + hour1;
  1375  0013A8  0100               	movlb	0	; () banked
  1376  0013AA  51A0               	movf	SetupAlarmTime@hour10& (0+255),w,b
  1377  0013AC  0D0A               	mullw	10
  1378  0013AE  50F3               	movf	prodl,w,c
  1379  0013B0  0100               	movlb	0	; () banked
  1380  0013B2  25A1               	addwf	SetupAlarmTime@hour1& (0+255),w,b
  1381  0013B4  6E32               	movwf	_hourA,c
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;Main.c: 190: minuteA = minute10 * 10 + minute1;
  1385  0013B6  0100               	movlb	0	; () banked
  1386  0013B8  51A2               	movf	SetupAlarmTime@minute10& (0+255),w,b
  1387  0013BA  0D0A               	mullw	10
  1388  0013BC  50F3               	movf	prodl,w,c
  1389  0013BE  0100               	movlb	0	; () banked
  1390  0013C0  25A3               	addwf	SetupAlarmTime@minute1& (0+255),w,b
  1391  0013C2  6E34               	movwf	_minuteA,c
  1392                           
  1393                           ;Main.c: 192: delay_ms(500);
  1394  0013C4  0E01               	movlw	1
  1395  0013C6  6E1E               	movwf	delay_ms@i+1,c
  1396  0013C8  0EF4               	movlw	244
  1397  0013CA  6E1D               	movwf	delay_ms@i,c
  1398  0013CC  EC40  F00C         	call	_delay_ms	;wreg free
  1399                           
  1400                           ;Main.c: 193: lcd_write_cmd(0x01);
  1401  0013D0  0E01               	movlw	1
  1402  0013D2  EC6F  F00B         	call	_lcd_write_cmd
  1403  0013D6  0012               	return		;funcret
  1404  0013D8                     __end_of_SetupAlarmTime:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           intcon	equ	0xFF2
  1413                           intcon2	equ	0xFF1
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           plusw1	equ	0xFE3
  1418                           fsr1l	equ	0xFE1
  1419                           indf2	equ	0xFDF
  1420                           plusw2	equ	0xFDB
  1421                           fsr2h	equ	0xFDA
  1422                           fsr2l	equ	0xFD9
  1423                           status	equ	0xFD8
  1424                           
  1425 ;; *************** function _lcd_write_data *****************
  1426 ;; Defined at:
  1427 ;;		line 43 in file "lcd_utilities.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  data            1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  data            1   30[COMRAM] unsigned char 
  1432 ;;  temp1           1   31[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;		None               void
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    4
  1449 ;; This function calls:
  1450 ;;		_lcd_strobe
  1451 ;; This function is called by:
  1452 ;;		_SetupTime
  1453 ;;		_SetupAlarmTime
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text7
  1458  0013D8                     __ptext7:
  1459                           	opt stack 0
  1460  0013D8                     _lcd_write_data:
  1461                           	opt stack 25
  1462                           
  1463                           ;incstack = 0
  1464                           ;lcd_write_data@data stored from wreg
  1465  0013D8  6E1F               	movwf	lcd_write_data@data,c
  1466                           
  1467                           ;lcd_utilities.c: 45: char temp1;
  1468                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  1469  0013DA  8C83               	bsf	3971,6,c	;volatile
  1470                           
  1471                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  1472  0013DC  0E3F               	movlw	63
  1473  0013DE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1474  0013E0  0E55               	movlw	85
  1475  0013E2                     u617:
  1476  0013E2  2EE8               	decfsz	wreg,f,c
  1477  0013E4  D7FE               	goto	u617
  1478  0013E6  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1479  0013E8  D7FC               	goto	u617
  1480  0013EA  F000               	nop	
  1481                           
  1482                           ;lcd_utilities.c: 50: temp1 = data;
  1483  0013EC  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1484                           
  1485                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  1486  0013F0  3820               	swapf	lcd_write_data@temp1,w,c
  1487  0013F2  0B0F               	andlw	15
  1488  0013F4  6E20               	movwf	lcd_write_data@temp1,c
  1489                           
  1490                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  1491  0013F6  5020               	movf	lcd_write_data@temp1,w,c
  1492  0013F8  0B0F               	andlw	15
  1493  0013FA  6E83               	movwf	3971,c	;volatile
  1494                           
  1495                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  1496  0013FC  0E7D               	movlw	125
  1497  0013FE  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1498  001400  0EAC               	movlw	172
  1499  001402                     u627:
  1500  001402  2EE8               	decfsz	wreg,f,c
  1501  001404  D7FE               	goto	u627
  1502  001406  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1503  001408  D7FC               	goto	u627
  1504                           
  1505                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  1506  00140A  8C83               	bsf	3971,6,c	;volatile
  1507                           
  1508                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  1509  00140C  0E7D               	movlw	125
  1510  00140E  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1511  001410  0EAC               	movlw	172
  1512  001412                     u637:
  1513  001412  2EE8               	decfsz	wreg,f,c
  1514  001414  D7FE               	goto	u637
  1515  001416  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1516  001418  D7FC               	goto	u637
  1517                           
  1518                           ;lcd_utilities.c: 57: lcd_strobe();
  1519  00141A  EC6F  F00C         	call	_lcd_strobe	;wreg free
  1520                           
  1521                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  1522  00141E  0E7D               	movlw	125
  1523  001420  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1524  001422  0EAC               	movlw	172
  1525  001424                     u647:
  1526  001424  2EE8               	decfsz	wreg,f,c
  1527  001426  D7FE               	goto	u647
  1528  001428  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1529  00142A  D7FC               	goto	u647
  1530                           
  1531                           ;lcd_utilities.c: 60: temp1 = data;
  1532  00142C  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1533                           
  1534                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  1535  001430  5020               	movf	lcd_write_data@temp1,w,c
  1536  001432  0B0F               	andlw	15
  1537  001434  6E83               	movwf	3971,c	;volatile
  1538                           
  1539                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  1540  001436  0E7D               	movlw	125
  1541  001438  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1542  00143A  0EAC               	movlw	172
  1543  00143C                     u657:
  1544  00143C  2EE8               	decfsz	wreg,f,c
  1545  00143E  D7FE               	goto	u657
  1546  001440  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1547  001442  D7FC               	goto	u657
  1548                           
  1549                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  1550  001444  8C83               	bsf	3971,6,c	;volatile
  1551                           
  1552                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  1553  001446  0E9C               	movlw	156
  1554  001448  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1555  00144A  0ED7               	movlw	215
  1556  00144C                     u667:
  1557  00144C  2EE8               	decfsz	wreg,f,c
  1558  00144E  D7FE               	goto	u667
  1559  001450  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1560  001452  D7FC               	goto	u667
  1561  001454  F000               	nop	
  1562                           
  1563                           ;lcd_utilities.c: 66: lcd_strobe();
  1564  001456  EC6F  F00C         	call	_lcd_strobe	;wreg free
  1565                           
  1566                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  1567  00145A  0E9C               	movlw	156
  1568  00145C  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1569  00145E  0ED7               	movlw	215
  1570  001460                     u677:
  1571  001460  2EE8               	decfsz	wreg,f,c
  1572  001462  D7FE               	goto	u677
  1573  001464  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1574  001466  D7FC               	goto	u677
  1575  001468  F000               	nop	
  1576  00146A  0012               	return		;funcret
  1577  00146C                     __end_of_lcd_write_data:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           intcon2	equ	0xFF1
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           plusw1	equ	0xFE3
  1591                           fsr1l	equ	0xFE1
  1592                           indf2	equ	0xFDF
  1593                           plusw2	equ	0xFDB
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _lcd_write_cmd *****************
  1599 ;; Defined at:
  1600 ;;		line 18 in file "lcd_utilities.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  cmd             1    wreg     unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  cmd             1   30[COMRAM] unsigned char 
  1605 ;;  temp2           1   31[COMRAM] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0
  1616 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1617 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1618 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        3 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    4
  1622 ;; This function calls:
  1623 ;;		_lcd_strobe
  1624 ;; This function is called by:
  1625 ;;		_lcd_init
  1626 ;;		_SetupTime
  1627 ;;		_SetupAlarmTime
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text8
  1632  0016DE                     __ptext8:
  1633                           	opt stack 0
  1634  0016DE                     _lcd_write_cmd:
  1635                           	opt stack 25
  1636                           
  1637                           ;incstack = 0
  1638                           ;lcd_write_cmd@cmd stored from wreg
  1639  0016DE  6E1F               	movwf	lcd_write_cmd@cmd,c
  1640                           
  1641                           ;lcd_utilities.c: 20: unsigned char temp2;
  1642                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  1643  0016E0  9C83               	bcf	3971,6,c	;volatile
  1644                           
  1645                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  1646  0016E2  0E3F               	movlw	63
  1647  0016E4  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1648  0016E6  0E55               	movlw	85
  1649  0016E8                     u687:
  1650  0016E8  2EE8               	decfsz	wreg,f,c
  1651  0016EA  D7FE               	goto	u687
  1652  0016EC  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1653  0016EE  D7FC               	goto	u687
  1654  0016F0  F000               	nop	
  1655                           
  1656                           ;lcd_utilities.c: 23: temp2 = cmd;
  1657  0016F2  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1658                           
  1659                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  1660  0016F6  3820               	swapf	lcd_write_cmd@temp2,w,c
  1661  0016F8  0B0F               	andlw	15
  1662  0016FA  6E20               	movwf	lcd_write_cmd@temp2,c
  1663                           
  1664                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  1665  0016FC  5020               	movf	lcd_write_cmd@temp2,w,c
  1666  0016FE  0B0F               	andlw	15
  1667  001700  6E83               	movwf	3971,c	;volatile
  1668                           
  1669                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  1670  001702  0E7D               	movlw	125
  1671  001704  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1672  001706  0EAC               	movlw	172
  1673  001708                     u697:
  1674  001708  2EE8               	decfsz	wreg,f,c
  1675  00170A  D7FE               	goto	u697
  1676  00170C  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1677  00170E  D7FC               	goto	u697
  1678                           
  1679                           ;lcd_utilities.c: 28: lcd_strobe();
  1680  001710  EC6F  F00C         	call	_lcd_strobe	;wreg free
  1681                           
  1682                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  1683  001714  0E7D               	movlw	125
  1684  001716  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1685  001718  0EAC               	movlw	172
  1686  00171A                     u707:
  1687  00171A  2EE8               	decfsz	wreg,f,c
  1688  00171C  D7FE               	goto	u707
  1689  00171E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1690  001720  D7FC               	goto	u707
  1691                           
  1692                           ;lcd_utilities.c: 32: temp2 = cmd;
  1693  001722  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1694                           
  1695                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  1696  001726  5020               	movf	lcd_write_cmd@temp2,w,c
  1697  001728  0B0F               	andlw	15
  1698  00172A  6E83               	movwf	3971,c	;volatile
  1699                           
  1700                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  1701  00172C  0E7D               	movlw	125
  1702  00172E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1703  001730  0EAC               	movlw	172
  1704  001732                     u717:
  1705  001732  2EE8               	decfsz	wreg,f,c
  1706  001734  D7FE               	goto	u717
  1707  001736  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1708  001738  D7FC               	goto	u717
  1709                           
  1710                           ;lcd_utilities.c: 36: lcd_strobe();
  1711  00173A  EC6F  F00C         	call	_lcd_strobe	;wreg free
  1712                           
  1713                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  1714  00173E  0E7D               	movlw	125
  1715  001740  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1716  001742  0EAC               	movlw	172
  1717  001744                     u727:
  1718  001744  2EE8               	decfsz	wreg,f,c
  1719  001746  D7FE               	goto	u727
  1720  001748  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1721  00174A  D7FC               	goto	u727
  1722  00174C  0012               	return		;funcret
  1723  00174E                     __end_of_lcd_write_cmd:
  1724                           	opt stack 0
  1725                           tblptru	equ	0xFF8
  1726                           tblptrh	equ	0xFF7
  1727                           tblptrl	equ	0xFF6
  1728                           tablat	equ	0xFF5
  1729                           prodh	equ	0xFF4
  1730                           prodl	equ	0xFF3
  1731                           intcon	equ	0xFF2
  1732                           intcon2	equ	0xFF1
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           plusw1	equ	0xFE3
  1737                           fsr1l	equ	0xFE1
  1738                           indf2	equ	0xFDF
  1739                           plusw2	equ	0xFDB
  1740                           fsr2h	equ	0xFDA
  1741                           fsr2l	equ	0xFD9
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _lcd_strobe *****************
  1745 ;; Defined at:
  1746 ;;		line 73 in file "lcd_utilities.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;		None               void
  1753 ;; Registers used:
  1754 ;;		wreg
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1763 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1764 ;;Total ram usage:        1 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_lcd_write_cmd
  1771 ;;		_lcd_write_data
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text9
  1776  0018DE                     __ptext9:
  1777                           	opt stack 0
  1778  0018DE                     _lcd_strobe:
  1779                           	opt stack 25
  1780                           
  1781                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  1782                           
  1783                           ;incstack = 0
  1784  0018DE  8883               	bsf	3971,4,c	;volatile
  1785                           
  1786                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  1787  0018E0  0E7D               	movlw	125
  1788  0018E2  6E1D               	movwf	??_lcd_strobe& (0+255),c
  1789  0018E4  0EAC               	movlw	172
  1790  0018E6                     u737:
  1791  0018E6  2EE8               	decfsz	wreg,f,c
  1792  0018E8  D7FE               	goto	u737
  1793  0018EA  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  1794  0018EC  D7FC               	goto	u737
  1795                           
  1796                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  1797  0018EE  9883               	bcf	3971,4,c	;volatile
  1798                           
  1799                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  1800  0018F0  0E7D               	movlw	125
  1801  0018F2  6E1D               	movwf	??_lcd_strobe& (0+255),c
  1802  0018F4  0EAC               	movlw	172
  1803  0018F6                     u747:
  1804  0018F6  2EE8               	decfsz	wreg,f,c
  1805  0018F8  D7FE               	goto	u747
  1806  0018FA  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  1807  0018FC  D7FC               	goto	u747
  1808  0018FE  0012               	return		;funcret
  1809  001900                     __end_of_lcd_strobe:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           prodh	equ	0xFF4
  1816                           prodl	equ	0xFF3
  1817                           intcon	equ	0xFF2
  1818                           intcon2	equ	0xFF1
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           plusw1	equ	0xFE3
  1823                           fsr1l	equ	0xFE1
  1824                           indf2	equ	0xFDF
  1825                           plusw2	equ	0xFDB
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function _getkey *****************
  1831 ;; Defined at:
  1832 ;;		line 17 in file "keypad_utilities.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  lookup         18   28[COMRAM] const unsigned char [18]
  1837 ;;  keycode         1   46[COMRAM] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      unsigned char 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1850 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1851 ;;Total ram usage:       19 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    3
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_SetupTime
  1858 ;;		_SetupAlarmTime
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text10
  1863  00180E                     __ptext10:
  1864                           	opt stack 0
  1865  00180E                     _getkey:
  1866                           	opt stack 26
  1867                           
  1868                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  1869                           
  1870                           ;incstack = 0
  1871  00180E  0E1B               	movlw	low getkey@F4444
  1872  001810  6EF6               	movwf	tblptrl,c
  1873  001812                     	if	1	;There is more than 1 active tblptr byte
  1874  001812  0E10               	movlw	high getkey@F4444
  1875  001814  6EF7               	movwf	tblptrh,c
  1876  001816                     	endif
  1877  001816                     	if	0	;There are less than 3 active tblptr bytes
  1878  001816                     	endif
  1879  001816  EE20  F01D         	lfsr	2,getkey@lookup
  1880  00181A  0E11               	movlw	17
  1881  00181C                     u320:
  1882  00181C  0009               	tblrd		*+
  1883  00181E  CFF5 FFDE          	movff	tablat,postinc2
  1884  001822  06E8               	decf	wreg,f,c
  1885  001824  E2FB               	bc	u320
  1886  001826                     l33:
  1887  001826  AA81               	btfss	3969,5,c	;volatile
  1888  001828  D7FE               	goto	l33
  1889                           
  1890                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  1891  00182A  5081               	movf	3969,w,c	;volatile
  1892  00182C  0B0F               	andlw	15
  1893  00182E  6E2F               	movwf	getkey@keycode,c
  1894  001830                     l36:
  1895  001830  BA81               	btfsc	3969,5,c	;volatile
  1896  001832  D7FE               	goto	l36
  1897                           
  1898                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  1899  001834  502F               	movf	getkey@keycode,w,c
  1900  001836  0D01               	mullw	1
  1901  001838  0E1D               	movlw	low getkey@lookup
  1902  00183A  24F3               	addwf	prodl,w,c
  1903  00183C  6ED9               	movwf	fsr2l,c
  1904  00183E  0E00               	movlw	high getkey@lookup
  1905  001840  20F4               	addwfc	prodh,w,c
  1906  001842  6EDA               	movwf	fsr2h,c
  1907  001844  50DF               	movf	indf2,w,c
  1908  001846  0012               	return	
  1909  001848                     __end_of_getkey:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           intcon	equ	0xFF2
  1918                           intcon2	equ	0xFF1
  1919                           postinc0	equ	0xFEE
  1920                           wreg	equ	0xFE8
  1921                           postdec1	equ	0xFE5
  1922                           plusw1	equ	0xFE3
  1923                           fsr1l	equ	0xFE1
  1924                           indf2	equ	0xFDF
  1925                           postinc2	equ	0xFDE
  1926                           plusw2	equ	0xFDB
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _delay_ms *****************
  1932 ;; Defined at:
  1933 ;;		line 10 in file "delays_utilities.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  i               2   28[COMRAM] unsigned int 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  j               2   31[COMRAM] unsigned int 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         2       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        5 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    3
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_SetupTime
  1958 ;;		_SetupAlarmTime
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text11
  1963  001880                     __ptext11:
  1964                           	opt stack 0
  1965  001880                     _delay_ms:
  1966                           	opt stack 26
  1967                           
  1968                           ;delays_utilities.c: 12: if(i!=0)
  1969                           
  1970                           ;incstack = 0
  1971  001880  501D               	movf	delay_ms@i,w,c
  1972  001882  101E               	iorwf	delay_ms@i+1,w,c
  1973  001884  B4D8               	btfsc	status,2,c
  1974  001886  0012               	return	
  1975                           
  1976                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  1977  001888  0E00               	movlw	0
  1978  00188A  6E21               	movwf	delay_ms@j+1,c
  1979  00188C  0E00               	movlw	0
  1980  00188E  6E20               	movwf	delay_ms@j,c
  1981  001890  D00A               	goto	l159
  1982  001892                     l1364:
  1983  001892  0E10               	movlw	16
  1984  001894  6E1F               	movwf	??_delay_ms& (0+255),c
  1985  001896  0E94               	movlw	148
  1986  001898                     u757:
  1987  001898  2EE8               	decfsz	wreg,f,c
  1988  00189A  D7FE               	goto	u757
  1989  00189C  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  1990  00189E  D7FC               	goto	u757
  1991  0018A0  D000               	nop2	
  1992  0018A2  4A20               	infsnz	delay_ms@j,f,c
  1993  0018A4  2A21               	incf	delay_ms@j+1,f,c
  1994  0018A6                     l159:
  1995  0018A6  501D               	movf	delay_ms@i,w,c
  1996  0018A8  5C20               	subwf	delay_ms@j,w,c
  1997  0018AA  501E               	movf	delay_ms@i+1,w,c
  1998  0018AC  5821               	subwfb	delay_ms@j+1,w,c
  1999  0018AE  B0D8               	btfsc	status,0,c
  2000  0018B0  0012               	return	
  2001  0018B2  D7EF               	goto	l1364
  2002  0018B4                     __end_of_delay_ms:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           prodh	equ	0xFF4
  2009                           prodl	equ	0xFF3
  2010                           intcon	equ	0xFF2
  2011                           intcon2	equ	0xFF1
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           postdec1	equ	0xFE5
  2015                           plusw1	equ	0xFE3
  2016                           fsr1l	equ	0xFE1
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           plusw2	equ	0xFDB
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _char_2_int *****************
  2025 ;; Defined at:
  2026 ;;		line 37 in file "Main.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  char1           1    wreg     unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  char1           1   28[COMRAM] unsigned char 
  2031 ;;  int1            1   29[COMRAM] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      unsigned char 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2044 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2045 ;;Total ram usage:        2 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    3
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_SetupTime
  2052 ;;		_SetupAlarmTime
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text12
  2057  00166C                     __ptext12:
  2058                           	opt stack 0
  2059  00166C                     _char_2_int:
  2060                           	opt stack 26
  2061                           
  2062                           ;incstack = 0
  2063                           ;char_2_int@char1 stored from wreg
  2064  00166C  6E1D               	movwf	char_2_int@char1,c
  2065                           
  2066                           ;Main.c: 39: unsigned char int1;
  2067                           ;Main.c: 40: switch (char1)
  2068  00166E  D015               	goto	l1358
  2069  001670                     l1338:
  2070  001670  0E01               	movlw	1
  2071  001672  D011               	goto	L11
  2072  001674                     l1340:
  2073  001674  0E02               	movlw	2
  2074  001676  D00F               	goto	L11
  2075  001678                     l1342:
  2076  001678  0E03               	movlw	3
  2077  00167A  D00D               	goto	L11
  2078  00167C                     l1344:
  2079  00167C  0E04               	movlw	4
  2080  00167E  D00B               	goto	L11
  2081  001680                     l1346:
  2082  001680  0E05               	movlw	5
  2083  001682  D009               	goto	L11
  2084  001684                     l1348:
  2085  001684  0E06               	movlw	6
  2086  001686  D007               	goto	L11
  2087  001688                     l1350:
  2088  001688  0E07               	movlw	7
  2089  00168A  D005               	goto	L11
  2090  00168C                     l1352:
  2091  00168C  0E08               	movlw	8
  2092  00168E  D003               	goto	L11
  2093  001690                     l1354:
  2094  001690  0E09               	movlw	9
  2095  001692  D001               	goto	L11
  2096  001694                     l1356:
  2097  001694  0E00               	movlw	0
  2098  001696                     L11:
  2099  001696  6E1E               	movwf	char_2_int@int1,c
  2100                           
  2101                           ;Main.c: 53: }
  2102  001698  D020               	goto	l102
  2103  00169A                     l1358:
  2104  00169A  501D               	movf	char_2_int@char1,w,c
  2105                           
  2106                           ; Switch size 1, requested type "space"
  2107                           ; Number of cases is 10, Range of values is 48 to 57
  2108                           ; switch strategies available:
  2109                           ; Name         Instructions Cycles
  2110                           ; simple_byte           31    16 (average)
  2111                           ;	Chosen strategy is simple_byte
  2112  00169C  0A30               	xorlw	48	; case 48
  2113  00169E  B4D8               	btfsc	status,2,c
  2114  0016A0  D7F9               	goto	l1356
  2115  0016A2  0A01               	xorlw	1	; case 49
  2116  0016A4  B4D8               	btfsc	status,2,c
  2117  0016A6  D7E4               	goto	l1338
  2118  0016A8  0A03               	xorlw	3	; case 50
  2119  0016AA  B4D8               	btfsc	status,2,c
  2120  0016AC  D7E3               	goto	l1340
  2121  0016AE  0A01               	xorlw	1	; case 51
  2122  0016B0  B4D8               	btfsc	status,2,c
  2123  0016B2  D7E2               	goto	l1342
  2124  0016B4  0A07               	xorlw	7	; case 52
  2125  0016B6  B4D8               	btfsc	status,2,c
  2126  0016B8  D7E1               	goto	l1344
  2127  0016BA  0A01               	xorlw	1	; case 53
  2128  0016BC  B4D8               	btfsc	status,2,c
  2129  0016BE  D7E0               	goto	l1346
  2130  0016C0  0A03               	xorlw	3	; case 54
  2131  0016C2  B4D8               	btfsc	status,2,c
  2132  0016C4  D7DF               	goto	l1348
  2133  0016C6  0A01               	xorlw	1	; case 55
  2134  0016C8  B4D8               	btfsc	status,2,c
  2135  0016CA  D7DE               	goto	l1350
  2136  0016CC  0A0F               	xorlw	15	; case 56
  2137  0016CE  B4D8               	btfsc	status,2,c
  2138  0016D0  D7DD               	goto	l1352
  2139  0016D2  0A01               	xorlw	1	; case 57
  2140  0016D4  B4D8               	btfsc	status,2,c
  2141  0016D6  D7DC               	goto	l1354
  2142  0016D8  D7DD               	goto	l1356
  2143  0016DA                     l102:
  2144                           
  2145                           ;Main.c: 54: return(int1);
  2146  0016DA  501E               	movf	char_2_int@int1,w,c
  2147  0016DC  0012               	return		;funcret
  2148  0016DE                     __end_of_char_2_int:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           intcon	equ	0xFF2
  2157                           intcon2	equ	0xFF1
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           postdec1	equ	0xFE5
  2161                           plusw1	equ	0xFE3
  2162                           fsr1l	equ	0xFE1
  2163                           indf2	equ	0xFDF
  2164                           postinc2	equ	0xFDE
  2165                           plusw2	equ	0xFDB
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _ISR_Timer0_Int *****************
  2171 ;; Defined at:
  2172 ;;		line 57 in file "Main.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  second10        1   27[COMRAM] unsigned char 
  2177 ;;  minute10        1   26[COMRAM] unsigned char 
  2178 ;;  hour10          1   25[COMRAM] unsigned char 
  2179 ;;  second1         1   24[COMRAM] unsigned char 
  2180 ;;  minute1         1   23[COMRAM] unsigned char 
  2181 ;;  hour1           1   22[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0
  2192 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2193 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2194 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2195 ;;Total ram usage:       20 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    2
  2198 ;; This function calls:
  2199 ;;		___awdiv
  2200 ;;		_int_2_char
  2201 ;;		i2_lcd_write_cmd
  2202 ;;		i2_lcd_write_data
  2203 ;; This function is called by:
  2204 ;;		Interrupt level 2
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	intcode
  2209  001008                     __pintcode:
  2210                           	opt stack 0
  2211  001008                     _ISR_Timer0_Int:
  2212                           	opt stack 25
  2213                           
  2214                           ;incstack = 0
  2215  001008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2216  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2217  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2218  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2219                           pclatu	equ	0xFFB
  2220                           pclath	equ	0xFFA
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           intcon	equ	0xFF2
  2228                           intcon2	equ	0xFF1
  2229                           postinc0	equ	0xFEE
  2230                           wreg	equ	0xFE8
  2231                           postdec1	equ	0xFE5
  2232                           plusw1	equ	0xFE3
  2233                           fsr1l	equ	0xFE1
  2234                           indf2	equ	0xFDF
  2235                           postinc2	equ	0xFDE
  2236                           plusw2	equ	0xFDB
  2237                           fsr2h	equ	0xFDA
  2238                           fsr2l	equ	0xFD9
  2239                           status	equ	0xFD8
  2240                           
  2241                           	psect	intcode_body
  2242  00102E                     __pintcode_body:
  2243                           	opt stack 25
  2244  00102E                     int_func:
  2245                           	opt stack 25
  2246  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2247  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2248  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2249  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2250  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2251  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2252  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2253  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2254  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2255  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2256  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2257  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2258  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2259                           
  2260                           ;Main.c: 59: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2261                           ;Main.c: 60: if (INTCONbits.TMR0IF == 1)
  2262  001060  A4F2               	btfss	intcon,2,c	;volatile
  2263  001062  D085               	goto	i2l120
  2264                           
  2265                           ;Main.c: 61: {
  2266                           ;Main.c: 65: second = second + 1;
  2267  001064  2835               	incf	_second,w,c
  2268  001066  6E35               	movwf	_second,c
  2269                           
  2270                           ;Main.c: 66: if ( second > 59 )
  2271  001068  0E3B               	movlw	59
  2272  00106A  6435               	cpfsgt	_second,c
  2273  00106C  D010               	goto	i2l1610
  2274                           
  2275                           ;Main.c: 67: {
  2276                           ;Main.c: 68: second = 0;
  2277  00106E  0E00               	movlw	0
  2278  001070  6E35               	movwf	_second,c
  2279                           
  2280                           ;Main.c: 69: minute = minute + 1;
  2281  001072  2833               	incf	_minute,w,c
  2282  001074  6E33               	movwf	_minute,c
  2283                           
  2284                           ;Main.c: 70: if ( minute > 59 )
  2285  001076  0E3B               	movlw	59
  2286  001078  6433               	cpfsgt	_minute,c
  2287  00107A  D009               	goto	i2l1610
  2288                           
  2289                           ;Main.c: 71: {
  2290                           ;Main.c: 72: minute = 0;
  2291  00107C  0E00               	movlw	0
  2292  00107E  6E33               	movwf	_minute,c
  2293                           
  2294                           ;Main.c: 73: hour = hour + 1;
  2295  001080  2831               	incf	_hour,w,c
  2296  001082  6E31               	movwf	_hour,c
  2297                           
  2298                           ;Main.c: 74: if ( hour > 23 )
  2299  001084  0E17               	movlw	23
  2300  001086  6431               	cpfsgt	_hour,c
  2301  001088  D002               	goto	i2l1610
  2302                           
  2303                           ;Main.c: 75: hour = 0;
  2304  00108A  0E00               	movlw	0
  2305  00108C  6E31               	movwf	_hour,c
  2306  00108E                     i2l1610:
  2307                           
  2308                           ;Main.c: 76: }
  2309                           ;Main.c: 77: }
  2310                           ;Main.c: 79: hour10 = hour / 10;
  2311  00108E  C031  F001         	movff	_hour,___awdiv@dividend
  2312  001092  6A02               	clrf	___awdiv@dividend+1,c
  2313  001094  0E00               	movlw	0
  2314  001096  6E04               	movwf	___awdiv@divisor+1,c
  2315  001098  0E0A               	movlw	10
  2316  00109A  6E03               	movwf	___awdiv@divisor,c
  2317  00109C  EC80  F00A         	call	___awdiv	;wreg free
  2318  0010A0  5001               	movf	?___awdiv,w,c
  2319  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  2320                           
  2321                           ;Main.c: 80: hour1 = hour - hour10 * 10;
  2322  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2323  0010A6  0D0A               	mullw	10
  2324  0010A8  50F3               	movf	prodl,w,c
  2325  0010AA  0800               	sublw	0
  2326  0010AC  2431               	addwf	_hour,w,c
  2327  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  2328                           
  2329                           ;Main.c: 82: minute10 = minute / 10;
  2330  0010B0  C033  F001         	movff	_minute,___awdiv@dividend
  2331  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  2332  0010B6  0E00               	movlw	0
  2333  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  2334  0010BA  0E0A               	movlw	10
  2335  0010BC  6E03               	movwf	___awdiv@divisor,c
  2336  0010BE  EC80  F00A         	call	___awdiv	;wreg free
  2337  0010C2  5001               	movf	?___awdiv,w,c
  2338  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  2339                           
  2340                           ;Main.c: 83: minute1 = minute - minute10 * 10;
  2341  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2342  0010C8  0D0A               	mullw	10
  2343  0010CA  50F3               	movf	prodl,w,c
  2344  0010CC  0800               	sublw	0
  2345  0010CE  2433               	addwf	_minute,w,c
  2346  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  2347                           
  2348                           ;Main.c: 85: second10 = second / 10;
  2349  0010D2  C035  F001         	movff	_second,___awdiv@dividend
  2350  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  2351  0010D8  0E00               	movlw	0
  2352  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  2353  0010DC  0E0A               	movlw	10
  2354  0010DE  6E03               	movwf	___awdiv@divisor,c
  2355  0010E0  EC80  F00A         	call	___awdiv	;wreg free
  2356  0010E4  5001               	movf	?___awdiv,w,c
  2357  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  2358                           
  2359                           ;Main.c: 86: second1 = second - second10 * 10;
  2360  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  2361  0010EA  0D0A               	mullw	10
  2362  0010EC  50F3               	movf	prodl,w,c
  2363  0010EE  0800               	sublw	0
  2364  0010F0  2435               	addwf	_second,w,c
  2365  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  2366                           
  2367                           ;Main.c: 88: lcd_write_cmd(0x80);
  2368  0010F4  0E80               	movlw	128
  2369  0010F6  ECA7  F00B         	call	i2_lcd_write_cmd
  2370                           
  2371                           ;Main.c: 89: lcd_write_data('t');
  2372  0010FA  0E74               	movlw	116
  2373  0010FC  EC36  F00A         	call	i2_lcd_write_data
  2374                           
  2375                           ;Main.c: 90: lcd_write_data('i');
  2376  001100  0E69               	movlw	105
  2377  001102  EC36  F00A         	call	i2_lcd_write_data
  2378                           
  2379                           ;Main.c: 91: lcd_write_data('m');
  2380  001106  0E6D               	movlw	109
  2381  001108  EC36  F00A         	call	i2_lcd_write_data
  2382                           
  2383                           ;Main.c: 92: lcd_write_data('e');
  2384  00110C  0E65               	movlw	101
  2385  00110E  EC36  F00A         	call	i2_lcd_write_data
  2386                           
  2387                           ;Main.c: 93: lcd_write_data(' ');
  2388  001112  0E20               	movlw	32
  2389  001114  EC36  F00A         	call	i2_lcd_write_data
  2390                           
  2391                           ;Main.c: 94: lcd_write_data('=');
  2392  001118  0E3D               	movlw	61
  2393  00111A  EC36  F00A         	call	i2_lcd_write_data
  2394                           
  2395                           ;Main.c: 95: lcd_write_data(' ');
  2396  00111E  0E20               	movlw	32
  2397  001120  EC36  F00A         	call	i2_lcd_write_data
  2398                           
  2399                           ;Main.c: 96: lcd_write_data(int_2_char (hour10));
  2400  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2401  001126  ECC2  F00A         	call	_int_2_char
  2402  00112A  EC36  F00A         	call	i2_lcd_write_data
  2403                           
  2404                           ;Main.c: 97: lcd_write_data(int_2_char (hour1));
  2405  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  2406  001130  ECC2  F00A         	call	_int_2_char
  2407  001134  EC36  F00A         	call	i2_lcd_write_data
  2408                           
  2409                           ;Main.c: 98: lcd_write_data(':');
  2410  001138  0E3A               	movlw	58
  2411  00113A  EC36  F00A         	call	i2_lcd_write_data
  2412                           
  2413                           ;Main.c: 99: lcd_write_data(int_2_char (minute10));
  2414  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2415  001140  ECC2  F00A         	call	_int_2_char
  2416  001144  EC36  F00A         	call	i2_lcd_write_data
  2417                           
  2418                           ;Main.c: 100: lcd_write_data(int_2_char (minute1));
  2419  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  2420  00114A  ECC2  F00A         	call	_int_2_char
  2421  00114E  EC36  F00A         	call	i2_lcd_write_data
  2422                           
  2423                           ;Main.c: 101: lcd_write_data(':');
  2424  001152  0E3A               	movlw	58
  2425  001154  EC36  F00A         	call	i2_lcd_write_data
  2426                           
  2427                           ;Main.c: 102: lcd_write_data(int_2_char (second10));
  2428  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  2429  00115A  ECC2  F00A         	call	_int_2_char
  2430  00115E  EC36  F00A         	call	i2_lcd_write_data
  2431                           
  2432                           ;Main.c: 103: lcd_write_data(int_2_char (second1));
  2433  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  2434  001164  ECC2  F00A         	call	_int_2_char
  2435  001168  EC36  F00A         	call	i2_lcd_write_data
  2436                           
  2437                           ;Main.c: 105: INTCONbits.TMR0IF = 0;
  2438  00116C  94F2               	bcf	intcon,2,c	;volatile
  2439  00116E                     i2l120:
  2440  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  2441  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  2442  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  2443  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  2444  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  2445  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  2446  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  2447  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  2448  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  2449  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  2450  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  2451  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  2452  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  2453  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  2454  0011A6  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2455  0011A8  0011               	retfie		f
  2456  0011AA                     __end_of_ISR_Timer0_Int:
  2457                           	opt stack 0
  2458                           pclatu	equ	0xFFB
  2459                           pclath	equ	0xFFA
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           prodh	equ	0xFF4
  2465                           prodl	equ	0xFF3
  2466                           intcon	equ	0xFF2
  2467                           intcon2	equ	0xFF1
  2468                           postinc0	equ	0xFEE
  2469                           fsr0h	equ	0xFEA
  2470                           fsr0l	equ	0xFE9
  2471                           wreg	equ	0xFE8
  2472                           postdec1	equ	0xFE5
  2473                           plusw1	equ	0xFE3
  2474                           fsr1h	equ	0xFE2
  2475                           fsr1l	equ	0xFE1
  2476                           indf2	equ	0xFDF
  2477                           postinc2	equ	0xFDE
  2478                           plusw2	equ	0xFDB
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function i2_lcd_write_data *****************
  2484 ;; Defined at:
  2485 ;;		line 43 in file "lcd_utilities.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  data            1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  data            1    2[COMRAM] unsigned char 
  2490 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;		None               void
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0
  2501 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2502 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2503 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2504 ;;Total ram usage:        3 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    1
  2507 ;; This function calls:
  2508 ;;		i2_lcd_strobe
  2509 ;; This function is called by:
  2510 ;;		_ISR_Timer0_Int
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text14
  2515  00146C                     __ptext14:
  2516                           	opt stack 0
  2517  00146C                     i2_lcd_write_data:
  2518                           	opt stack 25
  2519                           
  2520                           ;incstack = 0
  2521                           ;i2lcd_write_data@data stored from wreg
  2522  00146C  6E03               	movwf	i2lcd_write_data@data,c
  2523                           
  2524                           ;lcd_utilities.c: 45: char temp1;
  2525                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2526  00146E  8C83               	bsf	3971,6,c	;volatile
  2527                           
  2528                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2529  001470  0E3F               	movlw	63
  2530  001472  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2531  001474  0E55               	movlw	85
  2532  001476                     i2u76_47:
  2533  001476  2EE8               	decfsz	wreg,f,c
  2534  001478  D7FE               	goto	i2u76_47
  2535  00147A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2536  00147C  D7FC               	goto	i2u76_47
  2537  00147E  F000               	nop	
  2538                           
  2539                           ;lcd_utilities.c: 50: temp1 = data;
  2540  001480  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  2541                           
  2542                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2543  001484  3804               	swapf	i2lcd_write_data@temp1,w,c
  2544  001486  0B0F               	andlw	15
  2545  001488  6E04               	movwf	i2lcd_write_data@temp1,c
  2546                           
  2547                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2548  00148A  5004               	movf	i2lcd_write_data@temp1,w,c
  2549  00148C  0B0F               	andlw	15
  2550  00148E  6E83               	movwf	3971,c	;volatile
  2551                           
  2552                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2553  001490  0E7D               	movlw	125
  2554  001492  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2555  001494  0EAC               	movlw	172
  2556  001496                     i2u77_47:
  2557  001496  2EE8               	decfsz	wreg,f,c
  2558  001498  D7FE               	goto	i2u77_47
  2559  00149A  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2560  00149C  D7FC               	goto	i2u77_47
  2561                           
  2562                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2563  00149E  8C83               	bsf	3971,6,c	;volatile
  2564                           
  2565                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2566  0014A0  0E7D               	movlw	125
  2567  0014A2  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2568  0014A4  0EAC               	movlw	172
  2569  0014A6                     i2u78_47:
  2570  0014A6  2EE8               	decfsz	wreg,f,c
  2571  0014A8  D7FE               	goto	i2u78_47
  2572  0014AA  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2573  0014AC  D7FC               	goto	i2u78_47
  2574                           
  2575                           ;lcd_utilities.c: 57: lcd_strobe();
  2576  0014AE  EC80  F00C         	call	i2_lcd_strobe	;wreg free
  2577                           
  2578                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2579  0014B2  0E7D               	movlw	125
  2580  0014B4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2581  0014B6  0EAC               	movlw	172
  2582  0014B8                     i2u79_47:
  2583  0014B8  2EE8               	decfsz	wreg,f,c
  2584  0014BA  D7FE               	goto	i2u79_47
  2585  0014BC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2586  0014BE  D7FC               	goto	i2u79_47
  2587                           
  2588                           ;lcd_utilities.c: 60: temp1 = data;
  2589  0014C0  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  2590                           
  2591                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2592  0014C4  5004               	movf	i2lcd_write_data@temp1,w,c
  2593  0014C6  0B0F               	andlw	15
  2594  0014C8  6E83               	movwf	3971,c	;volatile
  2595                           
  2596                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2597  0014CA  0E7D               	movlw	125
  2598  0014CC  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2599  0014CE  0EAC               	movlw	172
  2600  0014D0                     i2u80_47:
  2601  0014D0  2EE8               	decfsz	wreg,f,c
  2602  0014D2  D7FE               	goto	i2u80_47
  2603  0014D4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2604  0014D6  D7FC               	goto	i2u80_47
  2605                           
  2606                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2607  0014D8  8C83               	bsf	3971,6,c	;volatile
  2608                           
  2609                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2610  0014DA  0E9C               	movlw	156
  2611  0014DC  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2612  0014DE  0ED7               	movlw	215
  2613  0014E0                     i2u81_47:
  2614  0014E0  2EE8               	decfsz	wreg,f,c
  2615  0014E2  D7FE               	goto	i2u81_47
  2616  0014E4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2617  0014E6  D7FC               	goto	i2u81_47
  2618  0014E8  F000               	nop	
  2619                           
  2620                           ;lcd_utilities.c: 66: lcd_strobe();
  2621  0014EA  EC80  F00C         	call	i2_lcd_strobe	;wreg free
  2622                           
  2623                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2624  0014EE  0E9C               	movlw	156
  2625  0014F0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2626  0014F2  0ED7               	movlw	215
  2627  0014F4                     i2u82_47:
  2628  0014F4  2EE8               	decfsz	wreg,f,c
  2629  0014F6  D7FE               	goto	i2u82_47
  2630  0014F8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2631  0014FA  D7FC               	goto	i2u82_47
  2632  0014FC  F000               	nop	
  2633  0014FE  0012               	return		;funcret
  2634  001500                     __end_ofi2_lcd_write_data:
  2635                           	opt stack 0
  2636                           pclatu	equ	0xFFB
  2637                           pclath	equ	0xFFA
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           intcon	equ	0xFF2
  2645                           intcon2	equ	0xFF1
  2646                           postinc0	equ	0xFEE
  2647                           fsr0h	equ	0xFEA
  2648                           fsr0l	equ	0xFE9
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           plusw1	equ	0xFE3
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           plusw2	equ	0xFDB
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function i2_lcd_write_cmd *****************
  2662 ;; Defined at:
  2663 ;;		line 18 in file "lcd_utilities.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  cmd             1    wreg     unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  cmd             1    2[COMRAM] unsigned char 
  2668 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0
  2679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2680 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2681 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		i2_lcd_strobe
  2687 ;; This function is called by:
  2688 ;;		_ISR_Timer0_Int
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text15
  2693  00174E                     __ptext15:
  2694                           	opt stack 0
  2695  00174E                     i2_lcd_write_cmd:
  2696                           	opt stack 25
  2697                           
  2698                           ;incstack = 0
  2699                           ;i2lcd_write_cmd@cmd stored from wreg
  2700  00174E  6E03               	movwf	i2lcd_write_cmd@cmd,c
  2701                           
  2702                           ;lcd_utilities.c: 20: unsigned char temp2;
  2703                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2704  001750  9C83               	bcf	3971,6,c	;volatile
  2705                           
  2706                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2707  001752  0E3F               	movlw	63
  2708  001754  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2709  001756  0E55               	movlw	85
  2710  001758                     i2u83_47:
  2711  001758  2EE8               	decfsz	wreg,f,c
  2712  00175A  D7FE               	goto	i2u83_47
  2713  00175C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2714  00175E  D7FC               	goto	i2u83_47
  2715  001760  F000               	nop	
  2716                           
  2717                           ;lcd_utilities.c: 23: temp2 = cmd;
  2718  001762  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  2719                           
  2720                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2721  001766  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  2722  001768  0B0F               	andlw	15
  2723  00176A  6E04               	movwf	i2lcd_write_cmd@temp2,c
  2724                           
  2725                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2726  00176C  5004               	movf	i2lcd_write_cmd@temp2,w,c
  2727  00176E  0B0F               	andlw	15
  2728  001770  6E83               	movwf	3971,c	;volatile
  2729                           
  2730                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2731  001772  0E7D               	movlw	125
  2732  001774  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2733  001776  0EAC               	movlw	172
  2734  001778                     i2u84_47:
  2735  001778  2EE8               	decfsz	wreg,f,c
  2736  00177A  D7FE               	goto	i2u84_47
  2737  00177C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2738  00177E  D7FC               	goto	i2u84_47
  2739                           
  2740                           ;lcd_utilities.c: 28: lcd_strobe();
  2741  001780  EC80  F00C         	call	i2_lcd_strobe	;wreg free
  2742                           
  2743                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2744  001784  0E7D               	movlw	125
  2745  001786  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2746  001788  0EAC               	movlw	172
  2747  00178A                     i2u85_47:
  2748  00178A  2EE8               	decfsz	wreg,f,c
  2749  00178C  D7FE               	goto	i2u85_47
  2750  00178E  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2751  001790  D7FC               	goto	i2u85_47
  2752                           
  2753                           ;lcd_utilities.c: 32: temp2 = cmd;
  2754  001792  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  2755                           
  2756                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2757  001796  5004               	movf	i2lcd_write_cmd@temp2,w,c
  2758  001798  0B0F               	andlw	15
  2759  00179A  6E83               	movwf	3971,c	;volatile
  2760                           
  2761                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2762  00179C  0E7D               	movlw	125
  2763  00179E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2764  0017A0  0EAC               	movlw	172
  2765  0017A2                     i2u86_47:
  2766  0017A2  2EE8               	decfsz	wreg,f,c
  2767  0017A4  D7FE               	goto	i2u86_47
  2768  0017A6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2769  0017A8  D7FC               	goto	i2u86_47
  2770                           
  2771                           ;lcd_utilities.c: 36: lcd_strobe();
  2772  0017AA  EC80  F00C         	call	i2_lcd_strobe	;wreg free
  2773                           
  2774                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2775  0017AE  0E7D               	movlw	125
  2776  0017B0  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2777  0017B2  0EAC               	movlw	172
  2778  0017B4                     i2u87_47:
  2779  0017B4  2EE8               	decfsz	wreg,f,c
  2780  0017B6  D7FE               	goto	i2u87_47
  2781  0017B8  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2782  0017BA  D7FC               	goto	i2u87_47
  2783  0017BC  0012               	return		;funcret
  2784  0017BE                     __end_ofi2_lcd_write_cmd:
  2785                           	opt stack 0
  2786                           pclatu	equ	0xFFB
  2787                           pclath	equ	0xFFA
  2788                           tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           prodh	equ	0xFF4
  2793                           prodl	equ	0xFF3
  2794                           intcon	equ	0xFF2
  2795                           intcon2	equ	0xFF1
  2796                           postinc0	equ	0xFEE
  2797                           fsr0h	equ	0xFEA
  2798                           fsr0l	equ	0xFE9
  2799                           wreg	equ	0xFE8
  2800                           postdec1	equ	0xFE5
  2801                           plusw1	equ	0xFE3
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           plusw2	equ	0xFDB
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function i2_lcd_strobe *****************
  2812 ;; Defined at:
  2813 ;;		line 73 in file "lcd_utilities.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2829 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2830 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2831 ;;Total ram usage:        1 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		i2_lcd_write_cmd
  2837 ;;		i2_lcd_write_data
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text16
  2842  001900                     __ptext16:
  2843                           	opt stack 0
  2844  001900                     i2_lcd_strobe:
  2845                           	opt stack 25
  2846                           
  2847                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2848                           
  2849                           ;incstack = 0
  2850  001900  8883               	bsf	3971,4,c	;volatile
  2851                           
  2852                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2853  001902  0E7D               	movlw	125
  2854  001904  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  2855  001906  0EAC               	movlw	172
  2856  001908                     i2u88_47:
  2857  001908  2EE8               	decfsz	wreg,f,c
  2858  00190A  D7FE               	goto	i2u88_47
  2859  00190C  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  2860  00190E  D7FC               	goto	i2u88_47
  2861                           
  2862                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2863  001910  9883               	bcf	3971,4,c	;volatile
  2864                           
  2865                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2866  001912  0E7D               	movlw	125
  2867  001914  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  2868  001916  0EAC               	movlw	172
  2869  001918                     i2u89_47:
  2870  001918  2EE8               	decfsz	wreg,f,c
  2871  00191A  D7FE               	goto	i2u89_47
  2872  00191C  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  2873  00191E  D7FC               	goto	i2u89_47
  2874  001920  0012               	return		;funcret
  2875  001922                     __end_ofi2_lcd_strobe:
  2876                           	opt stack 0
  2877                           pclatu	equ	0xFFB
  2878                           pclath	equ	0xFFA
  2879                           tblptru	equ	0xFF8
  2880                           tblptrh	equ	0xFF7
  2881                           tblptrl	equ	0xFF6
  2882                           tablat	equ	0xFF5
  2883                           prodh	equ	0xFF4
  2884                           prodl	equ	0xFF3
  2885                           intcon	equ	0xFF2
  2886                           intcon2	equ	0xFF1
  2887                           postinc0	equ	0xFEE
  2888                           fsr0h	equ	0xFEA
  2889                           fsr0l	equ	0xFE9
  2890                           wreg	equ	0xFE8
  2891                           postdec1	equ	0xFE5
  2892                           plusw1	equ	0xFE3
  2893                           fsr1h	equ	0xFE2
  2894                           fsr1l	equ	0xFE1
  2895                           indf2	equ	0xFDF
  2896                           postinc2	equ	0xFDE
  2897                           plusw2	equ	0xFDB
  2898                           fsr2h	equ	0xFDA
  2899                           fsr2l	equ	0xFD9
  2900                           status	equ	0xFD8
  2901                           
  2902 ;; *************** function _int_2_char *****************
  2903 ;; Defined at:
  2904 ;;		line 17 in file "Main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  int1            1    wreg     unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  int1            1    0[COMRAM] unsigned char 
  2909 ;;  char1           1    1[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      unsigned char 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0
  2920 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2922 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2923 ;;Total ram usage:        2 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_ISR_Timer0_Int
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text17
  2933  001584                     __ptext17:
  2934                           	opt stack 0
  2935  001584                     _int_2_char:
  2936                           	opt stack 26
  2937                           
  2938                           ;incstack = 0
  2939                           ;int_2_char@int1 stored from wreg
  2940  001584  6E01               	movwf	int_2_char@int1,c
  2941                           
  2942                           ;Main.c: 19: char char1;
  2943                           ;Main.c: 20: switch (int1)
  2944  001586  D017               	goto	i2l930
  2945  001588                     i2l908:
  2946  001588  0E30               	movlw	48
  2947  00158A  D013               	goto	L21
  2948  00158C                     i2l910:
  2949  00158C  0E31               	movlw	49
  2950  00158E  D011               	goto	L21
  2951  001590                     i2l912:
  2952  001590  0E32               	movlw	50
  2953  001592  D00F               	goto	L21
  2954  001594                     i2l914:
  2955  001594  0E33               	movlw	51
  2956  001596  D00D               	goto	L21
  2957  001598                     i2l916:
  2958  001598  0E34               	movlw	52
  2959  00159A  D00B               	goto	L21
  2960  00159C                     i2l918:
  2961  00159C  0E35               	movlw	53
  2962  00159E  D009               	goto	L21
  2963  0015A0                     i2l920:
  2964  0015A0  0E36               	movlw	54
  2965  0015A2  D007               	goto	L21
  2966  0015A4                     i2l922:
  2967  0015A4  0E37               	movlw	55
  2968  0015A6  D005               	goto	L21
  2969  0015A8                     i2l924:
  2970  0015A8  0E38               	movlw	56
  2971  0015AA  D003               	goto	L21
  2972  0015AC                     i2l926:
  2973  0015AC  0E39               	movlw	57
  2974  0015AE  D001               	goto	L21
  2975  0015B0                     i2l928:
  2976  0015B0  0E3F               	movlw	63
  2977  0015B2                     L21:
  2978  0015B2  6E02               	movwf	int_2_char@char1,c
  2979                           
  2980                           ;Main.c: 33: }
  2981  0015B4  D020               	goto	i2l86
  2982  0015B6                     i2l930:
  2983  0015B6  5001               	movf	int_2_char@int1,w,c
  2984                           
  2985                           ; Switch size 1, requested type "space"
  2986                           ; Number of cases is 10, Range of values is 0 to 9
  2987                           ; switch strategies available:
  2988                           ; Name         Instructions Cycles
  2989                           ; simple_byte           31    16 (average)
  2990                           ;	Chosen strategy is simple_byte
  2991  0015B8  0A00               	xorlw	0	; case 0
  2992  0015BA  B4D8               	btfsc	status,2,c
  2993  0015BC  D7E5               	goto	i2l908
  2994  0015BE  0A01               	xorlw	1	; case 1
  2995  0015C0  B4D8               	btfsc	status,2,c
  2996  0015C2  D7E4               	goto	i2l910
  2997  0015C4  0A03               	xorlw	3	; case 2
  2998  0015C6  B4D8               	btfsc	status,2,c
  2999  0015C8  D7E3               	goto	i2l912
  3000  0015CA  0A01               	xorlw	1	; case 3
  3001  0015CC  B4D8               	btfsc	status,2,c
  3002  0015CE  D7E2               	goto	i2l914
  3003  0015D0  0A07               	xorlw	7	; case 4
  3004  0015D2  B4D8               	btfsc	status,2,c
  3005  0015D4  D7E1               	goto	i2l916
  3006  0015D6  0A01               	xorlw	1	; case 5
  3007  0015D8  B4D8               	btfsc	status,2,c
  3008  0015DA  D7E0               	goto	i2l918
  3009  0015DC  0A03               	xorlw	3	; case 6
  3010  0015DE  B4D8               	btfsc	status,2,c
  3011  0015E0  D7DF               	goto	i2l920
  3012  0015E2  0A01               	xorlw	1	; case 7
  3013  0015E4  B4D8               	btfsc	status,2,c
  3014  0015E6  D7DE               	goto	i2l922
  3015  0015E8  0A0F               	xorlw	15	; case 8
  3016  0015EA  B4D8               	btfsc	status,2,c
  3017  0015EC  D7DD               	goto	i2l924
  3018  0015EE  0A01               	xorlw	1	; case 9
  3019  0015F0  B4D8               	btfsc	status,2,c
  3020  0015F2  D7DC               	goto	i2l926
  3021  0015F4  D7DD               	goto	i2l928
  3022  0015F6                     i2l86:
  3023                           
  3024                           ;Main.c: 34: return(char1);
  3025  0015F6  5002               	movf	int_2_char@char1,w,c
  3026  0015F8  0012               	return		;funcret
  3027  0015FA                     __end_of_int_2_char:
  3028                           	opt stack 0
  3029                           pclatu	equ	0xFFB
  3030                           pclath	equ	0xFFA
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           intcon	equ	0xFF2
  3038                           intcon2	equ	0xFF1
  3039                           postinc0	equ	0xFEE
  3040                           fsr0h	equ	0xFEA
  3041                           fsr0l	equ	0xFE9
  3042                           wreg	equ	0xFE8
  3043                           postdec1	equ	0xFE5
  3044                           plusw1	equ	0xFE3
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           plusw2	equ	0xFDB
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function ___awdiv *****************
  3055 ;; Defined at:
  3056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  dividend        2    0[COMRAM] int 
  3059 ;;  divisor         2    2[COMRAM] int 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  quotient        2    6[COMRAM] int 
  3062 ;;  sign            1    5[COMRAM] unsigned char 
  3063 ;;  counter         1    4[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    0[COMRAM] int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3073 ;;      Params:         4       0       0       0       0       0       0       0       0
  3074 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3076 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_ISR_Timer0_Int
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text18
  3087  001500                     __ptext18:
  3088                           	opt stack 0
  3089  001500                     ___awdiv:
  3090                           	opt stack 26
  3091                           
  3092                           ;incstack = 0
  3093  001500  0E00               	movlw	0
  3094  001502  6E06               	movwf	___awdiv@sign,c
  3095  001504  AE04               	btfss	___awdiv@divisor+1,7,c
  3096  001506  D006               	goto	i2l1496
  3097  001508  6C03               	negf	___awdiv@divisor,c
  3098  00150A  1E04               	comf	___awdiv@divisor+1,f,c
  3099  00150C  B0D8               	btfsc	status,0,c
  3100  00150E  2A04               	incf	___awdiv@divisor+1,f,c
  3101  001510  0E01               	movlw	1
  3102  001512  6E06               	movwf	___awdiv@sign,c
  3103  001514                     i2l1496:
  3104  001514  AE02               	btfss	___awdiv@dividend+1,7,c
  3105  001516  D006               	goto	i2l1502
  3106  001518  6C01               	negf	___awdiv@dividend,c
  3107  00151A  1E02               	comf	___awdiv@dividend+1,f,c
  3108  00151C  B0D8               	btfsc	status,0,c
  3109  00151E  2A02               	incf	___awdiv@dividend+1,f,c
  3110  001520  0E01               	movlw	1
  3111  001522  1A06               	xorwf	___awdiv@sign,f,c
  3112  001524                     i2l1502:
  3113  001524  0E00               	movlw	0
  3114  001526  6E08               	movwf	___awdiv@quotient+1,c
  3115  001528  0E00               	movlw	0
  3116  00152A  6E07               	movwf	___awdiv@quotient,c
  3117  00152C  5003               	movf	___awdiv@divisor,w,c
  3118  00152E  1004               	iorwf	___awdiv@divisor+1,w,c
  3119  001530  B4D8               	btfsc	status,2,c
  3120  001532  D01C               	goto	i2l1524
  3121  001534  0E01               	movlw	1
  3122  001536  6E05               	movwf	___awdiv@counter,c
  3123  001538  D004               	goto	i2l1510
  3124  00153A                     i2l1508:
  3125  00153A  90D8               	bcf	status,0,c
  3126  00153C  3603               	rlcf	___awdiv@divisor,f,c
  3127  00153E  3604               	rlcf	___awdiv@divisor+1,f,c
  3128  001540  2A05               	incf	___awdiv@counter,f,c
  3129  001542                     i2l1510:
  3130  001542  AE04               	btfss	___awdiv@divisor+1,7,c
  3131  001544  D7FA               	goto	i2l1508
  3132  001546                     i2l1512:
  3133  001546  90D8               	bcf	status,0,c
  3134  001548  3607               	rlcf	___awdiv@quotient,f,c
  3135  00154A  3608               	rlcf	___awdiv@quotient+1,f,c
  3136  00154C  5003               	movf	___awdiv@divisor,w,c
  3137  00154E  5C01               	subwf	___awdiv@dividend,w,c
  3138  001550  5004               	movf	___awdiv@divisor+1,w,c
  3139  001552  5802               	subwfb	___awdiv@dividend+1,w,c
  3140  001554  A0D8               	btfss	status,0,c
  3141  001556  D005               	goto	i2l1520
  3142  001558  5003               	movf	___awdiv@divisor,w,c
  3143  00155A  5E01               	subwf	___awdiv@dividend,f,c
  3144  00155C  5004               	movf	___awdiv@divisor+1,w,c
  3145  00155E  5A02               	subwfb	___awdiv@dividend+1,f,c
  3146  001560  8007               	bsf	___awdiv@quotient,0,c
  3147  001562                     i2l1520:
  3148  001562  90D8               	bcf	status,0,c
  3149  001564  3204               	rrcf	___awdiv@divisor+1,f,c
  3150  001566  3203               	rrcf	___awdiv@divisor,f,c
  3151  001568  2E05               	decfsz	___awdiv@counter,f,c
  3152  00156A  D7ED               	goto	i2l1512
  3153  00156C                     i2l1524:
  3154  00156C  5006               	movf	___awdiv@sign,w,c
  3155  00156E  B4D8               	btfsc	status,2,c
  3156  001570  D004               	goto	i2l1528
  3157  001572  6C07               	negf	___awdiv@quotient,c
  3158  001574  1E08               	comf	___awdiv@quotient+1,f,c
  3159  001576  B0D8               	btfsc	status,0,c
  3160  001578  2A08               	incf	___awdiv@quotient+1,f,c
  3161  00157A                     i2l1528:
  3162  00157A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3163  00157E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3164  001582  0012               	return	
  3165  001584                     __end_of___awdiv:
  3166                           	opt stack 0
  3167                           pclatu	equ	0xFFB
  3168                           pclath	equ	0xFFA
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           intcon	equ	0xFF2
  3176                           intcon2	equ	0xFF1
  3177                           postinc0	equ	0xFEE
  3178                           fsr0h	equ	0xFEA
  3179                           fsr0l	equ	0xFE9
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           plusw1	equ	0xFE3
  3183                           fsr1h	equ	0xFE2
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           plusw2	equ	0xFDB
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           pclatu	equ	0xFFB
  3192                           pclath	equ	0xFFA
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           intcon2	equ	0xFF1
  3201                           postinc0	equ	0xFEE
  3202                           fsr0h	equ	0xFEA
  3203                           fsr0l	equ	0xFE9
  3204                           wreg	equ	0xFE8
  3205                           postdec1	equ	0xFE5
  3206                           plusw1	equ	0xFE3
  3207                           fsr1h	equ	0xFE2
  3208                           fsr1l	equ	0xFE1
  3209                           indf2	equ	0xFDF
  3210                           postinc2	equ	0xFDE
  3211                           plusw2	equ	0xFDB
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216                           	psect	rparam
  3217  0000                     pclatu	equ	0xFFB
  3218                           pclath	equ	0xFFA
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           intcon2	equ	0xFF1
  3227                           postinc0	equ	0xFEE
  3228                           fsr0h	equ	0xFEA
  3229                           fsr0l	equ	0xFE9
  3230                           wreg	equ	0xFE8
  3231                           postdec1	equ	0xFE5
  3232                           plusw1	equ	0xFE3
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           postinc2	equ	0xFDE
  3237                           plusw2	equ	0xFDB
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242                           	psect	temp
  3243  000036                     btemp:
  3244                           	opt stack 0
  3245  000036                     	ds	1
  3246  0000                     int$flags	set	btemp
  3247                           pclatu	equ	0xFFB
  3248                           pclath	equ	0xFFA
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           intcon2	equ	0xFF1
  3257                           postinc0	equ	0xFEE
  3258                           fsr0h	equ	0xFEA
  3259                           fsr0l	equ	0xFE9
  3260                           wreg	equ	0xFE8
  3261                           postdec1	equ	0xFE5
  3262                           plusw1	equ	0xFE3
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           plusw2	equ	0xFDB
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        42
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      53
    BANK0           160     30      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _lcd_init->_lcd_write_cmd
    _SetupTime->_getkey
    _SetupAlarmTime->_getkey
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2082
                                             47 COMRAM     1     1      0
                     _SetupAlarmTime
                          _SetupTime
       _SetupTimerInterruptRegisters
                    _displayAlarmOff
                     _displayAlarmOn
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     159
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOn                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOff                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1006
                                              0 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTime                                      28    28      0     870
                                              0 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     113
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      48
                                             28 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     154
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _displayAlarmOff
   _displayAlarmOn
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      35       1       56.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      20        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jul 27 12:38:53 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1826  
                                   l36 1830                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                                  l102 16DA                                    l159 18A6  
                                  u320 181C                                    u421 12EE  
                                  u391 11B4                                    u607 1660  
                                  u617 13E2                                    u707 171A  
                                  u627 1402                                    u717 1732  
                                  u637 1412                                    u727 1744  
                                  u647 1424                                    u737 18E6  
                                  u657 143C                                    u747 18F6  
                                  u667 144C                                    u757 1898  
                                  u677 1460                                    u597 1626  
                                  u687 16E8                                    u697 1708  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4444 101B                                   l1400 11C8  
                                 l1340 1674                                   l1412 11F8  
                                 l1404 11D2                                   l1350 1688  
                                 l1342 1678                                   l1352 168C  
                                 l1344 167C                                   l1354 1690  
                                 l1346 1680                                   l1338 1670  
                                 l1356 1694                                   l1348 1684  
                                 l1364 1892                                   l1358 169A  
                                 l1454 1302                                   l1390 1636  
                                 l1382 1610                                   l1466 1332  
                                 l1458 130C                                   l1386 1620  
                                 l1668 17DE                                   l1678 17FE  
                                 i2l86 15F6                 __end_of_lcd_write_data 146C  
                                 _main 17BE                                   _hour 0031  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0036  
                                 pclat 000FFA                        ?_displayAlarmOn 0001  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 1500                 SetupAlarmTime@minute10 00A2  
                         ___param_bank 000010                 SetupAlarmTime@msgindex 00A4  
                                ?_main 0001                        __end_of___awdiv 1584  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l120 116E  
                                i2l910 158C                                  i2l920 15A0  
                                i2l912 1590                                  i2l922 15A4  
                                i2l914 1594                                  i2l930 15B6  
                                i2l924 15A8                                  i2l916 1598  
                                i2l908 1588                                  i2l926 15AC  
                                i2l918 159C                                  i2l928 15B0  
                      ___awdiv@counter 0005                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTB 000F81  
                                _PORTD 000F83                                  _TRISC 000F94  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 0032                                  tablat 000FF5  
                     ?_displayAlarmOff 0001                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 001D                        __initialization 1848  
                         __end_of_main 180E                                 ??_main 0030  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1900                                 i2l1510 1542  
                               i2l1502 1524                                 i2l1520 1562  
                               i2l1512 1546                                 i2l1610 108E  
                               i2l1508 153A                                 i2l1524 156C  
                               i2l1528 157A                                 i2l1496 1514  
                      ??_lcd_write_cmd 001E                __size_of_SetupAlarmTime 00F4  
                     __end_of_delay_ms 18B4                       __end_of_lcd_init 166C  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 180E  
                     ___awdiv@quotient 0007                                 _minute 0033  
                               _second 0035                     __size_of_SetupTime 013A  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                           __accesstop 0060                __end_of__initialization 1872  
                        getkey@keycode 002F                          ___rparam_used 000001  
               __end_of_ISR_Timer0_Int 11AA                         __pcstackCOMRAM 0001  
                         __pidataBANK0 18B4                             _char_2_int 166C  
                     ??_displayAlarmOn 001D                      __end_of_SetupTime 12E4  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 001D  
                              i2u80_47 14D0                                i2u81_47 14E0  
                              i2u82_47 14F4                                i2u83_47 1758  
                              i2u84_47 1778                                i2u76_47 1476  
                              i2u85_47 178A                                i2u77_47 1496  
                              i2u86_47 17A2                                i2u78_47 14A6  
                              i2u87_47 17B4                                i2u79_47 14B8  
                              i2u88_47 1908                                i2u89_47 1918  
                     ??_lcd_write_data 001E                             _lcd_strobe 18DE  
                            ?_lcd_init 0001                     lcd_write_data@data 001F  
                   lcd_write_cmd@temp2 0020                         _SetupAlarmTime 12E4  
                           _int_2_char 1584                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 001D  
                              ___awdiv 1500                           __psmallconst 101A  
                      __size_of_getkey 003A                        i2_lcd_write_cmd 174E  
                              __pcinit 1848                     main@displayUpdated 0030  
                              __ramtop 0800                                __ptext0 17BE  
                              __ptext1 15FA                                __ptext2 193E  
                              __ptext3 1944                                __ptext4 1922  
                              __ptext5 11AA                                __ptext6 12E4  
                              __ptext7 13D8                                __ptext8 16DE  
                              __ptext9 18DE                              _T0CONbits 000FD5  
                       SetupTime@F4482 0075                                _minuteA 0034  
                           ??_delay_ms 001F                            ?_char_2_int 0001  
                           ??_lcd_init 0021                         __pintcode_body 102E  
               __end_of_SetupAlarmTime 13D8                   end_of_initialization 1872  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00A7                         SetupTime@hour1 00A1  
                        __Lmediumconst 0000                                int_func 102E  
             __size_of_displayAlarmOff 0006                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                            _PORTBbits 000F81                              _PORTCbits 000F82  
                            _PORTDbits 000F83                  SetupAlarmTime@Message 008A  
                          ?_lcd_strobe 0001                        ?_SetupAlarmTime 0001  
                          ?_int_2_char 0001                  __end_of_lcd_write_cmd 174E  
              __end_ofi2_lcd_write_cmd 17BE                  SetupAlarmTime@minute1 00A3  
                  __size_of_char_2_int 0072                  SetupAlarmTime@outchar 009F  
                       __end_of_getkey 1848                    start_initialization 1848  
                i2lcd_write_data@temp1 0004                       ??_ISR_Timer0_Int 0009  
                            _SetupTime 11AA                            __pdataBANK0 0060  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    ??_displayAlarmOff 001D                      SetupTime@minute10 00A2  
                    SetupTime@second10 00A4                    __size_of_int_2_char 0076  
                    SetupTime@msgindex 00A6                            __pbssCOMRAM 0031  
            __size_ofi2_lcd_write_data 0094                          __pcstackBANK0 008A  
                    __size_of_delay_ms 0034                      __size_of_lcd_init 0072  
                     ?i2_lcd_write_cmd 0001                              __pintcode 1008  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                        ?i2_lcd_strobe 0001                              delay_ms@i 001D  
                            delay_ms@j 0020                    ISR_Timer0_Int@hour1 0017  
              __size_of_displayAlarmOn 0006                               _RCONbits 000FD0  
                   __end_of_char_2_int 16DE                              lcd_init@i 0022  
                     ??_SetupAlarmTime 0030                   SetupAlarmTime@hour10 00A0  
                  lcd_write_data@temp1 0020                         ??i2_lcd_strobe 0001  
                         ??_lcd_strobe 001D                       SetupTime@Message 008A  
                            copy_data0 1866                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 193E  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1922                __size_of_lcd_write_data 0094  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                            ??_SetupTime 0030  
                     SetupTime@minute1 00A3                       SetupTime@second1 00A5  
                     __size_of___awdiv 0084                     __end_of_lcd_strobe 1900  
                     SetupTime@outchar 009F                     __end_of_int_2_char 15FA  
                     i2_lcd_write_data 146C                               _delay_ms 1880  
                             __ptext10 180E                               __ptext11 1880  
                             __ptext12 166C                               __ptext14 146C  
                             __ptext15 174E                               __ptext16 1900  
                             __ptext17 1584                               __ptext18 1500  
                             _lcd_init 15FA                          __size_of_main 0050  
                  SetupAlarmTime@F4492 0060          ?_SetupTimerInterruptRegisters 0001  
                      _displayAlarmOff 1944                               int$flags 0036  
                  SetupAlarmTime@ctemp 00A5                    SetupAlarmTime@hour1 00A1  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00A0  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                       _displayAlarmOn 193E                   __end_ofi2_lcd_strobe 1922  
              __end_of_displayAlarmOff 194A                 __end_of_displayAlarmOn 1944  
                       _lcd_write_data 13D8                          _lcd_write_cmd 16DE  
