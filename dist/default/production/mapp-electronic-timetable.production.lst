

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jun 29 14:34:55 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataCOMRAM
    39  001A18                     __pidataCOMRAM:
    40                           	opt stack 0
    41                           
    42                           ;initializer for displayAlarmOn@F4498
    43  001A18  41                 	db	65
    44  001A19  6C                 	db	108
    45  001A1A  61                 	db	97
    46  001A1B  72                 	db	114
    47  001A1C  6D                 	db	109
    48  001A1D  20                 	db	32
    49  001A1E  4F                 	db	79
    50  001A1F  6E                 	db	110
    51  001A20  20                 	db	32
    52  001A21  20                 	db	32
    53  001A22  20                 	db	32
    54  001A23  20                 	db	32
    55  001A24  20                 	db	32
    56  001A25  20                 	db	32
    57  001A26  20                 	db	32
    58  001A27  20                 	db	32
    59  001A28  20                 	db	32
    60  001A29  20                 	db	32
    61  001A2A  20                 	db	32
    62  001A2B  20                 	db	32
    63  001A2C  00                 	db	0
    64                           
    65                           	psect	idataBANK0
    66  001906                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for SetupAlarmTime@F4492
    70  001906  53                 	db	83
    71  001907  65                 	db	101
    72  001908  74                 	db	116
    73  001909  20                 	db	32
    74  00190A  61                 	db	97
    75  00190B  6C                 	db	108
    76  00190C  61                 	db	97
    77  00190D  72                 	db	114
    78  00190E  6D                 	db	109
    79  00190F  20                 	db	32
    80  001910  74                 	db	116
    81  001911  69                 	db	105
    82  001912  6D                 	db	109
    83  001913  65                 	db	101
    84  001914  20                 	db	32
    85  001915  68                 	db	104
    86  001916  68                 	db	104
    87  001917  6D                 	db	109
    88  001918  6D                 	db	109
    89  001919  3A                 	db	58
    90  00191A  00                 	db	0
    91                           
    92                           ;initializer for SetupTime@F4482
    93  00191B  53                 	db	83
    94  00191C  65                 	db	101
    95  00191D  74                 	db	116
    96  00191E  20                 	db	32
    97  00191F  74                 	db	116
    98  001920  69                 	db	105
    99  001921  6D                 	db	109
   100  001922  65                 	db	101
   101  001923  20                 	db	32
   102  001924  68                 	db	104
   103  001925  68                 	db	104
   104  001926  6D                 	db	109
   105  001927  6D                 	db	109
   106  001928  73                 	db	115
   107  001929  73                 	db	115
   108  00192A  3A                 	db	58
   109  00192B  20                 	db	32
   110  00192C  20                 	db	32
   111  00192D  20                 	db	32
   112  00192E  20                 	db	32
   113  00192F  00                 	db	0
   114                           
   115                           ;initializer for displayAlarmOff@F4503
   116  001930  41                 	db	65
   117  001931  6C                 	db	108
   118  001932  61                 	db	97
   119  001933  72                 	db	114
   120  001934  6D                 	db	109
   121  001935  20                 	db	32
   122  001936  4F                 	db	79
   123  001937  66                 	db	102
   124  001938  66                 	db	102
   125  001939  20                 	db	32
   126  00193A  20                 	db	32
   127  00193B  20                 	db	32
   128  00193C  20                 	db	32
   129  00193D  20                 	db	32
   130  00193E  20                 	db	32
   131  00193F  20                 	db	32
   132  001940  20                 	db	32
   133  001941  20                 	db	32
   134  001942  20                 	db	32
   135  001943  20                 	db	32
   136  001944  00                 	db	0
   137                           
   138                           	psect	smallconst
   139  00101A                     __psmallconst:
   140                           	opt stack 0
   141  00101A  00                 	db	0
   142  00101B                     getkey@F4444:
   143                           	opt stack 0
   144  00101B  31                 	db	49
   145  00101C  32                 	db	50
   146  00101D  33                 	db	51
   147  00101E  46                 	db	70
   148  00101F  34                 	db	52
   149  001020  35                 	db	53
   150  001021  36                 	db	54
   151  001022  45                 	db	69
   152  001023  37                 	db	55
   153  001024  38                 	db	56
   154  001025  39                 	db	57
   155  001026  44                 	db	68
   156  001027  41                 	db	65
   157  001028  30                 	db	48
   158  001029  42                 	db	66
   159  00102A  43                 	db	67
   160  00102B  20                 	db	32
   161  00102C  00                 	db	0
   162  00102D                     __end_ofgetkey@F4444:
   163                           	opt stack 0
   164  0000                     _ADCON1	set	4033
   165  0000                     _CMCON	set	4020
   166  0000                     _INTCON2	set	4081
   167  0000                     _INTCONbits	set	4082
   168  0000                     _PORTB	set	3969
   169  0000                     _PORTBbits	set	3969
   170  0000                     _PORTD	set	3971
   171  0000                     _PORTDbits	set	3971
   172  0000                     _RCONbits	set	4048
   173  0000                     _T0CON	set	4053
   174  0000                     _T0CONbits	set	4053
   175  0000                     _TMR0H	set	4055
   176  0000                     _TMR0L	set	4054
   177  0000                     _TRISD	set	3989
   178  00102D  00                 	db	0	; dummy byte at the end
   179  0000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183  0017C6                     __pcinit:
   184                           	opt stack 0
   185  0017C6                     start_initialization:
   186                           	opt stack 0
   187  0017C6                     __initialization:
   188                           	opt stack 0
   189                           
   190                           ; Clear objects allocated to COMRAM (5 bytes)
   191  0017C6  6A3E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   192  0017C8  6A3D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   193  0017CA  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   194  0017CC  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   195  0017CE  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   196                           
   197                           ; Initialize objects allocated to BANK0 (63 bytes)
   198                           ; load TBLPTR registers with __pidataBANK0
   199  0017D0  0E06               	movlw	low __pidataBANK0
   200  0017D2  6EF6               	movwf	tblptrl,c
   201  0017D4  0E19               	movlw	high __pidataBANK0
   202  0017D6  6EF7               	movwf	tblptrh,c
   203  0017D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   204  0017DA  6EF8               	movwf	tblptru,c
   205  0017DC  EE00  F060         	lfsr	0,__pdataBANK0
   206  0017E0  EE10 F03F          	lfsr	1,63
   207  0017E4                     copy_data0:
   208  0017E4  0009               	tblrd		*+
   209  0017E6  CFF5 FFEE          	movff	tablat,postinc0
   210  0017EA  50E5               	movf	postdec1,w,c
   211  0017EC  50E1               	movf	fsr1l,w,c
   212  0017EE  E1FA               	bnz	copy_data0
   213                           
   214                           ; Initialize objects allocated to COMRAM (21 bytes)
   215                           ; load TBLPTR registers with __pidataCOMRAM
   216  0017F0  0E18               	movlw	low __pidataCOMRAM
   217  0017F2  6EF6               	movwf	tblptrl,c
   218  0017F4  0E1A               	movlw	high __pidataCOMRAM
   219  0017F6  6EF7               	movwf	tblptrh,c
   220  0017F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   221  0017FA  6EF8               	movwf	tblptru,c
   222  0017FC  EE00  F025         	lfsr	0,__pdataCOMRAM
   223  001800  EE10 F015          	lfsr	1,21
   224  001804                     copy_data1:
   225  001804  0009               	tblrd		*+
   226  001806  CFF5 FFEE          	movff	tablat,postinc0
   227  00180A  50E5               	movf	postdec1,w,c
   228  00180C  50E1               	movf	fsr1l,w,c
   229  00180E  E1FA               	bnz	copy_data1
   230  001810                     end_of_initialization:
   231                           	opt stack 0
   232  001810                     __end_of__initialization:
   233                           	opt stack 0
   234  001810  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235  001812  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  001814  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237  001816  6EF8               	movwf	tblptru,c
   238  001818  0100               	movlb	0
   239  00181A  EF5D  F00C         	goto	_main	;jump to C main() function
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	bssCOMRAM
   249  00003A                     __pbssCOMRAM:
   250                           	opt stack 0
   251  00003A                     _hour:
   252                           	opt stack 0
   253  00003A                     	ds	1
   254  00003B                     _hourA:
   255                           	opt stack 0
   256  00003B                     	ds	1
   257  00003C                     _minute:
   258                           	opt stack 0
   259  00003C                     	ds	1
   260  00003D                     _minuteA:
   261                           	opt stack 0
   262  00003D                     	ds	1
   263  00003E                     _second:
   264                           	opt stack 0
   265  00003E                     	ds	1
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	dataCOMRAM
   275  000025                     __pdataCOMRAM:
   276                           	opt stack 0
   277  000025                     displayAlarmOn@F4498:
   278                           	opt stack 0
   279  000025                     	ds	21
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           postdec1	equ	0xFE5
   286                           fsr1l	equ	0xFE1
   287                           
   288                           	psect	dataBANK0
   289  000060                     __pdataBANK0:
   290                           	opt stack 0
   291  000060                     SetupAlarmTime@F4492:
   292                           	opt stack 0
   293  000060                     	ds	21
   294  000075                     SetupTime@F4482:
   295                           	opt stack 0
   296  000075                     	ds	21
   297  00008A                     displayAlarmOff@F4503:
   298                           	opt stack 0
   299  00008A                     	ds	21
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackBANK0
   309  00009F                     __pcstackBANK0:
   310                           	opt stack 0
   311  00009F                     getkey@lookup:
   312                           	opt stack 0
   313  00009F                     displayAlarmOn@Message:
   314                           	opt stack 0
   315  00009F                     displayAlarmOff@Message:
   316                           	opt stack 0
   317                           
   318                           ; 21 bytes @ 0x0
   319  00009F                     	ds	18
   320  0000B1                     getkey@keycode:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x12
   324  0000B1                     	ds	1
   325  0000B2                     SetupTime@Message:
   326                           	opt stack 0
   327  0000B2                     SetupAlarmTime@Message:
   328                           	opt stack 0
   329                           
   330                           ; 21 bytes @ 0x13
   331  0000B2                     	ds	2
   332  0000B4                     displayAlarmOn@outchar:
   333                           	opt stack 0
   334  0000B4                     displayAlarmOff@outchar:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x15
   338  0000B4                     	ds	1
   339  0000B5                     displayAlarmOn@msgindex:
   340                           	opt stack 0
   341  0000B5                     displayAlarmOff@msgindex:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x16
   345  0000B5                     	ds	18
   346  0000C7                     SetupTime@outchar:
   347                           	opt stack 0
   348  0000C7                     SetupAlarmTime@outchar:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x28
   352  0000C7                     	ds	1
   353  0000C8                     SetupTime@hour10:
   354                           	opt stack 0
   355  0000C8                     SetupAlarmTime@hour10:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x29
   359  0000C8                     	ds	1
   360  0000C9                     SetupTime@hour1:
   361                           	opt stack 0
   362  0000C9                     SetupAlarmTime@hour1:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x2A
   366  0000C9                     	ds	1
   367  0000CA                     SetupTime@minute10:
   368                           	opt stack 0
   369  0000CA                     SetupAlarmTime@minute10:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x2B
   373  0000CA                     	ds	1
   374  0000CB                     SetupTime@minute1:
   375                           	opt stack 0
   376  0000CB                     SetupAlarmTime@minute1:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x2C
   380  0000CB                     	ds	1
   381  0000CC                     SetupTime@second10:
   382                           	opt stack 0
   383  0000CC                     SetupAlarmTime@msgindex:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x2D
   387  0000CC                     	ds	1
   388  0000CD                     SetupTime@second1:
   389                           	opt stack 0
   390  0000CD                     SetupAlarmTime@ctemp:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x2E
   394  0000CD                     	ds	1
   395  0000CE                     SetupTime@msgindex:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x2F
   399  0000CE                     	ds	1
   400  0000CF                     SetupTime@ctemp:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x30
   404  0000CF                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	cstackCOMRAM
   414  000001                     __pcstackCOMRAM:
   415                           	opt stack 0
   416  000001                     ??i2_lcd_strobe:
   417  000001                     ?___awdiv:
   418                           	opt stack 0
   419  000001                     int_2_char@int1:
   420                           	opt stack 0
   421  000001                     ___awdiv@dividend:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x0
   425  000001                     	ds	1
   426  000002                     ??i2_lcd_write_cmd:
   427  000002                     ??i2_lcd_write_data:
   428  000002                     int_2_char@char1:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x1
   432  000002                     	ds	1
   433  000003                     i2lcd_write_cmd@cmd:
   434                           	opt stack 0
   435  000003                     i2lcd_write_data@data:
   436                           	opt stack 0
   437  000003                     ___awdiv@divisor:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x2
   441  000003                     	ds	1
   442  000004                     i2lcd_write_cmd@temp2:
   443                           	opt stack 0
   444  000004                     i2lcd_write_data@temp1:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x3
   448  000004                     	ds	1
   449  000005                     ___awdiv@counter:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x4
   453  000005                     	ds	1
   454  000006                     ___awdiv@sign:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x5
   458  000006                     	ds	1
   459  000007                     ___awdiv@quotient:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x6
   463  000007                     	ds	2
   464  000009                     ??_ISR_Timer0_Int:
   465                           
   466                           ; 0 bytes @ 0x8
   467  000009                     	ds	14
   468  000017                     ISR_Timer0_Int@hour1:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x16
   472  000017                     	ds	1
   473  000018                     ISR_Timer0_Int@minute1:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x17
   477  000018                     	ds	1
   478  000019                     ISR_Timer0_Int@second1:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x18
   482  000019                     	ds	1
   483  00001A                     ISR_Timer0_Int@hour10:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x19
   487  00001A                     	ds	1
   488  00001B                     ISR_Timer0_Int@minute10:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x1A
   492  00001B                     	ds	1
   493  00001C                     ISR_Timer0_Int@second10:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1B
   497  00001C                     	ds	1
   498  00001D                     ??_lcd_strobe:
   499  00001D                     char_2_int@char1:
   500                           	opt stack 0
   501  00001D                     delay_ms@i:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1C
   505  00001D                     	ds	1
   506  00001E                     ??_lcd_write_cmd:
   507  00001E                     ??_lcd_write_data:
   508  00001E                     char_2_int@int1:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x1D
   512  00001E                     	ds	1
   513  00001F                     ??_delay_ms:
   514  00001F                     lcd_write_cmd@cmd:
   515                           	opt stack 0
   516  00001F                     lcd_write_data@data:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1E
   520  00001F                     	ds	1
   521  000020                     lcd_write_cmd@temp2:
   522                           	opt stack 0
   523  000020                     lcd_write_data@temp1:
   524                           	opt stack 0
   525  000020                     delay_ms@j:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1F
   529  000020                     	ds	1
   530  000021                     ??_lcd_init:
   531  000021                     
   532                           ; 0 bytes @ 0x20
   533  000021                     	ds	1
   534  000022                     lcd_init@i:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x21
   538  000022                     	ds	2
   539  000024                     main@displayUpdated:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x23
   543  000024                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 258 in file "Timer.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  displayUpdat    1   35[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   571 ;;      Params:         0       0       0       0       0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0       0       0
   574 ;;      Totals:         1       0       0       0       0       0       0       0       0
   575 ;;Total ram usage:        1 bytes
   576 ;; Hardware stack levels required when called:    6
   577 ;; This function calls:
   578 ;;		_SetupAlarmTime
   579 ;;		_SetupTime
   580 ;;		_SetupTimerInterruptRegisters
   581 ;;		_displayAlarmOff
   582 ;;		_displayAlarmOn
   583 ;;		_lcd_init
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  0018BA                     __ptext0:
   591                           	opt stack 0
   592  0018BA                     _main:
   593                           	opt stack 25
   594                           
   595                           ;Timer.c: 260: unsigned char displayUpdated;
   596                           ;Timer.c: 261: displayUpdated = 1;
   597                           
   598                           ;incstack = 0
   599  0018BA  0E01               	movlw	1
   600  0018BC  6E24               	movwf	main@displayUpdated,c
   601                           
   602                           ;Timer.c: 263: ADCON1 = 0x0F;
   603  0018BE  0E0F               	movlw	15
   604  0018C0  6EC1               	movwf	4033,c	;volatile
   605                           
   606                           ;Timer.c: 264: CMCON = 0x07;
   607  0018C2  0E07               	movlw	7
   608  0018C4  6EB4               	movwf	4020,c	;volatile
   609                           
   610                           ;Timer.c: 266: lcd_init();
   611  0018C6  EC01  F00B         	call	_lcd_init	;wreg free
   612                           
   613                           ;Timer.c: 268: SetupTime();
   614  0018CA  ECD9  F008         	call	_SetupTime	;wreg free
   615                           
   616                           ;Timer.c: 269: SetupAlarmTime();
   617  0018CE  EC76  F009         	call	_SetupAlarmTime	;wreg free
   618                           
   619                           ;Timer.c: 270: SetupTimerInterruptRegisters();
   620  0018D2  ECFE  F00C         	call	_SetupTimerInterruptRegisters	;wreg free
   621  0018D6                     l171:
   622                           
   623                           ;Timer.c: 273: {
   624                           ;Timer.c: 274: if(hour==hourA && minute==minuteA)
   625  0018D6  503B               	movf	_hourA,w,c
   626  0018D8  183A               	xorwf	_hour,w,c
   627  0018DA  A4D8               	btfss	status,2,c
   628  0018DC  D00C               	goto	l1998
   629  0018DE  503D               	movf	_minuteA,w,c
   630  0018E0  183C               	xorwf	_minute,w,c
   631  0018E2  A4D8               	btfss	status,2,c
   632  0018E4  D008               	goto	l1998
   633                           
   634                           ;Timer.c: 275: {
   635                           ;Timer.c: 276: if(displayUpdated == 2)
   636  0018E6  0E02               	movlw	2
   637  0018E8  1824               	xorwf	main@displayUpdated,w,c
   638  0018EA  A4D8               	btfss	status,2,c
   639  0018EC  D7F4               	goto	l171
   640                           
   641                           ;Timer.c: 277: {
   642                           ;Timer.c: 278: displayAlarmOn();
   643  0018EE  EC0F  F00C         	call	_displayAlarmOn	;wreg free
   644                           
   645                           ;Timer.c: 279: displayUpdated = 1;
   646  0018F2  0E01               	movlw	1
   647  0018F4  D006               	goto	L1
   648  0018F6                     l1998:
   649                           
   650                           ;Timer.c: 282: else
   651                           ;Timer.c: 283: {
   652                           ;Timer.c: 284: if(displayUpdated == 1)
   653  0018F6  0424               	decf	main@displayUpdated,w,c
   654  0018F8  A4D8               	btfss	status,2,c
   655  0018FA  D7ED               	goto	l171
   656                           
   657                           ;Timer.c: 285: {
   658                           ;Timer.c: 286: displayAlarmOff();
   659  0018FC  EC36  F00C         	call	_displayAlarmOff	;wreg free
   660                           
   661                           ;Timer.c: 287: displayUpdated = 2;
   662  001900  0E02               	movlw	2
   663  001902                     L1:
   664  001902  6E24               	movwf	main@displayUpdated,c
   665  001904  D7E8               	goto	l171
   666  001906                     __end_of_main:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _lcd_init *****************
   678 ;; Defined at:
   679 ;;		line 83 in file "lcd_utilities.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  i               2   33[COMRAM] int 
   684 ;; Return value:  Size  Location     Type
   685 ;;		None               void
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   693 ;;      Params:         0       0       0       0       0       0       0       0       0
   694 ;;      Locals:         2       0       0       0       0       0       0       0       0
   695 ;;      Temps:          1       0       0       0       0       0       0       0       0
   696 ;;      Totals:         3       0       0       0       0       0       0       0       0
   697 ;;Total ram usage:        3 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    5
   700 ;; This function calls:
   701 ;;		_lcd_write_cmd
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text1
   708  001602                     __ptext1:
   709                           	opt stack 0
   710  001602                     _lcd_init:
   711                           	opt stack 25
   712                           
   713                           ;lcd_utilities.c: 85: int i;
   714                           ;lcd_utilities.c: 86: TRISD = 0x00;
   715                           
   716                           ;incstack = 0
   717  001602  0E00               	movlw	0
   718  001604  6E95               	movwf	3989,c	;volatile
   719                           
   720                           ;lcd_utilities.c: 87: PORTD = 0x00;
   721  001606  0E00               	movlw	0
   722  001608  6E83               	movwf	3971,c	;volatile
   723                           
   724                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
   725  00160A  9883               	bcf	3971,4,c	;volatile
   726                           
   727                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
   728  00160C  9C83               	bcf	3971,6,c	;volatile
   729                           
   730                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
   731  00160E  9A83               	bcf	3971,5,c	;volatile
   732                           
   733                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
   734  001610  0E00               	movlw	0
   735  001612  6E23               	movwf	lcd_init@i+1,c
   736  001614  0E00               	movlw	0
   737  001616  6E22               	movwf	lcd_init@i,c
   738  001618                     l1838:
   739  001618  BE23               	btfsc	lcd_init@i+1,7,c
   740  00161A  D006               	goto	l1842
   741  00161C  5023               	movf	lcd_init@i+1,w,c
   742  00161E  E10F               	bnz	l1846
   743  001620  0E64               	movlw	100
   744  001622  5C22               	subwf	lcd_init@i,w,c
   745  001624  B0D8               	btfsc	status,0,c
   746  001626  D00B               	goto	l1846
   747  001628                     l1842:
   748                           
   749                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
   750  001628  0E9C               	movlw	156
   751  00162A  6E21               	movwf	??_lcd_init& (0+255),c
   752  00162C  0ED7               	movlw	215
   753  00162E                     u927:
   754  00162E  2EE8               	decfsz	wreg,f,c
   755  001630  D7FE               	goto	u927
   756  001632  2E21               	decfsz	??_lcd_init& (0+255),f,c
   757  001634  D7FC               	goto	u927
   758  001636  F000               	nop	
   759  001638  4A22               	infsnz	lcd_init@i,f,c
   760  00163A  2A23               	incf	lcd_init@i+1,f,c
   761  00163C  D7ED               	goto	l1838
   762  00163E                     l1846:
   763                           
   764                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
   765  00163E  0E33               	movlw	51
   766  001640  EC73  F00B         	call	_lcd_write_cmd
   767                           
   768                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
   769  001644  0E32               	movlw	50
   770  001646  EC73  F00B         	call	_lcd_write_cmd
   771                           
   772                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
   773  00164A  0E28               	movlw	40
   774  00164C  EC73  F00B         	call	_lcd_write_cmd
   775                           
   776                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
   777  001650  0E0E               	movlw	14
   778  001652  EC73  F00B         	call	_lcd_write_cmd
   779                           
   780                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
   781  001656  0E06               	movlw	6
   782  001658  EC73  F00B         	call	_lcd_write_cmd
   783                           
   784                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
   785  00165C  0E01               	movlw	1
   786  00165E  EC73  F00B         	call	_lcd_write_cmd
   787                           
   788                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
   789  001662  0E9C               	movlw	156
   790  001664  6E21               	movwf	??_lcd_init& (0+255),c
   791  001666  0ED7               	movlw	215
   792  001668                     u937:
   793  001668  2EE8               	decfsz	wreg,f,c
   794  00166A  D7FE               	goto	u937
   795  00166C  2E21               	decfsz	??_lcd_init& (0+255),f,c
   796  00166E  D7FC               	goto	u937
   797  001670  F000               	nop	
   798  001672  0012               	return		;funcret
   799  001674                     __end_of_lcd_init:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1l	equ	0xFE1
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function _displayAlarmOn *****************
   812 ;; Defined at:
   813 ;;		line 232 in file "Timer.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  Message        21    0[BANK0 ] unsigned char [21]
   818 ;;  msgindex        1   22[BANK0 ] unsigned char 
   819 ;;  outchar         1   21[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;		None               void
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         0       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0      23       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         0      23       0       0       0       0       0       0       0
   833 ;;Total ram usage:       23 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_lcd_write_cmd
   838 ;;		_lcd_write_data
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  00181E                     __ptext2:
   846                           	opt stack 0
   847  00181E                     _displayAlarmOn:
   848                           	opt stack 25
   849                           
   850                           ;Timer.c: 234: unsigned char msgindex, outchar;
   851                           ;Timer.c: 235: char Message[ ] = "Alarm On            ";
   852                           
   853                           ;incstack = 0
   854  00181E  EE20  F025         	lfsr	2,displayAlarmOn@F4498
   855  001822  EE10  F09F         	lfsr	1,displayAlarmOn@Message
   856  001826  0E14               	movlw	20
   857  001828                     u821:
   858  001828  CFDB FFE3          	movff	plusw2,plusw1
   859  00182C  06E8               	decf	wreg,f,c
   860  00182E  E2FC               	bc	u821
   861                           
   862                           ;Timer.c: 237: lcd_write_cmd(0xC0);
   863  001830  0EC0               	movlw	192
   864  001832  EC73  F00B         	call	_lcd_write_cmd
   865                           
   866                           ;Timer.c: 238: for (msgindex = 0; msgindex < 20; msgindex++)
   867  001836  0E00               	movlw	0
   868  001838  0100               	movlb	0	; () banked
   869  00183A  6FB5               	movwf	displayAlarmOn@msgindex& (0+255),b
   870  00183C                     l1950:
   871                           
   872                           ; BSR set to: 0
   873  00183C  0E13               	movlw	19
   874  00183E  0100               	movlb	0	; () banked
   875  001840  65B5               	cpfsgt	displayAlarmOn@msgindex& (0+255),b
   876  001842  D001               	goto	l1954
   877  001844  0012               	return	
   878  001846                     l1954:
   879                           
   880                           ; BSR set to: 0
   881                           ;Timer.c: 239: {
   882                           ;Timer.c: 240: outchar = Message[msgindex];
   883  001846  0100               	movlb	0	; () banked
   884  001848  51B5               	movf	displayAlarmOn@msgindex& (0+255),w,b
   885  00184A  0D01               	mullw	1
   886  00184C  0E9F               	movlw	low displayAlarmOn@Message
   887  00184E  24F3               	addwf	prodl,w,c
   888  001850  6ED9               	movwf	fsr2l,c
   889  001852  0E00               	movlw	high displayAlarmOn@Message
   890  001854  20F4               	addwfc	prodh,w,c
   891  001856  6EDA               	movwf	fsr2h,c
   892  001858  50DF               	movf	indf2,w,c
   893  00185A  0100               	movlb	0	; () banked
   894  00185C  6FB4               	movwf	displayAlarmOn@outchar& (0+255),b
   895                           
   896                           ; BSR set to: 0
   897                           ;Timer.c: 241: lcd_write_data(outchar);
   898  00185E  0100               	movlb	0	; () banked
   899  001860  51B4               	movf	displayAlarmOn@outchar& (0+255),w,b
   900  001862  ECF0  F009         	call	_lcd_write_data
   901  001866  0100               	movlb	0	; () banked
   902  001868  2BB5               	incf	displayAlarmOn@msgindex& (0+255),f,b
   903  00186A  D7E8               	goto	l1950
   904  00186C                     __end_of_displayAlarmOn:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           plusw1	equ	0xFE3
   916                           fsr1l	equ	0xFE1
   917                           indf2	equ	0xFDF
   918                           plusw2	equ	0xFDB
   919                           fsr2h	equ	0xFDA
   920                           fsr2l	equ	0xFD9
   921                           status	equ	0xFD8
   922                           
   923 ;; *************** function _displayAlarmOff *****************
   924 ;; Defined at:
   925 ;;		line 245 in file "Timer.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  Message        21    0[BANK0 ] unsigned char [21]
   930 ;;  msgindex        1   22[BANK0 ] unsigned char 
   931 ;;  outchar         1   21[BANK0 ] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   941 ;;      Params:         0       0       0       0       0       0       0       0       0
   942 ;;      Locals:         0      23       0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0
   944 ;;      Totals:         0      23       0       0       0       0       0       0       0
   945 ;;Total ram usage:       23 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    5
   948 ;; This function calls:
   949 ;;		_lcd_write_cmd
   950 ;;		_lcd_write_data
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text3
   957  00186C                     __ptext3:
   958                           	opt stack 0
   959  00186C                     _displayAlarmOff:
   960                           	opt stack 25
   961                           
   962                           ;Timer.c: 247: unsigned char msgindex, outchar;
   963                           ;Timer.c: 248: char Message[ ] = "Alarm Off           ";
   964                           
   965                           ; BSR set to: 0
   966                           ;incstack = 0
   967  00186C  EE20  F08A         	lfsr	2,displayAlarmOff@F4503
   968  001870  EE10  F09F         	lfsr	1,displayAlarmOff@Message
   969  001874  0E14               	movlw	20
   970  001876                     u851:
   971  001876  CFDB FFE3          	movff	plusw2,plusw1
   972  00187A  06E8               	decf	wreg,f,c
   973  00187C  E2FC               	bc	u851
   974                           
   975                           ;Timer.c: 250: lcd_write_cmd(0xC0);
   976  00187E  0EC0               	movlw	192
   977  001880  EC73  F00B         	call	_lcd_write_cmd
   978                           
   979                           ;Timer.c: 251: for (msgindex = 0; msgindex < 20; msgindex++)
   980  001884  0E00               	movlw	0
   981  001886  0100               	movlb	0	; () banked
   982  001888  6FB5               	movwf	displayAlarmOff@msgindex& (0+255),b
   983  00188A                     l1968:
   984                           
   985                           ; BSR set to: 0
   986  00188A  0E13               	movlw	19
   987  00188C  0100               	movlb	0	; () banked
   988  00188E  65B5               	cpfsgt	displayAlarmOff@msgindex& (0+255),b
   989  001890  D001               	goto	l1972
   990  001892  0012               	return	
   991  001894                     l1972:
   992                           
   993                           ; BSR set to: 0
   994                           ;Timer.c: 252: {
   995                           ;Timer.c: 253: outchar = Message[msgindex];
   996  001894  0100               	movlb	0	; () banked
   997  001896  51B5               	movf	displayAlarmOff@msgindex& (0+255),w,b
   998  001898  0D01               	mullw	1
   999  00189A  0E9F               	movlw	low displayAlarmOff@Message
  1000  00189C  24F3               	addwf	prodl,w,c
  1001  00189E  6ED9               	movwf	fsr2l,c
  1002  0018A0  0E00               	movlw	high displayAlarmOff@Message
  1003  0018A2  20F4               	addwfc	prodh,w,c
  1004  0018A4  6EDA               	movwf	fsr2h,c
  1005  0018A6  50DF               	movf	indf2,w,c
  1006  0018A8  0100               	movlb	0	; () banked
  1007  0018AA  6FB4               	movwf	displayAlarmOff@outchar& (0+255),b
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;Timer.c: 254: lcd_write_data(outchar);
  1011  0018AC  0100               	movlb	0	; () banked
  1012  0018AE  51B4               	movf	displayAlarmOff@outchar& (0+255),w,b
  1013  0018B0  ECF0  F009         	call	_lcd_write_data
  1014  0018B4  0100               	movlb	0	; () banked
  1015  0018B6  2BB5               	incf	displayAlarmOff@msgindex& (0+255),f,b
  1016  0018B8  D7E8               	goto	l1968
  1017  0018BA                     __end_of_displayAlarmOff:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           prodh	equ	0xFF4
  1024                           prodl	equ	0xFF3
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           plusw1	equ	0xFE3
  1029                           fsr1l	equ	0xFE1
  1030                           indf2	equ	0xFDF
  1031                           plusw2	equ	0xFDB
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _SetupTimerInterruptRegisters *****************
  1037 ;; Defined at:
  1038 ;;		line 196 in file "Timer.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text4
  1067  0019FC                     __ptext4:
  1068                           	opt stack 0
  1069  0019FC                     _SetupTimerInterruptRegisters:
  1070                           	opt stack 27
  1071                           
  1072                           ;Timer.c: 198: RCONbits.IPEN =1;
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;incstack = 0
  1076  0019FC  8ED0               	bsf	4048,7,c	;volatile
  1077                           
  1078                           ;Timer.c: 202: INTCONbits.GIEH =1;
  1079  0019FE  8EF2               	bsf	intcon,7,c	;volatile
  1080                           
  1081                           ;Timer.c: 207: T0CON = 0b00000000;
  1082  001A00  0E00               	movlw	0
  1083  001A02  6ED5               	movwf	4053,c	;volatile
  1084                           
  1085                           ;Timer.c: 215: INTCON2 = 0b10000100;
  1086  001A04  0E84               	movlw	132
  1087  001A06  6EF1               	movwf	intcon2,c	;volatile
  1088                           
  1089                           ;Timer.c: 220: TMR0H = 0x48;
  1090  001A08  0E48               	movlw	72
  1091  001A0A  6ED7               	movwf	4055,c	;volatile
  1092                           
  1093                           ;Timer.c: 221: TMR0L = 0xE5;
  1094  001A0C  0EE5               	movlw	229
  1095  001A0E  6ED6               	movwf	4054,c	;volatile
  1096                           
  1097                           ;Timer.c: 223: T0CONbits.TMR0ON = 1;
  1098  001A10  8ED5               	bsf	4053,7,c	;volatile
  1099                           
  1100                           ;Timer.c: 224: INTCONbits.TMR0IE = 1;
  1101  001A12  8AF2               	bsf	intcon,5,c	;volatile
  1102                           
  1103                           ;Timer.c: 227: INTCONbits.TMR0IF = 0;
  1104  001A14  94F2               	bcf	intcon,2,c	;volatile
  1105  001A16  0012               	return		;funcret
  1106  001A18                     __end_of_SetupTimerInterruptRegisters:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           prodh	equ	0xFF4
  1113                           prodl	equ	0xFF3
  1114                           intcon	equ	0xFF2
  1115                           intcon2	equ	0xFF1
  1116                           postinc0	equ	0xFEE
  1117                           wreg	equ	0xFE8
  1118                           postdec1	equ	0xFE5
  1119                           plusw1	equ	0xFE3
  1120                           fsr1l	equ	0xFE1
  1121                           indf2	equ	0xFDF
  1122                           plusw2	equ	0xFDB
  1123                           fsr2h	equ	0xFDA
  1124                           fsr2l	equ	0xFD9
  1125                           status	equ	0xFD8
  1126                           
  1127 ;; *************** function _SetupTime *****************
  1128 ;; Defined at:
  1129 ;;		line 109 in file "Timer.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1134 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1135 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1136 ;;  second1         1   46[BANK0 ] unsigned char 
  1137 ;;  second10        1   45[BANK0 ] unsigned char 
  1138 ;;  minute1         1   44[BANK0 ] unsigned char 
  1139 ;;  minute10        1   43[BANK0 ] unsigned char 
  1140 ;;  hour1           1   42[BANK0 ] unsigned char 
  1141 ;;  hour10          1   41[BANK0 ] unsigned char 
  1142 ;;  outchar         1   40[BANK0 ] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0
  1153 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1155 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1156 ;;Total ram usage:       30 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    5
  1159 ;; This function calls:
  1160 ;;		_char_2_int
  1161 ;;		_delay_ms
  1162 ;;		_getkey
  1163 ;;		_lcd_write_cmd
  1164 ;;		_lcd_write_data
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text5
  1171  0011B2                     __ptext5:
  1172                           	opt stack 0
  1173  0011B2                     _SetupTime:
  1174                           	opt stack 25
  1175                           
  1176                           ;Timer.c: 111: unsigned char msgindex, outchar, ctemp;
  1177                           ;Timer.c: 112: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1178                           ;Timer.c: 113: char Message[ ] = "Set time hhmmss:    ";
  1179                           
  1180                           ;incstack = 0
  1181  0011B2  EE20  F075         	lfsr	2,SetupTime@F4482
  1182  0011B6  EE10  F0B2         	lfsr	1,SetupTime@Message
  1183  0011BA  0E14               	movlw	20
  1184  0011BC                     u761:
  1185  0011BC  CFDB FFE3          	movff	plusw2,plusw1
  1186  0011C0  06E8               	decf	wreg,f,c
  1187  0011C2  E2FC               	bc	u761
  1188                           
  1189                           ;Timer.c: 115: lcd_write_cmd(0x80);
  1190  0011C4  0E80               	movlw	128
  1191  0011C6  EC73  F00B         	call	_lcd_write_cmd
  1192                           
  1193                           ;Timer.c: 117: for (msgindex = 0; msgindex < 20; msgindex++)
  1194  0011CA  0E00               	movlw	0
  1195  0011CC  0100               	movlb	0	; () banked
  1196  0011CE  6FCE               	movwf	SetupTime@msgindex& (0+255),b
  1197  0011D0                     l1856:
  1198                           
  1199                           ; BSR set to: 0
  1200  0011D0  0E13               	movlw	19
  1201  0011D2  0100               	movlb	0	; () banked
  1202  0011D4  65CE               	cpfsgt	SetupTime@msgindex& (0+255),b
  1203  0011D6  D001               	goto	l1860
  1204  0011D8  D013               	goto	l1868
  1205  0011DA                     l1860:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;Timer.c: 118: {
  1209                           ;Timer.c: 119: outchar = Message[msgindex];
  1210  0011DA  0100               	movlb	0	; () banked
  1211  0011DC  51CE               	movf	SetupTime@msgindex& (0+255),w,b
  1212  0011DE  0D01               	mullw	1
  1213  0011E0  0EB2               	movlw	low SetupTime@Message
  1214  0011E2  24F3               	addwf	prodl,w,c
  1215  0011E4  6ED9               	movwf	fsr2l,c
  1216  0011E6  0E00               	movlw	high SetupTime@Message
  1217  0011E8  20F4               	addwfc	prodh,w,c
  1218  0011EA  6EDA               	movwf	fsr2h,c
  1219  0011EC  50DF               	movf	indf2,w,c
  1220  0011EE  0100               	movlb	0	; () banked
  1221  0011F0  6FC7               	movwf	SetupTime@outchar& (0+255),b
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;Timer.c: 120: lcd_write_data(outchar);
  1225  0011F2  0100               	movlb	0	; () banked
  1226  0011F4  51C7               	movf	SetupTime@outchar& (0+255),w,b
  1227  0011F6  ECF0  F009         	call	_lcd_write_data
  1228  0011FA  0100               	movlb	0	; () banked
  1229  0011FC  2BCE               	incf	SetupTime@msgindex& (0+255),f,b
  1230  0011FE  D7E8               	goto	l1856
  1231  001200                     l1868:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;Timer.c: 121: }
  1235                           ;Timer.c: 123: lcd_write_cmd(0xC0);
  1236  001200  0EC0               	movlw	192
  1237  001202  EC73  F00B         	call	_lcd_write_cmd
  1238                           
  1239                           ;Timer.c: 125: ctemp=getkey();
  1240  001206  ECA3  F00C         	call	_getkey	;wreg free
  1241  00120A  0100               	movlb	0	; () banked
  1242  00120C  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;Timer.c: 126: lcd_write_data(ctemp);
  1246  00120E  0100               	movlb	0	; () banked
  1247  001210  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1248  001212  ECF0  F009         	call	_lcd_write_data
  1249                           
  1250                           ;Timer.c: 127: hour10 = char_2_int (ctemp);
  1251  001216  0100               	movlb	0	; () banked
  1252  001218  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1253  00121A  EC3A  F00B         	call	_char_2_int
  1254  00121E  0100               	movlb	0	; () banked
  1255  001220  6FC8               	movwf	SetupTime@hour10& (0+255),b
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;Timer.c: 129: ctemp=getkey();
  1259  001222  ECA3  F00C         	call	_getkey	;wreg free
  1260  001226  0100               	movlb	0	; () banked
  1261  001228  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1262                           
  1263                           ;Timer.c: 130: lcd_write_data(ctemp);
  1264  00122A  0100               	movlb	0	; () banked
  1265  00122C  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1266  00122E  ECF0  F009         	call	_lcd_write_data
  1267                           
  1268                           ;Timer.c: 131: hour1 = char_2_int (ctemp);
  1269  001232  0100               	movlb	0	; () banked
  1270  001234  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1271  001236  EC3A  F00B         	call	_char_2_int
  1272  00123A  0100               	movlb	0	; () banked
  1273  00123C  6FC9               	movwf	SetupTime@hour1& (0+255),b
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Timer.c: 133: ctemp=getkey();
  1277  00123E  ECA3  F00C         	call	_getkey	;wreg free
  1278  001242  0100               	movlb	0	; () banked
  1279  001244  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;Timer.c: 134: lcd_write_data(ctemp);
  1283  001246  0100               	movlb	0	; () banked
  1284  001248  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1285  00124A  ECF0  F009         	call	_lcd_write_data
  1286                           
  1287                           ;Timer.c: 135: minute10 = char_2_int (ctemp);
  1288  00124E  0100               	movlb	0	; () banked
  1289  001250  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1290  001252  EC3A  F00B         	call	_char_2_int
  1291  001256  0100               	movlb	0	; () banked
  1292  001258  6FCA               	movwf	SetupTime@minute10& (0+255),b
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;Timer.c: 137: ctemp=getkey();
  1296  00125A  ECA3  F00C         	call	_getkey	;wreg free
  1297  00125E  0100               	movlb	0	; () banked
  1298  001260  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1299                           
  1300                           ;Timer.c: 138: lcd_write_data(ctemp);
  1301  001262  0100               	movlb	0	; () banked
  1302  001264  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1303  001266  ECF0  F009         	call	_lcd_write_data
  1304                           
  1305                           ;Timer.c: 139: minute1 = char_2_int (ctemp);
  1306  00126A  0100               	movlb	0	; () banked
  1307  00126C  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1308  00126E  EC3A  F00B         	call	_char_2_int
  1309  001272  0100               	movlb	0	; () banked
  1310  001274  6FCB               	movwf	SetupTime@minute1& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;Timer.c: 141: ctemp=getkey();
  1314  001276  ECA3  F00C         	call	_getkey	;wreg free
  1315  00127A  0100               	movlb	0	; () banked
  1316  00127C  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;Timer.c: 142: lcd_write_data(ctemp);
  1320  00127E  0100               	movlb	0	; () banked
  1321  001280  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1322  001282  ECF0  F009         	call	_lcd_write_data
  1323                           
  1324                           ;Timer.c: 143: second10 = char_2_int (ctemp);
  1325  001286  0100               	movlb	0	; () banked
  1326  001288  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1327  00128A  EC3A  F00B         	call	_char_2_int
  1328  00128E  0100               	movlb	0	; () banked
  1329  001290  6FCC               	movwf	SetupTime@second10& (0+255),b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;Timer.c: 145: ctemp=getkey();
  1333  001292  ECA3  F00C         	call	_getkey	;wreg free
  1334  001296  0100               	movlb	0	; () banked
  1335  001298  6FCF               	movwf	SetupTime@ctemp& (0+255),b
  1336                           
  1337                           ;Timer.c: 146: lcd_write_data(ctemp);
  1338  00129A  0100               	movlb	0	; () banked
  1339  00129C  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1340  00129E  ECF0  F009         	call	_lcd_write_data
  1341                           
  1342                           ;Timer.c: 147: second1 = char_2_int (ctemp);
  1343  0012A2  0100               	movlb	0	; () banked
  1344  0012A4  51CF               	movf	SetupTime@ctemp& (0+255),w,b
  1345  0012A6  EC3A  F00B         	call	_char_2_int
  1346  0012AA  0100               	movlb	0	; () banked
  1347  0012AC  6FCD               	movwf	SetupTime@second1& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;Timer.c: 149: hour = hour10 * 10 + hour1;
  1351  0012AE  0100               	movlb	0	; () banked
  1352  0012B0  51C8               	movf	SetupTime@hour10& (0+255),w,b
  1353  0012B2  0D0A               	mullw	10
  1354  0012B4  50F3               	movf	prodl,w,c
  1355  0012B6  0100               	movlb	0	; () banked
  1356  0012B8  25C9               	addwf	SetupTime@hour1& (0+255),w,b
  1357  0012BA  6E3A               	movwf	_hour,c
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;Timer.c: 150: minute = minute10 * 10 + minute1;
  1361  0012BC  0100               	movlb	0	; () banked
  1362  0012BE  51CA               	movf	SetupTime@minute10& (0+255),w,b
  1363  0012C0  0D0A               	mullw	10
  1364  0012C2  50F3               	movf	prodl,w,c
  1365  0012C4  0100               	movlb	0	; () banked
  1366  0012C6  25CB               	addwf	SetupTime@minute1& (0+255),w,b
  1367  0012C8  6E3C               	movwf	_minute,c
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;Timer.c: 151: second = second10 * 10 + second1;
  1371  0012CA  0100               	movlb	0	; () banked
  1372  0012CC  51CC               	movf	SetupTime@second10& (0+255),w,b
  1373  0012CE  0D0A               	mullw	10
  1374  0012D0  50F3               	movf	prodl,w,c
  1375  0012D2  0100               	movlb	0	; () banked
  1376  0012D4  25CD               	addwf	SetupTime@second1& (0+255),w,b
  1377  0012D6  6E3E               	movwf	_second,c
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;Timer.c: 153: delay_ms(500);
  1381  0012D8  0E01               	movlw	1
  1382  0012DA  6E1E               	movwf	delay_ms@i+1,c
  1383  0012DC  0EF4               	movlw	244
  1384  0012DE  6E1D               	movwf	delay_ms@i,c
  1385  0012E0  ECC2  F00C         	call	_delay_ms	;wreg free
  1386                           
  1387                           ;Timer.c: 154: lcd_write_cmd(0x01);
  1388  0012E4  0E01               	movlw	1
  1389  0012E6  EC73  F00B         	call	_lcd_write_cmd
  1390  0012EA  0012               	return		;funcret
  1391  0012EC                     __end_of_SetupTime:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           intcon	equ	0xFF2
  1400                           intcon2	equ	0xFF1
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           plusw1	equ	0xFE3
  1405                           fsr1l	equ	0xFE1
  1406                           indf2	equ	0xFDF
  1407                           plusw2	equ	0xFDB
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _SetupAlarmTime *****************
  1413 ;; Defined at:
  1414 ;;		line 157 in file "Timer.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1419 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1420 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1421 ;;  minute1         1   44[BANK0 ] unsigned char 
  1422 ;;  minute10        1   43[BANK0 ] unsigned char 
  1423 ;;  hour1           1   42[BANK0 ] unsigned char 
  1424 ;;  hour10          1   41[BANK0 ] unsigned char 
  1425 ;;  outchar         1   40[BANK0 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;		None               void
  1428 ;; Registers used:
  1429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0
  1436 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1438 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1439 ;;Total ram usage:       28 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    5
  1442 ;; This function calls:
  1443 ;;		_char_2_int
  1444 ;;		_delay_ms
  1445 ;;		_getkey
  1446 ;;		_lcd_write_cmd
  1447 ;;		_lcd_write_data
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text6
  1454  0012EC                     __ptext6:
  1455                           	opt stack 0
  1456  0012EC                     _SetupAlarmTime:
  1457                           	opt stack 25
  1458                           
  1459                           ;Timer.c: 159: unsigned char msgindex, outchar, ctemp;
  1460                           ;Timer.c: 160: unsigned char hour10, hour1, minute10, minute1;
  1461                           ;Timer.c: 161: char Message[ ] = "Set alarm time hhmm:";
  1462                           
  1463                           ;incstack = 0
  1464  0012EC  EE20  F060         	lfsr	2,SetupAlarmTime@F4492
  1465  0012F0  EE10  F0B2         	lfsr	1,SetupAlarmTime@Message
  1466  0012F4  0E14               	movlw	20
  1467  0012F6                     u791:
  1468  0012F6  CFDB FFE3          	movff	plusw2,plusw1
  1469  0012FA  06E8               	decf	wreg,f,c
  1470  0012FC  E2FC               	bc	u791
  1471                           
  1472                           ;Timer.c: 163: lcd_write_cmd(0x80);
  1473  0012FE  0E80               	movlw	128
  1474  001300  EC73  F00B         	call	_lcd_write_cmd
  1475                           
  1476                           ;Timer.c: 165: for (msgindex = 0; msgindex < 20; msgindex++)
  1477  001304  0E00               	movlw	0
  1478  001306  0100               	movlb	0	; () banked
  1479  001308  6FCC               	movwf	SetupAlarmTime@msgindex& (0+255),b
  1480  00130A                     l1910:
  1481                           
  1482                           ; BSR set to: 0
  1483  00130A  0E13               	movlw	19
  1484  00130C  0100               	movlb	0	; () banked
  1485  00130E  65CC               	cpfsgt	SetupAlarmTime@msgindex& (0+255),b
  1486  001310  D001               	goto	l1914
  1487  001312  D013               	goto	l1922
  1488  001314                     l1914:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;Timer.c: 166: {
  1492                           ;Timer.c: 167: outchar = Message[msgindex];
  1493  001314  0100               	movlb	0	; () banked
  1494  001316  51CC               	movf	SetupAlarmTime@msgindex& (0+255),w,b
  1495  001318  0D01               	mullw	1
  1496  00131A  0EB2               	movlw	low SetupAlarmTime@Message
  1497  00131C  24F3               	addwf	prodl,w,c
  1498  00131E  6ED9               	movwf	fsr2l,c
  1499  001320  0E00               	movlw	high SetupAlarmTime@Message
  1500  001322  20F4               	addwfc	prodh,w,c
  1501  001324  6EDA               	movwf	fsr2h,c
  1502  001326  50DF               	movf	indf2,w,c
  1503  001328  0100               	movlb	0	; () banked
  1504  00132A  6FC7               	movwf	SetupAlarmTime@outchar& (0+255),b
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Timer.c: 168: lcd_write_data(outchar);
  1508  00132C  0100               	movlb	0	; () banked
  1509  00132E  51C7               	movf	SetupAlarmTime@outchar& (0+255),w,b
  1510  001330  ECF0  F009         	call	_lcd_write_data
  1511  001334  0100               	movlb	0	; () banked
  1512  001336  2BCC               	incf	SetupAlarmTime@msgindex& (0+255),f,b
  1513  001338  D7E8               	goto	l1910
  1514  00133A                     l1922:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;Timer.c: 169: }
  1518                           ;Timer.c: 171: lcd_write_cmd(0xC0);
  1519  00133A  0EC0               	movlw	192
  1520  00133C  EC73  F00B         	call	_lcd_write_cmd
  1521                           
  1522                           ;Timer.c: 173: ctemp=getkey();
  1523  001340  ECA3  F00C         	call	_getkey	;wreg free
  1524  001344  0100               	movlb	0	; () banked
  1525  001346  6FCD               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;Timer.c: 174: lcd_write_data(ctemp);
  1529  001348  0100               	movlb	0	; () banked
  1530  00134A  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1531  00134C  ECF0  F009         	call	_lcd_write_data
  1532                           
  1533                           ;Timer.c: 175: hour10 = char_2_int (ctemp);
  1534  001350  0100               	movlb	0	; () banked
  1535  001352  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1536  001354  EC3A  F00B         	call	_char_2_int
  1537  001358  0100               	movlb	0	; () banked
  1538  00135A  6FC8               	movwf	SetupAlarmTime@hour10& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;Timer.c: 177: ctemp=getkey();
  1542  00135C  ECA3  F00C         	call	_getkey	;wreg free
  1543  001360  0100               	movlb	0	; () banked
  1544  001362  6FCD               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1545                           
  1546                           ;Timer.c: 178: lcd_write_data(ctemp);
  1547  001364  0100               	movlb	0	; () banked
  1548  001366  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1549  001368  ECF0  F009         	call	_lcd_write_data
  1550                           
  1551                           ;Timer.c: 179: hour1 = char_2_int (ctemp);
  1552  00136C  0100               	movlb	0	; () banked
  1553  00136E  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1554  001370  EC3A  F00B         	call	_char_2_int
  1555  001374  0100               	movlb	0	; () banked
  1556  001376  6FC9               	movwf	SetupAlarmTime@hour1& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;Timer.c: 181: ctemp=getkey();
  1560  001378  ECA3  F00C         	call	_getkey	;wreg free
  1561  00137C  0100               	movlb	0	; () banked
  1562  00137E  6FCD               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;Timer.c: 182: lcd_write_data(ctemp);
  1566  001380  0100               	movlb	0	; () banked
  1567  001382  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1568  001384  ECF0  F009         	call	_lcd_write_data
  1569                           
  1570                           ;Timer.c: 183: minute10 = char_2_int (ctemp);
  1571  001388  0100               	movlb	0	; () banked
  1572  00138A  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1573  00138C  EC3A  F00B         	call	_char_2_int
  1574  001390  0100               	movlb	0	; () banked
  1575  001392  6FCA               	movwf	SetupAlarmTime@minute10& (0+255),b
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;Timer.c: 185: ctemp=getkey();
  1579  001394  ECA3  F00C         	call	_getkey	;wreg free
  1580  001398  0100               	movlb	0	; () banked
  1581  00139A  6FCD               	movwf	SetupAlarmTime@ctemp& (0+255),b
  1582                           
  1583                           ;Timer.c: 186: lcd_write_data(ctemp);
  1584  00139C  0100               	movlb	0	; () banked
  1585  00139E  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1586  0013A0  ECF0  F009         	call	_lcd_write_data
  1587                           
  1588                           ;Timer.c: 187: minute1 = char_2_int (ctemp);
  1589  0013A4  0100               	movlb	0	; () banked
  1590  0013A6  51CD               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  1591  0013A8  EC3A  F00B         	call	_char_2_int
  1592  0013AC  0100               	movlb	0	; () banked
  1593  0013AE  6FCB               	movwf	SetupAlarmTime@minute1& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;Timer.c: 189: hourA = hour10 * 10 + hour1;
  1597  0013B0  0100               	movlb	0	; () banked
  1598  0013B2  51C8               	movf	SetupAlarmTime@hour10& (0+255),w,b
  1599  0013B4  0D0A               	mullw	10
  1600  0013B6  50F3               	movf	prodl,w,c
  1601  0013B8  0100               	movlb	0	; () banked
  1602  0013BA  25C9               	addwf	SetupAlarmTime@hour1& (0+255),w,b
  1603  0013BC  6E3B               	movwf	_hourA,c
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;Timer.c: 190: minuteA = minute10 * 10 + minute1;
  1607  0013BE  0100               	movlb	0	; () banked
  1608  0013C0  51CA               	movf	SetupAlarmTime@minute10& (0+255),w,b
  1609  0013C2  0D0A               	mullw	10
  1610  0013C4  50F3               	movf	prodl,w,c
  1611  0013C6  0100               	movlb	0	; () banked
  1612  0013C8  25CB               	addwf	SetupAlarmTime@minute1& (0+255),w,b
  1613  0013CA  6E3D               	movwf	_minuteA,c
  1614                           
  1615                           ;Timer.c: 192: delay_ms(500);
  1616  0013CC  0E01               	movlw	1
  1617  0013CE  6E1E               	movwf	delay_ms@i+1,c
  1618  0013D0  0EF4               	movlw	244
  1619  0013D2  6E1D               	movwf	delay_ms@i,c
  1620  0013D4  ECC2  F00C         	call	_delay_ms	;wreg free
  1621                           
  1622                           ;Timer.c: 193: lcd_write_cmd(0x01);
  1623  0013D8  0E01               	movlw	1
  1624  0013DA  EC73  F00B         	call	_lcd_write_cmd
  1625  0013DE  0012               	return		;funcret
  1626  0013E0                     __end_of_SetupAlarmTime:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           prodh	equ	0xFF4
  1633                           prodl	equ	0xFF3
  1634                           intcon	equ	0xFF2
  1635                           intcon2	equ	0xFF1
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postdec1	equ	0xFE5
  1639                           plusw1	equ	0xFE3
  1640                           fsr1l	equ	0xFE1
  1641                           indf2	equ	0xFDF
  1642                           plusw2	equ	0xFDB
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _lcd_write_data *****************
  1648 ;; Defined at:
  1649 ;;		line 43 in file "lcd_utilities.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  data            1    wreg     unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  data            1   30[COMRAM] unsigned char 
  1654 ;;  temp1           1   31[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        3 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    4
  1671 ;; This function calls:
  1672 ;;		_lcd_strobe
  1673 ;; This function is called by:
  1674 ;;		_SetupTime
  1675 ;;		_SetupAlarmTime
  1676 ;;		_displayAlarmOn
  1677 ;;		_displayAlarmOff
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text7
  1682  0013E0                     __ptext7:
  1683                           	opt stack 0
  1684  0013E0                     _lcd_write_data:
  1685                           	opt stack 25
  1686                           
  1687                           ;incstack = 0
  1688                           ;lcd_write_data@data stored from wreg
  1689  0013E0  6E1F               	movwf	lcd_write_data@data,c
  1690                           
  1691                           ;lcd_utilities.c: 45: char temp1;
  1692                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  1693  0013E2  8C83               	bsf	3971,6,c	;volatile
  1694                           
  1695                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  1696  0013E4  0E3F               	movlw	63
  1697  0013E6  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1698  0013E8  0E55               	movlw	85
  1699  0013EA                     u947:
  1700  0013EA  2EE8               	decfsz	wreg,f,c
  1701  0013EC  D7FE               	goto	u947
  1702  0013EE  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1703  0013F0  D7FC               	goto	u947
  1704  0013F2  F000               	nop	
  1705                           
  1706                           ;lcd_utilities.c: 50: temp1 = data;
  1707  0013F4  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1708                           
  1709                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  1710  0013F8  3820               	swapf	lcd_write_data@temp1,w,c
  1711  0013FA  0B0F               	andlw	15
  1712  0013FC  6E20               	movwf	lcd_write_data@temp1,c
  1713                           
  1714                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  1715  0013FE  5020               	movf	lcd_write_data@temp1,w,c
  1716  001400  0B0F               	andlw	15
  1717  001402  6E83               	movwf	3971,c	;volatile
  1718                           
  1719                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  1720  001404  0E7D               	movlw	125
  1721  001406  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1722  001408  0EAC               	movlw	172
  1723  00140A                     u957:
  1724  00140A  2EE8               	decfsz	wreg,f,c
  1725  00140C  D7FE               	goto	u957
  1726  00140E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1727  001410  D7FC               	goto	u957
  1728                           
  1729                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  1730  001412  8C83               	bsf	3971,6,c	;volatile
  1731                           
  1732                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  1733  001414  0E7D               	movlw	125
  1734  001416  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1735  001418  0EAC               	movlw	172
  1736  00141A                     u967:
  1737  00141A  2EE8               	decfsz	wreg,f,c
  1738  00141C  D7FE               	goto	u967
  1739  00141E  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1740  001420  D7FC               	goto	u967
  1741                           
  1742                           ;lcd_utilities.c: 57: lcd_strobe();
  1743  001422  ECDC  F00C         	call	_lcd_strobe	;wreg free
  1744                           
  1745                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  1746  001426  0E7D               	movlw	125
  1747  001428  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1748  00142A  0EAC               	movlw	172
  1749  00142C                     u977:
  1750  00142C  2EE8               	decfsz	wreg,f,c
  1751  00142E  D7FE               	goto	u977
  1752  001430  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1753  001432  D7FC               	goto	u977
  1754                           
  1755                           ;lcd_utilities.c: 60: temp1 = data;
  1756  001434  C01F  F020         	movff	lcd_write_data@data,lcd_write_data@temp1
  1757                           
  1758                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  1759  001438  5020               	movf	lcd_write_data@temp1,w,c
  1760  00143A  0B0F               	andlw	15
  1761  00143C  6E83               	movwf	3971,c	;volatile
  1762                           
  1763                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  1764  00143E  0E7D               	movlw	125
  1765  001440  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1766  001442  0EAC               	movlw	172
  1767  001444                     u987:
  1768  001444  2EE8               	decfsz	wreg,f,c
  1769  001446  D7FE               	goto	u987
  1770  001448  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1771  00144A  D7FC               	goto	u987
  1772                           
  1773                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  1774  00144C  8C83               	bsf	3971,6,c	;volatile
  1775                           
  1776                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  1777  00144E  0E9C               	movlw	156
  1778  001450  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1779  001452  0ED7               	movlw	215
  1780  001454                     u997:
  1781  001454  2EE8               	decfsz	wreg,f,c
  1782  001456  D7FE               	goto	u997
  1783  001458  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1784  00145A  D7FC               	goto	u997
  1785  00145C  F000               	nop	
  1786                           
  1787                           ;lcd_utilities.c: 66: lcd_strobe();
  1788  00145E  ECDC  F00C         	call	_lcd_strobe	;wreg free
  1789                           
  1790                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  1791  001462  0E9C               	movlw	156
  1792  001464  6E1E               	movwf	??_lcd_write_data& (0+255),c
  1793  001466  0ED7               	movlw	215
  1794  001468                     u1007:
  1795  001468  2EE8               	decfsz	wreg,f,c
  1796  00146A  D7FE               	goto	u1007
  1797  00146C  2E1E               	decfsz	??_lcd_write_data& (0+255),f,c
  1798  00146E  D7FC               	goto	u1007
  1799  001470  F000               	nop	
  1800  001472  0012               	return		;funcret
  1801  001474                     __end_of_lcd_write_data:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           intcon2	equ	0xFF1
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           plusw1	equ	0xFE3
  1815                           fsr1l	equ	0xFE1
  1816                           indf2	equ	0xFDF
  1817                           plusw2	equ	0xFDB
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _lcd_write_cmd *****************
  1823 ;; Defined at:
  1824 ;;		line 18 in file "lcd_utilities.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  cmd             1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  cmd             1   30[COMRAM] unsigned char 
  1829 ;;  temp2           1   31[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;		None               void
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    4
  1846 ;; This function calls:
  1847 ;;		_lcd_strobe
  1848 ;; This function is called by:
  1849 ;;		_lcd_init
  1850 ;;		_SetupTime
  1851 ;;		_SetupAlarmTime
  1852 ;;		_displayAlarmOn
  1853 ;;		_displayAlarmOff
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text8
  1858  0016E6                     __ptext8:
  1859                           	opt stack 0
  1860  0016E6                     _lcd_write_cmd:
  1861                           	opt stack 25
  1862                           
  1863                           ;incstack = 0
  1864                           ;lcd_write_cmd@cmd stored from wreg
  1865  0016E6  6E1F               	movwf	lcd_write_cmd@cmd,c
  1866                           
  1867                           ;lcd_utilities.c: 20: unsigned char temp2;
  1868                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  1869  0016E8  9C83               	bcf	3971,6,c	;volatile
  1870                           
  1871                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  1872  0016EA  0E3F               	movlw	63
  1873  0016EC  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1874  0016EE  0E55               	movlw	85
  1875  0016F0                     u1017:
  1876  0016F0  2EE8               	decfsz	wreg,f,c
  1877  0016F2  D7FE               	goto	u1017
  1878  0016F4  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1879  0016F6  D7FC               	goto	u1017
  1880  0016F8  F000               	nop	
  1881                           
  1882                           ;lcd_utilities.c: 23: temp2 = cmd;
  1883  0016FA  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1884                           
  1885                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  1886  0016FE  3820               	swapf	lcd_write_cmd@temp2,w,c
  1887  001700  0B0F               	andlw	15
  1888  001702  6E20               	movwf	lcd_write_cmd@temp2,c
  1889                           
  1890                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  1891  001704  5020               	movf	lcd_write_cmd@temp2,w,c
  1892  001706  0B0F               	andlw	15
  1893  001708  6E83               	movwf	3971,c	;volatile
  1894                           
  1895                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  1896  00170A  0E7D               	movlw	125
  1897  00170C  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1898  00170E  0EAC               	movlw	172
  1899  001710                     u1027:
  1900  001710  2EE8               	decfsz	wreg,f,c
  1901  001712  D7FE               	goto	u1027
  1902  001714  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1903  001716  D7FC               	goto	u1027
  1904                           
  1905                           ;lcd_utilities.c: 28: lcd_strobe();
  1906  001718  ECDC  F00C         	call	_lcd_strobe	;wreg free
  1907                           
  1908                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  1909  00171C  0E7D               	movlw	125
  1910  00171E  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1911  001720  0EAC               	movlw	172
  1912  001722                     u1037:
  1913  001722  2EE8               	decfsz	wreg,f,c
  1914  001724  D7FE               	goto	u1037
  1915  001726  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1916  001728  D7FC               	goto	u1037
  1917                           
  1918                           ;lcd_utilities.c: 32: temp2 = cmd;
  1919  00172A  C01F  F020         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1920                           
  1921                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  1922  00172E  5020               	movf	lcd_write_cmd@temp2,w,c
  1923  001730  0B0F               	andlw	15
  1924  001732  6E83               	movwf	3971,c	;volatile
  1925                           
  1926                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  1927  001734  0E7D               	movlw	125
  1928  001736  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1929  001738  0EAC               	movlw	172
  1930  00173A                     u1047:
  1931  00173A  2EE8               	decfsz	wreg,f,c
  1932  00173C  D7FE               	goto	u1047
  1933  00173E  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1934  001740  D7FC               	goto	u1047
  1935                           
  1936                           ;lcd_utilities.c: 36: lcd_strobe();
  1937  001742  ECDC  F00C         	call	_lcd_strobe	;wreg free
  1938                           
  1939                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  1940  001746  0E7D               	movlw	125
  1941  001748  6E1E               	movwf	??_lcd_write_cmd& (0+255),c
  1942  00174A  0EAC               	movlw	172
  1943  00174C                     u1057:
  1944  00174C  2EE8               	decfsz	wreg,f,c
  1945  00174E  D7FE               	goto	u1057
  1946  001750  2E1E               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1947  001752  D7FC               	goto	u1057
  1948  001754  0012               	return		;funcret
  1949  001756                     __end_of_lcd_write_cmd:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           intcon	equ	0xFF2
  1958                           intcon2	equ	0xFF1
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           plusw1	equ	0xFE3
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           plusw2	equ	0xFDB
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _lcd_strobe *****************
  1971 ;; Defined at:
  1972 ;;		line 73 in file "lcd_utilities.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;		None               void
  1979 ;; Registers used:
  1980 ;;		wreg
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1988 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    3
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_lcd_write_cmd
  1997 ;;		_lcd_write_data
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text9
  2002  0019B8                     __ptext9:
  2003                           	opt stack 0
  2004  0019B8                     _lcd_strobe:
  2005                           	opt stack 25
  2006                           
  2007                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2008                           
  2009                           ;incstack = 0
  2010  0019B8  8883               	bsf	3971,4,c	;volatile
  2011                           
  2012                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2013  0019BA  0E7D               	movlw	125
  2014  0019BC  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2015  0019BE  0EAC               	movlw	172
  2016  0019C0                     u1067:
  2017  0019C0  2EE8               	decfsz	wreg,f,c
  2018  0019C2  D7FE               	goto	u1067
  2019  0019C4  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2020  0019C6  D7FC               	goto	u1067
  2021                           
  2022                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2023  0019C8  9883               	bcf	3971,4,c	;volatile
  2024                           
  2025                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2026  0019CA  0E7D               	movlw	125
  2027  0019CC  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2028  0019CE  0EAC               	movlw	172
  2029  0019D0                     u1077:
  2030  0019D0  2EE8               	decfsz	wreg,f,c
  2031  0019D2  D7FE               	goto	u1077
  2032  0019D4  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2033  0019D6  D7FC               	goto	u1077
  2034  0019D8  0012               	return		;funcret
  2035  0019DA                     __end_of_lcd_strobe:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           intcon	equ	0xFF2
  2044                           intcon2	equ	0xFF1
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           postdec1	equ	0xFE5
  2048                           plusw1	equ	0xFE3
  2049                           fsr1l	equ	0xFE1
  2050                           indf2	equ	0xFDF
  2051                           plusw2	equ	0xFDB
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8
  2055                           
  2056 ;; *************** function _getkey *****************
  2057 ;; Defined at:
  2058 ;;		line 17 in file "keypad_utilities.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2063 ;;  keycode         1   18[BANK0 ] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2077 ;;Total ram usage:       19 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_SetupTime
  2084 ;;		_SetupAlarmTime
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text10
  2089  001946                     __ptext10:
  2090                           	opt stack 0
  2091  001946                     _getkey:
  2092                           	opt stack 26
  2093                           
  2094                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2095                           
  2096                           ;incstack = 0
  2097  001946  0E1B               	movlw	low getkey@F4444
  2098  001948  6EF6               	movwf	tblptrl,c
  2099  00194A                     	if	1	;There is more than 1 active tblptr byte
  2100  00194A  0E10               	movlw	high getkey@F4444
  2101  00194C  6EF7               	movwf	tblptrh,c
  2102  00194E                     	endif
  2103  00194E                     	if	0	;There are less than 3 active tblptr bytes
  2104  00194E                     	endif
  2105  00194E  EE20  F09F         	lfsr	2,getkey@lookup
  2106  001952  0E11               	movlw	17
  2107  001954                     u710:
  2108  001954  0009               	tblrd		*+
  2109  001956  CFF5 FFDE          	movff	tablat,postinc2
  2110  00195A  06E8               	decf	wreg,f,c
  2111  00195C  E2FB               	bc	u710
  2112  00195E                     l54:
  2113  00195E  AA81               	btfss	3969,5,c	;volatile
  2114  001960  D7FE               	goto	l54
  2115                           
  2116                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2117  001962  5081               	movf	3969,w,c	;volatile
  2118  001964  0B0F               	andlw	15
  2119  001966  0100               	movlb	0	; () banked
  2120  001968  6FB1               	movwf	getkey@keycode& (0+255),b
  2121  00196A                     l57:
  2122  00196A  BA81               	btfsc	3969,5,c	;volatile
  2123  00196C  D7FE               	goto	l57
  2124                           
  2125                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2126  00196E  0100               	movlb	0	; () banked
  2127  001970  51B1               	movf	getkey@keycode& (0+255),w,b
  2128  001972  0D01               	mullw	1
  2129  001974  0E9F               	movlw	low getkey@lookup
  2130  001976  24F3               	addwf	prodl,w,c
  2131  001978  6ED9               	movwf	fsr2l,c
  2132  00197A  0E00               	movlw	high getkey@lookup
  2133  00197C  20F4               	addwfc	prodh,w,c
  2134  00197E  6EDA               	movwf	fsr2h,c
  2135  001980  50DF               	movf	indf2,w,c
  2136  001982  0012               	return	
  2137  001984                     __end_of_getkey:
  2138                           	opt stack 0
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           intcon	equ	0xFF2
  2146                           intcon2	equ	0xFF1
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           plusw1	equ	0xFE3
  2151                           fsr1l	equ	0xFE1
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           plusw2	equ	0xFDB
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _delay_ms *****************
  2160 ;; Defined at:
  2161 ;;		line 10 in file "delays_utilities.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  i               2   28[COMRAM] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  j               2   31[COMRAM] unsigned int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2175 ;;      Params:         2       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        5 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    3
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_SetupTime
  2186 ;;		_SetupAlarmTime
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text11
  2191  001984                     __ptext11:
  2192                           	opt stack 0
  2193  001984                     _delay_ms:
  2194                           	opt stack 26
  2195                           
  2196                           ;delays_utilities.c: 12: if(i!=0)
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200  001984  501D               	movf	delay_ms@i,w,c
  2201  001986  101E               	iorwf	delay_ms@i+1,w,c
  2202  001988  B4D8               	btfsc	status,2,c
  2203  00198A  0012               	return	
  2204                           
  2205                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2206  00198C  0E00               	movlw	0
  2207  00198E  6E21               	movwf	delay_ms@j+1,c
  2208  001990  0E00               	movlw	0
  2209  001992  6E20               	movwf	delay_ms@j,c
  2210  001994  D00A               	goto	l30
  2211  001996                     l1366:
  2212  001996  0E10               	movlw	16
  2213  001998  6E1F               	movwf	??_delay_ms& (0+255),c
  2214  00199A  0E94               	movlw	148
  2215  00199C                     u1087:
  2216  00199C  2EE8               	decfsz	wreg,f,c
  2217  00199E  D7FE               	goto	u1087
  2218  0019A0  2E1F               	decfsz	??_delay_ms& (0+255),f,c
  2219  0019A2  D7FC               	goto	u1087
  2220  0019A4  D000               	nop2	
  2221  0019A6  4A20               	infsnz	delay_ms@j,f,c
  2222  0019A8  2A21               	incf	delay_ms@j+1,f,c
  2223  0019AA                     l30:
  2224  0019AA  501D               	movf	delay_ms@i,w,c
  2225  0019AC  5C20               	subwf	delay_ms@j,w,c
  2226  0019AE  501E               	movf	delay_ms@i+1,w,c
  2227  0019B0  5821               	subwfb	delay_ms@j+1,w,c
  2228  0019B2  B0D8               	btfsc	status,0,c
  2229  0019B4  0012               	return	
  2230  0019B6  D7EF               	goto	l1366
  2231  0019B8                     __end_of_delay_ms:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           intcon	equ	0xFF2
  2240                           intcon2	equ	0xFF1
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           plusw1	equ	0xFE3
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           plusw2	equ	0xFDB
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _char_2_int *****************
  2254 ;; Defined at:
  2255 ;;		line 37 in file "Timer.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  char1           1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  char1           1   28[COMRAM] unsigned char 
  2260 ;;  int1            1   29[COMRAM] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      unsigned char 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0
  2271 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2273 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2274 ;;Total ram usage:        2 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    3
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_SetupTime
  2281 ;;		_SetupAlarmTime
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text12
  2286  001674                     __ptext12:
  2287                           	opt stack 0
  2288  001674                     _char_2_int:
  2289                           	opt stack 26
  2290                           
  2291                           ;incstack = 0
  2292                           ;char_2_int@char1 stored from wreg
  2293  001674  6E1D               	movwf	char_2_int@char1,c
  2294                           
  2295                           ;Timer.c: 39: unsigned char int1;
  2296                           ;Timer.c: 40: switch (char1)
  2297  001676  D015               	goto	l1402
  2298  001678                     l1382:
  2299  001678  0E01               	movlw	1
  2300  00167A  D011               	goto	L11
  2301  00167C                     l1384:
  2302  00167C  0E02               	movlw	2
  2303  00167E  D00F               	goto	L11
  2304  001680                     l1386:
  2305  001680  0E03               	movlw	3
  2306  001682  D00D               	goto	L11
  2307  001684                     l1388:
  2308  001684  0E04               	movlw	4
  2309  001686  D00B               	goto	L11
  2310  001688                     l1390:
  2311  001688  0E05               	movlw	5
  2312  00168A  D009               	goto	L11
  2313  00168C                     l1392:
  2314  00168C  0E06               	movlw	6
  2315  00168E  D007               	goto	L11
  2316  001690                     l1394:
  2317  001690  0E07               	movlw	7
  2318  001692  D005               	goto	L11
  2319  001694                     l1396:
  2320  001694  0E08               	movlw	8
  2321  001696  D003               	goto	L11
  2322  001698                     l1398:
  2323  001698  0E09               	movlw	9
  2324  00169A  D001               	goto	L11
  2325  00169C                     l1400:
  2326  00169C  0E00               	movlw	0
  2327  00169E                     L11:
  2328  00169E  6E1E               	movwf	char_2_int@int1,c
  2329                           
  2330                           ;Timer.c: 53: }
  2331  0016A0  D020               	goto	l119
  2332  0016A2                     l1402:
  2333  0016A2  501D               	movf	char_2_int@char1,w,c
  2334                           
  2335                           ; Switch size 1, requested type "space"
  2336                           ; Number of cases is 10, Range of values is 48 to 57
  2337                           ; switch strategies available:
  2338                           ; Name         Instructions Cycles
  2339                           ; simple_byte           31    16 (average)
  2340                           ;	Chosen strategy is simple_byte
  2341  0016A4  0A30               	xorlw	48	; case 48
  2342  0016A6  B4D8               	btfsc	status,2,c
  2343  0016A8  D7F9               	goto	l1400
  2344  0016AA  0A01               	xorlw	1	; case 49
  2345  0016AC  B4D8               	btfsc	status,2,c
  2346  0016AE  D7E4               	goto	l1382
  2347  0016B0  0A03               	xorlw	3	; case 50
  2348  0016B2  B4D8               	btfsc	status,2,c
  2349  0016B4  D7E3               	goto	l1384
  2350  0016B6  0A01               	xorlw	1	; case 51
  2351  0016B8  B4D8               	btfsc	status,2,c
  2352  0016BA  D7E2               	goto	l1386
  2353  0016BC  0A07               	xorlw	7	; case 52
  2354  0016BE  B4D8               	btfsc	status,2,c
  2355  0016C0  D7E1               	goto	l1388
  2356  0016C2  0A01               	xorlw	1	; case 53
  2357  0016C4  B4D8               	btfsc	status,2,c
  2358  0016C6  D7E0               	goto	l1390
  2359  0016C8  0A03               	xorlw	3	; case 54
  2360  0016CA  B4D8               	btfsc	status,2,c
  2361  0016CC  D7DF               	goto	l1392
  2362  0016CE  0A01               	xorlw	1	; case 55
  2363  0016D0  B4D8               	btfsc	status,2,c
  2364  0016D2  D7DE               	goto	l1394
  2365  0016D4  0A0F               	xorlw	15	; case 56
  2366  0016D6  B4D8               	btfsc	status,2,c
  2367  0016D8  D7DD               	goto	l1396
  2368  0016DA  0A01               	xorlw	1	; case 57
  2369  0016DC  B4D8               	btfsc	status,2,c
  2370  0016DE  D7DC               	goto	l1398
  2371  0016E0  D7DD               	goto	l1400
  2372  0016E2                     l119:
  2373                           
  2374                           ;Timer.c: 54: return(int1);
  2375  0016E2  501E               	movf	char_2_int@int1,w,c
  2376  0016E4  0012               	return		;funcret
  2377  0016E6                     __end_of_char_2_int:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           prodh	equ	0xFF4
  2384                           prodl	equ	0xFF3
  2385                           intcon	equ	0xFF2
  2386                           intcon2	equ	0xFF1
  2387                           postinc0	equ	0xFEE
  2388                           wreg	equ	0xFE8
  2389                           postdec1	equ	0xFE5
  2390                           plusw1	equ	0xFE3
  2391                           fsr1l	equ	0xFE1
  2392                           indf2	equ	0xFDF
  2393                           postinc2	equ	0xFDE
  2394                           plusw2	equ	0xFDB
  2395                           fsr2h	equ	0xFDA
  2396                           fsr2l	equ	0xFD9
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _ISR_Timer0_Int *****************
  2400 ;; Defined at:
  2401 ;;		line 57 in file "Timer.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  second10        1   27[COMRAM] unsigned char 
  2406 ;;  minute10        1   26[COMRAM] unsigned char 
  2407 ;;  hour10          1   25[COMRAM] unsigned char 
  2408 ;;  second1         1   24[COMRAM] unsigned char 
  2409 ;;  minute1         1   23[COMRAM] unsigned char 
  2410 ;;  hour1           1   22[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0
  2421 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2422 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2423 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2424 ;;Total ram usage:       20 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		___awdiv
  2429 ;;		_int_2_char
  2430 ;;		i2_lcd_write_cmd
  2431 ;;		i2_lcd_write_data
  2432 ;; This function is called by:
  2433 ;;		Interrupt level 2
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	intcode
  2438  001008                     __pintcode:
  2439                           	opt stack 0
  2440  001008                     _ISR_Timer0_Int:
  2441                           	opt stack 25
  2442                           
  2443                           ;incstack = 0
  2444  001008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2445  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  2446  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  2447  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  2448                           pclatu	equ	0xFFB
  2449                           pclath	equ	0xFFA
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodh	equ	0xFF4
  2455                           prodl	equ	0xFF3
  2456                           intcon	equ	0xFF2
  2457                           intcon2	equ	0xFF1
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           plusw1	equ	0xFE3
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           plusw2	equ	0xFDB
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470                           	psect	intcode_body
  2471  00102E                     __pintcode_body:
  2472                           	opt stack 25
  2473  00102E                     int_func:
  2474                           	opt stack 25
  2475  00102E  0006               	pop		; remove dummy address from shadow register refresh
  2476  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  2477  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  2478  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  2479  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  2480  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  2481  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  2482  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  2483  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  2484  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  2485  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  2486  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  2487  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  2488                           
  2489                           ;Timer.c: 59: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  2490                           ;Timer.c: 60: if (INTCONbits.TMR0IF == 1)
  2491  001060  A4F2               	btfss	intcon,2,c	;volatile
  2492  001062  D089               	goto	i2l137
  2493                           
  2494                           ;Timer.c: 61: {
  2495                           ;Timer.c: 62: TMR0H = 0x48;
  2496  001064  0E48               	movlw	72
  2497  001066  6ED7               	movwf	4055,c	;volatile
  2498                           
  2499                           ;Timer.c: 63: TMR0L = 0xE5;
  2500  001068  0EE5               	movlw	229
  2501  00106A  6ED6               	movwf	4054,c	;volatile
  2502                           
  2503                           ;Timer.c: 65: second = second + 1;
  2504  00106C  283E               	incf	_second,w,c
  2505  00106E  6E3E               	movwf	_second,c
  2506                           
  2507                           ;Timer.c: 66: if ( second > 59 )
  2508  001070  0E3B               	movlw	59
  2509  001072  643E               	cpfsgt	_second,c
  2510  001074  D010               	goto	i2l1686
  2511                           
  2512                           ;Timer.c: 67: {
  2513                           ;Timer.c: 68: second = 0;
  2514  001076  0E00               	movlw	0
  2515  001078  6E3E               	movwf	_second,c
  2516                           
  2517                           ;Timer.c: 69: minute = minute + 1;
  2518  00107A  283C               	incf	_minute,w,c
  2519  00107C  6E3C               	movwf	_minute,c
  2520                           
  2521                           ;Timer.c: 70: if ( minute > 59 )
  2522  00107E  0E3B               	movlw	59
  2523  001080  643C               	cpfsgt	_minute,c
  2524  001082  D009               	goto	i2l1686
  2525                           
  2526                           ;Timer.c: 71: {
  2527                           ;Timer.c: 72: minute = 0;
  2528  001084  0E00               	movlw	0
  2529  001086  6E3C               	movwf	_minute,c
  2530                           
  2531                           ;Timer.c: 73: hour = hour + 1;
  2532  001088  283A               	incf	_hour,w,c
  2533  00108A  6E3A               	movwf	_hour,c
  2534                           
  2535                           ;Timer.c: 74: if ( hour > 23 )
  2536  00108C  0E17               	movlw	23
  2537  00108E  643A               	cpfsgt	_hour,c
  2538  001090  D002               	goto	i2l1686
  2539                           
  2540                           ;Timer.c: 75: hour = 0;
  2541  001092  0E00               	movlw	0
  2542  001094  6E3A               	movwf	_hour,c
  2543  001096                     i2l1686:
  2544                           
  2545                           ;Timer.c: 76: }
  2546                           ;Timer.c: 77: }
  2547                           ;Timer.c: 79: hour10 = hour / 10;
  2548  001096  C03A  F001         	movff	_hour,___awdiv@dividend
  2549  00109A  6A02               	clrf	___awdiv@dividend+1,c
  2550  00109C  0E00               	movlw	0
  2551  00109E  6E04               	movwf	___awdiv@divisor+1,c
  2552  0010A0  0E0A               	movlw	10
  2553  0010A2  6E03               	movwf	___awdiv@divisor,c
  2554  0010A4  EC84  F00A         	call	___awdiv	;wreg free
  2555  0010A8  5001               	movf	?___awdiv,w,c
  2556  0010AA  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  2557                           
  2558                           ;Timer.c: 80: hour1 = hour - hour10 * 10;
  2559  0010AC  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2560  0010AE  0D0A               	mullw	10
  2561  0010B0  50F3               	movf	prodl,w,c
  2562  0010B2  0800               	sublw	0
  2563  0010B4  243A               	addwf	_hour,w,c
  2564  0010B6  6E17               	movwf	ISR_Timer0_Int@hour1,c
  2565                           
  2566                           ;Timer.c: 82: minute10 = minute / 10;
  2567  0010B8  C03C  F001         	movff	_minute,___awdiv@dividend
  2568  0010BC  6A02               	clrf	___awdiv@dividend+1,c
  2569  0010BE  0E00               	movlw	0
  2570  0010C0  6E04               	movwf	___awdiv@divisor+1,c
  2571  0010C2  0E0A               	movlw	10
  2572  0010C4  6E03               	movwf	___awdiv@divisor,c
  2573  0010C6  EC84  F00A         	call	___awdiv	;wreg free
  2574  0010CA  5001               	movf	?___awdiv,w,c
  2575  0010CC  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  2576                           
  2577                           ;Timer.c: 83: minute1 = minute - minute10 * 10;
  2578  0010CE  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2579  0010D0  0D0A               	mullw	10
  2580  0010D2  50F3               	movf	prodl,w,c
  2581  0010D4  0800               	sublw	0
  2582  0010D6  243C               	addwf	_minute,w,c
  2583  0010D8  6E18               	movwf	ISR_Timer0_Int@minute1,c
  2584                           
  2585                           ;Timer.c: 85: second10 = second / 10;
  2586  0010DA  C03E  F001         	movff	_second,___awdiv@dividend
  2587  0010DE  6A02               	clrf	___awdiv@dividend+1,c
  2588  0010E0  0E00               	movlw	0
  2589  0010E2  6E04               	movwf	___awdiv@divisor+1,c
  2590  0010E4  0E0A               	movlw	10
  2591  0010E6  6E03               	movwf	___awdiv@divisor,c
  2592  0010E8  EC84  F00A         	call	___awdiv	;wreg free
  2593  0010EC  5001               	movf	?___awdiv,w,c
  2594  0010EE  6E1C               	movwf	ISR_Timer0_Int@second10,c
  2595                           
  2596                           ;Timer.c: 86: second1 = second - second10 * 10;
  2597  0010F0  501C               	movf	ISR_Timer0_Int@second10,w,c
  2598  0010F2  0D0A               	mullw	10
  2599  0010F4  50F3               	movf	prodl,w,c
  2600  0010F6  0800               	sublw	0
  2601  0010F8  243E               	addwf	_second,w,c
  2602  0010FA  6E19               	movwf	ISR_Timer0_Int@second1,c
  2603                           
  2604                           ;Timer.c: 88: lcd_write_cmd(0x80);
  2605  0010FC  0E80               	movlw	128
  2606  0010FE  ECAB  F00B         	call	i2_lcd_write_cmd
  2607                           
  2608                           ;Timer.c: 89: lcd_write_data('t');
  2609  001102  0E74               	movlw	116
  2610  001104  EC3A  F00A         	call	i2_lcd_write_data
  2611                           
  2612                           ;Timer.c: 90: lcd_write_data('i');
  2613  001108  0E69               	movlw	105
  2614  00110A  EC3A  F00A         	call	i2_lcd_write_data
  2615                           
  2616                           ;Timer.c: 91: lcd_write_data('m');
  2617  00110E  0E6D               	movlw	109
  2618  001110  EC3A  F00A         	call	i2_lcd_write_data
  2619                           
  2620                           ;Timer.c: 92: lcd_write_data('e');
  2621  001114  0E65               	movlw	101
  2622  001116  EC3A  F00A         	call	i2_lcd_write_data
  2623                           
  2624                           ;Timer.c: 93: lcd_write_data(' ');
  2625  00111A  0E20               	movlw	32
  2626  00111C  EC3A  F00A         	call	i2_lcd_write_data
  2627                           
  2628                           ;Timer.c: 94: lcd_write_data('=');
  2629  001120  0E3D               	movlw	61
  2630  001122  EC3A  F00A         	call	i2_lcd_write_data
  2631                           
  2632                           ;Timer.c: 95: lcd_write_data(' ');
  2633  001126  0E20               	movlw	32
  2634  001128  EC3A  F00A         	call	i2_lcd_write_data
  2635                           
  2636                           ;Timer.c: 96: lcd_write_data(int_2_char (hour10));
  2637  00112C  501A               	movf	ISR_Timer0_Int@hour10,w,c
  2638  00112E  ECC6  F00A         	call	_int_2_char
  2639  001132  EC3A  F00A         	call	i2_lcd_write_data
  2640                           
  2641                           ;Timer.c: 97: lcd_write_data(int_2_char (hour1));
  2642  001136  5017               	movf	ISR_Timer0_Int@hour1,w,c
  2643  001138  ECC6  F00A         	call	_int_2_char
  2644  00113C  EC3A  F00A         	call	i2_lcd_write_data
  2645                           
  2646                           ;Timer.c: 98: lcd_write_data(':');
  2647  001140  0E3A               	movlw	58
  2648  001142  EC3A  F00A         	call	i2_lcd_write_data
  2649                           
  2650                           ;Timer.c: 99: lcd_write_data(int_2_char (minute10));
  2651  001146  501B               	movf	ISR_Timer0_Int@minute10,w,c
  2652  001148  ECC6  F00A         	call	_int_2_char
  2653  00114C  EC3A  F00A         	call	i2_lcd_write_data
  2654                           
  2655                           ;Timer.c: 100: lcd_write_data(int_2_char (minute1));
  2656  001150  5018               	movf	ISR_Timer0_Int@minute1,w,c
  2657  001152  ECC6  F00A         	call	_int_2_char
  2658  001156  EC3A  F00A         	call	i2_lcd_write_data
  2659                           
  2660                           ;Timer.c: 101: lcd_write_data(':');
  2661  00115A  0E3A               	movlw	58
  2662  00115C  EC3A  F00A         	call	i2_lcd_write_data
  2663                           
  2664                           ;Timer.c: 102: lcd_write_data(int_2_char (second10));
  2665  001160  501C               	movf	ISR_Timer0_Int@second10,w,c
  2666  001162  ECC6  F00A         	call	_int_2_char
  2667  001166  EC3A  F00A         	call	i2_lcd_write_data
  2668                           
  2669                           ;Timer.c: 103: lcd_write_data(int_2_char (second1));
  2670  00116A  5019               	movf	ISR_Timer0_Int@second1,w,c
  2671  00116C  ECC6  F00A         	call	_int_2_char
  2672  001170  EC3A  F00A         	call	i2_lcd_write_data
  2673                           
  2674                           ;Timer.c: 105: INTCONbits.TMR0IF = 0;
  2675  001174  94F2               	bcf	intcon,2,c	;volatile
  2676  001176                     i2l137:
  2677  001176  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  2678  00117A  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  2679  00117E  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  2680  001182  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  2681  001186  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  2682  00118A  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  2683  00118E  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  2684  001192  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  2685  001196  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  2686  00119A  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  2687  00119E  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  2688  0011A2  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  2689  0011A6  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  2690  0011AA  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  2691  0011AE  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2692  0011B0  0011               	retfie		f
  2693  0011B2                     __end_of_ISR_Timer0_Int:
  2694                           	opt stack 0
  2695                           pclatu	equ	0xFFB
  2696                           pclath	equ	0xFFA
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           intcon2	equ	0xFF1
  2705                           postinc0	equ	0xFEE
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           postdec1	equ	0xFE5
  2710                           plusw1	equ	0xFE3
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           indf2	equ	0xFDF
  2714                           postinc2	equ	0xFDE
  2715                           plusw2	equ	0xFDB
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720 ;; *************** function i2_lcd_write_data *****************
  2721 ;; Defined at:
  2722 ;;		line 43 in file "lcd_utilities.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  data            1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  data            1    2[COMRAM] unsigned char 
  2727 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        3 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		i2_lcd_strobe
  2746 ;; This function is called by:
  2747 ;;		_ISR_Timer0_Int
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text14
  2752  001474                     __ptext14:
  2753                           	opt stack 0
  2754  001474                     i2_lcd_write_data:
  2755                           	opt stack 25
  2756                           
  2757                           ;incstack = 0
  2758                           ;i2lcd_write_data@data stored from wreg
  2759  001474  6E03               	movwf	i2lcd_write_data@data,c
  2760                           
  2761                           ;lcd_utilities.c: 45: char temp1;
  2762                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2763  001476  8C83               	bsf	3971,6,c	;volatile
  2764                           
  2765                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2766  001478  0E3F               	movlw	63
  2767  00147A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2768  00147C  0E55               	movlw	85
  2769  00147E                     i2u109_47:
  2770  00147E  2EE8               	decfsz	wreg,f,c
  2771  001480  D7FE               	goto	i2u109_47
  2772  001482  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2773  001484  D7FC               	goto	i2u109_47
  2774  001486  F000               	nop	
  2775                           
  2776                           ;lcd_utilities.c: 50: temp1 = data;
  2777  001488  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  2778                           
  2779                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2780  00148C  3804               	swapf	i2lcd_write_data@temp1,w,c
  2781  00148E  0B0F               	andlw	15
  2782  001490  6E04               	movwf	i2lcd_write_data@temp1,c
  2783                           
  2784                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2785  001492  5004               	movf	i2lcd_write_data@temp1,w,c
  2786  001494  0B0F               	andlw	15
  2787  001496  6E83               	movwf	3971,c	;volatile
  2788                           
  2789                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2790  001498  0E7D               	movlw	125
  2791  00149A  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2792  00149C  0EAC               	movlw	172
  2793  00149E                     i2u110_47:
  2794  00149E  2EE8               	decfsz	wreg,f,c
  2795  0014A0  D7FE               	goto	i2u110_47
  2796  0014A2  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2797  0014A4  D7FC               	goto	i2u110_47
  2798                           
  2799                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2800  0014A6  8C83               	bsf	3971,6,c	;volatile
  2801                           
  2802                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2803  0014A8  0E7D               	movlw	125
  2804  0014AA  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2805  0014AC  0EAC               	movlw	172
  2806  0014AE                     i2u111_47:
  2807  0014AE  2EE8               	decfsz	wreg,f,c
  2808  0014B0  D7FE               	goto	i2u111_47
  2809  0014B2  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2810  0014B4  D7FC               	goto	i2u111_47
  2811                           
  2812                           ;lcd_utilities.c: 57: lcd_strobe();
  2813  0014B6  ECED  F00C         	call	i2_lcd_strobe	;wreg free
  2814                           
  2815                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2816  0014BA  0E7D               	movlw	125
  2817  0014BC  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2818  0014BE  0EAC               	movlw	172
  2819  0014C0                     i2u112_47:
  2820  0014C0  2EE8               	decfsz	wreg,f,c
  2821  0014C2  D7FE               	goto	i2u112_47
  2822  0014C4  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2823  0014C6  D7FC               	goto	i2u112_47
  2824                           
  2825                           ;lcd_utilities.c: 60: temp1 = data;
  2826  0014C8  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  2827                           
  2828                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2829  0014CC  5004               	movf	i2lcd_write_data@temp1,w,c
  2830  0014CE  0B0F               	andlw	15
  2831  0014D0  6E83               	movwf	3971,c	;volatile
  2832                           
  2833                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2834  0014D2  0E7D               	movlw	125
  2835  0014D4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2836  0014D6  0EAC               	movlw	172
  2837  0014D8                     i2u113_47:
  2838  0014D8  2EE8               	decfsz	wreg,f,c
  2839  0014DA  D7FE               	goto	i2u113_47
  2840  0014DC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2841  0014DE  D7FC               	goto	i2u113_47
  2842                           
  2843                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2844  0014E0  8C83               	bsf	3971,6,c	;volatile
  2845                           
  2846                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2847  0014E2  0E9C               	movlw	156
  2848  0014E4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2849  0014E6  0ED7               	movlw	215
  2850  0014E8                     i2u114_47:
  2851  0014E8  2EE8               	decfsz	wreg,f,c
  2852  0014EA  D7FE               	goto	i2u114_47
  2853  0014EC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2854  0014EE  D7FC               	goto	i2u114_47
  2855  0014F0  F000               	nop	
  2856                           
  2857                           ;lcd_utilities.c: 66: lcd_strobe();
  2858  0014F2  ECED  F00C         	call	i2_lcd_strobe	;wreg free
  2859                           
  2860                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2861  0014F6  0E9C               	movlw	156
  2862  0014F8  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  2863  0014FA  0ED7               	movlw	215
  2864  0014FC                     i2u115_47:
  2865  0014FC  2EE8               	decfsz	wreg,f,c
  2866  0014FE  D7FE               	goto	i2u115_47
  2867  001500  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  2868  001502  D7FC               	goto	i2u115_47
  2869  001504  F000               	nop	
  2870  001506  0012               	return		;funcret
  2871  001508                     __end_ofi2_lcd_write_data:
  2872                           	opt stack 0
  2873                           pclatu	equ	0xFFB
  2874                           pclath	equ	0xFFA
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           intcon2	equ	0xFF1
  2883                           postinc0	equ	0xFEE
  2884                           fsr0h	equ	0xFEA
  2885                           fsr0l	equ	0xFE9
  2886                           wreg	equ	0xFE8
  2887                           postdec1	equ	0xFE5
  2888                           plusw1	equ	0xFE3
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           plusw2	equ	0xFDB
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function i2_lcd_write_cmd *****************
  2899 ;; Defined at:
  2900 ;;		line 18 in file "lcd_utilities.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  cmd             1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  cmd             1    2[COMRAM] unsigned char 
  2905 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0
  2916 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2917 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2918 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		i2_lcd_strobe
  2924 ;; This function is called by:
  2925 ;;		_ISR_Timer0_Int
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text15
  2930  001756                     __ptext15:
  2931                           	opt stack 0
  2932  001756                     i2_lcd_write_cmd:
  2933                           	opt stack 25
  2934                           
  2935                           ;incstack = 0
  2936                           ;i2lcd_write_cmd@cmd stored from wreg
  2937  001756  6E03               	movwf	i2lcd_write_cmd@cmd,c
  2938                           
  2939                           ;lcd_utilities.c: 20: unsigned char temp2;
  2940                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2941  001758  9C83               	bcf	3971,6,c	;volatile
  2942                           
  2943                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2944  00175A  0E3F               	movlw	63
  2945  00175C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2946  00175E  0E55               	movlw	85
  2947  001760                     i2u116_47:
  2948  001760  2EE8               	decfsz	wreg,f,c
  2949  001762  D7FE               	goto	i2u116_47
  2950  001764  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2951  001766  D7FC               	goto	i2u116_47
  2952  001768  F000               	nop	
  2953                           
  2954                           ;lcd_utilities.c: 23: temp2 = cmd;
  2955  00176A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  2956                           
  2957                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2958  00176E  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  2959  001770  0B0F               	andlw	15
  2960  001772  6E04               	movwf	i2lcd_write_cmd@temp2,c
  2961                           
  2962                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2963  001774  5004               	movf	i2lcd_write_cmd@temp2,w,c
  2964  001776  0B0F               	andlw	15
  2965  001778  6E83               	movwf	3971,c	;volatile
  2966                           
  2967                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2968  00177A  0E7D               	movlw	125
  2969  00177C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2970  00177E  0EAC               	movlw	172
  2971  001780                     i2u117_47:
  2972  001780  2EE8               	decfsz	wreg,f,c
  2973  001782  D7FE               	goto	i2u117_47
  2974  001784  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2975  001786  D7FC               	goto	i2u117_47
  2976                           
  2977                           ;lcd_utilities.c: 28: lcd_strobe();
  2978  001788  ECED  F00C         	call	i2_lcd_strobe	;wreg free
  2979                           
  2980                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2981  00178C  0E7D               	movlw	125
  2982  00178E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  2983  001790  0EAC               	movlw	172
  2984  001792                     i2u118_47:
  2985  001792  2EE8               	decfsz	wreg,f,c
  2986  001794  D7FE               	goto	i2u118_47
  2987  001796  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  2988  001798  D7FC               	goto	i2u118_47
  2989                           
  2990                           ;lcd_utilities.c: 32: temp2 = cmd;
  2991  00179A  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  2992                           
  2993                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2994  00179E  5004               	movf	i2lcd_write_cmd@temp2,w,c
  2995  0017A0  0B0F               	andlw	15
  2996  0017A2  6E83               	movwf	3971,c	;volatile
  2997                           
  2998                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2999  0017A4  0E7D               	movlw	125
  3000  0017A6  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3001  0017A8  0EAC               	movlw	172
  3002  0017AA                     i2u119_47:
  3003  0017AA  2EE8               	decfsz	wreg,f,c
  3004  0017AC  D7FE               	goto	i2u119_47
  3005  0017AE  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3006  0017B0  D7FC               	goto	i2u119_47
  3007                           
  3008                           ;lcd_utilities.c: 36: lcd_strobe();
  3009  0017B2  ECED  F00C         	call	i2_lcd_strobe	;wreg free
  3010                           
  3011                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3012  0017B6  0E7D               	movlw	125
  3013  0017B8  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3014  0017BA  0EAC               	movlw	172
  3015  0017BC                     i2u120_47:
  3016  0017BC  2EE8               	decfsz	wreg,f,c
  3017  0017BE  D7FE               	goto	i2u120_47
  3018  0017C0  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3019  0017C2  D7FC               	goto	i2u120_47
  3020  0017C4  0012               	return		;funcret
  3021  0017C6                     __end_ofi2_lcd_write_cmd:
  3022                           	opt stack 0
  3023                           pclatu	equ	0xFFB
  3024                           pclath	equ	0xFFA
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           intcon	equ	0xFF2
  3032                           intcon2	equ	0xFF1
  3033                           postinc0	equ	0xFEE
  3034                           fsr0h	equ	0xFEA
  3035                           fsr0l	equ	0xFE9
  3036                           wreg	equ	0xFE8
  3037                           postdec1	equ	0xFE5
  3038                           plusw1	equ	0xFE3
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           postinc2	equ	0xFDE
  3043                           plusw2	equ	0xFDB
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function i2_lcd_strobe *****************
  3049 ;; Defined at:
  3050 ;;		line 73 in file "lcd_utilities.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		i2_lcd_write_cmd
  3074 ;;		i2_lcd_write_data
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text16
  3079  0019DA                     __ptext16:
  3080                           	opt stack 0
  3081  0019DA                     i2_lcd_strobe:
  3082                           	opt stack 25
  3083                           
  3084                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3085                           
  3086                           ;incstack = 0
  3087  0019DA  8883               	bsf	3971,4,c	;volatile
  3088                           
  3089                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3090  0019DC  0E7D               	movlw	125
  3091  0019DE  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3092  0019E0  0EAC               	movlw	172
  3093  0019E2                     i2u121_47:
  3094  0019E2  2EE8               	decfsz	wreg,f,c
  3095  0019E4  D7FE               	goto	i2u121_47
  3096  0019E6  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3097  0019E8  D7FC               	goto	i2u121_47
  3098                           
  3099                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3100  0019EA  9883               	bcf	3971,4,c	;volatile
  3101                           
  3102                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3103  0019EC  0E7D               	movlw	125
  3104  0019EE  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3105  0019F0  0EAC               	movlw	172
  3106  0019F2                     i2u122_47:
  3107  0019F2  2EE8               	decfsz	wreg,f,c
  3108  0019F4  D7FE               	goto	i2u122_47
  3109  0019F6  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3110  0019F8  D7FC               	goto	i2u122_47
  3111  0019FA  0012               	return		;funcret
  3112  0019FC                     __end_ofi2_lcd_strobe:
  3113                           	opt stack 0
  3114                           pclatu	equ	0xFFB
  3115                           pclath	equ	0xFFA
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           intcon2	equ	0xFF1
  3124                           postinc0	equ	0xFEE
  3125                           fsr0h	equ	0xFEA
  3126                           fsr0l	equ	0xFE9
  3127                           wreg	equ	0xFE8
  3128                           postdec1	equ	0xFE5
  3129                           plusw1	equ	0xFE3
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           plusw2	equ	0xFDB
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139 ;; *************** function _int_2_char *****************
  3140 ;; Defined at:
  3141 ;;		line 17 in file "Timer.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  int1            1    wreg     unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  int1            1    0[COMRAM] unsigned char 
  3146 ;;  char1           1    1[COMRAM] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      unsigned char 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_ISR_Timer0_Int
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text17
  3170  00158C                     __ptext17:
  3171                           	opt stack 0
  3172  00158C                     _int_2_char:
  3173                           	opt stack 26
  3174                           
  3175                           ;incstack = 0
  3176                           ;int_2_char@int1 stored from wreg
  3177  00158C  6E01               	movwf	int_2_char@int1,c
  3178                           
  3179                           ;Timer.c: 19: char char1;
  3180                           ;Timer.c: 20: switch (int1)
  3181  00158E  D017               	goto	i2l934
  3182  001590                     i2l912:
  3183  001590  0E30               	movlw	48
  3184  001592  D013               	goto	L21
  3185  001594                     i2l914:
  3186  001594  0E31               	movlw	49
  3187  001596  D011               	goto	L21
  3188  001598                     i2l916:
  3189  001598  0E32               	movlw	50
  3190  00159A  D00F               	goto	L21
  3191  00159C                     i2l918:
  3192  00159C  0E33               	movlw	51
  3193  00159E  D00D               	goto	L21
  3194  0015A0                     i2l920:
  3195  0015A0  0E34               	movlw	52
  3196  0015A2  D00B               	goto	L21
  3197  0015A4                     i2l922:
  3198  0015A4  0E35               	movlw	53
  3199  0015A6  D009               	goto	L21
  3200  0015A8                     i2l924:
  3201  0015A8  0E36               	movlw	54
  3202  0015AA  D007               	goto	L21
  3203  0015AC                     i2l926:
  3204  0015AC  0E37               	movlw	55
  3205  0015AE  D005               	goto	L21
  3206  0015B0                     i2l928:
  3207  0015B0  0E38               	movlw	56
  3208  0015B2  D003               	goto	L21
  3209  0015B4                     i2l930:
  3210  0015B4  0E39               	movlw	57
  3211  0015B6  D001               	goto	L21
  3212  0015B8                     i2l932:
  3213  0015B8  0E3F               	movlw	63
  3214  0015BA                     L21:
  3215  0015BA  6E02               	movwf	int_2_char@char1,c
  3216                           
  3217                           ;Timer.c: 33: }
  3218  0015BC  D020               	goto	i2l103
  3219  0015BE                     i2l934:
  3220  0015BE  5001               	movf	int_2_char@int1,w,c
  3221                           
  3222                           ; Switch size 1, requested type "space"
  3223                           ; Number of cases is 10, Range of values is 0 to 9
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte           31    16 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228  0015C0  0A00               	xorlw	0	; case 0
  3229  0015C2  B4D8               	btfsc	status,2,c
  3230  0015C4  D7E5               	goto	i2l912
  3231  0015C6  0A01               	xorlw	1	; case 1
  3232  0015C8  B4D8               	btfsc	status,2,c
  3233  0015CA  D7E4               	goto	i2l914
  3234  0015CC  0A03               	xorlw	3	; case 2
  3235  0015CE  B4D8               	btfsc	status,2,c
  3236  0015D0  D7E3               	goto	i2l916
  3237  0015D2  0A01               	xorlw	1	; case 3
  3238  0015D4  B4D8               	btfsc	status,2,c
  3239  0015D6  D7E2               	goto	i2l918
  3240  0015D8  0A07               	xorlw	7	; case 4
  3241  0015DA  B4D8               	btfsc	status,2,c
  3242  0015DC  D7E1               	goto	i2l920
  3243  0015DE  0A01               	xorlw	1	; case 5
  3244  0015E0  B4D8               	btfsc	status,2,c
  3245  0015E2  D7E0               	goto	i2l922
  3246  0015E4  0A03               	xorlw	3	; case 6
  3247  0015E6  B4D8               	btfsc	status,2,c
  3248  0015E8  D7DF               	goto	i2l924
  3249  0015EA  0A01               	xorlw	1	; case 7
  3250  0015EC  B4D8               	btfsc	status,2,c
  3251  0015EE  D7DE               	goto	i2l926
  3252  0015F0  0A0F               	xorlw	15	; case 8
  3253  0015F2  B4D8               	btfsc	status,2,c
  3254  0015F4  D7DD               	goto	i2l928
  3255  0015F6  0A01               	xorlw	1	; case 9
  3256  0015F8  B4D8               	btfsc	status,2,c
  3257  0015FA  D7DC               	goto	i2l930
  3258  0015FC  D7DD               	goto	i2l932
  3259  0015FE                     i2l103:
  3260                           
  3261                           ;Timer.c: 34: return(char1);
  3262  0015FE  5002               	movf	int_2_char@char1,w,c
  3263  001600  0012               	return		;funcret
  3264  001602                     __end_of_int_2_char:
  3265                           	opt stack 0
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           intcon2	equ	0xFF1
  3276                           postinc0	equ	0xFEE
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           plusw1	equ	0xFE3
  3282                           fsr1h	equ	0xFE2
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           postinc2	equ	0xFDE
  3286                           plusw2	equ	0xFDB
  3287                           fsr2h	equ	0xFDA
  3288                           fsr2l	equ	0xFD9
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function ___awdiv *****************
  3292 ;; Defined at:
  3293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  dividend        2    0[COMRAM] int 
  3296 ;;  divisor         2    2[COMRAM] int 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  quotient        2    6[COMRAM] int 
  3299 ;;  sign            1    5[COMRAM] unsigned char 
  3300 ;;  counter         1    4[COMRAM] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  2    0[COMRAM] int 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3310 ;;      Params:         4       0       0       0       0       0       0       0       0
  3311 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3313 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3314 ;;Total ram usage:        8 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_ISR_Timer0_Int
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text18
  3324  001508                     __ptext18:
  3325                           	opt stack 0
  3326  001508                     ___awdiv:
  3327                           	opt stack 26
  3328                           
  3329                           ;incstack = 0
  3330  001508  0E00               	movlw	0
  3331  00150A  6E06               	movwf	___awdiv@sign,c
  3332  00150C  AE04               	btfss	___awdiv@divisor+1,7,c
  3333  00150E  D006               	goto	i2l1568
  3334  001510  6C03               	negf	___awdiv@divisor,c
  3335  001512  1E04               	comf	___awdiv@divisor+1,f,c
  3336  001514  B0D8               	btfsc	status,0,c
  3337  001516  2A04               	incf	___awdiv@divisor+1,f,c
  3338  001518  0E01               	movlw	1
  3339  00151A  6E06               	movwf	___awdiv@sign,c
  3340  00151C                     i2l1568:
  3341  00151C  AE02               	btfss	___awdiv@dividend+1,7,c
  3342  00151E  D006               	goto	i2l1574
  3343  001520  6C01               	negf	___awdiv@dividend,c
  3344  001522  1E02               	comf	___awdiv@dividend+1,f,c
  3345  001524  B0D8               	btfsc	status,0,c
  3346  001526  2A02               	incf	___awdiv@dividend+1,f,c
  3347  001528  0E01               	movlw	1
  3348  00152A  1A06               	xorwf	___awdiv@sign,f,c
  3349  00152C                     i2l1574:
  3350  00152C  0E00               	movlw	0
  3351  00152E  6E08               	movwf	___awdiv@quotient+1,c
  3352  001530  0E00               	movlw	0
  3353  001532  6E07               	movwf	___awdiv@quotient,c
  3354  001534  5003               	movf	___awdiv@divisor,w,c
  3355  001536  1004               	iorwf	___awdiv@divisor+1,w,c
  3356  001538  B4D8               	btfsc	status,2,c
  3357  00153A  D01C               	goto	i2l1596
  3358  00153C  0E01               	movlw	1
  3359  00153E  6E05               	movwf	___awdiv@counter,c
  3360  001540  D004               	goto	i2l1582
  3361  001542                     i2l1580:
  3362  001542  90D8               	bcf	status,0,c
  3363  001544  3603               	rlcf	___awdiv@divisor,f,c
  3364  001546  3604               	rlcf	___awdiv@divisor+1,f,c
  3365  001548  2A05               	incf	___awdiv@counter,f,c
  3366  00154A                     i2l1582:
  3367  00154A  AE04               	btfss	___awdiv@divisor+1,7,c
  3368  00154C  D7FA               	goto	i2l1580
  3369  00154E                     i2l1584:
  3370  00154E  90D8               	bcf	status,0,c
  3371  001550  3607               	rlcf	___awdiv@quotient,f,c
  3372  001552  3608               	rlcf	___awdiv@quotient+1,f,c
  3373  001554  5003               	movf	___awdiv@divisor,w,c
  3374  001556  5C01               	subwf	___awdiv@dividend,w,c
  3375  001558  5004               	movf	___awdiv@divisor+1,w,c
  3376  00155A  5802               	subwfb	___awdiv@dividend+1,w,c
  3377  00155C  A0D8               	btfss	status,0,c
  3378  00155E  D005               	goto	i2l1592
  3379  001560  5003               	movf	___awdiv@divisor,w,c
  3380  001562  5E01               	subwf	___awdiv@dividend,f,c
  3381  001564  5004               	movf	___awdiv@divisor+1,w,c
  3382  001566  5A02               	subwfb	___awdiv@dividend+1,f,c
  3383  001568  8007               	bsf	___awdiv@quotient,0,c
  3384  00156A                     i2l1592:
  3385  00156A  90D8               	bcf	status,0,c
  3386  00156C  3204               	rrcf	___awdiv@divisor+1,f,c
  3387  00156E  3203               	rrcf	___awdiv@divisor,f,c
  3388  001570  2E05               	decfsz	___awdiv@counter,f,c
  3389  001572  D7ED               	goto	i2l1584
  3390  001574                     i2l1596:
  3391  001574  5006               	movf	___awdiv@sign,w,c
  3392  001576  B4D8               	btfsc	status,2,c
  3393  001578  D004               	goto	i2l1600
  3394  00157A  6C07               	negf	___awdiv@quotient,c
  3395  00157C  1E08               	comf	___awdiv@quotient+1,f,c
  3396  00157E  B0D8               	btfsc	status,0,c
  3397  001580  2A08               	incf	___awdiv@quotient+1,f,c
  3398  001582                     i2l1600:
  3399  001582  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3400  001586  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3401  00158A  0012               	return	
  3402  00158C                     __end_of___awdiv:
  3403                           	opt stack 0
  3404                           pclatu	equ	0xFFB
  3405                           pclath	equ	0xFFA
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           prodh	equ	0xFF4
  3411                           prodl	equ	0xFF3
  3412                           intcon	equ	0xFF2
  3413                           intcon2	equ	0xFF1
  3414                           postinc0	equ	0xFEE
  3415                           fsr0h	equ	0xFEA
  3416                           fsr0l	equ	0xFE9
  3417                           wreg	equ	0xFE8
  3418                           postdec1	equ	0xFE5
  3419                           plusw1	equ	0xFE3
  3420                           fsr1h	equ	0xFE2
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           plusw2	equ	0xFDB
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           pclatu	equ	0xFFB
  3429                           pclath	equ	0xFFA
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           intcon2	equ	0xFF1
  3438                           postinc0	equ	0xFEE
  3439                           fsr0h	equ	0xFEA
  3440                           fsr0l	equ	0xFE9
  3441                           wreg	equ	0xFE8
  3442                           postdec1	equ	0xFE5
  3443                           plusw1	equ	0xFE3
  3444                           fsr1h	equ	0xFE2
  3445                           fsr1l	equ	0xFE1
  3446                           indf2	equ	0xFDF
  3447                           postinc2	equ	0xFDE
  3448                           plusw2	equ	0xFDB
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453                           	psect	rparam
  3454  0000                     pclatu	equ	0xFFB
  3455                           pclath	equ	0xFFA
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           intcon2	equ	0xFF1
  3464                           postinc0	equ	0xFEE
  3465                           fsr0h	equ	0xFEA
  3466                           fsr0l	equ	0xFE9
  3467                           wreg	equ	0xFE8
  3468                           postdec1	equ	0xFE5
  3469                           plusw1	equ	0xFE3
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           indf2	equ	0xFDF
  3473                           postinc2	equ	0xFDE
  3474                           plusw2	equ	0xFDB
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479                           	psect	temp
  3480  00003F                     btemp:
  3481                           	opt stack 0
  3482  00003F                     	ds	1
  3483  0000                     int$flags	set	btemp
  3484                           pclatu	equ	0xFFB
  3485                           pclath	equ	0xFFA
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           intcon	equ	0xFF2
  3493                           intcon2	equ	0xFF1
  3494                           postinc0	equ	0xFEE
  3495                           fsr0h	equ	0xFEA
  3496                           fsr0l	equ	0xFE9
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           plusw1	equ	0xFE3
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           plusw2	equ	0xFDB
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        84
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      62
    BANK0           160     49     112
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_lcd_write_cmd
    _displayAlarmOn->_lcd_write_cmd
    _displayAlarmOn->_lcd_write_data
    _displayAlarmOff->_lcd_write_cmd
    _displayAlarmOff->_lcd_write_data
    _SetupTime->_delay_ms
    _SetupAlarmTime->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _SetupTime->_getkey
    _SetupAlarmTime->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3851
                                             35 COMRAM     1     1      0
                     _SetupAlarmTime
                          _SetupTime
       _SetupTimerInterruptRegisters
                    _displayAlarmOff
                     _displayAlarmOn
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                             32 COMRAM     3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOn                                      23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _displayAlarmOff                                     23    23      0     498
                                              0 BANK0     23    23      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1375
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTime                                      28    28      0    1177
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                             29 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     154
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      55
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _displayAlarmOff
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _displayAlarmOn
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      3E       1       66.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE      20        0.0%
DATA                 0      0      AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jun 29 14:34:55 2016

       ??_SetupTimerInterruptRegisters 001D                 displayAlarmOn@msgindex 00B5  
                                   l30 19AA                                     l54 195E  
                                   l57 196A                           ___awdiv@sign 0006  
               displayAlarmOff@outchar 00B4                __size_of_ISR_Timer0_Int 01AA  
              displayAlarmOff@msgindex 00B5               __size_ofi2_lcd_write_cmd 0070  
                                  l119 16E2                                    l171 18D6  
                                  u710 1954                                    u821 1828  
                                  u761 11BC                                    u851 1876  
                                  u791 12F6                                    u927 162E  
                                  u937 1668                                    u947 13EA  
                                  u957 140A                                    u967 141A  
                                  u977 142C                                    u987 1444  
                                  u997 1454                                    prod 000FF3  
                                  wreg 000FE8                            getkey@F4444 101B  
                                 l1400 169C                                   l1402 16A2  
                                 l1390 1688                                   l1382 1678  
                                 l1366 1996                                   l1392 168C  
                                 l1384 167C                                   l1394 1690  
                                 l1386 1680                                   l1396 1694  
                                 l1388 1684                                   l1398 1698  
                                 l1910 130A                                   l1922 133A  
                                 l1914 1314                                   l1842 1628  
                                 l1860 11DA                                   l1950 183C  
                                 l1846 163E                                   l1838 1618  
                                 l1856 11D0                                   l1954 1846  
                                 l1868 1200                                   l1972 1894  
                                 l1968 188A                                   l1998 18F6  
                                 u1007 1468                                   u1017 16F0  
                                 u1027 1710                                   u1037 1722  
                                 u1047 173A                                   u1057 174C  
                                 u1067 19C0                                   u1077 19D0  
                                 u1087 199C                 __end_of_lcd_write_data 1474  
                                 _main 18BA                                   _hour 003A  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 003F  
                                 pclat 000FFA                        ?_displayAlarmOn 0001  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 1508                 SetupAlarmTime@minute10 00CA  
                         ___param_bank 000010                 SetupAlarmTime@msgindex 00CC  
                                ?_main 0001                        __end_of___awdiv 158C  
                                _CMCON 000FB4                                  _T0CON 000FD5  
                      ___awdiv@divisor 0003                                  i2l103 15FE  
                                i2l137 1176                                  i2l920 15A0  
                                i2l912 1590                                  i2l930 15B4  
                                i2l922 15A4                                  i2l914 1594  
                                i2l932 15B8                                  i2l924 15A8  
                                i2l916 1598                                  i2l926 15AC  
                                i2l918 159C                                  i2l934 15BE  
                                i2l928 15B0                        ___awdiv@counter 0005  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISD 000F95                       lcd_write_cmd@cmd 001F  
                                _hourA 003B                                  tablat 000FF5  
                     ?_displayAlarmOff 0001                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                                status 000FD8                  __size_ofi2_lcd_strobe 0022  
                         getkey@lookup 009F                        __initialization 17C6  
                         __end_of_main 1906                                 ??_main 0024  
                        __activetblptr 000002                      ??i2_lcd_write_cmd 0002  
                               _ADCON1 000FC1                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 19DA                                 i2l1600 1582  
                               i2l1580 1542                                 i2l1582 154A  
                               i2l1574 152C                                 i2l1592 156A  
                               i2l1584 154E                                 i2l1568 151C  
                               i2l1596 1574                                 i2l1686 1096  
                      ??_lcd_write_cmd 001E                __size_of_SetupAlarmTime 00F4  
                     __end_of_delay_ms 19B8                       __end_of_lcd_init 1674  
                       char_2_int@int1 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1946  
                     ___awdiv@quotient 0007                                 _minute 003C  
                               _second 003E                           __pdataCOMRAM 0025  
                   __size_of_SetupTime 013A                           __mediumconst 0000  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                             __accesstop 0060  
              __end_of__initialization 1810                          getkey@keycode 00B1  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11B2  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1906  
                           _char_2_int 1674                       ??_displayAlarmOn 0021  
                    __end_of_SetupTime 12EC                      ?i2_lcd_write_data 0001  
                      ?_ISR_Timer0_Int 0001                     ??i2_lcd_write_data 0002  
                              ?_getkey 0001                                _INTCON2 000FF1  
                            ?_delay_ms 001D                       ??_lcd_write_data 001E  
                           _lcd_strobe 19B8                              ?_lcd_init 0001  
                   lcd_write_data@data 001F                     lcd_write_cmd@temp2 0020  
                       _SetupAlarmTime 12EC                             _int_2_char 158C  
                              __Hparam 0000                                __Lparam 0000  
                      char_2_int@char1 001D                                ___awdiv 1508  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1756                                __pcinit 17C6  
                   main@displayUpdated 0024                                __ramtop 0800  
                              __ptext0 18BA                                __ptext1 1602  
                              __ptext2 181E                                __ptext3 186C  
                              __ptext4 19FC                                __ptext5 11B2  
                              __ptext6 12EC                                __ptext7 13E0  
                              __ptext8 16E6                                __ptext9 19B8  
                            _T0CONbits 000FD5                         SetupTime@F4482 0075  
                              _minuteA 003D                             ??_delay_ms 001F  
                          ?_char_2_int 0001                             ??_lcd_init 0021  
                       __pintcode_body 102E                 __end_of_SetupAlarmTime 13E0  
                 end_of_initialization 1810                     i2lcd_write_cmd@cmd 0003  
                 ISR_Timer0_Int@hour10 001A                         SetupTime@ctemp 00CF  
                       SetupTime@hour1 00C9                          __Lmediumconst 0000  
                              int_func 102E                  displayAlarmOn@Message 009F  
             __size_of_displayAlarmOff 004E                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                            _PORTBbits 000F81                              _PORTDbits 000F83  
                SetupAlarmTime@Message 00B2                            ?_lcd_strobe 0001  
                displayAlarmOn@outchar 00B4                        ?_SetupAlarmTime 0001  
                          ?_int_2_char 0001                  __end_of_lcd_write_cmd 1756  
              __end_ofi2_lcd_write_cmd 17C6                  SetupAlarmTime@minute1 00CB  
                  __size_of_char_2_int 0072                  SetupAlarmTime@outchar 00C7  
                        __pidataCOMRAM 1A18                         __end_of_getkey 1984  
                  start_initialization 17C6                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                              _SetupTime 11B2  
                          __pdataBANK0 0060                               ??_getkey 001D  
                  __size_of_lcd_strobe 0022                      ??_displayAlarmOff 0021  
                    SetupTime@minute10 00CA                      SetupTime@second10 00CC  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00CE  
                          __pbssCOMRAM 003A              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 009F                      __size_of_delay_ms 0034  
                    __size_of_lcd_init 0072                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?___awdiv 0001  
                           ?_SetupTime 0001                            __smallconst 101A  
                         ??_char_2_int 001D                          ?i2_lcd_strobe 0001  
                            delay_ms@i 001D                              delay_ms@j 0020  
                  ISR_Timer0_Int@hour1 0017                   displayAlarmOff@F4503 008A  
                             i2u110_47 149E                               i2u111_47 14AE  
                             i2u120_47 17BC                               i2u112_47 14C0  
                             i2u121_47 19E2                               i2u113_47 14D8  
                             i2u122_47 19F2                               i2u114_47 14E8  
                             i2u115_47 14FC                               i2u116_47 1760  
                             i2u117_47 1780                               i2u109_47 147E  
                             i2u118_47 1792                               i2u119_47 17AA  
              __size_of_displayAlarmOn 004E                               _RCONbits 000FD0  
                   __end_of_char_2_int 16E6                              lcd_init@i 0022  
                     ??_SetupAlarmTime 0022                   SetupAlarmTime@hour10 00C8  
                  lcd_write_data@temp1 0020                         ??i2_lcd_strobe 0001  
                         ??_lcd_strobe 001D                       SetupTime@Message 00B2  
                            copy_data0 17E4                              copy_data1 1804  
                 i2lcd_write_data@data 0003                   i2lcd_write_cmd@temp2 0004  
                         ??_int_2_char 0001   __end_of_SetupTimerInterruptRegisters 1A18  
__size_of_SetupTimerInterruptRegisters 001C           _SetupTimerInterruptRegisters 19FC  
              __size_of_lcd_write_data 0094                               __Hrparam 0000  
               ISR_Timer0_Int@minute10 001B                 ISR_Timer0_Int@second10 001C  
                             __Lrparam 0000                        int_2_char@char1 0002  
                          ??_SetupTime 0022                       SetupTime@minute1 00CB  
                     SetupTime@second1 00CD                       __size_of___awdiv 0084  
                   __end_of_lcd_strobe 19DA                       SetupTime@outchar 00C7  
                   __end_of_int_2_char 1602                       i2_lcd_write_data 1474  
                             _delay_ms 1984                               __ptext10 1946  
                             __ptext11 1984                               __ptext12 1674  
                             __ptext14 1474                               __ptext15 1756  
                             __ptext16 19DA                               __ptext17 158C  
                             __ptext18 1508                               _lcd_init 1602  
                  displayAlarmOn@F4498 0025                          __size_of_main 004C  
                  SetupAlarmTime@F4492 0060          ?_SetupTimerInterruptRegisters 0001  
                      _displayAlarmOff 186C                               int$flags 003F  
                  SetupAlarmTime@ctemp 00CD                    SetupAlarmTime@hour1 00C9  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0070  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00C8  
                             intlevel2 0000                    __end_ofgetkey@F4444 102D  
                       _displayAlarmOn 181E                   __end_ofi2_lcd_strobe 19FC  
               displayAlarmOff@Message 009F                __end_of_displayAlarmOff 18BA  
               __end_of_displayAlarmOn 186C                         _lcd_write_data 13E0  
                        _lcd_write_cmd 16E6  
