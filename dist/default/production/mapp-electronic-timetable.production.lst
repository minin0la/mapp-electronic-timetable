

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Aug 15 16:33:44 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  001CF0                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for version@F4277
    45  001CF0  45                 	db	69
    46  001CF1  54                 	db	84
    47  001CF2  54                 	db	84
    48  001CF3  20                 	db	32
    49  001CF4  56                 	db	86
    50  001CF5  65                 	db	101
    51  001CF6  72                 	db	114
    52  001CF7  73                 	db	115
    53  001CF8  69                 	db	105
    54  001CF9  6F                 	db	111
    55  001CFA  6E                 	db	110
    56  001CFB  20                 	db	32
    57  001CFC  31                 	db	49
    58  001CFD  2E                 	db	46
    59  001CFE  33                 	db	51
    60  001CFF  61                 	db	97
    61  001D00  20                 	db	32
    62  001D01  20                 	db	32
    63  001D02  20                 	db	32
    64  001D03  20                 	db	32
    65  001D04  20                 	db	32
    66  001D05  00                 	db	0
    67                           
    68                           	psect	idataBANK0
    69  001B6C                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for SetupAlarmTimeA@F4325
    73  001B6C  53                 	db	83
    74  001B6D  75                 	db	117
    75  001B6E  62                 	db	98
    76  001B6F  6A                 	db	106
    77  001B70  65                 	db	101
    78  001B71  63                 	db	99
    79  001B72  74                 	db	116
    80  001B73  20                 	db	32
    81  001B74  41                 	db	65
    82  001B75  20                 	db	32
    83  001B76  54                 	db	84
    84  001B77  69                 	db	105
    85  001B78  6D                 	db	109
    86  001B79  65                 	db	101
    87  001B7A  20                 	db	32
    88  001B7B  68                 	db	104
    89  001B7C  68                 	db	104
    90  001B7D  6D                 	db	109
    91  001B7E  6D                 	db	109
    92  001B7F  3A                 	db	58
    93  001B80  00                 	db	0
    94                           
    95                           ;initializer for SetupAlarmTimeB@F4335
    96  001B81  53                 	db	83
    97  001B82  75                 	db	117
    98  001B83  62                 	db	98
    99  001B84  6A                 	db	106
   100  001B85  65                 	db	101
   101  001B86  63                 	db	99
   102  001B87  74                 	db	116
   103  001B88  20                 	db	32
   104  001B89  42                 	db	66
   105  001B8A  20                 	db	32
   106  001B8B  54                 	db	84
   107  001B8C  69                 	db	105
   108  001B8D  6D                 	db	109
   109  001B8E  65                 	db	101
   110  001B8F  20                 	db	32
   111  001B90  68                 	db	104
   112  001B91  68                 	db	104
   113  001B92  6D                 	db	109
   114  001B93  6D                 	db	109
   115  001B94  3A                 	db	58
   116  001B95  00                 	db	0
   117                           
   118                           ;initializer for SetupAlarmTimeC@F4345
   119  001B96  53                 	db	83
   120  001B97  75                 	db	117
   121  001B98  62                 	db	98
   122  001B99  6A                 	db	106
   123  001B9A  65                 	db	101
   124  001B9B  63                 	db	99
   125  001B9C  74                 	db	116
   126  001B9D  20                 	db	32
   127  001B9E  43                 	db	67
   128  001B9F  20                 	db	32
   129  001BA0  54                 	db	84
   130  001BA1  69                 	db	105
   131  001BA2  6D                 	db	109
   132  001BA3  65                 	db	101
   133  001BA4  20                 	db	32
   134  001BA5  68                 	db	104
   135  001BA6  68                 	db	104
   136  001BA7  6D                 	db	109
   137  001BA8  6D                 	db	109
   138  001BA9  3A                 	db	58
   139  001BAA  00                 	db	0
   140                           
   141                           ;initializer for SetupTime@F4315
   142  001BAB  53                 	db	83
   143  001BAC  65                 	db	101
   144  001BAD  74                 	db	116
   145  001BAE  20                 	db	32
   146  001BAF  74                 	db	116
   147  001BB0  69                 	db	105
   148  001BB1  6D                 	db	109
   149  001BB2  65                 	db	101
   150  001BB3  20                 	db	32
   151  001BB4  68                 	db	104
   152  001BB5  68                 	db	104
   153  001BB6  6D                 	db	109
   154  001BB7  6D                 	db	109
   155  001BB8  73                 	db	115
   156  001BB9  73                 	db	115
   157  001BBA  3A                 	db	58
   158  001BBB  20                 	db	32
   159  001BBC  20                 	db	32
   160  001BBD  20                 	db	32
   161  001BBE  20                 	db	32
   162  001BBF  00                 	db	0
   163                           
   164                           	psect	smallconst
   165  00101A                     __psmallconst:
   166                           	opt stack 0
   167  00101A  00                 	db	0
   168  00101B                     getkey@F4270:
   169                           	opt stack 0
   170  00101B  31                 	db	49
   171  00101C  32                 	db	50
   172  00101D  33                 	db	51
   173  00101E  46                 	db	70
   174  00101F  34                 	db	52
   175  001020  35                 	db	53
   176  001021  36                 	db	54
   177  001022  45                 	db	69
   178  001023  37                 	db	55
   179  001024  38                 	db	56
   180  001025  39                 	db	57
   181  001026  44                 	db	68
   182  001027  41                 	db	65
   183  001028  30                 	db	48
   184  001029  42                 	db	66
   185  00102A  43                 	db	67
   186  00102B  20                 	db	32
   187  00102C  00                 	db	0
   188  00102D                     __end_ofgetkey@F4270:
   189                           	opt stack 0
   190  0000                     _ADCON1	set	4033
   191  0000                     _CMCON	set	4020
   192  0000                     _INTCON2	set	4081
   193  0000                     _INTCONbits	set	4082
   194  0000                     _PORTA	set	3968
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTB	set	3969
   197  0000                     _PORTBbits	set	3969
   198  0000                     _PORTD	set	3971
   199  0000                     _PORTDbits	set	3971
   200  0000                     _RCONbits	set	4048
   201  0000                     _T0CON	set	4053
   202  0000                     _T0CONbits	set	4053
   203  0000                     _TMR0H	set	4055
   204  0000                     _TMR0L	set	4054
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISD	set	3989
   207  00102D  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212  001B12                     __pcinit:
   213                           	opt stack 0
   214  001B12                     start_initialization:
   215                           	opt stack 0
   216  001B12                     __initialization:
   217                           	opt stack 0
   218                           
   219                           ; Initialize objects allocated to BANK0 (84 bytes)
   220                           ; load TBLPTR registers with __pidataBANK0
   221  001B12  0E6C               	movlw	low __pidataBANK0
   222  001B14  6EF6               	movwf	tblptrl,c
   223  001B16  0E1B               	movlw	high __pidataBANK0
   224  001B18  6EF7               	movwf	tblptrh,c
   225  001B1A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   226  001B1C  6EF8               	movwf	tblptru,c
   227  001B1E  EE00  F060         	lfsr	0,__pdataBANK0
   228  001B22  EE10 F054          	lfsr	1,84
   229  001B26                     copy_data0:
   230  001B26  0009               	tblrd		*+
   231  001B28  CFF5 FFEE          	movff	tablat,postinc0
   232  001B2C  50E5               	movf	postdec1,w,c
   233  001B2E  50E1               	movf	fsr1l,w,c
   234  001B30  E1FA               	bnz	copy_data0
   235                           
   236                           ; Initialize objects allocated to COMRAM (22 bytes)
   237                           ; load TBLPTR registers with __pidataCOMRAM
   238  001B32  0EF0               	movlw	low __pidataCOMRAM
   239  001B34  6EF6               	movwf	tblptrl,c
   240  001B36  0E1C               	movlw	high __pidataCOMRAM
   241  001B38  6EF7               	movwf	tblptrh,c
   242  001B3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   243  001B3C  6EF8               	movwf	tblptru,c
   244  001B3E  EE00  F01E         	lfsr	0,__pdataCOMRAM
   245  001B42  EE10 F016          	lfsr	1,22
   246  001B46                     copy_data1:
   247  001B46  0009               	tblrd		*+
   248  001B48  CFF5 FFEE          	movff	tablat,postinc0
   249  001B4C  50E5               	movf	postdec1,w,c
   250  001B4E  50E1               	movf	fsr1l,w,c
   251  001B50  E1FA               	bnz	copy_data1
   252                           
   253                           ; Clear objects allocated to COMRAM (15 bytes)
   254  001B52  EE00  F034         	lfsr	0,__pbssCOMRAM
   255  001B56  0E0F               	movlw	15
   256  001B58                     clear_0:
   257  001B58  6AEE               	clrf	postinc0,c
   258  001B5A  06E8               	decf	wreg,f,c
   259  001B5C  E1FD               	bnz	clear_0
   260  001B5E                     end_of_initialization:
   261                           	opt stack 0
   262  001B5E                     __end_of__initialization:
   263                           	opt stack 0
   264  001B5E  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   265  001B60  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   266  001B62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  001B64  6EF8               	movwf	tblptru,c
   268  001B66  0100               	movlb	0
   269  001B68  EFEA  F00A         	goto	_main	;jump to C main() function
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bssCOMRAM
   280  000034                     __pbssCOMRAM:
   281                           	opt stack 0
   282  000034                     _AlarmAOff:
   283                           	opt stack 0
   284  000034                     	ds	2
   285  000036                     _AlarmBOff:
   286                           	opt stack 0
   287  000036                     	ds	2
   288  000038                     _AlarmCOff:
   289                           	opt stack 0
   290  000038                     	ds	2
   291  00003A                     _hour:
   292                           	opt stack 0
   293  00003A                     	ds	1
   294  00003B                     _hourA:
   295                           	opt stack 0
   296  00003B                     	ds	1
   297  00003C                     _hourB:
   298                           	opt stack 0
   299  00003C                     	ds	1
   300  00003D                     _hourC:
   301                           	opt stack 0
   302  00003D                     	ds	1
   303  00003E                     _minute:
   304                           	opt stack 0
   305  00003E                     	ds	1
   306  00003F                     _minuteA:
   307                           	opt stack 0
   308  00003F                     	ds	1
   309  000040                     _minuteB:
   310                           	opt stack 0
   311  000040                     	ds	1
   312  000041                     _minuteC:
   313                           	opt stack 0
   314  000041                     	ds	1
   315  000042                     _second:
   316                           	opt stack 0
   317  000042                     	ds	1
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	dataCOMRAM
   328  00001E                     __pdataCOMRAM:
   329                           	opt stack 0
   330  00001E                     version@F4277:
   331                           	opt stack 0
   332  00001E                     	ds	22
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	dataBANK0
   343  000060                     __pdataBANK0:
   344                           	opt stack 0
   345  000060                     SetupAlarmTimeA@F4325:
   346                           	opt stack 0
   347  000060                     	ds	21
   348  000075                     SetupAlarmTimeB@F4335:
   349                           	opt stack 0
   350  000075                     	ds	21
   351  00008A                     SetupAlarmTimeC@F4345:
   352                           	opt stack 0
   353  00008A                     	ds	21
   354  00009F                     SetupTime@F4315:
   355                           	opt stack 0
   356  00009F                     	ds	21
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           	psect	cstackBANK0
   367  0000B4                     __pcstackBANK0:
   368                           	opt stack 0
   369  0000B4                     ??_lcd_write_cmd:
   370  0000B4                     ??_lcd_write_data:
   371  0000B4                     char_2_int@char1:
   372                           	opt stack 0
   373  0000B4                     delay_ms@i:
   374                           	opt stack 0
   375  0000B4                     getkey@lookup:
   376                           	opt stack 0
   377                           
   378                           ; 18 bytes @ 0x0
   379  0000B4                     	ds	1
   380  0000B5                     lcd_write_cmd@cmd:
   381                           	opt stack 0
   382  0000B5                     lcd_write_data@data:
   383                           	opt stack 0
   384  0000B5                     char_2_int@int1:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x1
   388  0000B5                     	ds	1
   389  0000B6                     lcd_write_cmd@temp2:
   390                           	opt stack 0
   391  0000B6                     lcd_write_data@temp1:
   392                           	opt stack 0
   393  0000B6                     delay_ms@j:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  0000B6                     	ds	1
   398  0000B7                     ??_lcd_init:
   399  0000B7                     version@Version:
   400                           	opt stack 0
   401                           
   402                           ; 22 bytes @ 0x3
   403  0000B7                     	ds	1
   404  0000B8                     lcd_init@i:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x4
   408  0000B8                     	ds	14
   409  0000C6                     getkey@keycode:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x12
   413  0000C6                     	ds	1
   414  0000C7                     SetupTime@Message:
   415                           	opt stack 0
   416  0000C7                     SetupAlarmTimeA@Message:
   417                           	opt stack 0
   418  0000C7                     SetupAlarmTimeB@Message:
   419                           	opt stack 0
   420  0000C7                     SetupAlarmTimeC@Message:
   421                           	opt stack 0
   422                           
   423                           ; 21 bytes @ 0x13
   424  0000C7                     	ds	6
   425  0000CD                     version@outchar:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x19
   429  0000CD                     	ds	1
   430  0000CE                     version@msgindex:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x1A
   434  0000CE                     	ds	14
   435  0000DC                     SetupTime@outchar:
   436                           	opt stack 0
   437  0000DC                     SetupAlarmTimeA@outchar:
   438                           	opt stack 0
   439  0000DC                     SetupAlarmTimeB@outchar:
   440                           	opt stack 0
   441  0000DC                     SetupAlarmTimeC@outchar:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x28
   445  0000DC                     	ds	1
   446  0000DD                     SetupTime@hour10:
   447                           	opt stack 0
   448  0000DD                     SetupAlarmTimeA@hour10:
   449                           	opt stack 0
   450  0000DD                     SetupAlarmTimeB@hour10:
   451                           	opt stack 0
   452  0000DD                     SetupAlarmTimeC@hour10:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x29
   456  0000DD                     	ds	1
   457  0000DE                     SetupTime@hour1:
   458                           	opt stack 0
   459  0000DE                     SetupAlarmTimeA@hour1:
   460                           	opt stack 0
   461  0000DE                     SetupAlarmTimeB@hour1:
   462                           	opt stack 0
   463  0000DE                     SetupAlarmTimeC@hour1:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2A
   467  0000DE                     	ds	1
   468  0000DF                     SetupTime@minute10:
   469                           	opt stack 0
   470  0000DF                     SetupAlarmTimeA@minute10:
   471                           	opt stack 0
   472  0000DF                     SetupAlarmTimeB@minute10:
   473                           	opt stack 0
   474  0000DF                     SetupAlarmTimeC@minute10:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x2B
   478  0000DF                     	ds	1
   479  0000E0                     SetupTime@minute1:
   480                           	opt stack 0
   481  0000E0                     SetupAlarmTimeA@minute1:
   482                           	opt stack 0
   483  0000E0                     SetupAlarmTimeB@minute1:
   484                           	opt stack 0
   485  0000E0                     SetupAlarmTimeC@minute1:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x2C
   489  0000E0                     	ds	1
   490  0000E1                     SetupTime@second10:
   491                           	opt stack 0
   492  0000E1                     SetupAlarmTimeA@msgindex:
   493                           	opt stack 0
   494  0000E1                     SetupAlarmTimeB@msgindex:
   495                           	opt stack 0
   496  0000E1                     SetupAlarmTimeC@msgindex:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x2D
   500  0000E1                     	ds	1
   501  0000E2                     SetupTime@second1:
   502                           	opt stack 0
   503  0000E2                     SetupAlarmTimeA@ctemp:
   504                           	opt stack 0
   505  0000E2                     SetupAlarmTimeB@ctemp:
   506                           	opt stack 0
   507  0000E2                     SetupAlarmTimeC@ctemp:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x2E
   511  0000E2                     	ds	1
   512  0000E3                     SetupTime@msgindex:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x2F
   516  0000E3                     	ds	1
   517  0000E4                     SetupTime@ctemp:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x30
   521  0000E4                     	ds	1
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	opt stack 0
   534  000001                     ??i2_lcd_strobe:
   535  000001                     ?___awdiv:
   536                           	opt stack 0
   537  000001                     int_2_char@int1:
   538                           	opt stack 0
   539  000001                     ___awdiv@dividend:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x0
   543  000001                     	ds	1
   544  000002                     ??i2_lcd_write_cmd:
   545  000002                     ??i2_lcd_write_data:
   546  000002                     int_2_char@char1:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1
   550  000002                     	ds	1
   551  000003                     i2lcd_write_cmd@cmd:
   552                           	opt stack 0
   553  000003                     i2lcd_write_data@data:
   554                           	opt stack 0
   555  000003                     ___awdiv@divisor:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000003                     	ds	1
   560  000004                     i2lcd_write_cmd@temp2:
   561                           	opt stack 0
   562  000004                     i2lcd_write_data@temp1:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x3
   566  000004                     	ds	1
   567  000005                     ___awdiv@counter:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x4
   571  000005                     	ds	1
   572  000006                     ___awdiv@sign:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x5
   576  000006                     	ds	1
   577  000007                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x6
   581  000007                     	ds	2
   582  000009                     ??_ISR_Timer0_Int:
   583                           
   584                           ; 1 bytes @ 0x8
   585  000009                     	ds	14
   586  000017                     ISR_Timer0_Int@hour1:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x16
   590  000017                     	ds	1
   591  000018                     ISR_Timer0_Int@minute1:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x17
   595  000018                     	ds	1
   596  000019                     ISR_Timer0_Int@second1:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x18
   600  000019                     	ds	1
   601  00001A                     ISR_Timer0_Int@hour10:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x19
   605  00001A                     	ds	1
   606  00001B                     ISR_Timer0_Int@minute10:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x1A
   610  00001B                     	ds	1
   611  00001C                     ISR_Timer0_Int@second10:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x1B
   615  00001C                     	ds	1
   616  00001D                     ??_lcd_strobe:
   617  00001D                     ??_delay_ms:
   618  00001D                     
   619                           ; 1 bytes @ 0x1C
   620  00001D                     	ds	1
   621  00001E                     tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           ; 1 bytes @ 0x1D
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 327 in file "Main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		_SetupAlarmTimeA
   658 ;;		_SetupAlarmTimeB
   659 ;;		_SetupAlarmTimeC
   660 ;;		_SetupTime
   661 ;;		_SetupTimerInterruptRegisters
   662 ;;		_Startup
   663 ;;		_lcd_init
   664 ;;		_version
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text0
   671  0015D4                     __ptext0:
   672                           	opt stack 0
   673  0015D4                     _main:
   674                           	opt stack 25
   675                           
   676                           ;Main.c: 329: ADCON1 = 0x0F;
   677                           
   678                           ;incstack = 0
   679  0015D4  0E0F               	movlw	15
   680  0015D6  6EC1               	movwf	4033,c	;volatile
   681                           
   682                           ;Main.c: 330: CMCON = 0x07;
   683  0015D8  0E07               	movlw	7
   684  0015DA  6EB4               	movwf	4020,c	;volatile
   685                           
   686                           ;Main.c: 332: lcd_init();
   687  0015DC  EC66  F00C         	call	_lcd_init	;wreg free
   688                           
   689                           ;Main.c: 333: TRISA = 0b00110000;
   690  0015E0  0E30               	movlw	48
   691  0015E2  6E92               	movwf	3986,c	;volatile
   692                           
   693                           ;Main.c: 335: version();
   694  0015E4  ECE0  F00D         	call	_version	;wreg free
   695                           
   696                           ;Main.c: 336: Startup();
   697  0015E8  EC56  F00D         	call	_Startup	;wreg free
   698                           
   699                           ;Main.c: 337: SetupTime();
   700  0015EC  ECD5  F008         	call	_SetupTime	;wreg free
   701                           
   702                           ;Main.c: 338: SetupAlarmTimeA();
   703  0015F0  EC6D  F00A         	call	_SetupAlarmTimeA	;wreg free
   704                           
   705                           ;Main.c: 339: SetupAlarmTimeB();
   706  0015F4  ECF0  F009         	call	_SetupAlarmTimeB	;wreg free
   707                           
   708                           ;Main.c: 340: SetupAlarmTimeC();
   709  0015F8  EC73  F009         	call	_SetupAlarmTimeC	;wreg free
   710                           
   711                           ;Main.c: 341: SetupTimerInterruptRegisters();
   712  0015FC  EC6A  F00E         	call	_SetupTimerInterruptRegisters	;wreg free
   713  001600                     l2399:
   714                           
   715                           ;Main.c: 344: {
   716                           ;Main.c: 345: if(hour==hourA && minute==minuteA && AlarmAOff == 0)
   717  001600  503B               	movf	_hourA,w,c
   718  001602  183A               	xorwf	_hour,w,c
   719  001604  A4D8               	btfss	status,2,c
   720  001606  D011               	goto	l2411
   721  001608  503F               	movf	_minuteA,w,c
   722  00160A  183E               	xorwf	_minute,w,c
   723  00160C  A4D8               	btfss	status,2,c
   724  00160E  D00D               	goto	l2411
   725  001610  5034               	movf	_AlarmAOff,w,c
   726  001612  1035               	iorwf	_AlarmAOff+1,w,c
   727  001614  A4D8               	btfss	status,2,c
   728  001616  D009               	goto	l2411
   729                           
   730                           ;Main.c: 346: {
   731                           ;Main.c: 347: PORTA = 0b00000011;
   732  001618  0E03               	movlw	3
   733  00161A  6E80               	movwf	3968,c	;volatile
   734                           
   735                           ;Main.c: 348: if (PORTAbits.RA5 == 0)
   736  00161C  BA80               	btfsc	3968,5,c	;volatile
   737  00161E  D7F0               	goto	l2399
   738                           
   739                           ;Main.c: 349: {
   740                           ;Main.c: 350: AlarmAOff = 1;
   741  001620  0E00               	movlw	0
   742  001622  6E35               	movwf	_AlarmAOff+1,c
   743  001624  0E01               	movlw	1
   744  001626  6E34               	movwf	_AlarmAOff,c
   745                           
   746                           ;Main.c: 351: }
   747                           ;Main.c: 352: }
   748  001628  D7EB               	goto	l2399
   749  00162A                     l2411:
   750                           
   751                           ;Main.c: 353: else if(hour==hourB && minute==minuteB && AlarmBOff == 0)
   752  00162A  503C               	movf	_hourB,w,c
   753  00162C  183A               	xorwf	_hour,w,c
   754  00162E  A4D8               	btfss	status,2,c
   755  001630  D011               	goto	l2423
   756  001632  5040               	movf	_minuteB,w,c
   757  001634  183E               	xorwf	_minute,w,c
   758  001636  A4D8               	btfss	status,2,c
   759  001638  D00D               	goto	l2423
   760  00163A  5036               	movf	_AlarmBOff,w,c
   761  00163C  1037               	iorwf	_AlarmBOff+1,w,c
   762  00163E  A4D8               	btfss	status,2,c
   763  001640  D009               	goto	l2423
   764                           
   765                           ;Main.c: 354: {
   766                           ;Main.c: 355: PORTA = 0b00000101;
   767  001642  0E05               	movlw	5
   768  001644  6E80               	movwf	3968,c	;volatile
   769                           
   770                           ;Main.c: 356: if (PORTAbits.RA5 == 0)
   771  001646  BA80               	btfsc	3968,5,c	;volatile
   772  001648  D7DB               	goto	l2399
   773                           
   774                           ;Main.c: 357: {
   775                           ;Main.c: 358: AlarmBOff = 1;
   776  00164A  0E00               	movlw	0
   777  00164C  6E37               	movwf	_AlarmBOff+1,c
   778  00164E  0E01               	movlw	1
   779  001650  6E36               	movwf	_AlarmBOff,c
   780                           
   781                           ;Main.c: 359: }
   782                           ;Main.c: 360: }
   783  001652  D7D6               	goto	l2399
   784  001654                     l2423:
   785                           
   786                           ;Main.c: 361: else if(hour==hourC && minute==minuteC && AlarmCOff== 0)
   787  001654  503D               	movf	_hourC,w,c
   788  001656  183A               	xorwf	_hour,w,c
   789  001658  A4D8               	btfss	status,2,c
   790  00165A  D011               	goto	l2435
   791  00165C  5041               	movf	_minuteC,w,c
   792  00165E  183E               	xorwf	_minute,w,c
   793  001660  A4D8               	btfss	status,2,c
   794  001662  D00D               	goto	l2435
   795  001664  5038               	movf	_AlarmCOff,w,c
   796  001666  1039               	iorwf	_AlarmCOff+1,w,c
   797  001668  A4D8               	btfss	status,2,c
   798  00166A  D009               	goto	l2435
   799                           
   800                           ;Main.c: 362: {
   801                           ;Main.c: 363: PORTA = 0b00001001;
   802  00166C  0E09               	movlw	9
   803  00166E  6E80               	movwf	3968,c	;volatile
   804                           
   805                           ;Main.c: 364: if (PORTAbits.RA5 == 0)
   806  001670  BA80               	btfsc	3968,5,c	;volatile
   807  001672  D7C6               	goto	l2399
   808                           
   809                           ;Main.c: 365: {
   810                           ;Main.c: 366: AlarmCOff = 1;
   811  001674  0E00               	movlw	0
   812  001676  6E39               	movwf	_AlarmCOff+1,c
   813  001678  0E01               	movlw	1
   814  00167A  6E38               	movwf	_AlarmCOff,c
   815                           
   816                           ;Main.c: 367: }
   817                           ;Main.c: 368: }
   818  00167C  D7C1               	goto	l2399
   819  00167E                     l2435:
   820                           
   821                           ;Main.c: 369: else
   822                           ;Main.c: 370: {
   823                           ;Main.c: 371: PORTA = 0b00000000;
   824  00167E  0E00               	movlw	0
   825  001680  6E80               	movwf	3968,c	;volatile
   826  001682  D7BE               	goto	l2399
   827  001684                     __end_of_main:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _version *****************
   840 ;; Defined at:
   841 ;;		line 12 in file "version.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  Version        22    3[BANK0 ] unsigned char [22]
   846 ;;  msgindex        1   26[BANK0 ] unsigned char 
   847 ;;  outchar         1   25[BANK0 ] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  2   73[None  ] int 
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0       0       0       0       0       0       0       0       0
   858 ;;      Locals:         0      24       0       0       0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0
   860 ;;      Totals:         0      24       0       0       0       0       0       0       0
   861 ;;Total ram usage:       24 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; Hardware stack levels required when called:    5
   864 ;; This function calls:
   865 ;;		_lcd_write_cmd
   866 ;;		_lcd_write_data
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text1
   873  001BC0                     __ptext1:
   874                           	opt stack 0
   875  001BC0                     _version:
   876                           	opt stack 25
   877                           
   878                           ;version.c: 14: unsigned char msgindex, outchar;
   879                           ;version.c: 15: char Version[ ] = "ETT Version 1.3a     ";
   880                           
   881                           ;incstack = 0
   882  001BC0  EE20  F01E         	lfsr	2,version@F4277
   883  001BC4  EE10  F0B7         	lfsr	1,version@Version
   884  001BC8  0E15               	movlw	21
   885  001BCA                     u1121:
   886  001BCA  CFDB FFE3          	movff	plusw2,plusw1
   887  001BCE  06E8               	decf	wreg,f,c
   888  001BD0  E2FC               	bc	u1121
   889                           
   890                           ;version.c: 17: lcd_write_cmd(0x80);
   891  001BD2  0E80               	movlw	128
   892  001BD4  ECE2  F00B         	call	_lcd_write_cmd
   893                           
   894                           ;version.c: 19: for (msgindex = 0; msgindex < 20; msgindex++)
   895  001BD8  0E00               	movlw	0
   896  001BDA  0100               	movlb	0	; () banked
   897  001BDC  6FCE               	movwf	version@msgindex& (0+255),b
   898  001BDE                     l2367:
   899                           
   900                           ; BSR set to: 0
   901  001BDE  0E13               	movlw	19
   902  001BE0  0100               	movlb	0	; () banked
   903  001BE2  65CE               	cpfsgt	version@msgindex& (0+255),b
   904  001BE4  D001               	goto	l2371
   905  001BE6  0012               	return	
   906  001BE8                     l2371:
   907                           
   908                           ; BSR set to: 0
   909                           ;version.c: 20: {
   910                           ;version.c: 21: outchar = Version[msgindex];
   911  001BE8  0100               	movlb	0	; () banked
   912  001BEA  51CE               	movf	version@msgindex& (0+255),w,b
   913  001BEC  0D01               	mullw	1
   914  001BEE  0EB7               	movlw	low version@Version
   915  001BF0  24F3               	addwf	prodl,w,c
   916  001BF2  6ED9               	movwf	fsr2l,c
   917  001BF4  0E00               	movlw	high version@Version
   918  001BF6  20F4               	addwfc	prodh,w,c
   919  001BF8  6EDA               	movwf	fsr2h,c
   920  001BFA  50DF               	movf	indf2,w,c
   921  001BFC  0100               	movlb	0	; () banked
   922  001BFE  6FCD               	movwf	version@outchar& (0+255),b
   923                           
   924                           ; BSR set to: 0
   925                           ;version.c: 22: lcd_write_data(outchar);
   926  001C00  0100               	movlb	0	; () banked
   927  001C02  51CD               	movf	version@outchar& (0+255),w,b
   928  001C04  EC42  F00B         	call	_lcd_write_data
   929  001C08  0100               	movlb	0	; () banked
   930  001C0A  2BCE               	incf	version@msgindex& (0+255),f,b
   931  001C0C  D7E8               	goto	l2367
   932  001C0E                     __end_of_version:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           prodh	equ	0xFF4
   939                           prodl	equ	0xFF3
   940                           postinc0	equ	0xFEE
   941                           wreg	equ	0xFE8
   942                           postdec1	equ	0xFE5
   943                           plusw1	equ	0xFE3
   944                           fsr1l	equ	0xFE1
   945                           indf2	equ	0xFDF
   946                           plusw2	equ	0xFDB
   947                           fsr2h	equ	0xFDA
   948                           fsr2l	equ	0xFD9
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _lcd_init *****************
   952 ;; Defined at:
   953 ;;		line 83 in file "lcd_utilities.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  i               2    4[BANK0 ] int 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       2       0       0       0       0       0       0       0
   969 ;;      Temps:          0       1       0       0       0       0       0       0       0
   970 ;;      Totals:         0       3       0       0       0       0       0       0       0
   971 ;;Total ram usage:        3 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    5
   974 ;; This function calls:
   975 ;;		_lcd_write_cmd
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text2
   982  0018CC                     __ptext2:
   983                           	opt stack 0
   984  0018CC                     _lcd_init:
   985                           	opt stack 25
   986                           
   987                           ;lcd_utilities.c: 85: int i;
   988                           ;lcd_utilities.c: 86: TRISD = 0x00;
   989                           
   990                           ; BSR set to: 0
   991                           ;incstack = 0
   992  0018CC  0E00               	movlw	0
   993  0018CE  6E95               	movwf	3989,c	;volatile
   994                           
   995                           ;lcd_utilities.c: 87: PORTD = 0x00;
   996  0018D0  0E00               	movlw	0
   997  0018D2  6E83               	movwf	3971,c	;volatile
   998                           
   999                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1000  0018D4  9883               	bcf	3971,4,c	;volatile
  1001                           
  1002                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1003  0018D6  9C83               	bcf	3971,6,c	;volatile
  1004                           
  1005                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1006  0018D8  9A83               	bcf	3971,5,c	;volatile
  1007                           
  1008                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1009  0018DA  0E00               	movlw	0
  1010  0018DC  0100               	movlb	0	; () banked
  1011  0018DE  6FB9               	movwf	(lcd_init@i+1)& (0+255),b
  1012  0018E0  0E00               	movlw	0
  1013  0018E2  6FB8               	movwf	lcd_init@i& (0+255),b
  1014  0018E4                     l2149:
  1015                           
  1016                           ; BSR set to: 0
  1017  0018E4  0100               	movlb	0	; () banked
  1018  0018E6  BFB9               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1019  0018E8  D008               	goto	l2153
  1020  0018EA  0100               	movlb	0	; () banked
  1021  0018EC  51B9               	movf	(lcd_init@i+1)& (0+255),w,b
  1022  0018EE  E112               	bnz	l2157
  1023  0018F0  0E64               	movlw	100
  1024  0018F2  0100               	movlb	0	; () banked
  1025  0018F4  5DB8               	subwf	lcd_init@i& (0+255),w,b
  1026  0018F6  B0D8               	btfsc	status,0,c
  1027  0018F8  D00D               	goto	l2157
  1028  0018FA                     l2153:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1032  0018FA  0E9C               	movlw	156
  1033  0018FC  0100               	movlb	0	; () banked
  1034  0018FE  6FB7               	movwf	??_lcd_init& (0+255),b
  1035  001900  0ED7               	movlw	215
  1036  001902                     u1277:
  1037  001902  2EE8               	decfsz	wreg,f,c
  1038  001904  D7FE               	goto	u1277
  1039  001906  2FB7               	decfsz	??_lcd_init& (0+255),f,b
  1040  001908  D7FC               	goto	u1277
  1041  00190A  F000               	nop	
  1042  00190C  0100               	movlb	0	; () banked
  1043  00190E  4BB8               	infsnz	lcd_init@i& (0+255),f,b
  1044  001910  2BB9               	incf	(lcd_init@i+1)& (0+255),f,b
  1045  001912  D7E8               	goto	l2149
  1046  001914                     l2157:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1050  001914  0E33               	movlw	51
  1051  001916  ECE2  F00B         	call	_lcd_write_cmd
  1052                           
  1053                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1054  00191A  0E32               	movlw	50
  1055  00191C  ECE2  F00B         	call	_lcd_write_cmd
  1056                           
  1057                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1058  001920  0E28               	movlw	40
  1059  001922  ECE2  F00B         	call	_lcd_write_cmd
  1060                           
  1061                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1062  001926  0E0E               	movlw	14
  1063  001928  ECE2  F00B         	call	_lcd_write_cmd
  1064                           
  1065                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1066  00192C  0E06               	movlw	6
  1067  00192E  ECE2  F00B         	call	_lcd_write_cmd
  1068                           
  1069                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1070  001932  0E01               	movlw	1
  1071  001934  ECE2  F00B         	call	_lcd_write_cmd
  1072                           
  1073                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1074  001938  0E9C               	movlw	156
  1075  00193A  0100               	movlb	0	; () banked
  1076  00193C  6FB7               	movwf	??_lcd_init& (0+255),b
  1077  00193E  0ED7               	movlw	215
  1078  001940                     u1287:
  1079  001940  2EE8               	decfsz	wreg,f,c
  1080  001942  D7FE               	goto	u1287
  1081  001944  2FB7               	decfsz	??_lcd_init& (0+255),f,b
  1082  001946  D7FC               	goto	u1287
  1083  001948  F000               	nop	
  1084  00194A  0012               	return		;funcret
  1085  00194C                     __end_of_lcd_init:
  1086                           	opt stack 0
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           prodh	equ	0xFF4
  1092                           prodl	equ	0xFF3
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           plusw1	equ	0xFE3
  1097                           fsr1l	equ	0xFE1
  1098                           indf2	equ	0xFDF
  1099                           plusw2	equ	0xFDB
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _Startup *****************
  1105 ;; Defined at:
  1106 ;;		line 312 in file "Main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    4
  1127 ;; This function calls:
  1128 ;;		_delay_ms
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text3
  1135  001AAC                     __ptext3:
  1136                           	opt stack 0
  1137  001AAC                     _Startup:
  1138                           	opt stack 26
  1139                           
  1140                           ;Main.c: 314: PORTA = 0b00000010;
  1141                           
  1142                           ;incstack = 0
  1143  001AAC  0E02               	movlw	2
  1144  001AAE  6E80               	movwf	3968,c	;volatile
  1145                           
  1146                           ;Main.c: 315: delay_ms(1000);
  1147  001AB0  0E03               	movlw	3
  1148  001AB2  0100               	movlb	0	; () banked
  1149  001AB4  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1150  001AB6  0EE8               	movlw	232
  1151  001AB8  6FB4               	movwf	delay_ms@i& (0+255),b
  1152  001ABA  EC07  F00E         	call	_delay_ms	;wreg free
  1153                           
  1154                           ;Main.c: 316: PORTA = 0b00000100;
  1155  001ABE  0E04               	movlw	4
  1156  001AC0  6E80               	movwf	3968,c	;volatile
  1157                           
  1158                           ;Main.c: 317: delay_ms(1000);
  1159  001AC2  0E03               	movlw	3
  1160  001AC4  0100               	movlb	0	; () banked
  1161  001AC6  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1162  001AC8  0EE8               	movlw	232
  1163  001ACA  6FB4               	movwf	delay_ms@i& (0+255),b
  1164  001ACC  EC07  F00E         	call	_delay_ms	;wreg free
  1165                           
  1166                           ;Main.c: 318: PORTA = 0b00001000;
  1167  001AD0  0E08               	movlw	8
  1168  001AD2  6E80               	movwf	3968,c	;volatile
  1169                           
  1170                           ;Main.c: 319: delay_ms(1000);
  1171  001AD4  0E03               	movlw	3
  1172  001AD6  0100               	movlb	0	; () banked
  1173  001AD8  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1174  001ADA  0EE8               	movlw	232
  1175  001ADC  6FB4               	movwf	delay_ms@i& (0+255),b
  1176  001ADE  EC07  F00E         	call	_delay_ms	;wreg free
  1177                           
  1178                           ;Main.c: 320: PORTA = 0b00001111;
  1179  001AE2  0E0F               	movlw	15
  1180  001AE4  6E80               	movwf	3968,c	;volatile
  1181                           
  1182                           ;Main.c: 321: delay_ms(1000);
  1183  001AE6  0E03               	movlw	3
  1184  001AE8  0100               	movlb	0	; () banked
  1185  001AEA  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1186  001AEC  0EE8               	movlw	232
  1187  001AEE  6FB4               	movwf	delay_ms@i& (0+255),b
  1188  001AF0  EC07  F00E         	call	_delay_ms	;wreg free
  1189                           
  1190                           ;Main.c: 322: PORTA = 0b00000000;
  1191  001AF4  0E00               	movlw	0
  1192  001AF6  6E80               	movwf	3968,c	;volatile
  1193                           
  1194                           ;Main.c: 323: AlarmAOff = 0;
  1195  001AF8  0E00               	movlw	0
  1196  001AFA  6E35               	movwf	_AlarmAOff+1,c
  1197  001AFC  0E00               	movlw	0
  1198  001AFE  6E34               	movwf	_AlarmAOff,c
  1199                           
  1200                           ;Main.c: 324: AlarmBOff = 0;
  1201  001B00  0E00               	movlw	0
  1202  001B02  6E37               	movwf	_AlarmBOff+1,c
  1203  001B04  0E00               	movlw	0
  1204  001B06  6E36               	movwf	_AlarmBOff,c
  1205                           
  1206                           ;Main.c: 325: AlarmCOff = 0;
  1207  001B08  0E00               	movlw	0
  1208  001B0A  6E39               	movwf	_AlarmCOff+1,c
  1209  001B0C  0E00               	movlw	0
  1210  001B0E  6E38               	movwf	_AlarmCOff,c
  1211  001B10  0012               	return		;funcret
  1212  001B12                     __end_of_Startup:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           tblptrh	equ	0xFF7
  1216                           tblptrl	equ	0xFF6
  1217                           tablat	equ	0xFF5
  1218                           prodh	equ	0xFF4
  1219                           prodl	equ	0xFF3
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           postdec1	equ	0xFE5
  1223                           plusw1	equ	0xFE3
  1224                           fsr1l	equ	0xFE1
  1225                           indf2	equ	0xFDF
  1226                           plusw2	equ	0xFDB
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _SetupTimerInterruptRegisters *****************
  1232 ;; Defined at:
  1233 ;;		line 276 in file "Main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    3
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text4
  1262  001CD4                     __ptext4:
  1263                           	opt stack 0
  1264  001CD4                     _SetupTimerInterruptRegisters:
  1265                           	opt stack 27
  1266                           
  1267                           ;Main.c: 278: RCONbits.IPEN =1;
  1268                           
  1269                           ;incstack = 0
  1270  001CD4  8ED0               	bsf	4048,7,c	;volatile
  1271                           
  1272                           ;Main.c: 282: INTCONbits.GIEH =1;
  1273  001CD6  8EF2               	bsf	intcon,7,c	;volatile
  1274                           
  1275                           ;Main.c: 287: T0CON = 0b00000111;
  1276  001CD8  0E07               	movlw	7
  1277  001CDA  6ED5               	movwf	4053,c	;volatile
  1278                           
  1279                           ;Main.c: 295: INTCON2 = 0b10000100;
  1280  001CDC  0E84               	movlw	132
  1281  001CDE  6EF1               	movwf	intcon2,c	;volatile
  1282                           
  1283                           ;Main.c: 300: TMR0H = 0x48;
  1284  001CE0  0E48               	movlw	72
  1285  001CE2  6ED7               	movwf	4055,c	;volatile
  1286                           
  1287                           ;Main.c: 301: TMR0L = 0xE5;
  1288  001CE4  0EE5               	movlw	229
  1289  001CE6  6ED6               	movwf	4054,c	;volatile
  1290                           
  1291                           ;Main.c: 303: T0CONbits.TMR0ON = 1;
  1292  001CE8  8ED5               	bsf	4053,7,c	;volatile
  1293                           
  1294                           ;Main.c: 304: INTCONbits.TMR0IE = 1;
  1295  001CEA  8AF2               	bsf	intcon,5,c	;volatile
  1296                           
  1297                           ;Main.c: 307: INTCONbits.TMR0IF = 0;
  1298  001CEC  94F2               	bcf	intcon,2,c	;volatile
  1299  001CEE  0012               	return		;funcret
  1300  001CF0                     __end_of_SetupTimerInterruptRegisters:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           intcon	equ	0xFF2
  1309                           intcon2	equ	0xFF1
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           postdec1	equ	0xFE5
  1313                           plusw1	equ	0xFE3
  1314                           fsr1l	equ	0xFE1
  1315                           indf2	equ	0xFDF
  1316                           plusw2	equ	0xFDB
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _SetupTime *****************
  1322 ;; Defined at:
  1323 ;;		line 108 in file "Main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1328 ;;  ctemp           1   48[BANK0 ] unsigned char 
  1329 ;;  msgindex        1   47[BANK0 ] unsigned char 
  1330 ;;  second1         1   46[BANK0 ] unsigned char 
  1331 ;;  second10        1   45[BANK0 ] unsigned char 
  1332 ;;  minute1         1   44[BANK0 ] unsigned char 
  1333 ;;  minute10        1   43[BANK0 ] unsigned char 
  1334 ;;  hour1           1   42[BANK0 ] unsigned char 
  1335 ;;  hour10          1   41[BANK0 ] unsigned char 
  1336 ;;  outchar         1   40[BANK0 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         0      30       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1350 ;;Total ram usage:       30 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    5
  1353 ;; This function calls:
  1354 ;;		_char_2_int
  1355 ;;		_delay_ms
  1356 ;;		_getkey
  1357 ;;		_lcd_write_cmd
  1358 ;;		_lcd_write_data
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text5
  1365  0011AA                     __ptext5:
  1366                           	opt stack 0
  1367  0011AA                     _SetupTime:
  1368                           	opt stack 25
  1369                           
  1370                           ;Main.c: 110: unsigned char msgindex, outchar, ctemp;
  1371                           ;Main.c: 111: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  1372                           ;Main.c: 112: char Message[ ] = "Set time hhmmss:    ";
  1373                           
  1374                           ;incstack = 0
  1375  0011AA  EE20  F09F         	lfsr	2,SetupTime@F4315
  1376  0011AE  EE10  F0C7         	lfsr	1,SetupTime@Message
  1377  0011B2  0E14               	movlw	20
  1378  0011B4                     u1001:
  1379  0011B4  CFDB FFE3          	movff	plusw2,plusw1
  1380  0011B8  06E8               	decf	wreg,f,c
  1381  0011BA  E2FC               	bc	u1001
  1382                           
  1383                           ;Main.c: 114: lcd_write_cmd(0x80);
  1384  0011BC  0E80               	movlw	128
  1385  0011BE  ECE2  F00B         	call	_lcd_write_cmd
  1386                           
  1387                           ;Main.c: 116: for (msgindex = 0; msgindex < 20; msgindex++)
  1388  0011C2  0E00               	movlw	0
  1389  0011C4  0100               	movlb	0	; () banked
  1390  0011C6  6FE3               	movwf	SetupTime@msgindex& (0+255),b
  1391  0011C8                     l2167:
  1392                           
  1393                           ; BSR set to: 0
  1394  0011C8  0E13               	movlw	19
  1395  0011CA  0100               	movlb	0	; () banked
  1396  0011CC  65E3               	cpfsgt	SetupTime@msgindex& (0+255),b
  1397  0011CE  D001               	goto	l2171
  1398  0011D0  D013               	goto	l2179
  1399  0011D2                     l2171:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;Main.c: 117: {
  1403                           ;Main.c: 118: outchar = Message[msgindex];
  1404  0011D2  0100               	movlb	0	; () banked
  1405  0011D4  51E3               	movf	SetupTime@msgindex& (0+255),w,b
  1406  0011D6  0D01               	mullw	1
  1407  0011D8  0EC7               	movlw	low SetupTime@Message
  1408  0011DA  24F3               	addwf	prodl,w,c
  1409  0011DC  6ED9               	movwf	fsr2l,c
  1410  0011DE  0E00               	movlw	high SetupTime@Message
  1411  0011E0  20F4               	addwfc	prodh,w,c
  1412  0011E2  6EDA               	movwf	fsr2h,c
  1413  0011E4  50DF               	movf	indf2,w,c
  1414  0011E6  0100               	movlb	0	; () banked
  1415  0011E8  6FDC               	movwf	SetupTime@outchar& (0+255),b
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;Main.c: 119: lcd_write_data(outchar);
  1419  0011EA  0100               	movlb	0	; () banked
  1420  0011EC  51DC               	movf	SetupTime@outchar& (0+255),w,b
  1421  0011EE  EC42  F00B         	call	_lcd_write_data
  1422  0011F2  0100               	movlb	0	; () banked
  1423  0011F4  2BE3               	incf	SetupTime@msgindex& (0+255),f,b
  1424  0011F6  D7E8               	goto	l2167
  1425  0011F8                     l2179:
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;Main.c: 120: }
  1429                           ;Main.c: 122: lcd_write_cmd(0xC0);
  1430  0011F8  0EC0               	movlw	192
  1431  0011FA  ECE2  F00B         	call	_lcd_write_cmd
  1432                           
  1433                           ;Main.c: 124: ctemp=getkey();
  1434  0011FE  EC29  F00E         	call	_getkey	;wreg free
  1435  001202  0100               	movlb	0	; () banked
  1436  001204  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;Main.c: 125: lcd_write_data(ctemp);
  1440  001206  0100               	movlb	0	; () banked
  1441  001208  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1442  00120A  EC42  F00B         	call	_lcd_write_data
  1443                           
  1444                           ;Main.c: 126: hour10 = char_2_int (ctemp);
  1445  00120E  0100               	movlb	0	; () banked
  1446  001210  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1447  001212  ECA6  F00C         	call	_char_2_int
  1448  001216  0100               	movlb	0	; () banked
  1449  001218  6FDD               	movwf	SetupTime@hour10& (0+255),b
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;Main.c: 128: ctemp=getkey();
  1453  00121A  EC29  F00E         	call	_getkey	;wreg free
  1454  00121E  0100               	movlb	0	; () banked
  1455  001220  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1456                           
  1457                           ;Main.c: 129: lcd_write_data(ctemp);
  1458  001222  0100               	movlb	0	; () banked
  1459  001224  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1460  001226  EC42  F00B         	call	_lcd_write_data
  1461                           
  1462                           ;Main.c: 130: hour1 = char_2_int (ctemp);
  1463  00122A  0100               	movlb	0	; () banked
  1464  00122C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1465  00122E  ECA6  F00C         	call	_char_2_int
  1466  001232  0100               	movlb	0	; () banked
  1467  001234  6FDE               	movwf	SetupTime@hour1& (0+255),b
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;Main.c: 132: ctemp=getkey();
  1471  001236  EC29  F00E         	call	_getkey	;wreg free
  1472  00123A  0100               	movlb	0	; () banked
  1473  00123C  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;Main.c: 133: lcd_write_data(ctemp);
  1477  00123E  0100               	movlb	0	; () banked
  1478  001240  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1479  001242  EC42  F00B         	call	_lcd_write_data
  1480                           
  1481                           ;Main.c: 134: minute10 = char_2_int (ctemp);
  1482  001246  0100               	movlb	0	; () banked
  1483  001248  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1484  00124A  ECA6  F00C         	call	_char_2_int
  1485  00124E  0100               	movlb	0	; () banked
  1486  001250  6FDF               	movwf	SetupTime@minute10& (0+255),b
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;Main.c: 136: ctemp=getkey();
  1490  001252  EC29  F00E         	call	_getkey	;wreg free
  1491  001256  0100               	movlb	0	; () banked
  1492  001258  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1493                           
  1494                           ;Main.c: 137: lcd_write_data(ctemp);
  1495  00125A  0100               	movlb	0	; () banked
  1496  00125C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1497  00125E  EC42  F00B         	call	_lcd_write_data
  1498                           
  1499                           ;Main.c: 138: minute1 = char_2_int (ctemp);
  1500  001262  0100               	movlb	0	; () banked
  1501  001264  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1502  001266  ECA6  F00C         	call	_char_2_int
  1503  00126A  0100               	movlb	0	; () banked
  1504  00126C  6FE0               	movwf	SetupTime@minute1& (0+255),b
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;Main.c: 140: ctemp=getkey();
  1508  00126E  EC29  F00E         	call	_getkey	;wreg free
  1509  001272  0100               	movlb	0	; () banked
  1510  001274  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;Main.c: 141: lcd_write_data(ctemp);
  1514  001276  0100               	movlb	0	; () banked
  1515  001278  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1516  00127A  EC42  F00B         	call	_lcd_write_data
  1517                           
  1518                           ;Main.c: 142: second10 = char_2_int (ctemp);
  1519  00127E  0100               	movlb	0	; () banked
  1520  001280  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1521  001282  ECA6  F00C         	call	_char_2_int
  1522  001286  0100               	movlb	0	; () banked
  1523  001288  6FE1               	movwf	SetupTime@second10& (0+255),b
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;Main.c: 144: ctemp=getkey();
  1527  00128A  EC29  F00E         	call	_getkey	;wreg free
  1528  00128E  0100               	movlb	0	; () banked
  1529  001290  6FE4               	movwf	SetupTime@ctemp& (0+255),b
  1530                           
  1531                           ;Main.c: 145: lcd_write_data(ctemp);
  1532  001292  0100               	movlb	0	; () banked
  1533  001294  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1534  001296  EC42  F00B         	call	_lcd_write_data
  1535                           
  1536                           ;Main.c: 146: second1 = char_2_int (ctemp);
  1537  00129A  0100               	movlb	0	; () banked
  1538  00129C  51E4               	movf	SetupTime@ctemp& (0+255),w,b
  1539  00129E  ECA6  F00C         	call	_char_2_int
  1540  0012A2  0100               	movlb	0	; () banked
  1541  0012A4  6FE2               	movwf	SetupTime@second1& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;Main.c: 148: hour = hour10 * 10 + hour1;
  1545  0012A6  0100               	movlb	0	; () banked
  1546  0012A8  51DD               	movf	SetupTime@hour10& (0+255),w,b
  1547  0012AA  0D0A               	mullw	10
  1548  0012AC  50F3               	movf	prodl,w,c
  1549  0012AE  0100               	movlb	0	; () banked
  1550  0012B0  25DE               	addwf	SetupTime@hour1& (0+255),w,b
  1551  0012B2  6E3A               	movwf	_hour,c
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;Main.c: 149: minute = minute10 * 10 + minute1;
  1555  0012B4  0100               	movlb	0	; () banked
  1556  0012B6  51DF               	movf	SetupTime@minute10& (0+255),w,b
  1557  0012B8  0D0A               	mullw	10
  1558  0012BA  50F3               	movf	prodl,w,c
  1559  0012BC  0100               	movlb	0	; () banked
  1560  0012BE  25E0               	addwf	SetupTime@minute1& (0+255),w,b
  1561  0012C0  6E3E               	movwf	_minute,c
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;Main.c: 150: second = second10 * 10 + second1;
  1565  0012C2  0100               	movlb	0	; () banked
  1566  0012C4  51E1               	movf	SetupTime@second10& (0+255),w,b
  1567  0012C6  0D0A               	mullw	10
  1568  0012C8  50F3               	movf	prodl,w,c
  1569  0012CA  0100               	movlb	0	; () banked
  1570  0012CC  25E2               	addwf	SetupTime@second1& (0+255),w,b
  1571  0012CE  6E42               	movwf	_second,c
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;Main.c: 152: delay_ms(500);
  1575  0012D0  0E01               	movlw	1
  1576  0012D2  0100               	movlb	0	; () banked
  1577  0012D4  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1578  0012D6  0EF4               	movlw	244
  1579  0012D8  6FB4               	movwf	delay_ms@i& (0+255),b
  1580  0012DA  EC07  F00E         	call	_delay_ms	;wreg free
  1581                           
  1582                           ;Main.c: 153: lcd_write_cmd(0x01);
  1583  0012DE  0E01               	movlw	1
  1584  0012E0  ECE2  F00B         	call	_lcd_write_cmd
  1585  0012E4  0012               	return		;funcret
  1586  0012E6                     __end_of_SetupTime:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           prodh	equ	0xFF4
  1593                           prodl	equ	0xFF3
  1594                           intcon	equ	0xFF2
  1595                           intcon2	equ	0xFF1
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           postdec1	equ	0xFE5
  1599                           plusw1	equ	0xFE3
  1600                           fsr1l	equ	0xFE1
  1601                           indf2	equ	0xFDF
  1602                           plusw2	equ	0xFDB
  1603                           fsr2h	equ	0xFDA
  1604                           fsr2l	equ	0xFD9
  1605                           status	equ	0xFD8
  1606                           
  1607 ;; *************** function _SetupAlarmTimeC *****************
  1608 ;; Defined at:
  1609 ;;		line 236 in file "Main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1614 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1615 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1616 ;;  minute1         1   44[BANK0 ] unsigned char 
  1617 ;;  minute10        1   43[BANK0 ] unsigned char 
  1618 ;;  hour1           1   42[BANK0 ] unsigned char 
  1619 ;;  hour10          1   41[BANK0 ] unsigned char 
  1620 ;;  outchar         1   40[BANK0 ] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0
  1631 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1633 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1634 ;;Total ram usage:       28 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    5
  1637 ;; This function calls:
  1638 ;;		_char_2_int
  1639 ;;		_delay_ms
  1640 ;;		_getkey
  1641 ;;		_lcd_write_cmd
  1642 ;;		_lcd_write_data
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text6
  1649  0012E6                     __ptext6:
  1650                           	opt stack 0
  1651  0012E6                     _SetupAlarmTimeC:
  1652                           	opt stack 25
  1653                           
  1654                           ;Main.c: 238: unsigned char msgindex, outchar, ctemp;
  1655                           ;Main.c: 239: unsigned char hour10, hour1, minute10, minute1;
  1656                           ;Main.c: 240: char Message[ ] = "Subject C Time hhmm:";
  1657                           
  1658                           ;incstack = 0
  1659  0012E6  EE20  F08A         	lfsr	2,SetupAlarmTimeC@F4345
  1660  0012EA  EE10  F0C7         	lfsr	1,SetupAlarmTimeC@Message
  1661  0012EE  0E14               	movlw	20
  1662  0012F0                     u1091:
  1663  0012F0  CFDB FFE3          	movff	plusw2,plusw1
  1664  0012F4  06E8               	decf	wreg,f,c
  1665  0012F6  E2FC               	bc	u1091
  1666                           
  1667                           ;Main.c: 242: PORTA = 0b00001000;
  1668  0012F8  0E08               	movlw	8
  1669  0012FA  6E80               	movwf	3968,c	;volatile
  1670                           
  1671                           ;Main.c: 244: lcd_write_cmd(0x80);
  1672  0012FC  0E80               	movlw	128
  1673  0012FE  ECE2  F00B         	call	_lcd_write_cmd
  1674                           
  1675                           ;Main.c: 246: for (msgindex = 0; msgindex < 20; msgindex++)
  1676  001302  0E00               	movlw	0
  1677  001304  0100               	movlb	0	; () banked
  1678  001306  6FE1               	movwf	SetupAlarmTimeC@msgindex& (0+255),b
  1679  001308                     l2307:
  1680                           
  1681                           ; BSR set to: 0
  1682  001308  0E13               	movlw	19
  1683  00130A  0100               	movlb	0	; () banked
  1684  00130C  65E1               	cpfsgt	SetupAlarmTimeC@msgindex& (0+255),b
  1685  00130E  D001               	goto	l2311
  1686  001310  D013               	goto	l2319
  1687  001312                     l2311:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;Main.c: 247: {
  1691                           ;Main.c: 248: outchar = Message[msgindex];
  1692  001312  0100               	movlb	0	; () banked
  1693  001314  51E1               	movf	SetupAlarmTimeC@msgindex& (0+255),w,b
  1694  001316  0D01               	mullw	1
  1695  001318  0EC7               	movlw	low SetupAlarmTimeC@Message
  1696  00131A  24F3               	addwf	prodl,w,c
  1697  00131C  6ED9               	movwf	fsr2l,c
  1698  00131E  0E00               	movlw	high SetupAlarmTimeC@Message
  1699  001320  20F4               	addwfc	prodh,w,c
  1700  001322  6EDA               	movwf	fsr2h,c
  1701  001324  50DF               	movf	indf2,w,c
  1702  001326  0100               	movlb	0	; () banked
  1703  001328  6FDC               	movwf	SetupAlarmTimeC@outchar& (0+255),b
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;Main.c: 249: lcd_write_data(outchar);
  1707  00132A  0100               	movlb	0	; () banked
  1708  00132C  51DC               	movf	SetupAlarmTimeC@outchar& (0+255),w,b
  1709  00132E  EC42  F00B         	call	_lcd_write_data
  1710  001332  0100               	movlb	0	; () banked
  1711  001334  2BE1               	incf	SetupAlarmTimeC@msgindex& (0+255),f,b
  1712  001336  D7E8               	goto	l2307
  1713  001338                     l2319:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;Main.c: 250: }
  1717                           ;Main.c: 252: lcd_write_cmd(0xC0);
  1718  001338  0EC0               	movlw	192
  1719  00133A  ECE2  F00B         	call	_lcd_write_cmd
  1720                           
  1721                           ;Main.c: 254: ctemp=getkey();
  1722  00133E  EC29  F00E         	call	_getkey	;wreg free
  1723  001342  0100               	movlb	0	; () banked
  1724  001344  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;Main.c: 255: lcd_write_data(ctemp);
  1728  001346  0100               	movlb	0	; () banked
  1729  001348  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1730  00134A  EC42  F00B         	call	_lcd_write_data
  1731                           
  1732                           ;Main.c: 256: hour10 = char_2_int (ctemp);
  1733  00134E  0100               	movlb	0	; () banked
  1734  001350  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1735  001352  ECA6  F00C         	call	_char_2_int
  1736  001356  0100               	movlb	0	; () banked
  1737  001358  6FDD               	movwf	SetupAlarmTimeC@hour10& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;Main.c: 258: ctemp=getkey();
  1741  00135A  EC29  F00E         	call	_getkey	;wreg free
  1742  00135E  0100               	movlb	0	; () banked
  1743  001360  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1744                           
  1745                           ;Main.c: 259: lcd_write_data(ctemp);
  1746  001362  0100               	movlb	0	; () banked
  1747  001364  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1748  001366  EC42  F00B         	call	_lcd_write_data
  1749                           
  1750                           ;Main.c: 260: hour1 = char_2_int (ctemp);
  1751  00136A  0100               	movlb	0	; () banked
  1752  00136C  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1753  00136E  ECA6  F00C         	call	_char_2_int
  1754  001372  0100               	movlb	0	; () banked
  1755  001374  6FDE               	movwf	SetupAlarmTimeC@hour1& (0+255),b
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;Main.c: 262: ctemp=getkey();
  1759  001376  EC29  F00E         	call	_getkey	;wreg free
  1760  00137A  0100               	movlb	0	; () banked
  1761  00137C  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;Main.c: 263: lcd_write_data(ctemp);
  1765  00137E  0100               	movlb	0	; () banked
  1766  001380  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1767  001382  EC42  F00B         	call	_lcd_write_data
  1768                           
  1769                           ;Main.c: 264: minute10 = char_2_int (ctemp);
  1770  001386  0100               	movlb	0	; () banked
  1771  001388  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1772  00138A  ECA6  F00C         	call	_char_2_int
  1773  00138E  0100               	movlb	0	; () banked
  1774  001390  6FDF               	movwf	SetupAlarmTimeC@minute10& (0+255),b
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;Main.c: 266: ctemp=getkey();
  1778  001392  EC29  F00E         	call	_getkey	;wreg free
  1779  001396  0100               	movlb	0	; () banked
  1780  001398  6FE2               	movwf	SetupAlarmTimeC@ctemp& (0+255),b
  1781                           
  1782                           ;Main.c: 267: lcd_write_data(ctemp);
  1783  00139A  0100               	movlb	0	; () banked
  1784  00139C  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1785  00139E  EC42  F00B         	call	_lcd_write_data
  1786                           
  1787                           ;Main.c: 268: minute1 = char_2_int (ctemp);
  1788  0013A2  0100               	movlb	0	; () banked
  1789  0013A4  51E2               	movf	SetupAlarmTimeC@ctemp& (0+255),w,b
  1790  0013A6  ECA6  F00C         	call	_char_2_int
  1791  0013AA  0100               	movlb	0	; () banked
  1792  0013AC  6FE0               	movwf	SetupAlarmTimeC@minute1& (0+255),b
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;Main.c: 270: hourC = hour10 * 10 + hour1;
  1796  0013AE  0100               	movlb	0	; () banked
  1797  0013B0  51DD               	movf	SetupAlarmTimeC@hour10& (0+255),w,b
  1798  0013B2  0D0A               	mullw	10
  1799  0013B4  50F3               	movf	prodl,w,c
  1800  0013B6  0100               	movlb	0	; () banked
  1801  0013B8  25DE               	addwf	SetupAlarmTimeC@hour1& (0+255),w,b
  1802  0013BA  6E3D               	movwf	_hourC,c
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;Main.c: 271: minuteC = minute10 * 10 + minute1;
  1806  0013BC  0100               	movlb	0	; () banked
  1807  0013BE  51DF               	movf	SetupAlarmTimeC@minute10& (0+255),w,b
  1808  0013C0  0D0A               	mullw	10
  1809  0013C2  50F3               	movf	prodl,w,c
  1810  0013C4  0100               	movlb	0	; () banked
  1811  0013C6  25E0               	addwf	SetupAlarmTimeC@minute1& (0+255),w,b
  1812  0013C8  6E41               	movwf	_minuteC,c
  1813                           
  1814                           ;Main.c: 273: delay_ms(500);
  1815  0013CA  0E01               	movlw	1
  1816  0013CC  0100               	movlb	0	; () banked
  1817  0013CE  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  1818  0013D0  0EF4               	movlw	244
  1819  0013D2  6FB4               	movwf	delay_ms@i& (0+255),b
  1820  0013D4  EC07  F00E         	call	_delay_ms	;wreg free
  1821                           
  1822                           ;Main.c: 274: lcd_write_cmd(0x01);
  1823  0013D8  0E01               	movlw	1
  1824  0013DA  ECE2  F00B         	call	_lcd_write_cmd
  1825  0013DE  0012               	return		;funcret
  1826  0013E0                     __end_of_SetupAlarmTimeC:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           intcon2	equ	0xFF1
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           postdec1	equ	0xFE5
  1839                           plusw1	equ	0xFE3
  1840                           fsr1l	equ	0xFE1
  1841                           indf2	equ	0xFDF
  1842                           plusw2	equ	0xFDB
  1843                           fsr2h	equ	0xFDA
  1844                           fsr2l	equ	0xFD9
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _SetupAlarmTimeB *****************
  1848 ;; Defined at:
  1849 ;;		line 196 in file "Main.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1854 ;;  ctemp           1   46[BANK0 ] unsigned char 
  1855 ;;  msgindex        1   45[BANK0 ] unsigned char 
  1856 ;;  minute1         1   44[BANK0 ] unsigned char 
  1857 ;;  minute10        1   43[BANK0 ] unsigned char 
  1858 ;;  hour1           1   42[BANK0 ] unsigned char 
  1859 ;;  hour10          1   41[BANK0 ] unsigned char 
  1860 ;;  outchar         1   40[BANK0 ] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0
  1871 ;;      Locals:         0      28       0       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1873 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1874 ;;Total ram usage:       28 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    5
  1877 ;; This function calls:
  1878 ;;		_char_2_int
  1879 ;;		_delay_ms
  1880 ;;		_getkey
  1881 ;;		_lcd_write_cmd
  1882 ;;		_lcd_write_data
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text7
  1889  0013E0                     __ptext7:
  1890                           	opt stack 0
  1891  0013E0                     _SetupAlarmTimeB:
  1892                           	opt stack 25
  1893                           
  1894                           ;Main.c: 198: unsigned char msgindex, outchar, ctemp;
  1895                           ;Main.c: 199: unsigned char hour10, hour1, minute10, minute1;
  1896                           ;Main.c: 200: char Message[ ] = "Subject B Time hhmm:";
  1897                           
  1898                           ;incstack = 0
  1899  0013E0  EE20  F075         	lfsr	2,SetupAlarmTimeB@F4335
  1900  0013E4  EE10  F0C7         	lfsr	1,SetupAlarmTimeB@Message
  1901  0013E8  0E14               	movlw	20
  1902  0013EA                     u1061:
  1903  0013EA  CFDB FFE3          	movff	plusw2,plusw1
  1904  0013EE  06E8               	decf	wreg,f,c
  1905  0013F0  E2FC               	bc	u1061
  1906                           
  1907                           ;Main.c: 202: PORTA = 0b00000100;
  1908  0013F2  0E04               	movlw	4
  1909  0013F4  6E80               	movwf	3968,c	;volatile
  1910                           
  1911                           ;Main.c: 204: lcd_write_cmd(0x80);
  1912  0013F6  0E80               	movlw	128
  1913  0013F8  ECE2  F00B         	call	_lcd_write_cmd
  1914                           
  1915                           ;Main.c: 206: for (msgindex = 0; msgindex < 20; msgindex++)
  1916  0013FC  0E00               	movlw	0
  1917  0013FE  0100               	movlb	0	; () banked
  1918  001400  6FE1               	movwf	SetupAlarmTimeB@msgindex& (0+255),b
  1919  001402                     l2265:
  1920                           
  1921                           ; BSR set to: 0
  1922  001402  0E13               	movlw	19
  1923  001404  0100               	movlb	0	; () banked
  1924  001406  65E1               	cpfsgt	SetupAlarmTimeB@msgindex& (0+255),b
  1925  001408  D001               	goto	l2269
  1926  00140A  D013               	goto	l2277
  1927  00140C                     l2269:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Main.c: 207: {
  1931                           ;Main.c: 208: outchar = Message[msgindex];
  1932  00140C  0100               	movlb	0	; () banked
  1933  00140E  51E1               	movf	SetupAlarmTimeB@msgindex& (0+255),w,b
  1934  001410  0D01               	mullw	1
  1935  001412  0EC7               	movlw	low SetupAlarmTimeB@Message
  1936  001414  24F3               	addwf	prodl,w,c
  1937  001416  6ED9               	movwf	fsr2l,c
  1938  001418  0E00               	movlw	high SetupAlarmTimeB@Message
  1939  00141A  20F4               	addwfc	prodh,w,c
  1940  00141C  6EDA               	movwf	fsr2h,c
  1941  00141E  50DF               	movf	indf2,w,c
  1942  001420  0100               	movlb	0	; () banked
  1943  001422  6FDC               	movwf	SetupAlarmTimeB@outchar& (0+255),b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;Main.c: 209: lcd_write_data(outchar);
  1947  001424  0100               	movlb	0	; () banked
  1948  001426  51DC               	movf	SetupAlarmTimeB@outchar& (0+255),w,b
  1949  001428  EC42  F00B         	call	_lcd_write_data
  1950  00142C  0100               	movlb	0	; () banked
  1951  00142E  2BE1               	incf	SetupAlarmTimeB@msgindex& (0+255),f,b
  1952  001430  D7E8               	goto	l2265
  1953  001432                     l2277:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;Main.c: 210: }
  1957                           ;Main.c: 212: lcd_write_cmd(0xC0);
  1958  001432  0EC0               	movlw	192
  1959  001434  ECE2  F00B         	call	_lcd_write_cmd
  1960                           
  1961                           ;Main.c: 214: ctemp=getkey();
  1962  001438  EC29  F00E         	call	_getkey	;wreg free
  1963  00143C  0100               	movlb	0	; () banked
  1964  00143E  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;Main.c: 215: lcd_write_data(ctemp);
  1968  001440  0100               	movlb	0	; () banked
  1969  001442  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1970  001444  EC42  F00B         	call	_lcd_write_data
  1971                           
  1972                           ;Main.c: 216: hour10 = char_2_int (ctemp);
  1973  001448  0100               	movlb	0	; () banked
  1974  00144A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1975  00144C  ECA6  F00C         	call	_char_2_int
  1976  001450  0100               	movlb	0	; () banked
  1977  001452  6FDD               	movwf	SetupAlarmTimeB@hour10& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;Main.c: 218: ctemp=getkey();
  1981  001454  EC29  F00E         	call	_getkey	;wreg free
  1982  001458  0100               	movlb	0	; () banked
  1983  00145A  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  1984                           
  1985                           ;Main.c: 219: lcd_write_data(ctemp);
  1986  00145C  0100               	movlb	0	; () banked
  1987  00145E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1988  001460  EC42  F00B         	call	_lcd_write_data
  1989                           
  1990                           ;Main.c: 220: hour1 = char_2_int (ctemp);
  1991  001464  0100               	movlb	0	; () banked
  1992  001466  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  1993  001468  ECA6  F00C         	call	_char_2_int
  1994  00146C  0100               	movlb	0	; () banked
  1995  00146E  6FDE               	movwf	SetupAlarmTimeB@hour1& (0+255),b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;Main.c: 222: ctemp=getkey();
  1999  001470  EC29  F00E         	call	_getkey	;wreg free
  2000  001474  0100               	movlb	0	; () banked
  2001  001476  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;Main.c: 223: lcd_write_data(ctemp);
  2005  001478  0100               	movlb	0	; () banked
  2006  00147A  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2007  00147C  EC42  F00B         	call	_lcd_write_data
  2008                           
  2009                           ;Main.c: 224: minute10 = char_2_int (ctemp);
  2010  001480  0100               	movlb	0	; () banked
  2011  001482  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2012  001484  ECA6  F00C         	call	_char_2_int
  2013  001488  0100               	movlb	0	; () banked
  2014  00148A  6FDF               	movwf	SetupAlarmTimeB@minute10& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;Main.c: 226: ctemp=getkey();
  2018  00148C  EC29  F00E         	call	_getkey	;wreg free
  2019  001490  0100               	movlb	0	; () banked
  2020  001492  6FE2               	movwf	SetupAlarmTimeB@ctemp& (0+255),b
  2021                           
  2022                           ;Main.c: 227: lcd_write_data(ctemp);
  2023  001494  0100               	movlb	0	; () banked
  2024  001496  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2025  001498  EC42  F00B         	call	_lcd_write_data
  2026                           
  2027                           ;Main.c: 228: minute1 = char_2_int (ctemp);
  2028  00149C  0100               	movlb	0	; () banked
  2029  00149E  51E2               	movf	SetupAlarmTimeB@ctemp& (0+255),w,b
  2030  0014A0  ECA6  F00C         	call	_char_2_int
  2031  0014A4  0100               	movlb	0	; () banked
  2032  0014A6  6FE0               	movwf	SetupAlarmTimeB@minute1& (0+255),b
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;Main.c: 230: hourB = hour10 * 10 + hour1;
  2036  0014A8  0100               	movlb	0	; () banked
  2037  0014AA  51DD               	movf	SetupAlarmTimeB@hour10& (0+255),w,b
  2038  0014AC  0D0A               	mullw	10
  2039  0014AE  50F3               	movf	prodl,w,c
  2040  0014B0  0100               	movlb	0	; () banked
  2041  0014B2  25DE               	addwf	SetupAlarmTimeB@hour1& (0+255),w,b
  2042  0014B4  6E3C               	movwf	_hourB,c
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;Main.c: 231: minuteB = minute10 * 10 + minute1;
  2046  0014B6  0100               	movlb	0	; () banked
  2047  0014B8  51DF               	movf	SetupAlarmTimeB@minute10& (0+255),w,b
  2048  0014BA  0D0A               	mullw	10
  2049  0014BC  50F3               	movf	prodl,w,c
  2050  0014BE  0100               	movlb	0	; () banked
  2051  0014C0  25E0               	addwf	SetupAlarmTimeB@minute1& (0+255),w,b
  2052  0014C2  6E40               	movwf	_minuteB,c
  2053                           
  2054                           ;Main.c: 233: delay_ms(500);
  2055  0014C4  0E01               	movlw	1
  2056  0014C6  0100               	movlb	0	; () banked
  2057  0014C8  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  2058  0014CA  0EF4               	movlw	244
  2059  0014CC  6FB4               	movwf	delay_ms@i& (0+255),b
  2060  0014CE  EC07  F00E         	call	_delay_ms	;wreg free
  2061                           
  2062                           ;Main.c: 234: lcd_write_cmd(0x01);
  2063  0014D2  0E01               	movlw	1
  2064  0014D4  ECE2  F00B         	call	_lcd_write_cmd
  2065  0014D8  0012               	return		;funcret
  2066  0014DA                     __end_of_SetupAlarmTimeB:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           intcon	equ	0xFF2
  2075                           intcon2	equ	0xFF1
  2076                           postinc0	equ	0xFEE
  2077                           wreg	equ	0xFE8
  2078                           postdec1	equ	0xFE5
  2079                           plusw1	equ	0xFE3
  2080                           fsr1l	equ	0xFE1
  2081                           indf2	equ	0xFDF
  2082                           plusw2	equ	0xFDB
  2083                           fsr2h	equ	0xFDA
  2084                           fsr2l	equ	0xFD9
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function _SetupAlarmTimeA *****************
  2088 ;; Defined at:
  2089 ;;		line 156 in file "Main.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  Message        21   19[BANK0 ] unsigned char [21]
  2094 ;;  ctemp           1   46[BANK0 ] unsigned char 
  2095 ;;  msgindex        1   45[BANK0 ] unsigned char 
  2096 ;;  minute1         1   44[BANK0 ] unsigned char 
  2097 ;;  minute10        1   43[BANK0 ] unsigned char 
  2098 ;;  hour1           1   42[BANK0 ] unsigned char 
  2099 ;;  hour10          1   41[BANK0 ] unsigned char 
  2100 ;;  outchar         1   40[BANK0 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2110 ;;      Params:         0       0       0       0       0       0       0       0       0
  2111 ;;      Locals:         0      28       0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2113 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2114 ;;Total ram usage:       28 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    5
  2117 ;; This function calls:
  2118 ;;		_char_2_int
  2119 ;;		_delay_ms
  2120 ;;		_getkey
  2121 ;;		_lcd_write_cmd
  2122 ;;		_lcd_write_data
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text8
  2129  0014DA                     __ptext8:
  2130                           	opt stack 0
  2131  0014DA                     _SetupAlarmTimeA:
  2132                           	opt stack 25
  2133                           
  2134                           ;Main.c: 158: unsigned char msgindex, outchar, ctemp;
  2135                           ;Main.c: 159: unsigned char hour10, hour1, minute10, minute1;
  2136                           ;Main.c: 160: char Message[ ] = "Subject A Time hhmm:";
  2137                           
  2138                           ;incstack = 0
  2139  0014DA  EE20  F060         	lfsr	2,SetupAlarmTimeA@F4325
  2140  0014DE  EE10  F0C7         	lfsr	1,SetupAlarmTimeA@Message
  2141  0014E2  0E14               	movlw	20
  2142  0014E4                     u1031:
  2143  0014E4  CFDB FFE3          	movff	plusw2,plusw1
  2144  0014E8  06E8               	decf	wreg,f,c
  2145  0014EA  E2FC               	bc	u1031
  2146                           
  2147                           ;Main.c: 162: PORTA = 0b00000010;
  2148  0014EC  0E02               	movlw	2
  2149  0014EE  6E80               	movwf	3968,c	;volatile
  2150                           
  2151                           ;Main.c: 164: lcd_write_cmd(0x80);
  2152  0014F0  0E80               	movlw	128
  2153  0014F2  ECE2  F00B         	call	_lcd_write_cmd
  2154                           
  2155                           ;Main.c: 166: for (msgindex = 0; msgindex < 20; msgindex++)
  2156  0014F6  0E00               	movlw	0
  2157  0014F8  0100               	movlb	0	; () banked
  2158  0014FA  6FE1               	movwf	SetupAlarmTimeA@msgindex& (0+255),b
  2159  0014FC                     l2223:
  2160                           
  2161                           ; BSR set to: 0
  2162  0014FC  0E13               	movlw	19
  2163  0014FE  0100               	movlb	0	; () banked
  2164  001500  65E1               	cpfsgt	SetupAlarmTimeA@msgindex& (0+255),b
  2165  001502  D001               	goto	l2227
  2166  001504  D013               	goto	l2235
  2167  001506                     l2227:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;Main.c: 167: {
  2171                           ;Main.c: 168: outchar = Message[msgindex];
  2172  001506  0100               	movlb	0	; () banked
  2173  001508  51E1               	movf	SetupAlarmTimeA@msgindex& (0+255),w,b
  2174  00150A  0D01               	mullw	1
  2175  00150C  0EC7               	movlw	low SetupAlarmTimeA@Message
  2176  00150E  24F3               	addwf	prodl,w,c
  2177  001510  6ED9               	movwf	fsr2l,c
  2178  001512  0E00               	movlw	high SetupAlarmTimeA@Message
  2179  001514  20F4               	addwfc	prodh,w,c
  2180  001516  6EDA               	movwf	fsr2h,c
  2181  001518  50DF               	movf	indf2,w,c
  2182  00151A  0100               	movlb	0	; () banked
  2183  00151C  6FDC               	movwf	SetupAlarmTimeA@outchar& (0+255),b
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;Main.c: 169: lcd_write_data(outchar);
  2187  00151E  0100               	movlb	0	; () banked
  2188  001520  51DC               	movf	SetupAlarmTimeA@outchar& (0+255),w,b
  2189  001522  EC42  F00B         	call	_lcd_write_data
  2190  001526  0100               	movlb	0	; () banked
  2191  001528  2BE1               	incf	SetupAlarmTimeA@msgindex& (0+255),f,b
  2192  00152A  D7E8               	goto	l2223
  2193  00152C                     l2235:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;Main.c: 170: }
  2197                           ;Main.c: 172: lcd_write_cmd(0xC0);
  2198  00152C  0EC0               	movlw	192
  2199  00152E  ECE2  F00B         	call	_lcd_write_cmd
  2200                           
  2201                           ;Main.c: 174: ctemp=getkey();
  2202  001532  EC29  F00E         	call	_getkey	;wreg free
  2203  001536  0100               	movlb	0	; () banked
  2204  001538  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;Main.c: 175: lcd_write_data(ctemp);
  2208  00153A  0100               	movlb	0	; () banked
  2209  00153C  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2210  00153E  EC42  F00B         	call	_lcd_write_data
  2211                           
  2212                           ;Main.c: 176: hour10 = char_2_int (ctemp);
  2213  001542  0100               	movlb	0	; () banked
  2214  001544  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2215  001546  ECA6  F00C         	call	_char_2_int
  2216  00154A  0100               	movlb	0	; () banked
  2217  00154C  6FDD               	movwf	SetupAlarmTimeA@hour10& (0+255),b
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;Main.c: 178: ctemp=getkey();
  2221  00154E  EC29  F00E         	call	_getkey	;wreg free
  2222  001552  0100               	movlb	0	; () banked
  2223  001554  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2224                           
  2225                           ;Main.c: 179: lcd_write_data(ctemp);
  2226  001556  0100               	movlb	0	; () banked
  2227  001558  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2228  00155A  EC42  F00B         	call	_lcd_write_data
  2229                           
  2230                           ;Main.c: 180: hour1 = char_2_int (ctemp);
  2231  00155E  0100               	movlb	0	; () banked
  2232  001560  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2233  001562  ECA6  F00C         	call	_char_2_int
  2234  001566  0100               	movlb	0	; () banked
  2235  001568  6FDE               	movwf	SetupAlarmTimeA@hour1& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;Main.c: 182: ctemp=getkey();
  2239  00156A  EC29  F00E         	call	_getkey	;wreg free
  2240  00156E  0100               	movlb	0	; () banked
  2241  001570  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;Main.c: 183: lcd_write_data(ctemp);
  2245  001572  0100               	movlb	0	; () banked
  2246  001574  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2247  001576  EC42  F00B         	call	_lcd_write_data
  2248                           
  2249                           ;Main.c: 184: minute10 = char_2_int (ctemp);
  2250  00157A  0100               	movlb	0	; () banked
  2251  00157C  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2252  00157E  ECA6  F00C         	call	_char_2_int
  2253  001582  0100               	movlb	0	; () banked
  2254  001584  6FDF               	movwf	SetupAlarmTimeA@minute10& (0+255),b
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;Main.c: 186: ctemp=getkey();
  2258  001586  EC29  F00E         	call	_getkey	;wreg free
  2259  00158A  0100               	movlb	0	; () banked
  2260  00158C  6FE2               	movwf	SetupAlarmTimeA@ctemp& (0+255),b
  2261                           
  2262                           ;Main.c: 187: lcd_write_data(ctemp);
  2263  00158E  0100               	movlb	0	; () banked
  2264  001590  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2265  001592  EC42  F00B         	call	_lcd_write_data
  2266                           
  2267                           ;Main.c: 188: minute1 = char_2_int (ctemp);
  2268  001596  0100               	movlb	0	; () banked
  2269  001598  51E2               	movf	SetupAlarmTimeA@ctemp& (0+255),w,b
  2270  00159A  ECA6  F00C         	call	_char_2_int
  2271  00159E  0100               	movlb	0	; () banked
  2272  0015A0  6FE0               	movwf	SetupAlarmTimeA@minute1& (0+255),b
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;Main.c: 190: hourA = hour10 * 10 + hour1;
  2276  0015A2  0100               	movlb	0	; () banked
  2277  0015A4  51DD               	movf	SetupAlarmTimeA@hour10& (0+255),w,b
  2278  0015A6  0D0A               	mullw	10
  2279  0015A8  50F3               	movf	prodl,w,c
  2280  0015AA  0100               	movlb	0	; () banked
  2281  0015AC  25DE               	addwf	SetupAlarmTimeA@hour1& (0+255),w,b
  2282  0015AE  6E3B               	movwf	_hourA,c
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;Main.c: 191: minuteA = minute10 * 10 + minute1;
  2286  0015B0  0100               	movlb	0	; () banked
  2287  0015B2  51DF               	movf	SetupAlarmTimeA@minute10& (0+255),w,b
  2288  0015B4  0D0A               	mullw	10
  2289  0015B6  50F3               	movf	prodl,w,c
  2290  0015B8  0100               	movlb	0	; () banked
  2291  0015BA  25E0               	addwf	SetupAlarmTimeA@minute1& (0+255),w,b
  2292  0015BC  6E3F               	movwf	_minuteA,c
  2293                           
  2294                           ;Main.c: 193: delay_ms(500);
  2295  0015BE  0E01               	movlw	1
  2296  0015C0  0100               	movlb	0	; () banked
  2297  0015C2  6FB5               	movwf	(delay_ms@i+1)& (0+255),b
  2298  0015C4  0EF4               	movlw	244
  2299  0015C6  6FB4               	movwf	delay_ms@i& (0+255),b
  2300  0015C8  EC07  F00E         	call	_delay_ms	;wreg free
  2301                           
  2302                           ;Main.c: 194: lcd_write_cmd(0x01);
  2303  0015CC  0E01               	movlw	1
  2304  0015CE  ECE2  F00B         	call	_lcd_write_cmd
  2305  0015D2  0012               	return		;funcret
  2306  0015D4                     __end_of_SetupAlarmTimeA:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           intcon	equ	0xFF2
  2315                           intcon2	equ	0xFF1
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           plusw1	equ	0xFE3
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           plusw2	equ	0xFDB
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _lcd_write_data *****************
  2328 ;; Defined at:
  2329 ;;		line 43 in file "lcd_utilities.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  data            1    wreg     unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  data            1    1[BANK0 ] unsigned char 
  2334 ;;  temp1           1    2[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0
  2345 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2346 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2347 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2348 ;;Total ram usage:        3 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    4
  2351 ;; This function calls:
  2352 ;;		_lcd_strobe
  2353 ;; This function is called by:
  2354 ;;		_SetupTime
  2355 ;;		_SetupAlarmTimeA
  2356 ;;		_SetupAlarmTimeB
  2357 ;;		_SetupAlarmTimeC
  2358 ;;		_version
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text9
  2363  001684                     __ptext9:
  2364                           	opt stack 0
  2365  001684                     _lcd_write_data:
  2366                           	opt stack 25
  2367                           
  2368                           ;incstack = 0
  2369                           ;lcd_write_data@data stored from wreg
  2370  001684  0100               	movlb	0	; () banked
  2371  001686  6FB5               	movwf	lcd_write_data@data& (0+255),b
  2372                           
  2373                           ;lcd_utilities.c: 45: char temp1;
  2374                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2375  001688  8C83               	bsf	3971,6,c	;volatile
  2376                           
  2377                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2378  00168A  0E3F               	movlw	63
  2379  00168C  0100               	movlb	0	; () banked
  2380  00168E  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2381  001690  0E55               	movlw	85
  2382  001692                     u1297:
  2383  001692  2EE8               	decfsz	wreg,f,c
  2384  001694  D7FE               	goto	u1297
  2385  001696  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2386  001698  D7FC               	goto	u1297
  2387  00169A  F000               	nop	
  2388                           
  2389                           ;lcd_utilities.c: 50: temp1 = data;
  2390  00169C  C0B5  F0B6         	movff	lcd_write_data@data,lcd_write_data@temp1
  2391                           
  2392                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2393  0016A0  0100               	movlb	0	; () banked
  2394  0016A2  39B6               	swapf	lcd_write_data@temp1& (0+255),w,b
  2395  0016A4  0B0F               	andlw	15
  2396  0016A6  0100               	movlb	0	; () banked
  2397  0016A8  6FB6               	movwf	lcd_write_data@temp1& (0+255),b
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2401  0016AA  0100               	movlb	0	; () banked
  2402  0016AC  51B6               	movf	lcd_write_data@temp1& (0+255),w,b
  2403  0016AE  0B0F               	andlw	15
  2404  0016B0  6E83               	movwf	3971,c	;volatile
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2408  0016B2  0E7D               	movlw	125
  2409  0016B4  0100               	movlb	0	; () banked
  2410  0016B6  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2411  0016B8  0EAC               	movlw	172
  2412  0016BA                     u1307:
  2413  0016BA  2EE8               	decfsz	wreg,f,c
  2414  0016BC  D7FE               	goto	u1307
  2415  0016BE  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2416  0016C0  D7FC               	goto	u1307
  2417                           
  2418                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2419  0016C2  8C83               	bsf	3971,6,c	;volatile
  2420                           
  2421                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2422  0016C4  0E7D               	movlw	125
  2423  0016C6  0100               	movlb	0	; () banked
  2424  0016C8  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2425  0016CA  0EAC               	movlw	172
  2426  0016CC                     u1317:
  2427  0016CC  2EE8               	decfsz	wreg,f,c
  2428  0016CE  D7FE               	goto	u1317
  2429  0016D0  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2430  0016D2  D7FC               	goto	u1317
  2431                           
  2432                           ;lcd_utilities.c: 57: lcd_strobe();
  2433  0016D4  EC48  F00E         	call	_lcd_strobe	;wreg free
  2434                           
  2435                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  2436  0016D8  0E7D               	movlw	125
  2437  0016DA  0100               	movlb	0	; () banked
  2438  0016DC  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2439  0016DE  0EAC               	movlw	172
  2440  0016E0                     u1327:
  2441  0016E0  2EE8               	decfsz	wreg,f,c
  2442  0016E2  D7FE               	goto	u1327
  2443  0016E4  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2444  0016E6  D7FC               	goto	u1327
  2445                           
  2446                           ;lcd_utilities.c: 60: temp1 = data;
  2447  0016E8  C0B5  F0B6         	movff	lcd_write_data@data,lcd_write_data@temp1
  2448                           
  2449                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  2450  0016EC  0100               	movlb	0	; () banked
  2451  0016EE  51B6               	movf	lcd_write_data@temp1& (0+255),w,b
  2452  0016F0  0B0F               	andlw	15
  2453  0016F2  6E83               	movwf	3971,c	;volatile
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  2457  0016F4  0E7D               	movlw	125
  2458  0016F6  0100               	movlb	0	; () banked
  2459  0016F8  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2460  0016FA  0EAC               	movlw	172
  2461  0016FC                     u1337:
  2462  0016FC  2EE8               	decfsz	wreg,f,c
  2463  0016FE  D7FE               	goto	u1337
  2464  001700  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2465  001702  D7FC               	goto	u1337
  2466                           
  2467                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  2468  001704  8C83               	bsf	3971,6,c	;volatile
  2469                           
  2470                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  2471  001706  0E9C               	movlw	156
  2472  001708  0100               	movlb	0	; () banked
  2473  00170A  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2474  00170C  0ED7               	movlw	215
  2475  00170E                     u1347:
  2476  00170E  2EE8               	decfsz	wreg,f,c
  2477  001710  D7FE               	goto	u1347
  2478  001712  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2479  001714  D7FC               	goto	u1347
  2480  001716  F000               	nop	
  2481                           
  2482                           ;lcd_utilities.c: 66: lcd_strobe();
  2483  001718  EC48  F00E         	call	_lcd_strobe	;wreg free
  2484                           
  2485                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  2486  00171C  0E9C               	movlw	156
  2487  00171E  0100               	movlb	0	; () banked
  2488  001720  6FB4               	movwf	??_lcd_write_data& (0+255),b
  2489  001722  0ED7               	movlw	215
  2490  001724                     u1357:
  2491  001724  2EE8               	decfsz	wreg,f,c
  2492  001726  D7FE               	goto	u1357
  2493  001728  2FB4               	decfsz	??_lcd_write_data& (0+255),f,b
  2494  00172A  D7FC               	goto	u1357
  2495  00172C  F000               	nop	
  2496  00172E  0012               	return		;funcret
  2497  001730                     __end_of_lcd_write_data:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           intcon	equ	0xFF2
  2506                           intcon2	equ	0xFF1
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           postdec1	equ	0xFE5
  2510                           plusw1	equ	0xFE3
  2511                           fsr1l	equ	0xFE1
  2512                           indf2	equ	0xFDF
  2513                           plusw2	equ	0xFDB
  2514                           fsr2h	equ	0xFDA
  2515                           fsr2l	equ	0xFD9
  2516                           status	equ	0xFD8
  2517                           
  2518 ;; *************** function _lcd_write_cmd *****************
  2519 ;; Defined at:
  2520 ;;		line 18 in file "lcd_utilities.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  cmd             1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  cmd             1    1[BANK0 ] unsigned char 
  2525 ;;  temp2           1    2[BANK0 ] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0
  2536 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2537 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2538 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2539 ;;Total ram usage:        3 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    4
  2542 ;; This function calls:
  2543 ;;		_lcd_strobe
  2544 ;; This function is called by:
  2545 ;;		_lcd_init
  2546 ;;		_SetupTime
  2547 ;;		_SetupAlarmTimeA
  2548 ;;		_SetupAlarmTimeB
  2549 ;;		_SetupAlarmTimeC
  2550 ;;		_version
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text10
  2555  0017C4                     __ptext10:
  2556                           	opt stack 0
  2557  0017C4                     _lcd_write_cmd:
  2558                           	opt stack 25
  2559                           
  2560                           ;incstack = 0
  2561                           ;lcd_write_cmd@cmd stored from wreg
  2562  0017C4  0100               	movlb	0	; () banked
  2563  0017C6  6FB5               	movwf	lcd_write_cmd@cmd& (0+255),b
  2564                           
  2565                           ;lcd_utilities.c: 20: unsigned char temp2;
  2566                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  2567  0017C8  9C83               	bcf	3971,6,c	;volatile
  2568                           
  2569                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  2570  0017CA  0E3F               	movlw	63
  2571  0017CC  0100               	movlb	0	; () banked
  2572  0017CE  6FB4               	movwf	??_lcd_write_cmd& (0+255),b
  2573  0017D0  0E55               	movlw	85
  2574  0017D2                     u1367:
  2575  0017D2  2EE8               	decfsz	wreg,f,c
  2576  0017D4  D7FE               	goto	u1367
  2577  0017D6  2FB4               	decfsz	??_lcd_write_cmd& (0+255),f,b
  2578  0017D8  D7FC               	goto	u1367
  2579  0017DA  F000               	nop	
  2580                           
  2581                           ;lcd_utilities.c: 23: temp2 = cmd;
  2582  0017DC  C0B5  F0B6         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2583                           
  2584                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  2585  0017E0  0100               	movlb	0	; () banked
  2586  0017E2  39B6               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  2587  0017E4  0B0F               	andlw	15
  2588  0017E6  0100               	movlb	0	; () banked
  2589  0017E8  6FB6               	movwf	lcd_write_cmd@temp2& (0+255),b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  2593  0017EA  0100               	movlb	0	; () banked
  2594  0017EC  51B6               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2595  0017EE  0B0F               	andlw	15
  2596  0017F0  6E83               	movwf	3971,c	;volatile
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  2600  0017F2  0E7D               	movlw	125
  2601  0017F4  0100               	movlb	0	; () banked
  2602  0017F6  6FB4               	movwf	??_lcd_write_cmd& (0+255),b
  2603  0017F8  0EAC               	movlw	172
  2604  0017FA                     u1377:
  2605  0017FA  2EE8               	decfsz	wreg,f,c
  2606  0017FC  D7FE               	goto	u1377
  2607  0017FE  2FB4               	decfsz	??_lcd_write_cmd& (0+255),f,b
  2608  001800  D7FC               	goto	u1377
  2609                           
  2610                           ;lcd_utilities.c: 28: lcd_strobe();
  2611  001802  EC48  F00E         	call	_lcd_strobe	;wreg free
  2612                           
  2613                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  2614  001806  0E7D               	movlw	125
  2615  001808  0100               	movlb	0	; () banked
  2616  00180A  6FB4               	movwf	??_lcd_write_cmd& (0+255),b
  2617  00180C  0EAC               	movlw	172
  2618  00180E                     u1387:
  2619  00180E  2EE8               	decfsz	wreg,f,c
  2620  001810  D7FE               	goto	u1387
  2621  001812  2FB4               	decfsz	??_lcd_write_cmd& (0+255),f,b
  2622  001814  D7FC               	goto	u1387
  2623                           
  2624                           ;lcd_utilities.c: 32: temp2 = cmd;
  2625  001816  C0B5  F0B6         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  2626                           
  2627                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  2628  00181A  0100               	movlb	0	; () banked
  2629  00181C  51B6               	movf	lcd_write_cmd@temp2& (0+255),w,b
  2630  00181E  0B0F               	andlw	15
  2631  001820  6E83               	movwf	3971,c	;volatile
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  2635  001822  0E7D               	movlw	125
  2636  001824  0100               	movlb	0	; () banked
  2637  001826  6FB4               	movwf	??_lcd_write_cmd& (0+255),b
  2638  001828  0EAC               	movlw	172
  2639  00182A                     u1397:
  2640  00182A  2EE8               	decfsz	wreg,f,c
  2641  00182C  D7FE               	goto	u1397
  2642  00182E  2FB4               	decfsz	??_lcd_write_cmd& (0+255),f,b
  2643  001830  D7FC               	goto	u1397
  2644                           
  2645                           ;lcd_utilities.c: 36: lcd_strobe();
  2646  001832  EC48  F00E         	call	_lcd_strobe	;wreg free
  2647                           
  2648                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  2649  001836  0E7D               	movlw	125
  2650  001838  0100               	movlb	0	; () banked
  2651  00183A  6FB4               	movwf	??_lcd_write_cmd& (0+255),b
  2652  00183C  0EAC               	movlw	172
  2653  00183E                     u1407:
  2654  00183E  2EE8               	decfsz	wreg,f,c
  2655  001840  D7FE               	goto	u1407
  2656  001842  2FB4               	decfsz	??_lcd_write_cmd& (0+255),f,b
  2657  001844  D7FC               	goto	u1407
  2658  001846  0012               	return		;funcret
  2659  001848                     __end_of_lcd_write_cmd:
  2660                           	opt stack 0
  2661                           tblptru	equ	0xFF8
  2662                           tblptrh	equ	0xFF7
  2663                           tblptrl	equ	0xFF6
  2664                           tablat	equ	0xFF5
  2665                           prodh	equ	0xFF4
  2666                           prodl	equ	0xFF3
  2667                           intcon	equ	0xFF2
  2668                           intcon2	equ	0xFF1
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           postdec1	equ	0xFE5
  2672                           plusw1	equ	0xFE3
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           plusw2	equ	0xFDB
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _lcd_strobe *****************
  2681 ;; Defined at:
  2682 ;;		line 73 in file "lcd_utilities.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2698 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2699 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:        1 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    3
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_lcd_write_cmd
  2707 ;;		_lcd_write_data
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text11
  2712  001C90                     __ptext11:
  2713                           	opt stack 0
  2714  001C90                     _lcd_strobe:
  2715                           	opt stack 25
  2716                           
  2717                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  2718                           
  2719                           ;incstack = 0
  2720  001C90  8883               	bsf	3971,4,c	;volatile
  2721                           
  2722                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  2723  001C92  0E7D               	movlw	125
  2724  001C94  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2725  001C96  0EAC               	movlw	172
  2726  001C98                     u1417:
  2727  001C98  2EE8               	decfsz	wreg,f,c
  2728  001C9A  D7FE               	goto	u1417
  2729  001C9C  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2730  001C9E  D7FC               	goto	u1417
  2731                           
  2732                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  2733  001CA0  9883               	bcf	3971,4,c	;volatile
  2734                           
  2735                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  2736  001CA2  0E7D               	movlw	125
  2737  001CA4  6E1D               	movwf	??_lcd_strobe& (0+255),c
  2738  001CA6  0EAC               	movlw	172
  2739  001CA8                     u1427:
  2740  001CA8  2EE8               	decfsz	wreg,f,c
  2741  001CAA  D7FE               	goto	u1427
  2742  001CAC  2E1D               	decfsz	??_lcd_strobe& (0+255),f,c
  2743  001CAE  D7FC               	goto	u1427
  2744  001CB0  0012               	return		;funcret
  2745  001CB2                     __end_of_lcd_strobe:
  2746                           	opt stack 0
  2747                           tblptru	equ	0xFF8
  2748                           tblptrh	equ	0xFF7
  2749                           tblptrl	equ	0xFF6
  2750                           tablat	equ	0xFF5
  2751                           prodh	equ	0xFF4
  2752                           prodl	equ	0xFF3
  2753                           intcon	equ	0xFF2
  2754                           intcon2	equ	0xFF1
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           postdec1	equ	0xFE5
  2758                           plusw1	equ	0xFE3
  2759                           fsr1l	equ	0xFE1
  2760                           indf2	equ	0xFDF
  2761                           plusw2	equ	0xFDB
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _getkey *****************
  2767 ;; Defined at:
  2768 ;;		line 17 in file "keypad_utilities.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  2773 ;;  keycode         1   18[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0
  2784 ;;      Locals:         0      19       0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2786 ;;      Totals:         0      19       0       0       0       0       0       0       0
  2787 ;;Total ram usage:       19 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    3
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_SetupTime
  2794 ;;		_SetupAlarmTimeA
  2795 ;;		_SetupAlarmTimeB
  2796 ;;		_SetupAlarmTimeC
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text12
  2801  001C52                     __ptext12:
  2802                           	opt stack 0
  2803  001C52                     _getkey:
  2804                           	opt stack 26
  2805                           
  2806                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2807                           
  2808                           ;incstack = 0
  2809  001C52  0E1B               	movlw	low getkey@F4270
  2810  001C54  6EF6               	movwf	tblptrl,c
  2811  001C56                     	if	1	;There is more than 1 active tblptr byte
  2812  001C56  0E10               	movlw	high getkey@F4270
  2813  001C58  6EF7               	movwf	tblptrh,c
  2814  001C5A                     	endif
  2815  001C5A                     	if	0	;There are less than 3 active tblptr bytes
  2816  001C5A                     	endif
  2817  001C5A  EE20  F0B4         	lfsr	2,getkey@lookup
  2818  001C5E  0E11               	movlw	17
  2819  001C60                     u930:
  2820  001C60  0009               	tblrd		*+
  2821  001C62  CFF5 FFDE          	movff	tablat,postinc2
  2822  001C66  06E8               	decf	wreg,f,c
  2823  001C68  E2FB               	bc	u930
  2824  001C6A                     l33:
  2825  001C6A  AA81               	btfss	3969,5,c	;volatile
  2826  001C6C  D7FE               	goto	l33
  2827                           
  2828                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2829  001C6E  5081               	movf	3969,w,c	;volatile
  2830  001C70  0B0F               	andlw	15
  2831  001C72  0100               	movlb	0	; () banked
  2832  001C74  6FC6               	movwf	getkey@keycode& (0+255),b
  2833  001C76                     l36:
  2834  001C76  BA81               	btfsc	3969,5,c	;volatile
  2835  001C78  D7FE               	goto	l36
  2836                           
  2837                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2838  001C7A  0100               	movlb	0	; () banked
  2839  001C7C  51C6               	movf	getkey@keycode& (0+255),w,b
  2840  001C7E  0D01               	mullw	1
  2841  001C80  0EB4               	movlw	low getkey@lookup
  2842  001C82  24F3               	addwf	prodl,w,c
  2843  001C84  6ED9               	movwf	fsr2l,c
  2844  001C86  0E00               	movlw	high getkey@lookup
  2845  001C88  20F4               	addwfc	prodh,w,c
  2846  001C8A  6EDA               	movwf	fsr2h,c
  2847  001C8C  50DF               	movf	indf2,w,c
  2848  001C8E  0012               	return	
  2849  001C90                     __end_of_getkey:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           intcon	equ	0xFF2
  2858                           intcon2	equ	0xFF1
  2859                           postinc0	equ	0xFEE
  2860                           wreg	equ	0xFE8
  2861                           postdec1	equ	0xFE5
  2862                           plusw1	equ	0xFE3
  2863                           fsr1l	equ	0xFE1
  2864                           indf2	equ	0xFDF
  2865                           postinc2	equ	0xFDE
  2866                           plusw2	equ	0xFDB
  2867                           fsr2h	equ	0xFDA
  2868                           fsr2l	equ	0xFD9
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function _delay_ms *****************
  2872 ;; Defined at:
  2873 ;;		line 10 in file "delays_utilities.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  i               2    0[BANK0 ] unsigned int 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  j               2    2[BANK0 ] unsigned int 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       2       0       0       0       0       0       0       0
  2888 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2889 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         1       4       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        5 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    3
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_SetupTime
  2898 ;;		_SetupAlarmTimeA
  2899 ;;		_SetupAlarmTimeB
  2900 ;;		_SetupAlarmTimeC
  2901 ;;		_Startup
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text13
  2906  001C0E                     __ptext13:
  2907                           	opt stack 0
  2908  001C0E                     _delay_ms:
  2909                           	opt stack 26
  2910                           
  2911                           ;delays_utilities.c: 12: if(i!=0)
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;incstack = 0
  2915  001C0E  0100               	movlb	0	; () banked
  2916  001C10  51B4               	movf	delay_ms@i& (0+255),w,b
  2917  001C12  0100               	movlb	0	; () banked
  2918  001C14  11B5               	iorwf	(delay_ms@i+1)& (0+255),w,b
  2919  001C16  B4D8               	btfsc	status,2,c
  2920  001C18  0012               	return	
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  2924  001C1A  0E00               	movlw	0
  2925  001C1C  0100               	movlb	0	; () banked
  2926  001C1E  6FB7               	movwf	(delay_ms@j+1)& (0+255),b
  2927  001C20  0E00               	movlw	0
  2928  001C22  6FB6               	movwf	delay_ms@j& (0+255),b
  2929  001C24  D00B               	goto	l193
  2930  001C26                     l2137:
  2931                           
  2932                           ; BSR set to: 0
  2933  001C26  0E10               	movlw	16
  2934  001C28  6E1D               	movwf	??_delay_ms& (0+255),c
  2935  001C2A  0E94               	movlw	148
  2936  001C2C                     u1437:
  2937  001C2C  2EE8               	decfsz	wreg,f,c
  2938  001C2E  D7FE               	goto	u1437
  2939  001C30  2E1D               	decfsz	??_delay_ms& (0+255),f,c
  2940  001C32  D7FC               	goto	u1437
  2941  001C34  D000               	nop2	
  2942  001C36  0100               	movlb	0	; () banked
  2943  001C38  4BB6               	infsnz	delay_ms@j& (0+255),f,b
  2944  001C3A  2BB7               	incf	(delay_ms@j+1)& (0+255),f,b
  2945  001C3C                     l193:
  2946                           
  2947                           ; BSR set to: 0
  2948  001C3C  0100               	movlb	0	; () banked
  2949  001C3E  51B4               	movf	delay_ms@i& (0+255),w,b
  2950  001C40  0100               	movlb	0	; () banked
  2951  001C42  5DB6               	subwf	delay_ms@j& (0+255),w,b
  2952  001C44  0100               	movlb	0	; () banked
  2953  001C46  51B5               	movf	(delay_ms@i+1)& (0+255),w,b
  2954  001C48  0100               	movlb	0	; () banked
  2955  001C4A  59B7               	subwfb	(delay_ms@j+1)& (0+255),w,b
  2956  001C4C  B0D8               	btfsc	status,0,c
  2957  001C4E  0012               	return	
  2958  001C50  D7EA               	goto	l2137
  2959  001C52                     __end_of_delay_ms:
  2960                           	opt stack 0
  2961                           tblptru	equ	0xFF8
  2962                           tblptrh	equ	0xFF7
  2963                           tblptrl	equ	0xFF6
  2964                           tablat	equ	0xFF5
  2965                           prodh	equ	0xFF4
  2966                           prodl	equ	0xFF3
  2967                           intcon	equ	0xFF2
  2968                           intcon2	equ	0xFF1
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           postdec1	equ	0xFE5
  2972                           plusw1	equ	0xFE3
  2973                           fsr1l	equ	0xFE1
  2974                           indf2	equ	0xFDF
  2975                           postinc2	equ	0xFDE
  2976                           plusw2	equ	0xFDB
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _char_2_int *****************
  2982 ;; Defined at:
  2983 ;;		line 36 in file "Main.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  char1           1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  char1           1    0[BANK0 ] unsigned char 
  2988 ;;  int1            1    1[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      unsigned char 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0
  2999 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3001 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3002 ;;Total ram usage:        2 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_SetupTime
  3009 ;;		_SetupAlarmTimeA
  3010 ;;		_SetupAlarmTimeB
  3011 ;;		_SetupAlarmTimeC
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text14
  3016  00194C                     __ptext14:
  3017                           	opt stack 0
  3018  00194C                     _char_2_int:
  3019                           	opt stack 26
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;incstack = 0
  3023                           ;char_2_int@char1 stored from wreg
  3024  00194C  0100               	movlb	0	; () banked
  3025  00194E  6FB4               	movwf	char_2_int@char1& (0+255),b
  3026                           
  3027                           ;Main.c: 38: unsigned char int1;
  3028                           ;Main.c: 39: switch (char1)
  3029  001950  D016               	goto	l2131
  3030  001952                     l2111:
  3031                           
  3032                           ; BSR set to: 0
  3033  001952  0E01               	movlw	1
  3034  001954  D011               	goto	L10
  3035  001956                     l2113:
  3036                           
  3037                           ; BSR set to: 0
  3038  001956  0E02               	movlw	2
  3039  001958  D00F               	goto	L10
  3040  00195A                     l2115:
  3041                           
  3042                           ; BSR set to: 0
  3043  00195A  0E03               	movlw	3
  3044  00195C  D00D               	goto	L10
  3045  00195E                     l2117:
  3046                           
  3047                           ; BSR set to: 0
  3048  00195E  0E04               	movlw	4
  3049  001960  D00B               	goto	L10
  3050  001962                     l2119:
  3051                           
  3052                           ; BSR set to: 0
  3053  001962  0E05               	movlw	5
  3054  001964  D009               	goto	L10
  3055  001966                     l2121:
  3056                           
  3057                           ; BSR set to: 0
  3058  001966  0E06               	movlw	6
  3059  001968  D007               	goto	L10
  3060  00196A                     l2123:
  3061                           
  3062                           ; BSR set to: 0
  3063  00196A  0E07               	movlw	7
  3064  00196C  D005               	goto	L10
  3065  00196E                     l2125:
  3066                           
  3067                           ; BSR set to: 0
  3068  00196E  0E08               	movlw	8
  3069  001970  D003               	goto	L10
  3070  001972                     l2127:
  3071                           
  3072                           ; BSR set to: 0
  3073  001972  0E09               	movlw	9
  3074  001974  D001               	goto	L10
  3075  001976                     l2129:
  3076                           
  3077                           ; BSR set to: 0
  3078  001976  0E00               	movlw	0
  3079  001978                     L10:
  3080  001978  0100               	movlb	0	; () banked
  3081  00197A  6FB5               	movwf	char_2_int@int1& (0+255),b
  3082                           
  3083                           ;Main.c: 52: }
  3084  00197C  D021               	goto	l120
  3085  00197E                     l2131:
  3086  00197E  0100               	movlb	0	; () banked
  3087  001980  51B4               	movf	char_2_int@char1& (0+255),w,b
  3088                           
  3089                           ; Switch size 1, requested type "space"
  3090                           ; Number of cases is 10, Range of values is 48 to 57
  3091                           ; switch strategies available:
  3092                           ; Name         Instructions Cycles
  3093                           ; simple_byte           31    16 (average)
  3094                           ;	Chosen strategy is simple_byte
  3095  001982  0A30               	xorlw	48	; case 48
  3096  001984  B4D8               	btfsc	status,2,c
  3097  001986  D7F7               	goto	l2129
  3098  001988  0A01               	xorlw	1	; case 49
  3099  00198A  B4D8               	btfsc	status,2,c
  3100  00198C  D7E2               	goto	l2111
  3101  00198E  0A03               	xorlw	3	; case 50
  3102  001990  B4D8               	btfsc	status,2,c
  3103  001992  D7E1               	goto	l2113
  3104  001994  0A01               	xorlw	1	; case 51
  3105  001996  B4D8               	btfsc	status,2,c
  3106  001998  D7E0               	goto	l2115
  3107  00199A  0A07               	xorlw	7	; case 52
  3108  00199C  B4D8               	btfsc	status,2,c
  3109  00199E  D7DF               	goto	l2117
  3110  0019A0  0A01               	xorlw	1	; case 53
  3111  0019A2  B4D8               	btfsc	status,2,c
  3112  0019A4  D7DE               	goto	l2119
  3113  0019A6  0A03               	xorlw	3	; case 54
  3114  0019A8  B4D8               	btfsc	status,2,c
  3115  0019AA  D7DD               	goto	l2121
  3116  0019AC  0A01               	xorlw	1	; case 55
  3117  0019AE  B4D8               	btfsc	status,2,c
  3118  0019B0  D7DC               	goto	l2123
  3119  0019B2  0A0F               	xorlw	15	; case 56
  3120  0019B4  B4D8               	btfsc	status,2,c
  3121  0019B6  D7DB               	goto	l2125
  3122  0019B8  0A01               	xorlw	1	; case 57
  3123  0019BA  B4D8               	btfsc	status,2,c
  3124  0019BC  D7DA               	goto	l2127
  3125  0019BE  D7DB               	goto	l2129
  3126  0019C0                     l120:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;Main.c: 53: return(int1);
  3130  0019C0  0100               	movlb	0	; () banked
  3131  0019C2  51B5               	movf	char_2_int@int1& (0+255),w,b
  3132                           
  3133                           ; BSR set to: 0
  3134  0019C4  0012               	return		;funcret
  3135  0019C6                     __end_of_char_2_int:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           prodh	equ	0xFF4
  3142                           prodl	equ	0xFF3
  3143                           intcon	equ	0xFF2
  3144                           intcon2	equ	0xFF1
  3145                           postinc0	equ	0xFEE
  3146                           wreg	equ	0xFE8
  3147                           postdec1	equ	0xFE5
  3148                           plusw1	equ	0xFE3
  3149                           fsr1l	equ	0xFE1
  3150                           indf2	equ	0xFDF
  3151                           postinc2	equ	0xFDE
  3152                           plusw2	equ	0xFDB
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function _ISR_Timer0_Int *****************
  3158 ;; Defined at:
  3159 ;;		line 56 in file "Main.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  second10        1   27[COMRAM] unsigned char 
  3164 ;;  minute10        1   26[COMRAM] unsigned char 
  3165 ;;  hour10          1   25[COMRAM] unsigned char 
  3166 ;;  second1         1   24[COMRAM] unsigned char 
  3167 ;;  minute1         1   23[COMRAM] unsigned char 
  3168 ;;  hour1           1   22[COMRAM] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0
  3179 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3180 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3181 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3182 ;;Total ram usage:       20 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    2
  3185 ;; This function calls:
  3186 ;;		___awdiv
  3187 ;;		_int_2_char
  3188 ;;		i2_lcd_write_cmd
  3189 ;;		i2_lcd_write_data
  3190 ;; This function is called by:
  3191 ;;		Interrupt level 2
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	intcode
  3196  001008                     __pintcode:
  3197                           	opt stack 0
  3198  001008                     _ISR_Timer0_Int:
  3199                           	opt stack 25
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;incstack = 0
  3203  001008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3204  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3205  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3206  001012  ED17  F008         	call	int_func,f	;refresh shadow registers
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           intcon2	equ	0xFF1
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           plusw1	equ	0xFE3
  3221                           fsr1l	equ	0xFE1
  3222                           indf2	equ	0xFDF
  3223                           postinc2	equ	0xFDE
  3224                           plusw2	equ	0xFDB
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229                           	psect	intcode_body
  3230  00102E                     __pintcode_body:
  3231                           	opt stack 25
  3232  00102E                     int_func:
  3233                           	opt stack 25
  3234  00102E  0006               	pop		; remove dummy address from shadow register refresh
  3235  001030  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3236  001034  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3237  001038  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3238  00103C  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3239  001040  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3240  001044  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3241  001048  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3242  00104C  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3243  001050  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3244  001054  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3245  001058  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3246  00105C  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3247                           
  3248                           ;Main.c: 58: unsigned char hour10, hour1, minute10, minute1, second10, second1;
  3249                           ;Main.c: 59: if (INTCONbits.TMR0IF == 1)
  3250  001060  A4F2               	btfss	intcon,2,c	;volatile
  3251  001062  D085               	goto	i2l138
  3252                           
  3253                           ;Main.c: 60: {
  3254                           ;Main.c: 64: second = second + 1;
  3255  001064  2842               	incf	_second,w,c
  3256  001066  6E42               	movwf	_second,c
  3257                           
  3258                           ;Main.c: 65: if ( second > 59 )
  3259  001068  0E3B               	movlw	59
  3260  00106A  6442               	cpfsgt	_second,c
  3261  00106C  D010               	goto	i2l1929
  3262                           
  3263                           ;Main.c: 66: {
  3264                           ;Main.c: 67: second = 0;
  3265  00106E  0E00               	movlw	0
  3266  001070  6E42               	movwf	_second,c
  3267                           
  3268                           ;Main.c: 68: minute = minute + 1;
  3269  001072  283E               	incf	_minute,w,c
  3270  001074  6E3E               	movwf	_minute,c
  3271                           
  3272                           ;Main.c: 69: if ( minute > 59 )
  3273  001076  0E3B               	movlw	59
  3274  001078  643E               	cpfsgt	_minute,c
  3275  00107A  D009               	goto	i2l1929
  3276                           
  3277                           ;Main.c: 70: {
  3278                           ;Main.c: 71: minute = 0;
  3279  00107C  0E00               	movlw	0
  3280  00107E  6E3E               	movwf	_minute,c
  3281                           
  3282                           ;Main.c: 72: hour = hour + 1;
  3283  001080  283A               	incf	_hour,w,c
  3284  001082  6E3A               	movwf	_hour,c
  3285                           
  3286                           ;Main.c: 73: if ( hour > 23 )
  3287  001084  0E17               	movlw	23
  3288  001086  643A               	cpfsgt	_hour,c
  3289  001088  D002               	goto	i2l1929
  3290                           
  3291                           ;Main.c: 74: hour = 0;
  3292  00108A  0E00               	movlw	0
  3293  00108C  6E3A               	movwf	_hour,c
  3294  00108E                     i2l1929:
  3295                           
  3296                           ;Main.c: 75: }
  3297                           ;Main.c: 76: }
  3298                           ;Main.c: 78: hour10 = hour / 10;
  3299  00108E  C03A  F001         	movff	_hour,___awdiv@dividend
  3300  001092  6A02               	clrf	___awdiv@dividend+1,c
  3301  001094  0E00               	movlw	0
  3302  001096  6E04               	movwf	___awdiv@divisor+1,c
  3303  001098  0E0A               	movlw	10
  3304  00109A  6E03               	movwf	___awdiv@divisor,c
  3305  00109C  EC24  F00C         	call	___awdiv	;wreg free
  3306  0010A0  5001               	movf	?___awdiv,w,c
  3307  0010A2  6E1A               	movwf	ISR_Timer0_Int@hour10,c
  3308                           
  3309                           ;Main.c: 79: hour1 = hour - hour10 * 10;
  3310  0010A4  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3311  0010A6  0D0A               	mullw	10
  3312  0010A8  50F3               	movf	prodl,w,c
  3313  0010AA  0800               	sublw	0
  3314  0010AC  243A               	addwf	_hour,w,c
  3315  0010AE  6E17               	movwf	ISR_Timer0_Int@hour1,c
  3316                           
  3317                           ;Main.c: 81: minute10 = minute / 10;
  3318  0010B0  C03E  F001         	movff	_minute,___awdiv@dividend
  3319  0010B4  6A02               	clrf	___awdiv@dividend+1,c
  3320  0010B6  0E00               	movlw	0
  3321  0010B8  6E04               	movwf	___awdiv@divisor+1,c
  3322  0010BA  0E0A               	movlw	10
  3323  0010BC  6E03               	movwf	___awdiv@divisor,c
  3324  0010BE  EC24  F00C         	call	___awdiv	;wreg free
  3325  0010C2  5001               	movf	?___awdiv,w,c
  3326  0010C4  6E1B               	movwf	ISR_Timer0_Int@minute10,c
  3327                           
  3328                           ;Main.c: 82: minute1 = minute - minute10 * 10;
  3329  0010C6  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3330  0010C8  0D0A               	mullw	10
  3331  0010CA  50F3               	movf	prodl,w,c
  3332  0010CC  0800               	sublw	0
  3333  0010CE  243E               	addwf	_minute,w,c
  3334  0010D0  6E18               	movwf	ISR_Timer0_Int@minute1,c
  3335                           
  3336                           ;Main.c: 84: second10 = second / 10;
  3337  0010D2  C042  F001         	movff	_second,___awdiv@dividend
  3338  0010D6  6A02               	clrf	___awdiv@dividend+1,c
  3339  0010D8  0E00               	movlw	0
  3340  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3341  0010DC  0E0A               	movlw	10
  3342  0010DE  6E03               	movwf	___awdiv@divisor,c
  3343  0010E0  EC24  F00C         	call	___awdiv	;wreg free
  3344  0010E4  5001               	movf	?___awdiv,w,c
  3345  0010E6  6E1C               	movwf	ISR_Timer0_Int@second10,c
  3346                           
  3347                           ;Main.c: 85: second1 = second - second10 * 10;
  3348  0010E8  501C               	movf	ISR_Timer0_Int@second10,w,c
  3349  0010EA  0D0A               	mullw	10
  3350  0010EC  50F3               	movf	prodl,w,c
  3351  0010EE  0800               	sublw	0
  3352  0010F0  2442               	addwf	_second,w,c
  3353  0010F2  6E19               	movwf	ISR_Timer0_Int@second1,c
  3354                           
  3355                           ;Main.c: 87: lcd_write_cmd(0x80);
  3356  0010F4  0E80               	movlw	128
  3357  0010F6  EC1E  F00D         	call	i2_lcd_write_cmd
  3358                           
  3359                           ;Main.c: 88: lcd_write_data('T');
  3360  0010FA  0E54               	movlw	84
  3361  0010FC  EC98  F00B         	call	i2_lcd_write_data
  3362                           
  3363                           ;Main.c: 89: lcd_write_data('i');
  3364  001100  0E69               	movlw	105
  3365  001102  EC98  F00B         	call	i2_lcd_write_data
  3366                           
  3367                           ;Main.c: 90: lcd_write_data('m');
  3368  001106  0E6D               	movlw	109
  3369  001108  EC98  F00B         	call	i2_lcd_write_data
  3370                           
  3371                           ;Main.c: 91: lcd_write_data('e');
  3372  00110C  0E65               	movlw	101
  3373  00110E  EC98  F00B         	call	i2_lcd_write_data
  3374                           
  3375                           ;Main.c: 92: lcd_write_data(' ');
  3376  001112  0E20               	movlw	32
  3377  001114  EC98  F00B         	call	i2_lcd_write_data
  3378                           
  3379                           ;Main.c: 93: lcd_write_data('=');
  3380  001118  0E3D               	movlw	61
  3381  00111A  EC98  F00B         	call	i2_lcd_write_data
  3382                           
  3383                           ;Main.c: 94: lcd_write_data(' ');
  3384  00111E  0E20               	movlw	32
  3385  001120  EC98  F00B         	call	i2_lcd_write_data
  3386                           
  3387                           ;Main.c: 95: lcd_write_data(int_2_char (hour10));
  3388  001124  501A               	movf	ISR_Timer0_Int@hour10,w,c
  3389  001126  ECE3  F00C         	call	_int_2_char
  3390  00112A  EC98  F00B         	call	i2_lcd_write_data
  3391                           
  3392                           ;Main.c: 96: lcd_write_data(int_2_char (hour1));
  3393  00112E  5017               	movf	ISR_Timer0_Int@hour1,w,c
  3394  001130  ECE3  F00C         	call	_int_2_char
  3395  001134  EC98  F00B         	call	i2_lcd_write_data
  3396                           
  3397                           ;Main.c: 97: lcd_write_data(':');
  3398  001138  0E3A               	movlw	58
  3399  00113A  EC98  F00B         	call	i2_lcd_write_data
  3400                           
  3401                           ;Main.c: 98: lcd_write_data(int_2_char (minute10));
  3402  00113E  501B               	movf	ISR_Timer0_Int@minute10,w,c
  3403  001140  ECE3  F00C         	call	_int_2_char
  3404  001144  EC98  F00B         	call	i2_lcd_write_data
  3405                           
  3406                           ;Main.c: 99: lcd_write_data(int_2_char (minute1));
  3407  001148  5018               	movf	ISR_Timer0_Int@minute1,w,c
  3408  00114A  ECE3  F00C         	call	_int_2_char
  3409  00114E  EC98  F00B         	call	i2_lcd_write_data
  3410                           
  3411                           ;Main.c: 100: lcd_write_data(':');
  3412  001152  0E3A               	movlw	58
  3413  001154  EC98  F00B         	call	i2_lcd_write_data
  3414                           
  3415                           ;Main.c: 101: lcd_write_data(int_2_char (second10));
  3416  001158  501C               	movf	ISR_Timer0_Int@second10,w,c
  3417  00115A  ECE3  F00C         	call	_int_2_char
  3418  00115E  EC98  F00B         	call	i2_lcd_write_data
  3419                           
  3420                           ;Main.c: 102: lcd_write_data(int_2_char (second1));
  3421  001162  5019               	movf	ISR_Timer0_Int@second1,w,c
  3422  001164  ECE3  F00C         	call	_int_2_char
  3423  001168  EC98  F00B         	call	i2_lcd_write_data
  3424                           
  3425                           ;Main.c: 104: INTCONbits.TMR0IF = 0;
  3426  00116C  94F2               	bcf	intcon,2,c	;volatile
  3427  00116E                     i2l138:
  3428  00116E  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  3429  001172  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  3430  001176  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  3431  00117A  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  3432  00117E  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  3433  001182  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  3434  001186  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  3435  00118A  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  3436  00118E  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  3437  001192  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  3438  001196  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  3439  00119A  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  3440  00119E  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  3441  0011A2  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  3442  0011A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3443  0011A8  0011               	retfie		f
  3444  0011AA                     __end_of_ISR_Timer0_Int:
  3445                           	opt stack 0
  3446                           pclatu	equ	0xFFB
  3447                           pclath	equ	0xFFA
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           intcon2	equ	0xFF1
  3456                           postinc0	equ	0xFEE
  3457                           fsr0h	equ	0xFEA
  3458                           fsr0l	equ	0xFE9
  3459                           wreg	equ	0xFE8
  3460                           postdec1	equ	0xFE5
  3461                           plusw1	equ	0xFE3
  3462                           fsr1h	equ	0xFE2
  3463                           fsr1l	equ	0xFE1
  3464                           indf2	equ	0xFDF
  3465                           postinc2	equ	0xFDE
  3466                           plusw2	equ	0xFDB
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function i2_lcd_write_data *****************
  3472 ;; Defined at:
  3473 ;;		line 43 in file "lcd_utilities.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  data            1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  data            1    2[COMRAM] unsigned char 
  3478 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0
  3489 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        3 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    1
  3495 ;; This function calls:
  3496 ;;		i2_lcd_strobe
  3497 ;; This function is called by:
  3498 ;;		_ISR_Timer0_Int
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text16
  3503  001730                     __ptext16:
  3504                           	opt stack 0
  3505  001730                     i2_lcd_write_data:
  3506                           	opt stack 25
  3507                           
  3508                           ;incstack = 0
  3509                           ;i2lcd_write_data@data stored from wreg
  3510  001730  6E03               	movwf	i2lcd_write_data@data,c
  3511                           
  3512                           ;lcd_utilities.c: 45: char temp1;
  3513                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  3514  001732  8C83               	bsf	3971,6,c	;volatile
  3515                           
  3516                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  3517  001734  0E3F               	movlw	63
  3518  001736  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3519  001738  0E55               	movlw	85
  3520  00173A                     i2u144_47:
  3521  00173A  2EE8               	decfsz	wreg,f,c
  3522  00173C  D7FE               	goto	i2u144_47
  3523  00173E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3524  001740  D7FC               	goto	i2u144_47
  3525  001742  F000               	nop	
  3526                           
  3527                           ;lcd_utilities.c: 50: temp1 = data;
  3528  001744  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3529                           
  3530                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  3531  001748  3804               	swapf	i2lcd_write_data@temp1,w,c
  3532  00174A  0B0F               	andlw	15
  3533  00174C  6E04               	movwf	i2lcd_write_data@temp1,c
  3534                           
  3535                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  3536  00174E  5004               	movf	i2lcd_write_data@temp1,w,c
  3537  001750  0B0F               	andlw	15
  3538  001752  6E83               	movwf	3971,c	;volatile
  3539                           
  3540                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  3541  001754  0E7D               	movlw	125
  3542  001756  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3543  001758  0EAC               	movlw	172
  3544  00175A                     i2u145_47:
  3545  00175A  2EE8               	decfsz	wreg,f,c
  3546  00175C  D7FE               	goto	i2u145_47
  3547  00175E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3548  001760  D7FC               	goto	i2u145_47
  3549                           
  3550                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  3551  001762  8C83               	bsf	3971,6,c	;volatile
  3552                           
  3553                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  3554  001764  0E7D               	movlw	125
  3555  001766  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3556  001768  0EAC               	movlw	172
  3557  00176A                     i2u146_47:
  3558  00176A  2EE8               	decfsz	wreg,f,c
  3559  00176C  D7FE               	goto	i2u146_47
  3560  00176E  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3561  001770  D7FC               	goto	i2u146_47
  3562                           
  3563                           ;lcd_utilities.c: 57: lcd_strobe();
  3564  001772  EC59  F00E         	call	i2_lcd_strobe	;wreg free
  3565                           
  3566                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3567  001776  0E7D               	movlw	125
  3568  001778  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3569  00177A  0EAC               	movlw	172
  3570  00177C                     i2u147_47:
  3571  00177C  2EE8               	decfsz	wreg,f,c
  3572  00177E  D7FE               	goto	i2u147_47
  3573  001780  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3574  001782  D7FC               	goto	i2u147_47
  3575                           
  3576                           ;lcd_utilities.c: 60: temp1 = data;
  3577  001784  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  3578                           
  3579                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3580  001788  5004               	movf	i2lcd_write_data@temp1,w,c
  3581  00178A  0B0F               	andlw	15
  3582  00178C  6E83               	movwf	3971,c	;volatile
  3583                           
  3584                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3585  00178E  0E7D               	movlw	125
  3586  001790  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3587  001792  0EAC               	movlw	172
  3588  001794                     i2u148_47:
  3589  001794  2EE8               	decfsz	wreg,f,c
  3590  001796  D7FE               	goto	i2u148_47
  3591  001798  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3592  00179A  D7FC               	goto	i2u148_47
  3593                           
  3594                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3595  00179C  8C83               	bsf	3971,6,c	;volatile
  3596                           
  3597                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3598  00179E  0E9C               	movlw	156
  3599  0017A0  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3600  0017A2  0ED7               	movlw	215
  3601  0017A4                     i2u149_47:
  3602  0017A4  2EE8               	decfsz	wreg,f,c
  3603  0017A6  D7FE               	goto	i2u149_47
  3604  0017A8  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3605  0017AA  D7FC               	goto	i2u149_47
  3606  0017AC  F000               	nop	
  3607                           
  3608                           ;lcd_utilities.c: 66: lcd_strobe();
  3609  0017AE  EC59  F00E         	call	i2_lcd_strobe	;wreg free
  3610                           
  3611                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3612  0017B2  0E9C               	movlw	156
  3613  0017B4  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  3614  0017B6  0ED7               	movlw	215
  3615  0017B8                     i2u150_47:
  3616  0017B8  2EE8               	decfsz	wreg,f,c
  3617  0017BA  D7FE               	goto	i2u150_47
  3618  0017BC  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  3619  0017BE  D7FC               	goto	i2u150_47
  3620  0017C0  F000               	nop	
  3621  0017C2  0012               	return		;funcret
  3622  0017C4                     __end_ofi2_lcd_write_data:
  3623                           	opt stack 0
  3624                           pclatu	equ	0xFFB
  3625                           pclath	equ	0xFFA
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           intcon2	equ	0xFF1
  3634                           postinc0	equ	0xFEE
  3635                           fsr0h	equ	0xFEA
  3636                           fsr0l	equ	0xFE9
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           plusw1	equ	0xFE3
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           plusw2	equ	0xFDB
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function i2_lcd_write_cmd *****************
  3650 ;; Defined at:
  3651 ;;		line 18 in file "lcd_utilities.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  cmd             1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  cmd             1    2[COMRAM] unsigned char 
  3656 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0
  3667 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3668 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3669 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3670 ;;Total ram usage:        3 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    1
  3673 ;; This function calls:
  3674 ;;		i2_lcd_strobe
  3675 ;; This function is called by:
  3676 ;;		_ISR_Timer0_Int
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text17
  3681  001A3C                     __ptext17:
  3682                           	opt stack 0
  3683  001A3C                     i2_lcd_write_cmd:
  3684                           	opt stack 25
  3685                           
  3686                           ;incstack = 0
  3687                           ;i2lcd_write_cmd@cmd stored from wreg
  3688  001A3C  6E03               	movwf	i2lcd_write_cmd@cmd,c
  3689                           
  3690                           ;lcd_utilities.c: 20: unsigned char temp2;
  3691                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3692  001A3E  9C83               	bcf	3971,6,c	;volatile
  3693                           
  3694                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3695  001A40  0E3F               	movlw	63
  3696  001A42  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3697  001A44  0E55               	movlw	85
  3698  001A46                     i2u151_47:
  3699  001A46  2EE8               	decfsz	wreg,f,c
  3700  001A48  D7FE               	goto	i2u151_47
  3701  001A4A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3702  001A4C  D7FC               	goto	i2u151_47
  3703  001A4E  F000               	nop	
  3704                           
  3705                           ;lcd_utilities.c: 23: temp2 = cmd;
  3706  001A50  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3707                           
  3708                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3709  001A54  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  3710  001A56  0B0F               	andlw	15
  3711  001A58  6E04               	movwf	i2lcd_write_cmd@temp2,c
  3712                           
  3713                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3714  001A5A  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3715  001A5C  0B0F               	andlw	15
  3716  001A5E  6E83               	movwf	3971,c	;volatile
  3717                           
  3718                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3719  001A60  0E7D               	movlw	125
  3720  001A62  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3721  001A64  0EAC               	movlw	172
  3722  001A66                     i2u152_47:
  3723  001A66  2EE8               	decfsz	wreg,f,c
  3724  001A68  D7FE               	goto	i2u152_47
  3725  001A6A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3726  001A6C  D7FC               	goto	i2u152_47
  3727                           
  3728                           ;lcd_utilities.c: 28: lcd_strobe();
  3729  001A6E  EC59  F00E         	call	i2_lcd_strobe	;wreg free
  3730                           
  3731                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3732  001A72  0E7D               	movlw	125
  3733  001A74  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3734  001A76  0EAC               	movlw	172
  3735  001A78                     i2u153_47:
  3736  001A78  2EE8               	decfsz	wreg,f,c
  3737  001A7A  D7FE               	goto	i2u153_47
  3738  001A7C  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3739  001A7E  D7FC               	goto	i2u153_47
  3740                           
  3741                           ;lcd_utilities.c: 32: temp2 = cmd;
  3742  001A80  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  3743                           
  3744                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3745  001A84  5004               	movf	i2lcd_write_cmd@temp2,w,c
  3746  001A86  0B0F               	andlw	15
  3747  001A88  6E83               	movwf	3971,c	;volatile
  3748                           
  3749                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3750  001A8A  0E7D               	movlw	125
  3751  001A8C  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3752  001A8E  0EAC               	movlw	172
  3753  001A90                     i2u154_47:
  3754  001A90  2EE8               	decfsz	wreg,f,c
  3755  001A92  D7FE               	goto	i2u154_47
  3756  001A94  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3757  001A96  D7FC               	goto	i2u154_47
  3758                           
  3759                           ;lcd_utilities.c: 36: lcd_strobe();
  3760  001A98  EC59  F00E         	call	i2_lcd_strobe	;wreg free
  3761                           
  3762                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3763  001A9C  0E7D               	movlw	125
  3764  001A9E  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  3765  001AA0  0EAC               	movlw	172
  3766  001AA2                     i2u155_47:
  3767  001AA2  2EE8               	decfsz	wreg,f,c
  3768  001AA4  D7FE               	goto	i2u155_47
  3769  001AA6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  3770  001AA8  D7FC               	goto	i2u155_47
  3771  001AAA  0012               	return		;funcret
  3772  001AAC                     __end_ofi2_lcd_write_cmd:
  3773                           	opt stack 0
  3774                           pclatu	equ	0xFFB
  3775                           pclath	equ	0xFFA
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           postinc0	equ	0xFEE
  3785                           fsr0h	equ	0xFEA
  3786                           fsr0l	equ	0xFE9
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           plusw1	equ	0xFE3
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           indf2	equ	0xFDF
  3793                           postinc2	equ	0xFDE
  3794                           plusw2	equ	0xFDB
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function i2_lcd_strobe *****************
  3800 ;; Defined at:
  3801 ;;		line 73 in file "lcd_utilities.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3818 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:        1 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		i2_lcd_write_cmd
  3825 ;;		i2_lcd_write_data
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text18
  3830  001CB2                     __ptext18:
  3831                           	opt stack 0
  3832  001CB2                     i2_lcd_strobe:
  3833                           	opt stack 25
  3834                           
  3835                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3836                           
  3837                           ;incstack = 0
  3838  001CB2  8883               	bsf	3971,4,c	;volatile
  3839                           
  3840                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3841  001CB4  0E7D               	movlw	125
  3842  001CB6  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3843  001CB8  0EAC               	movlw	172
  3844  001CBA                     i2u156_47:
  3845  001CBA  2EE8               	decfsz	wreg,f,c
  3846  001CBC  D7FE               	goto	i2u156_47
  3847  001CBE  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3848  001CC0  D7FC               	goto	i2u156_47
  3849                           
  3850                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3851  001CC2  9883               	bcf	3971,4,c	;volatile
  3852                           
  3853                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3854  001CC4  0E7D               	movlw	125
  3855  001CC6  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  3856  001CC8  0EAC               	movlw	172
  3857  001CCA                     i2u157_47:
  3858  001CCA  2EE8               	decfsz	wreg,f,c
  3859  001CCC  D7FE               	goto	i2u157_47
  3860  001CCE  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  3861  001CD0  D7FC               	goto	i2u157_47
  3862  001CD2  0012               	return		;funcret
  3863  001CD4                     __end_ofi2_lcd_strobe:
  3864                           	opt stack 0
  3865                           pclatu	equ	0xFFB
  3866                           pclath	equ	0xFFA
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           intcon	equ	0xFF2
  3874                           intcon2	equ	0xFF1
  3875                           postinc0	equ	0xFEE
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           postdec1	equ	0xFE5
  3880                           plusw1	equ	0xFE3
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           plusw2	equ	0xFDB
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _int_2_char *****************
  3891 ;; Defined at:
  3892 ;;		line 16 in file "Main.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  int1            1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  int1            1    0[COMRAM] unsigned char 
  3897 ;;  char1           1    1[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      unsigned char 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3910 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_ISR_Timer0_Int
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text19
  3921  0019C6                     __ptext19:
  3922                           	opt stack 0
  3923  0019C6                     _int_2_char:
  3924                           	opt stack 26
  3925                           
  3926                           ;incstack = 0
  3927                           ;int_2_char@int1 stored from wreg
  3928  0019C6  6E01               	movwf	int_2_char@int1,c
  3929                           
  3930                           ;Main.c: 18: char char1;
  3931                           ;Main.c: 19: switch (int1)
  3932  0019C8  D017               	goto	i2l975
  3933  0019CA                     i2l953:
  3934  0019CA  0E30               	movlw	48
  3935  0019CC  D013               	goto	L20
  3936  0019CE                     i2l955:
  3937  0019CE  0E31               	movlw	49
  3938  0019D0  D011               	goto	L20
  3939  0019D2                     i2l957:
  3940  0019D2  0E32               	movlw	50
  3941  0019D4  D00F               	goto	L20
  3942  0019D6                     i2l959:
  3943  0019D6  0E33               	movlw	51
  3944  0019D8  D00D               	goto	L20
  3945  0019DA                     i2l961:
  3946  0019DA  0E34               	movlw	52
  3947  0019DC  D00B               	goto	L20
  3948  0019DE                     i2l963:
  3949  0019DE  0E35               	movlw	53
  3950  0019E0  D009               	goto	L20
  3951  0019E2                     i2l965:
  3952  0019E2  0E36               	movlw	54
  3953  0019E4  D007               	goto	L20
  3954  0019E6                     i2l967:
  3955  0019E6  0E37               	movlw	55
  3956  0019E8  D005               	goto	L20
  3957  0019EA                     i2l969:
  3958  0019EA  0E38               	movlw	56
  3959  0019EC  D003               	goto	L20
  3960  0019EE                     i2l971:
  3961  0019EE  0E39               	movlw	57
  3962  0019F0  D001               	goto	L20
  3963  0019F2                     i2l973:
  3964  0019F2  0E3F               	movlw	63
  3965  0019F4                     L20:
  3966  0019F4  6E02               	movwf	int_2_char@char1,c
  3967                           
  3968                           ;Main.c: 32: }
  3969  0019F6  D020               	goto	i2l104
  3970  0019F8                     i2l975:
  3971  0019F8  5001               	movf	int_2_char@int1,w,c
  3972                           
  3973                           ; Switch size 1, requested type "space"
  3974                           ; Number of cases is 10, Range of values is 0 to 9
  3975                           ; switch strategies available:
  3976                           ; Name         Instructions Cycles
  3977                           ; simple_byte           31    16 (average)
  3978                           ;	Chosen strategy is simple_byte
  3979  0019FA  0A00               	xorlw	0	; case 0
  3980  0019FC  B4D8               	btfsc	status,2,c
  3981  0019FE  D7E5               	goto	i2l953
  3982  001A00  0A01               	xorlw	1	; case 1
  3983  001A02  B4D8               	btfsc	status,2,c
  3984  001A04  D7E4               	goto	i2l955
  3985  001A06  0A03               	xorlw	3	; case 2
  3986  001A08  B4D8               	btfsc	status,2,c
  3987  001A0A  D7E3               	goto	i2l957
  3988  001A0C  0A01               	xorlw	1	; case 3
  3989  001A0E  B4D8               	btfsc	status,2,c
  3990  001A10  D7E2               	goto	i2l959
  3991  001A12  0A07               	xorlw	7	; case 4
  3992  001A14  B4D8               	btfsc	status,2,c
  3993  001A16  D7E1               	goto	i2l961
  3994  001A18  0A01               	xorlw	1	; case 5
  3995  001A1A  B4D8               	btfsc	status,2,c
  3996  001A1C  D7E0               	goto	i2l963
  3997  001A1E  0A03               	xorlw	3	; case 6
  3998  001A20  B4D8               	btfsc	status,2,c
  3999  001A22  D7DF               	goto	i2l965
  4000  001A24  0A01               	xorlw	1	; case 7
  4001  001A26  B4D8               	btfsc	status,2,c
  4002  001A28  D7DE               	goto	i2l967
  4003  001A2A  0A0F               	xorlw	15	; case 8
  4004  001A2C  B4D8               	btfsc	status,2,c
  4005  001A2E  D7DD               	goto	i2l969
  4006  001A30  0A01               	xorlw	1	; case 9
  4007  001A32  B4D8               	btfsc	status,2,c
  4008  001A34  D7DC               	goto	i2l971
  4009  001A36  D7DD               	goto	i2l973
  4010  001A38                     i2l104:
  4011                           
  4012                           ;Main.c: 33: return(char1);
  4013  001A38  5002               	movf	int_2_char@char1,w,c
  4014  001A3A  0012               	return		;funcret
  4015  001A3C                     __end_of_int_2_char:
  4016                           	opt stack 0
  4017                           pclatu	equ	0xFFB
  4018                           pclath	equ	0xFFA
  4019                           tblptru	equ	0xFF8
  4020                           tblptrh	equ	0xFF7
  4021                           tblptrl	equ	0xFF6
  4022                           tablat	equ	0xFF5
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           intcon2	equ	0xFF1
  4027                           postinc0	equ	0xFEE
  4028                           fsr0h	equ	0xFEA
  4029                           fsr0l	equ	0xFE9
  4030                           wreg	equ	0xFE8
  4031                           postdec1	equ	0xFE5
  4032                           plusw1	equ	0xFE3
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           plusw2	equ	0xFDB
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function ___awdiv *****************
  4043 ;; Defined at:
  4044 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awdiv.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  dividend        2    0[COMRAM] int 
  4047 ;;  divisor         2    2[COMRAM] int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  quotient        2    6[COMRAM] int 
  4050 ;;  sign            1    5[COMRAM] unsigned char 
  4051 ;;  counter         1    4[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2    0[COMRAM] int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         4       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4065 ;;Total ram usage:        8 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_ISR_Timer0_Int
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text20
  4075  001848                     __ptext20:
  4076                           	opt stack 0
  4077  001848                     ___awdiv:
  4078                           	opt stack 26
  4079                           
  4080                           ;incstack = 0
  4081  001848  0E00               	movlw	0
  4082  00184A  6E06               	movwf	___awdiv@sign,c
  4083  00184C  AE04               	btfss	___awdiv@divisor+1,7,c
  4084  00184E  D006               	goto	i2l1815
  4085  001850  6C03               	negf	___awdiv@divisor,c
  4086  001852  1E04               	comf	___awdiv@divisor+1,f,c
  4087  001854  B0D8               	btfsc	status,0,c
  4088  001856  2A04               	incf	___awdiv@divisor+1,f,c
  4089  001858  0E01               	movlw	1
  4090  00185A  6E06               	movwf	___awdiv@sign,c
  4091  00185C                     i2l1815:
  4092  00185C  AE02               	btfss	___awdiv@dividend+1,7,c
  4093  00185E  D006               	goto	i2l1821
  4094  001860  6C01               	negf	___awdiv@dividend,c
  4095  001862  1E02               	comf	___awdiv@dividend+1,f,c
  4096  001864  B0D8               	btfsc	status,0,c
  4097  001866  2A02               	incf	___awdiv@dividend+1,f,c
  4098  001868  0E01               	movlw	1
  4099  00186A  1A06               	xorwf	___awdiv@sign,f,c
  4100  00186C                     i2l1821:
  4101  00186C  0E00               	movlw	0
  4102  00186E  6E08               	movwf	___awdiv@quotient+1,c
  4103  001870  0E00               	movlw	0
  4104  001872  6E07               	movwf	___awdiv@quotient,c
  4105  001874  5003               	movf	___awdiv@divisor,w,c
  4106  001876  1004               	iorwf	___awdiv@divisor+1,w,c
  4107  001878  B4D8               	btfsc	status,2,c
  4108  00187A  D01C               	goto	i2l1843
  4109  00187C  0E01               	movlw	1
  4110  00187E  6E05               	movwf	___awdiv@counter,c
  4111  001880  D004               	goto	i2l1829
  4112  001882                     i2l1827:
  4113  001882  90D8               	bcf	status,0,c
  4114  001884  3603               	rlcf	___awdiv@divisor,f,c
  4115  001886  3604               	rlcf	___awdiv@divisor+1,f,c
  4116  001888  2A05               	incf	___awdiv@counter,f,c
  4117  00188A                     i2l1829:
  4118  00188A  AE04               	btfss	___awdiv@divisor+1,7,c
  4119  00188C  D7FA               	goto	i2l1827
  4120  00188E                     i2l1831:
  4121  00188E  90D8               	bcf	status,0,c
  4122  001890  3607               	rlcf	___awdiv@quotient,f,c
  4123  001892  3608               	rlcf	___awdiv@quotient+1,f,c
  4124  001894  5003               	movf	___awdiv@divisor,w,c
  4125  001896  5C01               	subwf	___awdiv@dividend,w,c
  4126  001898  5004               	movf	___awdiv@divisor+1,w,c
  4127  00189A  5802               	subwfb	___awdiv@dividend+1,w,c
  4128  00189C  A0D8               	btfss	status,0,c
  4129  00189E  D005               	goto	i2l1839
  4130  0018A0  5003               	movf	___awdiv@divisor,w,c
  4131  0018A2  5E01               	subwf	___awdiv@dividend,f,c
  4132  0018A4  5004               	movf	___awdiv@divisor+1,w,c
  4133  0018A6  5A02               	subwfb	___awdiv@dividend+1,f,c
  4134  0018A8  8007               	bsf	___awdiv@quotient,0,c
  4135  0018AA                     i2l1839:
  4136  0018AA  90D8               	bcf	status,0,c
  4137  0018AC  3204               	rrcf	___awdiv@divisor+1,f,c
  4138  0018AE  3203               	rrcf	___awdiv@divisor,f,c
  4139  0018B0  2E05               	decfsz	___awdiv@counter,f,c
  4140  0018B2  D7ED               	goto	i2l1831
  4141  0018B4                     i2l1843:
  4142  0018B4  5006               	movf	___awdiv@sign,w,c
  4143  0018B6  B4D8               	btfsc	status,2,c
  4144  0018B8  D004               	goto	i2l1847
  4145  0018BA  6C07               	negf	___awdiv@quotient,c
  4146  0018BC  1E08               	comf	___awdiv@quotient+1,f,c
  4147  0018BE  B0D8               	btfsc	status,0,c
  4148  0018C0  2A08               	incf	___awdiv@quotient+1,f,c
  4149  0018C2                     i2l1847:
  4150  0018C2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4151  0018C6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4152  0018CA  0012               	return	
  4153  0018CC                     __end_of___awdiv:
  4154                           	opt stack 0
  4155                           pclatu	equ	0xFFB
  4156                           pclath	equ	0xFFA
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon	equ	0xFF2
  4164                           intcon2	equ	0xFF1
  4165                           postinc0	equ	0xFEE
  4166                           fsr0h	equ	0xFEA
  4167                           fsr0l	equ	0xFE9
  4168                           wreg	equ	0xFE8
  4169                           postdec1	equ	0xFE5
  4170                           plusw1	equ	0xFE3
  4171                           fsr1h	equ	0xFE2
  4172                           fsr1l	equ	0xFE1
  4173                           indf2	equ	0xFDF
  4174                           postinc2	equ	0xFDE
  4175                           plusw2	equ	0xFDB
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           pclatu	equ	0xFFB
  4180                           pclath	equ	0xFFA
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           postinc0	equ	0xFEE
  4190                           fsr0h	equ	0xFEA
  4191                           fsr0l	equ	0xFE9
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           plusw1	equ	0xFE3
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           postinc2	equ	0xFDE
  4199                           plusw2	equ	0xFDB
  4200                           fsr2h	equ	0xFDA
  4201                           fsr2l	equ	0xFD9
  4202                           status	equ	0xFD8
  4203                           
  4204                           	psect	rparam
  4205  0000                     pclatu	equ	0xFFB
  4206                           pclath	equ	0xFFA
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           intcon2	equ	0xFF1
  4215                           postinc0	equ	0xFEE
  4216                           fsr0h	equ	0xFEA
  4217                           fsr0l	equ	0xFE9
  4218                           wreg	equ	0xFE8
  4219                           postdec1	equ	0xFE5
  4220                           plusw1	equ	0xFE3
  4221                           fsr1h	equ	0xFE2
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           postinc2	equ	0xFDE
  4225                           plusw2	equ	0xFDB
  4226                           fsr2h	equ	0xFDA
  4227                           fsr2l	equ	0xFD9
  4228                           status	equ	0xFD8
  4229                           
  4230                           	psect	temp
  4231  000043                     btemp:
  4232                           	opt stack 0
  4233  000043                     	ds	1
  4234  0000                     int$flags	set	btemp
  4235                           pclatu	equ	0xFFB
  4236                           pclath	equ	0xFFA
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           intcon2	equ	0xFF1
  4245                           postinc0	equ	0xFEE
  4246                           fsr0h	equ	0xFEA
  4247                           fsr0l	equ	0xFE9
  4248                           wreg	equ	0xFE8
  4249                           postdec1	equ	0xFE5
  4250                           plusw1	equ	0xFE3
  4251                           fsr1h	equ	0xFE2
  4252                           fsr1l	equ	0xFE1
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           plusw2	equ	0xFDB
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        106
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      66
    BANK0           160     49     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Startup->_delay_ms
    _SetupTime->_delay_ms
    _SetupAlarmTimeC->_delay_ms
    _SetupAlarmTimeB->_delay_ms
    _SetupAlarmTimeA->_delay_ms
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_SetupTime
    _version->_lcd_write_cmd
    _version->_lcd_write_data
    _lcd_init->_lcd_write_cmd
    _Startup->_delay_ms
    _SetupTime->_getkey
    _SetupAlarmTimeC->_getkey
    _SetupAlarmTimeB->_getkey
    _SetupAlarmTimeA->_getkey

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7835
                    _SetupAlarmTimeA
                    _SetupAlarmTimeB
                    _SetupAlarmTimeC
                          _SetupTime
       _SetupTimerInterruptRegisters
                            _Startup
                           _lcd_init
                            _version
 ---------------------------------------------------------------------------------
 (1) _version                                             24    24      0     498
                                              3 BANK0     24    24      0
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              3 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _Startup                                              0     0      0     531
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _SetupTimerInterruptRegisters                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           30    30      0    1792
                                             19 BANK0     30    30      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeC                                     28    28      0    1594
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeB                                     28    28      0    1594
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTimeA                                     28    28      0    1594
                                             19 BANK0     28    28      0
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       3     3      0     164
                                              0 BANK0      3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_write_cmd                                        3     3      0     164
                                              0 BANK0      3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (3) _lcd_strobe                                           1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     531
                                             28 COMRAM     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      95
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      20    20      0    1018
                                              8 COMRAM    20    20      0
                            ___awdiv
                         _int_2_char
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     558
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupAlarmTimeA
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeB
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTimeC
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTimerInterruptRegisters
   _Startup
     _delay_ms
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _version
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C7      20        0.0%
DATA                 0      0      C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Aug 15 16:33:44 2016

       ??_SetupTimerInterruptRegisters 001D                                     l33 1C6A  
                                   l36 1C76                           ___awdiv@sign 0006  
              __size_of_ISR_Timer0_Int 01A2               __size_ofi2_lcd_write_cmd 0070  
                     ?_SetupAlarmTimeA 0001                       ?_SetupAlarmTimeB 0001  
                     ?_SetupAlarmTimeC 0001                                    l120 19C0  
                                  l193 1C3C                                    u930 1C60  
                                  prod 000FF3                                    wreg 000FE8  
                          getkey@F4270 101B                                   l2111 1952  
                                 l2121 1966                                   l2113 1956  
                                 l2123 196A                                   l2115 195A  
                                 l2131 197E                                   l2125 196E  
                                 l2117 195E                                   l2127 1972  
                                 l2119 1962                                   l2223 14FC  
                                 l2311 1312                                   l2129 1976  
                                 l2137 1C26                                   l2153 18FA  
                                 l2235 152C                                   l2227 1506  
                                 l2307 1308                                   l2171 11D2  
                                 l2411 162A                                   l2157 1914  
                                 l2149 18E4                                   l2319 1338  
                                 l2167 11C8                                   l2423 1654  
                                 l2265 1402                                   l2179 11F8  
                                 l2371 1BE8                                   l2435 167E  
                                 l2277 1432                                   l2269 140C  
                                 l2367 1BDE                                   l2399 1600  
                                 u1001 11B4                                   u1031 14E4  
                                 u1121 1BCA                                   u1061 13EA  
                                 u1307 16BA                                   u1091 12F0  
                                 u1317 16CC                                   u1407 183E  
                                 u1327 16E0                                   u1417 1C98  
                                 u1337 16FC                                   u1427 1CA8  
                                 u1347 170E                                   u1437 1C2C  
                                 u1357 1724                                   u1277 1902  
                                 u1367 17D2                                   u1287 1940  
                                 u1377 17FA                                   u1297 1692  
                                 u1387 180E                                   u1397 182A  
               __end_of_lcd_write_data 1730                                   _main 15D4  
                                 _hour 003A                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0043                                   pclat 000FFA  
                                 prodh 000FF4                                   prodl 000FF3  
                       ?_lcd_write_cmd 0001                                   start 1016  
             __end_ofi2_lcd_write_data 17C4                           ___param_bank 000010  
                      __end_of_Startup 1B12                                  ?_main 0001  
                      __end_of___awdiv 18CC                                  _CMCON 000FB4  
                                _T0CON 000FD5                        ___awdiv@divisor 0003  
                                i2l104 1A38                                  i2l138 116E  
                                i2l961 19DA                                  i2l953 19CA  
                                i2l971 19EE                                  i2l963 19DE  
                                i2l955 19CE                        ___awdiv@counter 0005  
                                i2l973 19F2                                  i2l965 19E2  
                                i2l957 19D2                                  i2l967 19E6  
                                i2l959 19D6                                  i2l975 19F8  
                                i2l969 19EA                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTD 000F83  
                                _TRISA 000F92                                  _TRISD 000F95  
                     lcd_write_cmd@cmd 00B5                                  _hourA 003B  
                                _hourB 003C                                  _hourC 003D  
                                tablat 000FF5                                  plusw1 000FE3  
                                plusw2 000FDB                        ?_lcd_write_data 0001  
                      __end_of_version 1C0E                                  status 000FD8  
                __size_ofi2_lcd_strobe 0022                           getkey@lookup 00B4  
                      __initialization 1B12                           __end_of_main 1684  
                               ??_main 001E                          __activetblptr 000002  
                    ??i2_lcd_write_cmd 0002                                 _ADCON1 000FC1  
                         version@F4277 001E                       ___awdiv@dividend 0001  
                         i2_lcd_strobe 1CB2                                 i2l1821 186C  
                               i2l1831 188E                                 i2l1815 185C  
                               i2l1827 1882                                 i2l1843 18B4  
                               i2l1829 188A                                 i2l1847 18C2  
                               i2l1839 18AA                                 i2l1929 108E  
                      ??_lcd_write_cmd 00B4                       __end_of_delay_ms 1C52  
                     __end_of_lcd_init 194C                         char_2_int@int1 00B5  
                            ??_Startup 001E                              ??___awdiv 0005  
                       _ISR_Timer0_Int 1008                                 _getkey 1C52  
                               clear_0 1B58                       ___awdiv@quotient 0007  
                               _minute 003E                                 _second 0042  
                         __pdataCOMRAM 001E                     __size_of_SetupTime 013C  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_version 001E                             __accesstop 0060  
              __end_of__initialization 1B5E                          getkey@keycode 00C6  
                        ___rparam_used 000001                 __end_of_ISR_Timer0_Int 11AA  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1B6C  
                           _char_2_int 194C                      __end_of_SetupTime 12E6  
                    ?i2_lcd_write_data 0001                        ?_ISR_Timer0_Int 0001  
                   ??i2_lcd_write_data 0002                                ?_getkey 0001  
                              _INTCON2 000FF1                              ?_delay_ms 00B4  
                     ??_lcd_write_data 00B4                             _lcd_strobe 1C90  
             __size_of_SetupAlarmTimeA 00FA               __size_of_SetupAlarmTimeB 00FA  
             __size_of_SetupAlarmTimeC 00FA                              ?_lcd_init 0001  
                   lcd_write_data@data 00B5                     lcd_write_cmd@temp2 00B6  
                           _int_2_char 19C6                                __Hparam 0000  
                              __Lparam 0000                        char_2_int@char1 00B4  
                              _Startup 1AAC                                ___awdiv 1848  
                         __psmallconst 101A                        __size_of_getkey 003E  
                      i2_lcd_write_cmd 1A3C                                __pcinit 1B12  
                              __ramtop 0800                                __ptext0 15D4  
                              __ptext1 1BC0                                __ptext2 18CC  
                              __ptext3 1AAC                                __ptext4 1CD4  
                              __ptext5 11AA                                __ptext6 12E6  
                              __ptext7 13E0                                __ptext8 14DA  
                              __ptext9 1684                              _T0CONbits 000FD5  
                       SetupTime@F4315 009F                                _minuteA 003F  
                              _minuteB 0040                                _minuteC 0041  
                           ??_delay_ms 001D                            ?_char_2_int 0001  
                              _version 1BC0                             ??_lcd_init 00B7  
                       __pintcode_body 102E                   end_of_initialization 1B5E  
                   i2lcd_write_cmd@cmd 0003                   ISR_Timer0_Int@hour10 001A  
                       SetupTime@ctemp 00E4                         SetupTime@hour1 00DE  
                        __Lmediumconst 0000                                int_func 102E  
                              postdec1 000FE5                                postinc0 000FEE  
                              postinc2 000FDE                  SetupAlarmTimeA@hour10 00DD  
                            _PORTAbits 000F80                              _PORTBbits 000F81  
                            _PORTDbits 000F83                  SetupAlarmTimeB@hour10 00DD  
                SetupAlarmTimeC@hour10 00DD                            ?_lcd_strobe 0001  
                          ?_int_2_char 0001                              _AlarmAOff 0034  
                            _AlarmBOff 0036                              _AlarmCOff 0038  
                    ??_SetupAlarmTimeA 001E                      ??_SetupAlarmTimeB 001E  
                    ??_SetupAlarmTimeC 001E                  __end_of_lcd_write_cmd 1848  
              __end_ofi2_lcd_write_cmd 1AAC                    __size_of_char_2_int 007A  
                        __pidataCOMRAM 1CF0                         __end_of_getkey 1C90  
                  start_initialization 1B12                  i2lcd_write_data@temp1 0004  
                     ??_ISR_Timer0_Int 0009                        version@msgindex 00CE  
                            _SetupTime 11AA                            __pdataBANK0 0060  
                             ??_getkey 001D                    __size_of_lcd_strobe 0022  
                    SetupTime@minute10 00DF                      SetupTime@second10 00E1  
                  __size_of_int_2_char 0076                      SetupTime@msgindex 00E3  
                          __pbssCOMRAM 0034              __size_ofi2_lcd_write_data 0094  
                        __pcstackBANK0 00B4                      __size_of_delay_ms 0044  
                    __size_of_lcd_init 0080                       ?i2_lcd_write_cmd 0001  
                            __pintcode 1008                               ?_Startup 0001  
                             ?___awdiv 0001                             ?_SetupTime 0001  
                          __smallconst 101A                           ??_char_2_int 001D  
                             ?_version 0001                          ?i2_lcd_strobe 0001  
                 SetupAlarmTimeA@F4325 0060                   SetupAlarmTimeB@F4335 0075  
                            delay_ms@i 00B4                              delay_ms@j 00B6  
                 SetupAlarmTimeC@F4345 008A                    ISR_Timer0_Int@hour1 0017  
                             i2u150_47 17B8                               i2u151_47 1A46  
                             i2u152_47 1A66                               i2u144_47 173A  
                             i2u153_47 1A78                               i2u145_47 175A  
                             i2u154_47 1A90                               i2u146_47 176A  
                             i2u155_47 1AA2                               i2u147_47 177C  
                             i2u156_47 1CBA                               i2u148_47 1794  
                             i2u157_47 1CCA                               i2u149_47 17A4  
                             _RCONbits 000FD0                   SetupAlarmTimeA@ctemp 00E2  
                 SetupAlarmTimeA@hour1 00DE                   SetupAlarmTimeB@ctemp 00E2  
                   __end_of_char_2_int 19C6                   SetupAlarmTimeB@hour1 00DE  
                 SetupAlarmTimeC@ctemp 00E2                   SetupAlarmTimeC@hour1 00DE  
                            lcd_init@i 00B8                    lcd_write_data@temp1 00B6  
                      _SetupAlarmTimeA 14DA                        _SetupAlarmTimeB 13E0  
                      _SetupAlarmTimeC 12E6                         ??i2_lcd_strobe 0001  
                       version@Version 00B7                           ??_lcd_strobe 001D  
                     SetupTime@Message 00C7                              copy_data0 1B26  
                            copy_data1 1B46                   i2lcd_write_data@data 0003  
                 i2lcd_write_cmd@temp2 0004                           ??_int_2_char 0001  
 __end_of_SetupTimerInterruptRegisters 1CF0  __size_of_SetupTimerInterruptRegisters 001C  
         _SetupTimerInterruptRegisters 1CD4                __size_of_lcd_write_data 00AC  
                             __Hrparam 0000                 ISR_Timer0_Int@minute10 001B  
               ISR_Timer0_Int@second10 001C                               __Lrparam 0000  
                      int_2_char@char1 0002                         version@outchar 00CD  
                          ??_SetupTime 001E                       SetupTime@minute1 00E0  
                     SetupTime@second1 00E2                       __size_of_Startup 0066  
                     __size_of___awdiv 0084                     __end_of_lcd_strobe 1CB2  
                     SetupTime@outchar 00DC                     __end_of_int_2_char 1A3C  
                     i2_lcd_write_data 1730                               _delay_ms 1C0E  
                             __ptext10 17C4                               __ptext11 1C90  
                             __ptext20 1848                               __ptext12 1C52  
                             __ptext13 1C0E                               __ptext14 194C  
                             __ptext16 1730                               __ptext17 1A3C  
                             __ptext18 1CB2                               __ptext19 19C6  
                             _lcd_init 18CC                       __size_of_version 004E  
                        __size_of_main 00B0          ?_SetupTimerInterruptRegisters 0001  
                             int$flags 0043                __end_of_SetupAlarmTimeA 15D4  
              __end_of_SetupAlarmTimeB 14DA                __end_of_SetupAlarmTimeC 13E0  
                           _INTCONbits 000FF2                 __size_of_lcd_write_cmd 0084  
                ISR_Timer0_Int@minute1 0018                  ISR_Timer0_Int@second1 0019  
                       int_2_char@int1 0001                        SetupTime@hour10 00DD  
                             intlevel2 0000                    __end_ofgetkey@F4270 102D  
                 __end_ofi2_lcd_strobe 1CD4                 SetupAlarmTimeA@Message 00C7  
               SetupAlarmTimeB@Message 00C7                 SetupAlarmTimeC@Message 00C7  
              SetupAlarmTimeA@minute10 00DF                SetupAlarmTimeA@msgindex 00E1  
              SetupAlarmTimeB@minute10 00DF                SetupAlarmTimeB@msgindex 00E1  
              SetupAlarmTimeC@minute10 00DF                SetupAlarmTimeC@msgindex 00E1  
               SetupAlarmTimeA@minute1 00E0                 SetupAlarmTimeB@minute1 00E0  
               SetupAlarmTimeA@outchar 00DC                 SetupAlarmTimeC@minute1 00E0  
               SetupAlarmTimeB@outchar 00DC                         _lcd_write_data 1684  
               SetupAlarmTimeC@outchar 00DC                          _lcd_write_cmd 17C4  
